
4.Semester2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
<<<<<<< Updated upstream
  0 .data         00000540  00800200  00005650  000056e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005650  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000c91  00800740  00800740  00005c24  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00005c24  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005c80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000009a8  00000000  00000000  00005cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000c331  00000000  00000000  00006668  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000301e  00000000  00000000  00012999  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005f81  00000000  00000000  000159b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00002348  00000000  00000000  0001b938  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003a15  00000000  00000000  0001dc80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000b1b5  00000000  00000000  00021695  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000910  00000000  00000000  0002c84a  2**0
=======
  0 .data         000005d2  00800200  00005f94  00006028  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005f94  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001031  008007d2  008007d2  000065fa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000065fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006658  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000ab0  00000000  00000000  00006698  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000d27a  00000000  00000000  00007148  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000034f7  00000000  00000000  000143c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00006a36  00000000  00000000  000178b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000025c8  00000000  00000000  0001e2f0  2**2
                  CONTENTS, READONLY, DEBUGGING
<<<<<<< HEAD
 10 .debug_str    00003ffd  00000000  00000000  0001fe94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000b6c1  00000000  00000000  00023e91  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000009c8  00000000  00000000  0002f552  2**0
=======
 10 .debug_str    00004023  00000000  00000000  000208b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000b8f3  00000000  00000000  000248db  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000009e8  00000000  00000000  000301ce  2**0
>>>>>>> 1413a59f4c1676bf811b30fc6b6b1aaefe980264
>>>>>>> Stashed changes
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	94 c0       	rjmp	.+296    	; 0x12a <__ctors_end>
       2:	00 00       	nop
       4:	b3 c0       	rjmp	.+358    	; 0x16c <__bad_interrupt>
       6:	00 00       	nop
       8:	b1 c0       	rjmp	.+354    	; 0x16c <__bad_interrupt>
       a:	00 00       	nop
       c:	af c0       	rjmp	.+350    	; 0x16c <__bad_interrupt>
       e:	00 00       	nop
      10:	ad c0       	rjmp	.+346    	; 0x16c <__bad_interrupt>
      12:	00 00       	nop
      14:	ab c0       	rjmp	.+342    	; 0x16c <__bad_interrupt>
      16:	00 00       	nop
      18:	a9 c0       	rjmp	.+338    	; 0x16c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a7 c0       	rjmp	.+334    	; 0x16c <__bad_interrupt>
      1e:	00 00       	nop
      20:	a5 c0       	rjmp	.+330    	; 0x16c <__bad_interrupt>
      22:	00 00       	nop
      24:	a3 c0       	rjmp	.+326    	; 0x16c <__bad_interrupt>
      26:	00 00       	nop
      28:	a1 c0       	rjmp	.+322    	; 0x16c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9f c0       	rjmp	.+318    	; 0x16c <__bad_interrupt>
      2e:	00 00       	nop
<<<<<<< Updated upstream
      30:	9c c3       	rjmp	.+1848   	; 0x76a <__vector_12>
=======
      30:	5a c4       	rjmp	.+2228   	; 0x8e6 <__vector_12>
>>>>>>> Stashed changes
      32:	00 00       	nop
      34:	9b c0       	rjmp	.+310    	; 0x16c <__bad_interrupt>
      36:	00 00       	nop
      38:	99 c0       	rjmp	.+306    	; 0x16c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	97 c0       	rjmp	.+302    	; 0x16c <__bad_interrupt>
      3e:	00 00       	nop
      40:	95 c0       	rjmp	.+298    	; 0x16c <__bad_interrupt>
      42:	00 00       	nop
      44:	93 c0       	rjmp	.+294    	; 0x16c <__bad_interrupt>
      46:	00 00       	nop
      48:	91 c0       	rjmp	.+290    	; 0x16c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8f c0       	rjmp	.+286    	; 0x16c <__bad_interrupt>
      4e:	00 00       	nop
      50:	8d c0       	rjmp	.+282    	; 0x16c <__bad_interrupt>
      52:	00 00       	nop
      54:	8b c0       	rjmp	.+278    	; 0x16c <__bad_interrupt>
      56:	00 00       	nop
      58:	89 c0       	rjmp	.+274    	; 0x16c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	87 c0       	rjmp	.+270    	; 0x16c <__bad_interrupt>
      5e:	00 00       	nop
      60:	85 c0       	rjmp	.+266    	; 0x16c <__bad_interrupt>
      62:	00 00       	nop
<<<<<<< Updated upstream
      64:	0c 94 09 20 	jmp	0x4012	; 0x4012 <__vector_25>
      68:	0c 94 5b 20 	jmp	0x40b6	; 0x40b6 <__vector_26>
      6c:	7f c0       	rjmp	.+254    	; 0x16c <__bad_interrupt>
=======
      64:	0c 94 11 23 	jmp	0x4622	; 0x4622 <__vector_25>
      68:	0c 94 63 23 	jmp	0x46c6	; 0x46c6 <__vector_26>
      6c:	d0 c0       	rjmp	.+416    	; 0x20e <__bad_interrupt>
>>>>>>> Stashed changes
      6e:	00 00       	nop
      70:	7d c0       	rjmp	.+250    	; 0x16c <__bad_interrupt>
      72:	00 00       	nop
      74:	7b c0       	rjmp	.+246    	; 0x16c <__bad_interrupt>
      76:	00 00       	nop
      78:	79 c0       	rjmp	.+242    	; 0x16c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	77 c0       	rjmp	.+238    	; 0x16c <__bad_interrupt>
      7e:	00 00       	nop
      80:	75 c0       	rjmp	.+234    	; 0x16c <__bad_interrupt>
      82:	00 00       	nop
      84:	73 c0       	rjmp	.+230    	; 0x16c <__bad_interrupt>
      86:	00 00       	nop
      88:	71 c0       	rjmp	.+226    	; 0x16c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6f c0       	rjmp	.+222    	; 0x16c <__bad_interrupt>
      8e:	00 00       	nop
<<<<<<< Updated upstream
      90:	0c 94 9f 20 	jmp	0x413e	; 0x413e <__vector_36>
      94:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__vector_37>
      98:	69 c0       	rjmp	.+210    	; 0x16c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	67 c0       	rjmp	.+206    	; 0x16c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	65 c0       	rjmp	.+202    	; 0x16c <__bad_interrupt>
=======
      90:	0c 94 a7 23 	jmp	0x474e	; 0x474e <__vector_36>
      94:	0c 94 f9 23 	jmp	0x47f2	; 0x47f2 <__vector_37>
      98:	ba c0       	rjmp	.+372    	; 0x20e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 45 28 	jmp	0x508a	; 0x508a <__vector_39>
      a0:	b6 c0       	rjmp	.+364    	; 0x20e <__bad_interrupt>
>>>>>>> Stashed changes
      a2:	00 00       	nop
      a4:	63 c0       	rjmp	.+198    	; 0x16c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	61 c0       	rjmp	.+194    	; 0x16c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	5f c0       	rjmp	.+190    	; 0x16c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	5d c0       	rjmp	.+186    	; 0x16c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	5b c0       	rjmp	.+182    	; 0x16c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	59 c0       	rjmp	.+178    	; 0x16c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	57 c0       	rjmp	.+174    	; 0x16c <__bad_interrupt>
      be:	00 00       	nop
      c0:	55 c0       	rjmp	.+170    	; 0x16c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	53 c0       	rjmp	.+166    	; 0x16c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	51 c0       	rjmp	.+162    	; 0x16c <__bad_interrupt>
      ca:	00 00       	nop
<<<<<<< Updated upstream
      cc:	0c 94 35 21 	jmp	0x426a	; 0x426a <__vector_51>
      d0:	0c 94 87 21 	jmp	0x430e	; 0x430e <__vector_52>
      d4:	4b c0       	rjmp	.+150    	; 0x16c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 cb 21 	jmp	0x4396	; 0x4396 <__vector_54>
      dc:	0c 94 1d 22 	jmp	0x443a	; 0x443a <__vector_55>
      e0:	45 c0       	rjmp	.+138    	; 0x16c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	95 16       	cp	r9, r21
      e6:	95 16       	cp	r9, r21
      e8:	95 16       	cp	r9, r21
      ea:	cc 16       	cp	r12, r28
      ec:	d4 16       	cp	r13, r20
      ee:	e9 16       	cp	r14, r25
      f0:	95 16       	cp	r9, r21
      f2:	95 16       	cp	r9, r21
      f4:	cc 16       	cp	r12, r28
      f6:	d4 16       	cp	r13, r20

000000f8 <prvIdleTask>:
      f8:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <prvCheckTasksWaitingTermination>
      fc:	80 91 65 11 	lds	r24, 0x1165	; 0x801165 <pxReadyTasksLists>
     100:	82 30       	cpi	r24, 0x02	; 2
     102:	08 f0       	brcs	.+2      	; 0x106 <prvIdleTask+0xe>
     104:	6c d2       	rcall	.+1240   	; 0x5de <vPortYield>
     106:	0e 94 12 17 	call	0x2e24	; 0x2e24 <vApplicationIdleHook>
     10a:	f6 cf       	rjmp	.-20     	; 0xf8 <prvIdleTask>

0000010c <prvTimerTask>:
     10c:	cf 93       	push	r28
     10e:	df 93       	push	r29
     110:	1f 92       	push	r1
     112:	cd b7       	in	r28, 0x3d	; 61
     114:	de b7       	in	r29, 0x3e	; 62
     116:	ce 01       	movw	r24, r28
     118:	01 96       	adiw	r24, 0x01	; 1
     11a:	0e 94 12 14 	call	0x2824	; 0x2824 <prvGetNextExpireTime>
     11e:	49 81       	ldd	r20, Y+1	; 0x01
     120:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <prvProcessTimerOrBlockTask>
     124:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <prvProcessReceivedCommands>
     128:	f6 cf       	rjmp	.-20     	; 0x116 <prvTimerTask+0xa>

0000012a <__ctors_end>:
     12a:	11 24       	eor	r1, r1
     12c:	1f be       	out	0x3f, r1	; 63
     12e:	cf ef       	ldi	r28, 0xFF	; 255
     130:	d1 e2       	ldi	r29, 0x21	; 33
     132:	de bf       	out	0x3e, r29	; 62
     134:	cd bf       	out	0x3d, r28	; 61
     136:	00 e0       	ldi	r16, 0x00	; 0
     138:	0c bf       	out	0x3c, r16	; 60

0000013a <__do_copy_data>:
     13a:	17 e0       	ldi	r17, 0x07	; 7
     13c:	a0 e0       	ldi	r26, 0x00	; 0
     13e:	b2 e0       	ldi	r27, 0x02	; 2
     140:	e0 e5       	ldi	r30, 0x50	; 80
     142:	f6 e5       	ldi	r31, 0x56	; 86
     144:	00 e0       	ldi	r16, 0x00	; 0
     146:	0b bf       	out	0x3b, r16	; 59
     148:	02 c0       	rjmp	.+4      	; 0x14e <__do_copy_data+0x14>
     14a:	07 90       	elpm	r0, Z+
     14c:	0d 92       	st	X+, r0
     14e:	a0 34       	cpi	r26, 0x40	; 64
     150:	b1 07       	cpc	r27, r17
     152:	d9 f7       	brne	.-10     	; 0x14a <__do_copy_data+0x10>

00000154 <__do_clear_bss>:
     154:	23 e1       	ldi	r18, 0x13	; 19
     156:	a0 e4       	ldi	r26, 0x40	; 64
     158:	b7 e0       	ldi	r27, 0x07	; 7
     15a:	01 c0       	rjmp	.+2      	; 0x15e <.do_clear_bss_start>

0000015c <.do_clear_bss_loop>:
     15c:	1d 92       	st	X+, r1

0000015e <.do_clear_bss_start>:
     15e:	a1 3d       	cpi	r26, 0xD1	; 209
     160:	b2 07       	cpc	r27, r18
     162:	e1 f7       	brne	.-8      	; 0x15c <.do_clear_bss_loop>
     164:	0e 94 a7 19 	call	0x334e	; 0x334e <main>
     168:	0c 94 26 2b 	jmp	0x564c	; 0x564c <_exit>

0000016c <__bad_interrupt>:
     16c:	49 cf       	rjmp	.-366    	; 0x0 <__vectors>

0000016e <co2MeasureCallBack>:
     16e:	0c 94 40 17 	jmp	0x2e80	; 0x2e80 <enqueueCO2Measure>
     172:	08 95       	ret

00000174 <co2Measure>:
     174:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <mh_z19_takeMeassuring>
     178:	81 11       	cpse	r24, r1
     17a:	05 c0       	rjmp	.+10     	; 0x186 <co2Measure+0x12>
     17c:	87 eb       	ldi	r24, 0xB7	; 183
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	0c 94 99 1e 	jmp	0x3d32	; 0x3d32 <mh_z19_injectCallBack>
     184:	08 95       	ret
     186:	8a e6       	ldi	r24, 0x6A	; 106
     188:	92 e0       	ldi	r25, 0x02	; 2
     18a:	0c 94 1b 28 	jmp	0x5036	; 0x5036 <puts>
     18e:	08 95       	ret

00000190 <prvHeapInit>:
     190:	ec e4       	ldi	r30, 0x4C	; 76
     192:	f7 e0       	ldi	r31, 0x07	; 7
     194:	a0 e5       	ldi	r26, 0x50	; 80
     196:	b7 e0       	ldi	r27, 0x07	; 7
     198:	b1 83       	std	Z+1, r27	; 0x01
     19a:	a0 83       	st	Z, r26
     19c:	13 82       	std	Z+3, r1	; 0x03
     19e:	12 82       	std	Z+2, r1	; 0x02
     1a0:	e0 e1       	ldi	r30, 0x10	; 16
     1a2:	f1 e1       	ldi	r31, 0x11	; 17
     1a4:	f0 93 4b 07 	sts	0x074B, r31	; 0x80074b <pxEnd+0x1>
     1a8:	e0 93 4a 07 	sts	0x074A, r30	; 0x80074a <pxEnd>
     1ac:	13 82       	std	Z+3, r1	; 0x03
     1ae:	12 82       	std	Z+2, r1	; 0x02
     1b0:	11 82       	std	Z+1, r1	; 0x01
     1b2:	10 82       	st	Z, r1
     1b4:	80 ec       	ldi	r24, 0xC0	; 192
     1b6:	99 e0       	ldi	r25, 0x09	; 9
     1b8:	13 96       	adiw	r26, 0x03	; 3
     1ba:	9c 93       	st	X, r25
     1bc:	8e 93       	st	-X, r24
     1be:	12 97       	sbiw	r26, 0x02	; 2
     1c0:	ed 93       	st	X+, r30
     1c2:	fc 93       	st	X, r31
     1c4:	90 93 47 07 	sts	0x0747, r25	; 0x800747 <xMinimumEverFreeBytesRemaining+0x1>
     1c8:	80 93 46 07 	sts	0x0746, r24	; 0x800746 <xMinimumEverFreeBytesRemaining>
     1cc:	90 93 49 07 	sts	0x0749, r25	; 0x800749 <xFreeBytesRemaining+0x1>
     1d0:	80 93 48 07 	sts	0x0748, r24	; 0x800748 <xFreeBytesRemaining>
     1d4:	80 e0       	ldi	r24, 0x00	; 0
     1d6:	90 e8       	ldi	r25, 0x80	; 128
     1d8:	90 93 41 07 	sts	0x0741, r25	; 0x800741 <__data_end+0x1>
     1dc:	80 93 40 07 	sts	0x0740, r24	; 0x800740 <__data_end>
     1e0:	08 95       	ret

000001e2 <prvInsertBlockIntoFreeList>:
     1e2:	cf 93       	push	r28
     1e4:	df 93       	push	r29
     1e6:	ec 01       	movw	r28, r24
     1e8:	ac e4       	ldi	r26, 0x4C	; 76
     1ea:	b7 e0       	ldi	r27, 0x07	; 7
     1ec:	01 c0       	rjmp	.+2      	; 0x1f0 <prvInsertBlockIntoFreeList+0xe>
     1ee:	df 01       	movw	r26, r30
     1f0:	ed 91       	ld	r30, X+
     1f2:	fc 91       	ld	r31, X
     1f4:	11 97       	sbiw	r26, 0x01	; 1
     1f6:	ec 17       	cp	r30, r28
     1f8:	fd 07       	cpc	r31, r29
     1fa:	c8 f3       	brcs	.-14     	; 0x1ee <prvInsertBlockIntoFreeList+0xc>
     1fc:	12 96       	adiw	r26, 0x02	; 2
     1fe:	8d 91       	ld	r24, X+
     200:	9c 91       	ld	r25, X
     202:	13 97       	sbiw	r26, 0x03	; 3
     204:	9d 01       	movw	r18, r26
     206:	28 0f       	add	r18, r24
     208:	39 1f       	adc	r19, r25
     20a:	c2 17       	cp	r28, r18
     20c:	d3 07       	cpc	r29, r19
     20e:	49 f4       	brne	.+18     	; 0x222 <prvInsertBlockIntoFreeList+0x40>
     210:	2a 81       	ldd	r18, Y+2	; 0x02
     212:	3b 81       	ldd	r19, Y+3	; 0x03
     214:	82 0f       	add	r24, r18
     216:	93 1f       	adc	r25, r19
     218:	13 96       	adiw	r26, 0x03	; 3
     21a:	9c 93       	st	X, r25
     21c:	8e 93       	st	-X, r24
     21e:	12 97       	sbiw	r26, 0x02	; 2
     220:	ed 01       	movw	r28, r26
     222:	8a 81       	ldd	r24, Y+2	; 0x02
     224:	9b 81       	ldd	r25, Y+3	; 0x03
     226:	9e 01       	movw	r18, r28
     228:	28 0f       	add	r18, r24
     22a:	39 1f       	adc	r19, r25
     22c:	e2 17       	cp	r30, r18
     22e:	f3 07       	cpc	r31, r19
     230:	c1 f4       	brne	.+48     	; 0x262 <prvInsertBlockIntoFreeList+0x80>
     232:	20 91 4a 07 	lds	r18, 0x074A	; 0x80074a <pxEnd>
     236:	30 91 4b 07 	lds	r19, 0x074B	; 0x80074b <pxEnd+0x1>
     23a:	e2 17       	cp	r30, r18
     23c:	f3 07       	cpc	r31, r19
     23e:	71 f0       	breq	.+28     	; 0x25c <prvInsertBlockIntoFreeList+0x7a>
     240:	22 81       	ldd	r18, Z+2	; 0x02
     242:	33 81       	ldd	r19, Z+3	; 0x03
     244:	82 0f       	add	r24, r18
     246:	93 1f       	adc	r25, r19
     248:	9b 83       	std	Y+3, r25	; 0x03
     24a:	8a 83       	std	Y+2, r24	; 0x02
     24c:	ed 91       	ld	r30, X+
     24e:	fc 91       	ld	r31, X
     250:	11 97       	sbiw	r26, 0x01	; 1
     252:	80 81       	ld	r24, Z
     254:	91 81       	ldd	r25, Z+1	; 0x01
     256:	99 83       	std	Y+1, r25	; 0x01
     258:	88 83       	st	Y, r24
     25a:	05 c0       	rjmp	.+10     	; 0x266 <prvInsertBlockIntoFreeList+0x84>
     25c:	39 83       	std	Y+1, r19	; 0x01
     25e:	28 83       	st	Y, r18
     260:	02 c0       	rjmp	.+4      	; 0x266 <prvInsertBlockIntoFreeList+0x84>
     262:	f9 83       	std	Y+1, r31	; 0x01
     264:	e8 83       	st	Y, r30
     266:	ca 17       	cp	r28, r26
     268:	db 07       	cpc	r29, r27
     26a:	11 f0       	breq	.+4      	; 0x270 <prvInsertBlockIntoFreeList+0x8e>
     26c:	cd 93       	st	X+, r28
     26e:	dc 93       	st	X, r29
     270:	df 91       	pop	r29
     272:	cf 91       	pop	r28
     274:	08 95       	ret

00000276 <pvPortMalloc>:
     276:	ef 92       	push	r14
     278:	ff 92       	push	r15
     27a:	0f 93       	push	r16
     27c:	1f 93       	push	r17
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	8c 01       	movw	r16, r24
     284:	0e 94 30 0c 	call	0x1860	; 0x1860 <vTaskSuspendAll>
     288:	80 91 4a 07 	lds	r24, 0x074A	; 0x80074a <pxEnd>
     28c:	90 91 4b 07 	lds	r25, 0x074B	; 0x80074b <pxEnd+0x1>
     290:	89 2b       	or	r24, r25
     292:	09 f4       	brne	.+2      	; 0x296 <pvPortMalloc+0x20>
     294:	7d df       	rcall	.-262    	; 0x190 <prvHeapInit>
     296:	80 91 40 07 	lds	r24, 0x0740	; 0x800740 <__data_end>
     29a:	90 91 41 07 	lds	r25, 0x0741	; 0x800741 <__data_end+0x1>
     29e:	80 23       	and	r24, r16
     2a0:	91 23       	and	r25, r17
     2a2:	89 2b       	or	r24, r25
     2a4:	09 f0       	breq	.+2      	; 0x2a8 <pvPortMalloc+0x32>
     2a6:	76 c0       	rjmp	.+236    	; 0x394 <pvPortMalloc+0x11e>
     2a8:	01 15       	cp	r16, r1
     2aa:	11 05       	cpc	r17, r1
     2ac:	49 f0       	breq	.+18     	; 0x2c0 <pvPortMalloc+0x4a>
     2ae:	c8 01       	movw	r24, r16
     2b0:	04 96       	adiw	r24, 0x04	; 4
     2b2:	08 17       	cp	r16, r24
     2b4:	19 07       	cpc	r17, r25
     2b6:	18 f0       	brcs	.+6      	; 0x2be <pvPortMalloc+0x48>
     2b8:	00 e0       	ldi	r16, 0x00	; 0
     2ba:	10 e0       	ldi	r17, 0x00	; 0
     2bc:	01 c0       	rjmp	.+2      	; 0x2c0 <pvPortMalloc+0x4a>
     2be:	8c 01       	movw	r16, r24
     2c0:	01 15       	cp	r16, r1
     2c2:	11 05       	cpc	r17, r1
     2c4:	09 f4       	brne	.+2      	; 0x2c8 <pvPortMalloc+0x52>
     2c6:	69 c0       	rjmp	.+210    	; 0x39a <pvPortMalloc+0x124>
     2c8:	80 91 48 07 	lds	r24, 0x0748	; 0x800748 <xFreeBytesRemaining>
     2cc:	90 91 49 07 	lds	r25, 0x0749	; 0x800749 <xFreeBytesRemaining+0x1>
     2d0:	80 17       	cp	r24, r16
     2d2:	91 07       	cpc	r25, r17
     2d4:	08 f4       	brcc	.+2      	; 0x2d8 <pvPortMalloc+0x62>
     2d6:	64 c0       	rjmp	.+200    	; 0x3a0 <pvPortMalloc+0x12a>
     2d8:	c0 91 4c 07 	lds	r28, 0x074C	; 0x80074c <xStart>
     2dc:	d0 91 4d 07 	lds	r29, 0x074D	; 0x80074d <xStart+0x1>
     2e0:	ec e4       	ldi	r30, 0x4C	; 76
     2e2:	f7 e0       	ldi	r31, 0x07	; 7
     2e4:	02 c0       	rjmp	.+4      	; 0x2ea <pvPortMalloc+0x74>
     2e6:	fe 01       	movw	r30, r28
     2e8:	ec 01       	movw	r28, r24
     2ea:	8a 81       	ldd	r24, Y+2	; 0x02
     2ec:	9b 81       	ldd	r25, Y+3	; 0x03
     2ee:	80 17       	cp	r24, r16
     2f0:	91 07       	cpc	r25, r17
     2f2:	20 f4       	brcc	.+8      	; 0x2fc <pvPortMalloc+0x86>
     2f4:	88 81       	ld	r24, Y
     2f6:	99 81       	ldd	r25, Y+1	; 0x01
     2f8:	00 97       	sbiw	r24, 0x00	; 0
     2fa:	a9 f7       	brne	.-22     	; 0x2e6 <pvPortMalloc+0x70>
     2fc:	80 91 4a 07 	lds	r24, 0x074A	; 0x80074a <pxEnd>
     300:	90 91 4b 07 	lds	r25, 0x074B	; 0x80074b <pxEnd+0x1>
     304:	c8 17       	cp	r28, r24
     306:	d9 07       	cpc	r29, r25
     308:	09 f4       	brne	.+2      	; 0x30c <pvPortMalloc+0x96>
     30a:	4d c0       	rjmp	.+154    	; 0x3a6 <pvPortMalloc+0x130>
     30c:	e0 80       	ld	r14, Z
     30e:	f1 80       	ldd	r15, Z+1	; 0x01
     310:	84 e0       	ldi	r24, 0x04	; 4
     312:	e8 0e       	add	r14, r24
     314:	f1 1c       	adc	r15, r1
     316:	88 81       	ld	r24, Y
     318:	99 81       	ldd	r25, Y+1	; 0x01
     31a:	91 83       	std	Z+1, r25	; 0x01
     31c:	80 83       	st	Z, r24
     31e:	2a 81       	ldd	r18, Y+2	; 0x02
     320:	3b 81       	ldd	r19, Y+3	; 0x03
     322:	20 1b       	sub	r18, r16
     324:	31 0b       	sbc	r19, r17
     326:	29 30       	cpi	r18, 0x09	; 9
     328:	31 05       	cpc	r19, r1
     32a:	48 f0       	brcs	.+18     	; 0x33e <pvPortMalloc+0xc8>
     32c:	ce 01       	movw	r24, r28
     32e:	80 0f       	add	r24, r16
     330:	91 1f       	adc	r25, r17
     332:	fc 01       	movw	r30, r24
     334:	33 83       	std	Z+3, r19	; 0x03
     336:	22 83       	std	Z+2, r18	; 0x02
     338:	1b 83       	std	Y+3, r17	; 0x03
     33a:	0a 83       	std	Y+2, r16	; 0x02
     33c:	52 df       	rcall	.-348    	; 0x1e2 <prvInsertBlockIntoFreeList>
     33e:	2a 81       	ldd	r18, Y+2	; 0x02
     340:	3b 81       	ldd	r19, Y+3	; 0x03
     342:	80 91 48 07 	lds	r24, 0x0748	; 0x800748 <xFreeBytesRemaining>
     346:	90 91 49 07 	lds	r25, 0x0749	; 0x800749 <xFreeBytesRemaining+0x1>
     34a:	82 1b       	sub	r24, r18
     34c:	93 0b       	sbc	r25, r19
     34e:	90 93 49 07 	sts	0x0749, r25	; 0x800749 <xFreeBytesRemaining+0x1>
     352:	80 93 48 07 	sts	0x0748, r24	; 0x800748 <xFreeBytesRemaining>
     356:	40 91 46 07 	lds	r20, 0x0746	; 0x800746 <xMinimumEverFreeBytesRemaining>
     35a:	50 91 47 07 	lds	r21, 0x0747	; 0x800747 <xMinimumEverFreeBytesRemaining+0x1>
     35e:	84 17       	cp	r24, r20
     360:	95 07       	cpc	r25, r21
     362:	20 f4       	brcc	.+8      	; 0x36c <pvPortMalloc+0xf6>
     364:	90 93 47 07 	sts	0x0747, r25	; 0x800747 <xMinimumEverFreeBytesRemaining+0x1>
     368:	80 93 46 07 	sts	0x0746, r24	; 0x800746 <xMinimumEverFreeBytesRemaining>
     36c:	80 91 40 07 	lds	r24, 0x0740	; 0x800740 <__data_end>
     370:	90 91 41 07 	lds	r25, 0x0741	; 0x800741 <__data_end+0x1>
     374:	28 2b       	or	r18, r24
     376:	39 2b       	or	r19, r25
     378:	3b 83       	std	Y+3, r19	; 0x03
     37a:	2a 83       	std	Y+2, r18	; 0x02
     37c:	19 82       	std	Y+1, r1	; 0x01
     37e:	18 82       	st	Y, r1
     380:	80 91 44 07 	lds	r24, 0x0744	; 0x800744 <xNumberOfSuccessfulAllocations>
     384:	90 91 45 07 	lds	r25, 0x0745	; 0x800745 <xNumberOfSuccessfulAllocations+0x1>
     388:	01 96       	adiw	r24, 0x01	; 1
     38a:	90 93 45 07 	sts	0x0745, r25	; 0x800745 <xNumberOfSuccessfulAllocations+0x1>
     38e:	80 93 44 07 	sts	0x0744, r24	; 0x800744 <xNumberOfSuccessfulAllocations>
     392:	0b c0       	rjmp	.+22     	; 0x3aa <pvPortMalloc+0x134>
     394:	e1 2c       	mov	r14, r1
     396:	f1 2c       	mov	r15, r1
     398:	08 c0       	rjmp	.+16     	; 0x3aa <pvPortMalloc+0x134>
     39a:	e1 2c       	mov	r14, r1
     39c:	f1 2c       	mov	r15, r1
     39e:	05 c0       	rjmp	.+10     	; 0x3aa <pvPortMalloc+0x134>
     3a0:	e1 2c       	mov	r14, r1
     3a2:	f1 2c       	mov	r15, r1
     3a4:	02 c0       	rjmp	.+4      	; 0x3aa <pvPortMalloc+0x134>
     3a6:	e1 2c       	mov	r14, r1
     3a8:	f1 2c       	mov	r15, r1
     3aa:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <xTaskResumeAll>
     3ae:	e1 14       	cp	r14, r1
     3b0:	f1 04       	cpc	r15, r1
     3b2:	11 f4       	brne	.+4      	; 0x3b8 <pvPortMalloc+0x142>
     3b4:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <vApplicationMallocFailedHook>
     3b8:	c7 01       	movw	r24, r14
     3ba:	df 91       	pop	r29
     3bc:	cf 91       	pop	r28
     3be:	1f 91       	pop	r17
     3c0:	0f 91       	pop	r16
     3c2:	ff 90       	pop	r15
     3c4:	ef 90       	pop	r14
     3c6:	08 95       	ret

000003c8 <vPortFree>:
     3c8:	0f 93       	push	r16
     3ca:	1f 93       	push	r17
     3cc:	cf 93       	push	r28
     3ce:	df 93       	push	r29
     3d0:	00 97       	sbiw	r24, 0x00	; 0
     3d2:	91 f1       	breq	.+100    	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     3d4:	ec 01       	movw	r28, r24
     3d6:	24 97       	sbiw	r28, 0x04	; 4
     3d8:	4a 81       	ldd	r20, Y+2	; 0x02
     3da:	5b 81       	ldd	r21, Y+3	; 0x03
     3dc:	20 91 40 07 	lds	r18, 0x0740	; 0x800740 <__data_end>
     3e0:	30 91 41 07 	lds	r19, 0x0741	; 0x800741 <__data_end+0x1>
     3e4:	ba 01       	movw	r22, r20
     3e6:	62 23       	and	r22, r18
     3e8:	73 23       	and	r23, r19
     3ea:	67 2b       	or	r22, r23
     3ec:	29 f1       	breq	.+74     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     3ee:	68 81       	ld	r22, Y
     3f0:	79 81       	ldd	r23, Y+1	; 0x01
     3f2:	67 2b       	or	r22, r23
     3f4:	09 f5       	brne	.+66     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     3f6:	20 95       	com	r18
     3f8:	30 95       	com	r19
     3fa:	24 23       	and	r18, r20
     3fc:	35 23       	and	r19, r21
     3fe:	3b 83       	std	Y+3, r19	; 0x03
     400:	2a 83       	std	Y+2, r18	; 0x02
     402:	0e 94 30 0c 	call	0x1860	; 0x1860 <vTaskSuspendAll>
     406:	8a 81       	ldd	r24, Y+2	; 0x02
     408:	9b 81       	ldd	r25, Y+3	; 0x03
     40a:	20 91 48 07 	lds	r18, 0x0748	; 0x800748 <xFreeBytesRemaining>
     40e:	30 91 49 07 	lds	r19, 0x0749	; 0x800749 <xFreeBytesRemaining+0x1>
     412:	82 0f       	add	r24, r18
     414:	93 1f       	adc	r25, r19
     416:	90 93 49 07 	sts	0x0749, r25	; 0x800749 <xFreeBytesRemaining+0x1>
     41a:	80 93 48 07 	sts	0x0748, r24	; 0x800748 <xFreeBytesRemaining>
     41e:	ce 01       	movw	r24, r28
     420:	e0 de       	rcall	.-576    	; 0x1e2 <prvInsertBlockIntoFreeList>
     422:	80 91 42 07 	lds	r24, 0x0742	; 0x800742 <xNumberOfSuccessfulFrees>
     426:	90 91 43 07 	lds	r25, 0x0743	; 0x800743 <xNumberOfSuccessfulFrees+0x1>
     42a:	01 96       	adiw	r24, 0x01	; 1
     42c:	90 93 43 07 	sts	0x0743, r25	; 0x800743 <xNumberOfSuccessfulFrees+0x1>
     430:	80 93 42 07 	sts	0x0742, r24	; 0x800742 <xNumberOfSuccessfulFrees>
     434:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <xTaskResumeAll>
     438:	df 91       	pop	r29
     43a:	cf 91       	pop	r28
     43c:	1f 91       	pop	r17
     43e:	0f 91       	pop	r16
     440:	08 95       	ret

00000442 <vListInitialise>:
     442:	fc 01       	movw	r30, r24
     444:	03 96       	adiw	r24, 0x03	; 3
     446:	92 83       	std	Z+2, r25	; 0x02
     448:	81 83       	std	Z+1, r24	; 0x01
     44a:	4f ef       	ldi	r20, 0xFF	; 255
     44c:	5f ef       	ldi	r21, 0xFF	; 255
     44e:	ba 01       	movw	r22, r20
     450:	43 83       	std	Z+3, r20	; 0x03
     452:	54 83       	std	Z+4, r21	; 0x04
     454:	65 83       	std	Z+5, r22	; 0x05
     456:	76 83       	std	Z+6, r23	; 0x06
     458:	90 87       	std	Z+8, r25	; 0x08
     45a:	87 83       	std	Z+7, r24	; 0x07
     45c:	92 87       	std	Z+10, r25	; 0x0a
     45e:	81 87       	std	Z+9, r24	; 0x09
     460:	10 82       	st	Z, r1
     462:	08 95       	ret

00000464 <vListInitialiseItem>:
     464:	fc 01       	movw	r30, r24
     466:	13 86       	std	Z+11, r1	; 0x0b
     468:	12 86       	std	Z+10, r1	; 0x0a
     46a:	08 95       	ret

0000046c <vListInsert>:
     46c:	0f 93       	push	r16
     46e:	1f 93       	push	r17
     470:	cf 93       	push	r28
     472:	df 93       	push	r29
     474:	eb 01       	movw	r28, r22
     476:	08 81       	ld	r16, Y
     478:	19 81       	ldd	r17, Y+1	; 0x01
     47a:	2a 81       	ldd	r18, Y+2	; 0x02
     47c:	3b 81       	ldd	r19, Y+3	; 0x03
     47e:	0f 3f       	cpi	r16, 0xFF	; 255
     480:	4f ef       	ldi	r20, 0xFF	; 255
     482:	14 07       	cpc	r17, r20
     484:	24 07       	cpc	r18, r20
     486:	34 07       	cpc	r19, r20
     488:	21 f4       	brne	.+8      	; 0x492 <vListInsert+0x26>
     48a:	fc 01       	movw	r30, r24
     48c:	a1 85       	ldd	r26, Z+9	; 0x09
     48e:	b2 85       	ldd	r27, Z+10	; 0x0a
     490:	11 c0       	rjmp	.+34     	; 0x4b4 <vListInsert+0x48>
     492:	dc 01       	movw	r26, r24
     494:	13 96       	adiw	r26, 0x03	; 3
     496:	01 c0       	rjmp	.+2      	; 0x49a <vListInsert+0x2e>
     498:	df 01       	movw	r26, r30
     49a:	14 96       	adiw	r26, 0x04	; 4
     49c:	ed 91       	ld	r30, X+
     49e:	fc 91       	ld	r31, X
     4a0:	15 97       	sbiw	r26, 0x05	; 5
     4a2:	40 81       	ld	r20, Z
     4a4:	51 81       	ldd	r21, Z+1	; 0x01
     4a6:	62 81       	ldd	r22, Z+2	; 0x02
     4a8:	73 81       	ldd	r23, Z+3	; 0x03
     4aa:	04 17       	cp	r16, r20
     4ac:	15 07       	cpc	r17, r21
     4ae:	26 07       	cpc	r18, r22
     4b0:	37 07       	cpc	r19, r23
     4b2:	90 f7       	brcc	.-28     	; 0x498 <vListInsert+0x2c>
     4b4:	14 96       	adiw	r26, 0x04	; 4
     4b6:	ed 91       	ld	r30, X+
     4b8:	fc 91       	ld	r31, X
     4ba:	15 97       	sbiw	r26, 0x05	; 5
     4bc:	fd 83       	std	Y+5, r31	; 0x05
     4be:	ec 83       	std	Y+4, r30	; 0x04
     4c0:	d7 83       	std	Z+7, r29	; 0x07
     4c2:	c6 83       	std	Z+6, r28	; 0x06
     4c4:	bf 83       	std	Y+7, r27	; 0x07
     4c6:	ae 83       	std	Y+6, r26	; 0x06
     4c8:	15 96       	adiw	r26, 0x05	; 5
     4ca:	dc 93       	st	X, r29
     4cc:	ce 93       	st	-X, r28
     4ce:	14 97       	sbiw	r26, 0x04	; 4
     4d0:	9b 87       	std	Y+11, r25	; 0x0b
     4d2:	8a 87       	std	Y+10, r24	; 0x0a
     4d4:	fc 01       	movw	r30, r24
     4d6:	20 81       	ld	r18, Z
     4d8:	2f 5f       	subi	r18, 0xFF	; 255
     4da:	20 83       	st	Z, r18
=======
      cc:	0c 94 3d 24 	jmp	0x487a	; 0x487a <__vector_51>
      d0:	0c 94 8f 24 	jmp	0x491e	; 0x491e <__vector_52>
      d4:	9c c0       	rjmp	.+312    	; 0x20e <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 d3 24 	jmp	0x49a6	; 0x49a6 <__vector_54>
      dc:	0c 94 25 25 	jmp	0x4a4a	; 0x4a4a <__vector_55>
      e0:	96 c0       	rjmp	.+300    	; 0x20e <__bad_interrupt>
      e2:	00 00       	nop
      e4:	53 17       	cp	r21, r19
      e6:	53 17       	cp	r21, r19
      e8:	53 17       	cp	r21, r19
      ea:	8a 17       	cp	r24, r26
      ec:	92 17       	cp	r25, r18
      ee:	a7 17       	cp	r26, r23
      f0:	53 17       	cp	r21, r19
      f2:	53 17       	cp	r21, r19
      f4:	8a 17       	cp	r24, r26
      f6:	92 17       	cp	r25, r18
      f8:	67 28       	or	r6, r7
      fa:	d7 28       	or	r13, r7
      fc:	d7 28       	or	r13, r7
      fe:	d7 28       	or	r13, r7
     100:	d7 28       	or	r13, r7
     102:	d7 28       	or	r13, r7
     104:	d7 28       	or	r13, r7
     106:	d7 28       	or	r13, r7
     108:	67 28       	or	r6, r7
     10a:	d7 28       	or	r13, r7
     10c:	d7 28       	or	r13, r7
     10e:	d7 28       	or	r13, r7
     110:	d7 28       	or	r13, r7
     112:	d7 28       	or	r13, r7
     114:	d7 28       	or	r13, r7
     116:	d7 28       	or	r13, r7
     118:	69 28       	or	r6, r9
     11a:	d7 28       	or	r13, r7
     11c:	d7 28       	or	r13, r7
     11e:	d7 28       	or	r13, r7
     120:	d7 28       	or	r13, r7
     122:	d7 28       	or	r13, r7
     124:	d7 28       	or	r13, r7
     126:	d7 28       	or	r13, r7
     128:	d7 28       	or	r13, r7
     12a:	d7 28       	or	r13, r7
     12c:	d7 28       	or	r13, r7
     12e:	d7 28       	or	r13, r7
     130:	d7 28       	or	r13, r7
     132:	d7 28       	or	r13, r7
     134:	d7 28       	or	r13, r7
     136:	d7 28       	or	r13, r7
     138:	69 28       	or	r6, r9
     13a:	d7 28       	or	r13, r7
     13c:	d7 28       	or	r13, r7
     13e:	d7 28       	or	r13, r7
     140:	d7 28       	or	r13, r7
     142:	d7 28       	or	r13, r7
     144:	d7 28       	or	r13, r7
     146:	d7 28       	or	r13, r7
     148:	d7 28       	or	r13, r7
     14a:	d7 28       	or	r13, r7
     14c:	d7 28       	or	r13, r7
     14e:	d7 28       	or	r13, r7
     150:	d7 28       	or	r13, r7
     152:	d7 28       	or	r13, r7
     154:	d7 28       	or	r13, r7
     156:	d7 28       	or	r13, r7
     158:	d3 28       	or	r13, r3
     15a:	d7 28       	or	r13, r7
     15c:	d7 28       	or	r13, r7
     15e:	d7 28       	or	r13, r7
     160:	d7 28       	or	r13, r7
     162:	d7 28       	or	r13, r7
     164:	d7 28       	or	r13, r7
     166:	d7 28       	or	r13, r7
     168:	9e 28       	or	r9, r14
     16a:	d7 28       	or	r13, r7
     16c:	d7 28       	or	r13, r7
     16e:	d7 28       	or	r13, r7
     170:	d7 28       	or	r13, r7
     172:	d7 28       	or	r13, r7
     174:	d7 28       	or	r13, r7
     176:	d7 28       	or	r13, r7
     178:	d7 28       	or	r13, r7
     17a:	d7 28       	or	r13, r7
     17c:	d7 28       	or	r13, r7
     17e:	d7 28       	or	r13, r7
     180:	d7 28       	or	r13, r7
     182:	d7 28       	or	r13, r7
     184:	d7 28       	or	r13, r7
     186:	d7 28       	or	r13, r7
     188:	92 28       	or	r9, r2
     18a:	d7 28       	or	r13, r7
     18c:	d7 28       	or	r13, r7
     18e:	d7 28       	or	r13, r7
     190:	d7 28       	or	r13, r7
     192:	d7 28       	or	r13, r7
     194:	d7 28       	or	r13, r7
     196:	d7 28       	or	r13, r7
     198:	b6 28       	or	r11, r6

0000019a <prvIdleTask>:
<<<<<<< HEAD
     19a:	0e 94 76 0b 	call	0x16ec	; 0x16ec <prvCheckTasksWaitingTermination>
     19e:	80 91 9d 11 	lds	r24, 0x119D	; 0x80119d <pxReadyTasksLists>
=======
                    mtCOVERAGE_TEST_MARKER();
                }
            }
        }
        portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
    }
     19a:	0e 94 a3 0b 	call	0x1746	; 0x1746 <prvCheckTasksWaitingTermination>
     19e:	80 91 df 15 	lds	r24, 0x15DF	; 0x8015df <pxReadyTasksLists>
>>>>>>> 1413a59f4c1676bf811b30fc6b6b1aaefe980264
     1a2:	82 30       	cpi	r24, 0x02	; 2
     1a4:	08 f0       	brcs	.+2      	; 0x1a8 <prvIdleTask+0xe>
     1a6:	d9 d2       	rcall	.+1458   	; 0x75a <vPortYield>
     1a8:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <vApplicationIdleHook>
     1ac:	f6 cf       	rjmp	.-20     	; 0x19a <prvIdleTask>

000001ae <prvTimerTask>:
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	1f 92       	push	r1
     1b4:	cd b7       	in	r28, 0x3d	; 61
     1b6:	de b7       	in	r29, 0x3e	; 62
     1b8:	ce 01       	movw	r24, r28
     1ba:	01 96       	adiw	r24, 0x01	; 1
     1bc:	0e 94 d0 14 	call	0x29a0	; 0x29a0 <prvGetNextExpireTime>
     1c0:	49 81       	ldd	r20, Y+1	; 0x01
     1c2:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <prvProcessTimerOrBlockTask>
     1c6:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <prvProcessReceivedCommands>
     1ca:	f6 cf       	rjmp	.-20     	; 0x1b8 <prvTimerTask+0xa>

000001cc <__ctors_end>:
     1cc:	11 24       	eor	r1, r1
     1ce:	1f be       	out	0x3f, r1	; 63
     1d0:	cf ef       	ldi	r28, 0xFF	; 255
     1d2:	d1 e2       	ldi	r29, 0x21	; 33
     1d4:	de bf       	out	0x3e, r29	; 62
     1d6:	cd bf       	out	0x3d, r28	; 61
     1d8:	00 e0       	ldi	r16, 0x00	; 0
     1da:	0c bf       	out	0x3c, r16	; 60

000001dc <__do_copy_data>:
     1dc:	17 e0       	ldi	r17, 0x07	; 7
     1de:	a0 e0       	ldi	r26, 0x00	; 0
     1e0:	b2 e0       	ldi	r27, 0x02	; 2
     1e2:	e4 e9       	ldi	r30, 0x94	; 148
     1e4:	ff e5       	ldi	r31, 0x5F	; 95
     1e6:	00 e0       	ldi	r16, 0x00	; 0
     1e8:	0b bf       	out	0x3b, r16	; 59
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <__do_copy_data+0x14>
     1ec:	07 90       	elpm	r0, Z+
     1ee:	0d 92       	st	X+, r0
     1f0:	a2 3d       	cpi	r26, 0xD2	; 210
     1f2:	b1 07       	cpc	r27, r17
     1f4:	d9 f7       	brne	.-10     	; 0x1ec <__do_copy_data+0x10>

000001f6 <__do_clear_bss>:
     1f6:	28 e1       	ldi	r18, 0x18	; 24
     1f8:	a2 ed       	ldi	r26, 0xD2	; 210
     1fa:	b7 e0       	ldi	r27, 0x07	; 7
     1fc:	01 c0       	rjmp	.+2      	; 0x200 <.do_clear_bss_start>

000001fe <.do_clear_bss_loop>:
     1fe:	1d 92       	st	X+, r1

00000200 <.do_clear_bss_start>:
     200:	a3 30       	cpi	r26, 0x03	; 3
     202:	b2 07       	cpc	r27, r18
     204:	e1 f7       	brne	.-8      	; 0x1fe <.do_clear_bss_loop>
     206:	0e 94 80 1b 	call	0x3700	; 0x3700 <main>
     20a:	0c 94 c8 2f 	jmp	0x5f90	; 0x5f90 <_exit>

0000020e <__bad_interrupt>:
     20e:	f8 ce       	rjmp	.-528    	; 0x0 <__vectors>

00000210 <initializeSharedDataQueue>:
     210:	40 e0       	ldi	r20, 0x00	; 0
     212:	66 e0       	ldi	r22, 0x06	; 6
     214:	85 e0       	ldi	r24, 0x05	; 5
     216:	86 d4       	rcall	.+2316   	; 0xb24 <xQueueGenericCreate>
     218:	90 93 ea 17 	sts	0x17EA, r25	; 0x8017ea <xQueueShared+0x1>
     21c:	80 93 e9 17 	sts	0x17E9, r24	; 0x8017e9 <xQueueShared>
     220:	08 95       	ret

00000222 <enqueueSharedData>:
<<<<<<< HEAD
     222:	0f 93       	push	r16
     224:	1f 93       	push	r17
     226:	cf 93       	push	r28
     228:	df 93       	push	r29
     22a:	0e 94 fb 17 	call	0x2ff6	; 0x2ff6 <dequeueCO2Measure>
     22e:	c8 2f       	mov	r28, r24
     230:	d9 2f       	mov	r29, r25
     232:	0e 94 be 18 	call	0x317c	; 0x317c <dequeueTempMeasure>
     236:	18 2f       	mov	r17, r24
     238:	09 2f       	mov	r16, r25
     23a:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <dequeueHumidityMeasure>
     23e:	e1 ea       	ldi	r30, 0xA1	; 161
     240:	f3 e1       	ldi	r31, 0x13	; 19
     242:	c0 83       	st	Z, r28
     244:	d1 83       	std	Z+1, r29	; 0x01
     246:	12 83       	std	Z+2, r17	; 0x02
     248:	03 83       	std	Z+3, r16	; 0x03
     24a:	84 83       	std	Z+4, r24	; 0x04
     24c:	95 83       	std	Z+5, r25	; 0x05
     24e:	0f 93       	push	r16
     250:	1f 93       	push	r17
     252:	df 93       	push	r29
     254:	cf 93       	push	r28
     256:	9f 93       	push	r25
     258:	8f 93       	push	r24
     25a:	8f e6       	ldi	r24, 0x6F	; 111
     25c:	92 e0       	ldi	r25, 0x02	; 2
     25e:	9f 93       	push	r25
     260:	8f 93       	push	r24
     262:	0e 94 90 2b 	call	0x5720	; 0x5720 <printf>
     266:	00 e0       	ldi	r16, 0x00	; 0
     268:	2f ef       	ldi	r18, 0xFF	; 255
     26a:	3f ef       	ldi	r19, 0xFF	; 255
     26c:	a9 01       	movw	r20, r18
     26e:	61 ea       	ldi	r22, 0xA1	; 161
     270:	73 e1       	ldi	r23, 0x13	; 19
     272:	80 91 a7 13 	lds	r24, 0x13A7	; 0x8013a7 <xQueueShared>
     276:	90 91 a8 13 	lds	r25, 0x13A8	; 0x8013a8 <xQueueShared+0x1>
     27a:	4a d4       	rcall	.+2196   	; 0xb10 <xQueueGenericSend>
     27c:	8d b7       	in	r24, 0x3d	; 61
     27e:	9e b7       	in	r25, 0x3e	; 62
     280:	08 96       	adiw	r24, 0x08	; 8
     282:	0f b6       	in	r0, 0x3f	; 63
     284:	f8 94       	cli
     286:	9e bf       	out	0x3e, r25	; 62
     288:	0f be       	out	0x3f, r0	; 63
     28a:	8d bf       	out	0x3d, r24	; 61
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	1f 91       	pop	r17
     292:	0f 91       	pop	r16
     294:	08 95       	ret

00000296 <dequeueSharedData>:
     296:	2a e0       	ldi	r18, 0x0A	; 10
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	40 e0       	ldi	r20, 0x00	; 0
     29c:	50 e0       	ldi	r21, 0x00	; 0
     29e:	69 ea       	ldi	r22, 0xA9	; 169
     2a0:	73 e1       	ldi	r23, 0x13	; 19
     2a2:	80 91 a7 13 	lds	r24, 0x13A7	; 0x8013a7 <xQueueShared>
     2a6:	90 91 a8 13 	lds	r25, 0x13A8	; 0x8013a8 <xQueueShared+0x1>
     2aa:	fd d4       	rcall	.+2554   	; 0xca6 <xQueueReceive>
     2ac:	89 ea       	ldi	r24, 0xA9	; 169
     2ae:	93 e1       	ldi	r25, 0x13	; 19
     2b0:	08 95       	ret

000002b2 <prvHeapInit>:
     2b2:	e4 e8       	ldi	r30, 0x84	; 132
     2b4:	f7 e0       	ldi	r31, 0x07	; 7
     2b6:	a8 e8       	ldi	r26, 0x88	; 136
     2b8:	b7 e0       	ldi	r27, 0x07	; 7
     2ba:	b1 83       	std	Z+1, r27	; 0x01
     2bc:	a0 83       	st	Z, r26
     2be:	13 82       	std	Z+3, r1	; 0x03
     2c0:	12 82       	std	Z+2, r1	; 0x02
     2c2:	e8 e4       	ldi	r30, 0x48	; 72
     2c4:	f1 e1       	ldi	r31, 0x11	; 17
     2c6:	f0 93 83 07 	sts	0x0783, r31	; 0x800783 <pxEnd+0x1>
     2ca:	e0 93 82 07 	sts	0x0782, r30	; 0x800782 <pxEnd>
     2ce:	13 82       	std	Z+3, r1	; 0x03
     2d0:	12 82       	std	Z+2, r1	; 0x02
     2d2:	11 82       	std	Z+1, r1	; 0x01
     2d4:	10 82       	st	Z, r1
     2d6:	80 ec       	ldi	r24, 0xC0	; 192
     2d8:	99 e0       	ldi	r25, 0x09	; 9
     2da:	13 96       	adiw	r26, 0x03	; 3
     2dc:	9c 93       	st	X, r25
     2de:	8e 93       	st	-X, r24
     2e0:	12 97       	sbiw	r26, 0x02	; 2
     2e2:	ed 93       	st	X+, r30
     2e4:	fc 93       	st	X, r31
     2e6:	90 93 7f 07 	sts	0x077F, r25	; 0x80077f <xMinimumEverFreeBytesRemaining+0x1>
     2ea:	80 93 7e 07 	sts	0x077E, r24	; 0x80077e <xMinimumEverFreeBytesRemaining>
     2ee:	90 93 81 07 	sts	0x0781, r25	; 0x800781 <xFreeBytesRemaining+0x1>
     2f2:	80 93 80 07 	sts	0x0780, r24	; 0x800780 <xFreeBytesRemaining>
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	90 e8       	ldi	r25, 0x80	; 128
     2fa:	90 93 79 07 	sts	0x0779, r25	; 0x800779 <__data_end+0x1>
     2fe:	80 93 78 07 	sts	0x0778, r24	; 0x800778 <__data_end>
     302:	08 95       	ret

00000304 <prvInsertBlockIntoFreeList>:
     304:	cf 93       	push	r28
     306:	df 93       	push	r29
     308:	ec 01       	movw	r28, r24
     30a:	a4 e8       	ldi	r26, 0x84	; 132
     30c:	b7 e0       	ldi	r27, 0x07	; 7
     30e:	01 c0       	rjmp	.+2      	; 0x312 <prvInsertBlockIntoFreeList+0xe>
     310:	df 01       	movw	r26, r30
     312:	ed 91       	ld	r30, X+
     314:	fc 91       	ld	r31, X
     316:	11 97       	sbiw	r26, 0x01	; 1
     318:	ec 17       	cp	r30, r28
     31a:	fd 07       	cpc	r31, r29
     31c:	c8 f3       	brcs	.-14     	; 0x310 <prvInsertBlockIntoFreeList+0xc>
     31e:	12 96       	adiw	r26, 0x02	; 2
     320:	8d 91       	ld	r24, X+
     322:	9c 91       	ld	r25, X
     324:	13 97       	sbiw	r26, 0x03	; 3
     326:	9d 01       	movw	r18, r26
     328:	28 0f       	add	r18, r24
     32a:	39 1f       	adc	r19, r25
     32c:	c2 17       	cp	r28, r18
     32e:	d3 07       	cpc	r29, r19
     330:	49 f4       	brne	.+18     	; 0x344 <prvInsertBlockIntoFreeList+0x40>
     332:	2a 81       	ldd	r18, Y+2	; 0x02
     334:	3b 81       	ldd	r19, Y+3	; 0x03
     336:	82 0f       	add	r24, r18
     338:	93 1f       	adc	r25, r19
     33a:	13 96       	adiw	r26, 0x03	; 3
     33c:	9c 93       	st	X, r25
     33e:	8e 93       	st	-X, r24
     340:	12 97       	sbiw	r26, 0x02	; 2
     342:	ed 01       	movw	r28, r26
     344:	8a 81       	ldd	r24, Y+2	; 0x02
     346:	9b 81       	ldd	r25, Y+3	; 0x03
     348:	9e 01       	movw	r18, r28
     34a:	28 0f       	add	r18, r24
     34c:	39 1f       	adc	r19, r25
     34e:	e2 17       	cp	r30, r18
     350:	f3 07       	cpc	r31, r19
     352:	c1 f4       	brne	.+48     	; 0x384 <prvInsertBlockIntoFreeList+0x80>
     354:	20 91 82 07 	lds	r18, 0x0782	; 0x800782 <pxEnd>
     358:	30 91 83 07 	lds	r19, 0x0783	; 0x800783 <pxEnd+0x1>
     35c:	e2 17       	cp	r30, r18
     35e:	f3 07       	cpc	r31, r19
     360:	71 f0       	breq	.+28     	; 0x37e <prvInsertBlockIntoFreeList+0x7a>
     362:	22 81       	ldd	r18, Z+2	; 0x02
     364:	33 81       	ldd	r19, Z+3	; 0x03
     366:	82 0f       	add	r24, r18
     368:	93 1f       	adc	r25, r19
     36a:	9b 83       	std	Y+3, r25	; 0x03
     36c:	8a 83       	std	Y+2, r24	; 0x02
     36e:	ed 91       	ld	r30, X+
     370:	fc 91       	ld	r31, X
     372:	11 97       	sbiw	r26, 0x01	; 1
     374:	80 81       	ld	r24, Z
     376:	91 81       	ldd	r25, Z+1	; 0x01
     378:	99 83       	std	Y+1, r25	; 0x01
     37a:	88 83       	st	Y, r24
     37c:	05 c0       	rjmp	.+10     	; 0x388 <prvInsertBlockIntoFreeList+0x84>
     37e:	39 83       	std	Y+1, r19	; 0x01
     380:	28 83       	st	Y, r18
     382:	02 c0       	rjmp	.+4      	; 0x388 <prvInsertBlockIntoFreeList+0x84>
     384:	f9 83       	std	Y+1, r31	; 0x01
     386:	e8 83       	st	Y, r30
     388:	ca 17       	cp	r28, r26
     38a:	db 07       	cpc	r29, r27
     38c:	11 f0       	breq	.+4      	; 0x392 <prvInsertBlockIntoFreeList+0x8e>
     38e:	cd 93       	st	X+, r28
     390:	dc 93       	st	X, r29
     392:	df 91       	pop	r29
     394:	cf 91       	pop	r28
     396:	08 95       	ret

00000398 <pvPortMalloc>:
     398:	ef 92       	push	r14
     39a:	ff 92       	push	r15
     39c:	0f 93       	push	r16
     39e:	1f 93       	push	r17
     3a0:	cf 93       	push	r28
     3a2:	df 93       	push	r29
     3a4:	8c 01       	movw	r16, r24
     3a6:	0e 94 c1 0c 	call	0x1982	; 0x1982 <vTaskSuspendAll>
     3aa:	80 91 82 07 	lds	r24, 0x0782	; 0x800782 <pxEnd>
     3ae:	90 91 83 07 	lds	r25, 0x0783	; 0x800783 <pxEnd+0x1>
     3b2:	89 2b       	or	r24, r25
     3b4:	09 f4       	brne	.+2      	; 0x3b8 <pvPortMalloc+0x20>
     3b6:	7d df       	rcall	.-262    	; 0x2b2 <prvHeapInit>
     3b8:	80 91 78 07 	lds	r24, 0x0778	; 0x800778 <__data_end>
     3bc:	90 91 79 07 	lds	r25, 0x0779	; 0x800779 <__data_end+0x1>
     3c0:	80 23       	and	r24, r16
     3c2:	91 23       	and	r25, r17
     3c4:	89 2b       	or	r24, r25
     3c6:	09 f0       	breq	.+2      	; 0x3ca <pvPortMalloc+0x32>
     3c8:	76 c0       	rjmp	.+236    	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
     3ca:	01 15       	cp	r16, r1
     3cc:	11 05       	cpc	r17, r1
     3ce:	49 f0       	breq	.+18     	; 0x3e2 <pvPortMalloc+0x4a>
     3d0:	c8 01       	movw	r24, r16
     3d2:	04 96       	adiw	r24, 0x04	; 4
     3d4:	08 17       	cp	r16, r24
     3d6:	19 07       	cpc	r17, r25
     3d8:	18 f0       	brcs	.+6      	; 0x3e0 <pvPortMalloc+0x48>
     3da:	00 e0       	ldi	r16, 0x00	; 0
     3dc:	10 e0       	ldi	r17, 0x00	; 0
     3de:	01 c0       	rjmp	.+2      	; 0x3e2 <pvPortMalloc+0x4a>
     3e0:	8c 01       	movw	r16, r24
     3e2:	01 15       	cp	r16, r1
     3e4:	11 05       	cpc	r17, r1
     3e6:	09 f4       	brne	.+2      	; 0x3ea <pvPortMalloc+0x52>
     3e8:	69 c0       	rjmp	.+210    	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
     3ea:	80 91 80 07 	lds	r24, 0x0780	; 0x800780 <xFreeBytesRemaining>
     3ee:	90 91 81 07 	lds	r25, 0x0781	; 0x800781 <xFreeBytesRemaining+0x1>
     3f2:	80 17       	cp	r24, r16
     3f4:	91 07       	cpc	r25, r17
     3f6:	08 f4       	brcc	.+2      	; 0x3fa <pvPortMalloc+0x62>
     3f8:	64 c0       	rjmp	.+200    	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
     3fa:	c0 91 84 07 	lds	r28, 0x0784	; 0x800784 <xStart>
     3fe:	d0 91 85 07 	lds	r29, 0x0785	; 0x800785 <xStart+0x1>
     402:	e4 e8       	ldi	r30, 0x84	; 132
     404:	f7 e0       	ldi	r31, 0x07	; 7
     406:	02 c0       	rjmp	.+4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     408:	fe 01       	movw	r30, r28
     40a:	ec 01       	movw	r28, r24
     40c:	8a 81       	ldd	r24, Y+2	; 0x02
     40e:	9b 81       	ldd	r25, Y+3	; 0x03
     410:	80 17       	cp	r24, r16
     412:	91 07       	cpc	r25, r17
     414:	20 f4       	brcc	.+8      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     416:	88 81       	ld	r24, Y
     418:	99 81       	ldd	r25, Y+1	; 0x01
     41a:	00 97       	sbiw	r24, 0x00	; 0
     41c:	a9 f7       	brne	.-22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     41e:	80 91 82 07 	lds	r24, 0x0782	; 0x800782 <pxEnd>
     422:	90 91 83 07 	lds	r25, 0x0783	; 0x800783 <pxEnd+0x1>
     426:	c8 17       	cp	r28, r24
     428:	d9 07       	cpc	r29, r25
     42a:	09 f4       	brne	.+2      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     42c:	4d c0       	rjmp	.+154    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
     42e:	e0 80       	ld	r14, Z
     430:	f1 80       	ldd	r15, Z+1	; 0x01
     432:	84 e0       	ldi	r24, 0x04	; 4
     434:	e8 0e       	add	r14, r24
     436:	f1 1c       	adc	r15, r1
     438:	88 81       	ld	r24, Y
     43a:	99 81       	ldd	r25, Y+1	; 0x01
     43c:	91 83       	std	Z+1, r25	; 0x01
     43e:	80 83       	st	Z, r24
     440:	2a 81       	ldd	r18, Y+2	; 0x02
     442:	3b 81       	ldd	r19, Y+3	; 0x03
     444:	20 1b       	sub	r18, r16
     446:	31 0b       	sbc	r19, r17
     448:	29 30       	cpi	r18, 0x09	; 9
     44a:	31 05       	cpc	r19, r1
     44c:	48 f0       	brcs	.+18     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     44e:	ce 01       	movw	r24, r28
     450:	80 0f       	add	r24, r16
     452:	91 1f       	adc	r25, r17
     454:	fc 01       	movw	r30, r24
     456:	33 83       	std	Z+3, r19	; 0x03
     458:	22 83       	std	Z+2, r18	; 0x02
     45a:	1b 83       	std	Y+3, r17	; 0x03
     45c:	0a 83       	std	Y+2, r16	; 0x02
     45e:	52 df       	rcall	.-348    	; 0x304 <prvInsertBlockIntoFreeList>
     460:	2a 81       	ldd	r18, Y+2	; 0x02
     462:	3b 81       	ldd	r19, Y+3	; 0x03
     464:	80 91 80 07 	lds	r24, 0x0780	; 0x800780 <xFreeBytesRemaining>
     468:	90 91 81 07 	lds	r25, 0x0781	; 0x800781 <xFreeBytesRemaining+0x1>
     46c:	82 1b       	sub	r24, r18
     46e:	93 0b       	sbc	r25, r19
     470:	90 93 81 07 	sts	0x0781, r25	; 0x800781 <xFreeBytesRemaining+0x1>
     474:	80 93 80 07 	sts	0x0780, r24	; 0x800780 <xFreeBytesRemaining>
     478:	40 91 7e 07 	lds	r20, 0x077E	; 0x80077e <xMinimumEverFreeBytesRemaining>
     47c:	50 91 7f 07 	lds	r21, 0x077F	; 0x80077f <xMinimumEverFreeBytesRemaining+0x1>
     480:	84 17       	cp	r24, r20
     482:	95 07       	cpc	r25, r21
     484:	20 f4       	brcc	.+8      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     486:	90 93 7f 07 	sts	0x077F, r25	; 0x80077f <xMinimumEverFreeBytesRemaining+0x1>
     48a:	80 93 7e 07 	sts	0x077E, r24	; 0x80077e <xMinimumEverFreeBytesRemaining>
     48e:	80 91 78 07 	lds	r24, 0x0778	; 0x800778 <__data_end>
     492:	90 91 79 07 	lds	r25, 0x0779	; 0x800779 <__data_end+0x1>
     496:	28 2b       	or	r18, r24
     498:	39 2b       	or	r19, r25
     49a:	3b 83       	std	Y+3, r19	; 0x03
     49c:	2a 83       	std	Y+2, r18	; 0x02
     49e:	19 82       	std	Y+1, r1	; 0x01
     4a0:	18 82       	st	Y, r1
     4a2:	80 91 7c 07 	lds	r24, 0x077C	; 0x80077c <xNumberOfSuccessfulAllocations>
     4a6:	90 91 7d 07 	lds	r25, 0x077D	; 0x80077d <xNumberOfSuccessfulAllocations+0x1>
     4aa:	01 96       	adiw	r24, 0x01	; 1
     4ac:	90 93 7d 07 	sts	0x077D, r25	; 0x80077d <xNumberOfSuccessfulAllocations+0x1>
     4b0:	80 93 7c 07 	sts	0x077C, r24	; 0x80077c <xNumberOfSuccessfulAllocations>
     4b4:	0b c0       	rjmp	.+22     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4b6:	e1 2c       	mov	r14, r1
     4b8:	f1 2c       	mov	r15, r1
     4ba:	08 c0       	rjmp	.+16     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4bc:	e1 2c       	mov	r14, r1
     4be:	f1 2c       	mov	r15, r1
     4c0:	05 c0       	rjmp	.+10     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4c2:	e1 2c       	mov	r14, r1
     4c4:	f1 2c       	mov	r15, r1
     4c6:	02 c0       	rjmp	.+4      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4c8:	e1 2c       	mov	r14, r1
     4ca:	f1 2c       	mov	r15, r1
     4cc:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <xTaskResumeAll>
     4d0:	e1 14       	cp	r14, r1
     4d2:	f1 04       	cpc	r15, r1
     4d4:	11 f4       	brne	.+4      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4d6:	0e 94 af 17 	call	0x2f5e	; 0x2f5e <vApplicationMallocFailedHook>
     4da:	c7 01       	movw	r24, r14
>>>>>>> Stashed changes
     4dc:	df 91       	pop	r29
     4de:	cf 91       	pop	r28
     4e0:	1f 91       	pop	r17
     4e2:	0f 91       	pop	r16
<<<<<<< Updated upstream
     4e4:	08 95       	ret

000004e6 <uxListRemove>:
     4e6:	cf 93       	push	r28
     4e8:	df 93       	push	r29
     4ea:	fc 01       	movw	r30, r24
     4ec:	a2 85       	ldd	r26, Z+10	; 0x0a
     4ee:	b3 85       	ldd	r27, Z+11	; 0x0b
     4f0:	c4 81       	ldd	r28, Z+4	; 0x04
     4f2:	d5 81       	ldd	r29, Z+5	; 0x05
     4f4:	86 81       	ldd	r24, Z+6	; 0x06
     4f6:	97 81       	ldd	r25, Z+7	; 0x07
     4f8:	9f 83       	std	Y+7, r25	; 0x07
     4fa:	8e 83       	std	Y+6, r24	; 0x06
     4fc:	c6 81       	ldd	r28, Z+6	; 0x06
     4fe:	d7 81       	ldd	r29, Z+7	; 0x07
     500:	84 81       	ldd	r24, Z+4	; 0x04
     502:	95 81       	ldd	r25, Z+5	; 0x05
     504:	9d 83       	std	Y+5, r25	; 0x05
     506:	8c 83       	std	Y+4, r24	; 0x04
     508:	11 96       	adiw	r26, 0x01	; 1
     50a:	8d 91       	ld	r24, X+
     50c:	9c 91       	ld	r25, X
     50e:	12 97       	sbiw	r26, 0x02	; 2
     510:	e8 17       	cp	r30, r24
     512:	f9 07       	cpc	r31, r25
     514:	31 f4       	brne	.+12     	; 0x522 <uxListRemove+0x3c>
     516:	86 81       	ldd	r24, Z+6	; 0x06
     518:	97 81       	ldd	r25, Z+7	; 0x07
     51a:	12 96       	adiw	r26, 0x02	; 2
     51c:	9c 93       	st	X, r25
     51e:	8e 93       	st	-X, r24
     520:	11 97       	sbiw	r26, 0x01	; 1
     522:	13 86       	std	Z+11, r1	; 0x0b
     524:	12 86       	std	Z+10, r1	; 0x0a
     526:	8c 91       	ld	r24, X
     528:	81 50       	subi	r24, 0x01	; 1
     52a:	8c 93       	st	X, r24
     52c:	8c 91       	ld	r24, X
     52e:	df 91       	pop	r29
     530:	cf 91       	pop	r28
     532:	08 95       	ret

00000534 <prvSetupTimerInterrupt>:
     534:	a8 95       	wdr
     536:	90 ec       	ldi	r25, 0xC0	; 192
     538:	88 e1       	ldi	r24, 0x18	; 24
     53a:	0f b6       	in	r0, 0x3f	; 63
     53c:	f8 94       	cli
     53e:	a8 95       	wdr
     540:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     544:	0f be       	out	0x3f, r0	; 63
     546:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     54a:	08 95       	ret

0000054c <pxPortInitialiseStack>:
     54c:	fc 01       	movw	r30, r24
     54e:	60 83       	st	Z, r22
     550:	31 97       	sbiw	r30, 0x01	; 1
     552:	70 83       	st	Z, r23
     554:	31 97       	sbiw	r30, 0x01	; 1
     556:	10 82       	st	Z, r1
     558:	31 97       	sbiw	r30, 0x01	; 1
     55a:	10 82       	st	Z, r1
     55c:	31 97       	sbiw	r30, 0x01	; 1
     55e:	20 e8       	ldi	r18, 0x80	; 128
     560:	20 83       	st	Z, r18
     562:	31 97       	sbiw	r30, 0x01	; 1
     564:	10 82       	st	Z, r1
     566:	31 97       	sbiw	r30, 0x01	; 1
     568:	10 82       	st	Z, r1
     56a:	31 97       	sbiw	r30, 0x01	; 1
     56c:	10 82       	st	Z, r1
     56e:	77 97       	sbiw	r30, 0x17	; 23
     570:	40 83       	st	Z, r20
     572:	31 97       	sbiw	r30, 0x01	; 1
     574:	50 83       	st	Z, r21
     576:	86 97       	sbiw	r24, 0x26	; 38
     578:	08 95       	ret

0000057a <xPortStartScheduler>:
     57a:	dc df       	rcall	.-72     	; 0x534 <prvSetupTimerInterrupt>
     57c:	a0 91 d3 11 	lds	r26, 0x11D3	; 0x8011d3 <pxCurrentTCB>
     580:	b0 91 d4 11 	lds	r27, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
     584:	cd 91       	ld	r28, X+
     586:	cd bf       	out	0x3d, r28	; 61
     588:	dd 91       	ld	r29, X+
     58a:	de bf       	out	0x3e, r29	; 62
     58c:	ff 91       	pop	r31
     58e:	ef 91       	pop	r30
     590:	df 91       	pop	r29
     592:	cf 91       	pop	r28
     594:	bf 91       	pop	r27
     596:	af 91       	pop	r26
     598:	9f 91       	pop	r25
     59a:	8f 91       	pop	r24
     59c:	7f 91       	pop	r23
     59e:	6f 91       	pop	r22
     5a0:	5f 91       	pop	r21
     5a2:	4f 91       	pop	r20
     5a4:	3f 91       	pop	r19
     5a6:	2f 91       	pop	r18
     5a8:	1f 91       	pop	r17
     5aa:	0f 91       	pop	r16
     5ac:	ff 90       	pop	r15
     5ae:	ef 90       	pop	r14
     5b0:	df 90       	pop	r13
     5b2:	cf 90       	pop	r12
     5b4:	bf 90       	pop	r11
     5b6:	af 90       	pop	r10
     5b8:	9f 90       	pop	r9
     5ba:	8f 90       	pop	r8
     5bc:	7f 90       	pop	r7
     5be:	6f 90       	pop	r6
     5c0:	5f 90       	pop	r5
     5c2:	4f 90       	pop	r4
     5c4:	3f 90       	pop	r3
     5c6:	2f 90       	pop	r2
     5c8:	1f 90       	pop	r1
     5ca:	0f 90       	pop	r0
     5cc:	0c be       	out	0x3c, r0	; 60
     5ce:	0f 90       	pop	r0
     5d0:	0b be       	out	0x3b, r0	; 59
     5d2:	0f 90       	pop	r0
     5d4:	0f be       	out	0x3f, r0	; 63
     5d6:	0f 90       	pop	r0
     5d8:	08 95       	ret
     5da:	81 e0       	ldi	r24, 0x01	; 1
     5dc:	08 95       	ret

000005de <vPortYield>:
     5de:	0f 92       	push	r0
     5e0:	0f b6       	in	r0, 0x3f	; 63
     5e2:	f8 94       	cli
     5e4:	0f 92       	push	r0
     5e6:	0b b6       	in	r0, 0x3b	; 59
     5e8:	0f 92       	push	r0
     5ea:	0c b6       	in	r0, 0x3c	; 60
     5ec:	0f 92       	push	r0
     5ee:	1f 92       	push	r1
     5f0:	11 24       	eor	r1, r1
     5f2:	2f 92       	push	r2
     5f4:	3f 92       	push	r3
     5f6:	4f 92       	push	r4
     5f8:	5f 92       	push	r5
     5fa:	6f 92       	push	r6
     5fc:	7f 92       	push	r7
     5fe:	8f 92       	push	r8
     600:	9f 92       	push	r9
     602:	af 92       	push	r10
     604:	bf 92       	push	r11
     606:	cf 92       	push	r12
     608:	df 92       	push	r13
     60a:	ef 92       	push	r14
     60c:	ff 92       	push	r15
     60e:	0f 93       	push	r16
     610:	1f 93       	push	r17
     612:	2f 93       	push	r18
     614:	3f 93       	push	r19
     616:	4f 93       	push	r20
     618:	5f 93       	push	r21
     61a:	6f 93       	push	r22
     61c:	7f 93       	push	r23
     61e:	8f 93       	push	r24
     620:	9f 93       	push	r25
     622:	af 93       	push	r26
     624:	bf 93       	push	r27
     626:	cf 93       	push	r28
     628:	df 93       	push	r29
     62a:	ef 93       	push	r30
     62c:	ff 93       	push	r31
     62e:	a0 91 d3 11 	lds	r26, 0x11D3	; 0x8011d3 <pxCurrentTCB>
     632:	b0 91 d4 11 	lds	r27, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
     636:	0d b6       	in	r0, 0x3d	; 61
     638:	0d 92       	st	X+, r0
     63a:	0e b6       	in	r0, 0x3e	; 62
     63c:	0d 92       	st	X+, r0
     63e:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <vTaskSwitchContext>
     642:	a0 91 d3 11 	lds	r26, 0x11D3	; 0x8011d3 <pxCurrentTCB>
     646:	b0 91 d4 11 	lds	r27, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
     64a:	cd 91       	ld	r28, X+
     64c:	cd bf       	out	0x3d, r28	; 61
     64e:	dd 91       	ld	r29, X+
     650:	de bf       	out	0x3e, r29	; 62
     652:	ff 91       	pop	r31
     654:	ef 91       	pop	r30
     656:	df 91       	pop	r29
     658:	cf 91       	pop	r28
     65a:	bf 91       	pop	r27
     65c:	af 91       	pop	r26
     65e:	9f 91       	pop	r25
     660:	8f 91       	pop	r24
     662:	7f 91       	pop	r23
     664:	6f 91       	pop	r22
     666:	5f 91       	pop	r21
     668:	4f 91       	pop	r20
     66a:	3f 91       	pop	r19
     66c:	2f 91       	pop	r18
     66e:	1f 91       	pop	r17
     670:	0f 91       	pop	r16
     672:	ff 90       	pop	r15
     674:	ef 90       	pop	r14
     676:	df 90       	pop	r13
     678:	cf 90       	pop	r12
     67a:	bf 90       	pop	r11
     67c:	af 90       	pop	r10
     67e:	9f 90       	pop	r9
     680:	8f 90       	pop	r8
     682:	7f 90       	pop	r7
     684:	6f 90       	pop	r6
     686:	5f 90       	pop	r5
     688:	4f 90       	pop	r4
     68a:	3f 90       	pop	r3
     68c:	2f 90       	pop	r2
     68e:	1f 90       	pop	r1
     690:	0f 90       	pop	r0
     692:	0c be       	out	0x3c, r0	; 60
     694:	0f 90       	pop	r0
     696:	0b be       	out	0x3b, r0	; 59
     698:	0f 90       	pop	r0
     69a:	0f be       	out	0x3f, r0	; 63
     69c:	0f 90       	pop	r0
     69e:	08 95       	ret

000006a0 <vPortYieldFromTick>:
     6a0:	0f 92       	push	r0
     6a2:	0f b6       	in	r0, 0x3f	; 63
     6a4:	f8 94       	cli
     6a6:	0f 92       	push	r0
     6a8:	0b b6       	in	r0, 0x3b	; 59
     6aa:	0f 92       	push	r0
     6ac:	0c b6       	in	r0, 0x3c	; 60
     6ae:	0f 92       	push	r0
     6b0:	1f 92       	push	r1
     6b2:	11 24       	eor	r1, r1
     6b4:	2f 92       	push	r2
     6b6:	3f 92       	push	r3
     6b8:	4f 92       	push	r4
     6ba:	5f 92       	push	r5
     6bc:	6f 92       	push	r6
     6be:	7f 92       	push	r7
     6c0:	8f 92       	push	r8
     6c2:	9f 92       	push	r9
     6c4:	af 92       	push	r10
     6c6:	bf 92       	push	r11
     6c8:	cf 92       	push	r12
     6ca:	df 92       	push	r13
     6cc:	ef 92       	push	r14
     6ce:	ff 92       	push	r15
     6d0:	0f 93       	push	r16
     6d2:	1f 93       	push	r17
     6d4:	2f 93       	push	r18
     6d6:	3f 93       	push	r19
     6d8:	4f 93       	push	r20
     6da:	5f 93       	push	r21
     6dc:	6f 93       	push	r22
     6de:	7f 93       	push	r23
     6e0:	8f 93       	push	r24
     6e2:	9f 93       	push	r25
     6e4:	af 93       	push	r26
     6e6:	bf 93       	push	r27
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
     6ec:	ef 93       	push	r30
     6ee:	ff 93       	push	r31
     6f0:	a0 91 d3 11 	lds	r26, 0x11D3	; 0x8011d3 <pxCurrentTCB>
     6f4:	b0 91 d4 11 	lds	r27, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
     6f8:	0d b6       	in	r0, 0x3d	; 61
     6fa:	0d 92       	st	X+, r0
     6fc:	0e b6       	in	r0, 0x3e	; 62
     6fe:	0d 92       	st	X+, r0
     700:	13 be       	out	0x33, r1	; 51
     702:	0e 94 44 0c 	call	0x1888	; 0x1888 <xTaskIncrementTick>
     706:	81 11       	cpse	r24, r1
     708:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <vTaskSwitchContext>
     70c:	a0 91 d3 11 	lds	r26, 0x11D3	; 0x8011d3 <pxCurrentTCB>
     710:	b0 91 d4 11 	lds	r27, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
     714:	cd 91       	ld	r28, X+
     716:	cd bf       	out	0x3d, r28	; 61
     718:	dd 91       	ld	r29, X+
     71a:	de bf       	out	0x3e, r29	; 62
     71c:	ff 91       	pop	r31
     71e:	ef 91       	pop	r30
     720:	df 91       	pop	r29
     722:	cf 91       	pop	r28
     724:	bf 91       	pop	r27
     726:	af 91       	pop	r26
     728:	9f 91       	pop	r25
     72a:	8f 91       	pop	r24
     72c:	7f 91       	pop	r23
     72e:	6f 91       	pop	r22
     730:	5f 91       	pop	r21
     732:	4f 91       	pop	r20
     734:	3f 91       	pop	r19
     736:	2f 91       	pop	r18
     738:	1f 91       	pop	r17
     73a:	0f 91       	pop	r16
     73c:	ff 90       	pop	r15
     73e:	ef 90       	pop	r14
     740:	df 90       	pop	r13
     742:	cf 90       	pop	r12
     744:	bf 90       	pop	r11
     746:	af 90       	pop	r10
     748:	9f 90       	pop	r9
     74a:	8f 90       	pop	r8
     74c:	7f 90       	pop	r7
     74e:	6f 90       	pop	r6
     750:	5f 90       	pop	r5
     752:	4f 90       	pop	r4
     754:	3f 90       	pop	r3
     756:	2f 90       	pop	r2
     758:	1f 90       	pop	r1
     75a:	0f 90       	pop	r0
     75c:	0c be       	out	0x3c, r0	; 60
     75e:	0f 90       	pop	r0
     760:	0b be       	out	0x3b, r0	; 59
     762:	0f 90       	pop	r0
     764:	0f be       	out	0x3f, r0	; 63
     766:	0f 90       	pop	r0
     768:	08 95       	ret

0000076a <__vector_12>:
     76a:	9a df       	rcall	.-204    	; 0x6a0 <vPortYieldFromTick>
     76c:	18 95       	reti

0000076e <prvIsQueueEmpty>:
     76e:	0f b6       	in	r0, 0x3f	; 63
     770:	f8 94       	cli
     772:	0f 92       	push	r0
     774:	fc 01       	movw	r30, r24
     776:	86 8d       	ldd	r24, Z+30	; 0x1e
     778:	81 11       	cpse	r24, r1
     77a:	02 c0       	rjmp	.+4      	; 0x780 <prvIsQueueEmpty+0x12>
     77c:	81 e0       	ldi	r24, 0x01	; 1
     77e:	01 c0       	rjmp	.+2      	; 0x782 <prvIsQueueEmpty+0x14>
     780:	80 e0       	ldi	r24, 0x00	; 0
     782:	0f 90       	pop	r0
     784:	0f be       	out	0x3f, r0	; 63
     786:	08 95       	ret

00000788 <prvIsQueueFull>:
     788:	0f b6       	in	r0, 0x3f	; 63
     78a:	f8 94       	cli
     78c:	0f 92       	push	r0
     78e:	fc 01       	movw	r30, r24
     790:	26 8d       	ldd	r18, Z+30	; 0x1e
     792:	87 8d       	ldd	r24, Z+31	; 0x1f
     794:	28 13       	cpse	r18, r24
     796:	02 c0       	rjmp	.+4      	; 0x79c <prvIsQueueFull+0x14>
     798:	81 e0       	ldi	r24, 0x01	; 1
     79a:	01 c0       	rjmp	.+2      	; 0x79e <prvIsQueueFull+0x16>
     79c:	80 e0       	ldi	r24, 0x00	; 0
     79e:	0f 90       	pop	r0
     7a0:	0f be       	out	0x3f, r0	; 63
     7a2:	08 95       	ret

000007a4 <prvCopyDataToQueue>:
     7a4:	0f 93       	push	r16
     7a6:	1f 93       	push	r17
     7a8:	cf 93       	push	r28
     7aa:	df 93       	push	r29
     7ac:	ec 01       	movw	r28, r24
     7ae:	04 2f       	mov	r16, r20
     7b0:	1e 8d       	ldd	r17, Y+30	; 0x1e
     7b2:	48 a1       	ldd	r20, Y+32	; 0x20
     7b4:	41 11       	cpse	r20, r1
     7b6:	0c c0       	rjmp	.+24     	; 0x7d0 <prvCopyDataToQueue+0x2c>
     7b8:	88 81       	ld	r24, Y
     7ba:	99 81       	ldd	r25, Y+1	; 0x01
     7bc:	89 2b       	or	r24, r25
     7be:	09 f0       	breq	.+2      	; 0x7c2 <prvCopyDataToQueue+0x1e>
     7c0:	42 c0       	rjmp	.+132    	; 0x846 <prvCopyDataToQueue+0xa2>
     7c2:	8c 81       	ldd	r24, Y+4	; 0x04
     7c4:	9d 81       	ldd	r25, Y+5	; 0x05
     7c6:	0e 94 dd 10 	call	0x21ba	; 0x21ba <xTaskPriorityDisinherit>
     7ca:	1d 82       	std	Y+5, r1	; 0x05
     7cc:	1c 82       	std	Y+4, r1	; 0x04
     7ce:	42 c0       	rjmp	.+132    	; 0x854 <prvCopyDataToQueue+0xb0>
     7d0:	01 11       	cpse	r16, r1
     7d2:	17 c0       	rjmp	.+46     	; 0x802 <prvCopyDataToQueue+0x5e>
     7d4:	50 e0       	ldi	r21, 0x00	; 0
     7d6:	8a 81       	ldd	r24, Y+2	; 0x02
     7d8:	9b 81       	ldd	r25, Y+3	; 0x03
     7da:	0e 94 a9 27 	call	0x4f52	; 0x4f52 <memcpy>
     7de:	28 a1       	ldd	r18, Y+32	; 0x20
     7e0:	8a 81       	ldd	r24, Y+2	; 0x02
     7e2:	9b 81       	ldd	r25, Y+3	; 0x03
     7e4:	82 0f       	add	r24, r18
     7e6:	91 1d       	adc	r25, r1
     7e8:	9b 83       	std	Y+3, r25	; 0x03
     7ea:	8a 83       	std	Y+2, r24	; 0x02
     7ec:	2c 81       	ldd	r18, Y+4	; 0x04
     7ee:	3d 81       	ldd	r19, Y+5	; 0x05
     7f0:	82 17       	cp	r24, r18
     7f2:	93 07       	cpc	r25, r19
     7f4:	50 f1       	brcs	.+84     	; 0x84a <prvCopyDataToQueue+0xa6>
     7f6:	88 81       	ld	r24, Y
     7f8:	99 81       	ldd	r25, Y+1	; 0x01
     7fa:	9b 83       	std	Y+3, r25	; 0x03
     7fc:	8a 83       	std	Y+2, r24	; 0x02
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	29 c0       	rjmp	.+82     	; 0x854 <prvCopyDataToQueue+0xb0>
     802:	50 e0       	ldi	r21, 0x00	; 0
     804:	8e 81       	ldd	r24, Y+6	; 0x06
     806:	9f 81       	ldd	r25, Y+7	; 0x07
     808:	0e 94 a9 27 	call	0x4f52	; 0x4f52 <memcpy>
     80c:	88 a1       	ldd	r24, Y+32	; 0x20
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	91 95       	neg	r25
     812:	81 95       	neg	r24
     814:	91 09       	sbc	r25, r1
     816:	2e 81       	ldd	r18, Y+6	; 0x06
     818:	3f 81       	ldd	r19, Y+7	; 0x07
     81a:	28 0f       	add	r18, r24
     81c:	39 1f       	adc	r19, r25
     81e:	3f 83       	std	Y+7, r19	; 0x07
     820:	2e 83       	std	Y+6, r18	; 0x06
     822:	48 81       	ld	r20, Y
     824:	59 81       	ldd	r21, Y+1	; 0x01
     826:	24 17       	cp	r18, r20
     828:	35 07       	cpc	r19, r21
     82a:	30 f4       	brcc	.+12     	; 0x838 <prvCopyDataToQueue+0x94>
     82c:	2c 81       	ldd	r18, Y+4	; 0x04
     82e:	3d 81       	ldd	r19, Y+5	; 0x05
     830:	82 0f       	add	r24, r18
     832:	93 1f       	adc	r25, r19
     834:	9f 83       	std	Y+7, r25	; 0x07
     836:	8e 83       	std	Y+6, r24	; 0x06
     838:	02 30       	cpi	r16, 0x02	; 2
     83a:	49 f4       	brne	.+18     	; 0x84e <prvCopyDataToQueue+0xaa>
     83c:	11 23       	and	r17, r17
     83e:	49 f0       	breq	.+18     	; 0x852 <prvCopyDataToQueue+0xae>
     840:	11 50       	subi	r17, 0x01	; 1
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	07 c0       	rjmp	.+14     	; 0x854 <prvCopyDataToQueue+0xb0>
     846:	80 e0       	ldi	r24, 0x00	; 0
     848:	05 c0       	rjmp	.+10     	; 0x854 <prvCopyDataToQueue+0xb0>
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	03 c0       	rjmp	.+6      	; 0x854 <prvCopyDataToQueue+0xb0>
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	01 c0       	rjmp	.+2      	; 0x854 <prvCopyDataToQueue+0xb0>
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	1f 5f       	subi	r17, 0xFF	; 255
     856:	1e 8f       	std	Y+30, r17	; 0x1e
     858:	df 91       	pop	r29
     85a:	cf 91       	pop	r28
     85c:	1f 91       	pop	r17
     85e:	0f 91       	pop	r16
     860:	08 95       	ret

00000862 <prvCopyDataFromQueue>:
     862:	fc 01       	movw	r30, r24
     864:	40 a1       	ldd	r20, Z+32	; 0x20
     866:	44 23       	and	r20, r20
     868:	a9 f0       	breq	.+42     	; 0x894 <prvCopyDataFromQueue+0x32>
     86a:	50 e0       	ldi	r21, 0x00	; 0
     86c:	26 81       	ldd	r18, Z+6	; 0x06
     86e:	37 81       	ldd	r19, Z+7	; 0x07
     870:	24 0f       	add	r18, r20
     872:	35 1f       	adc	r19, r21
     874:	37 83       	std	Z+7, r19	; 0x07
     876:	26 83       	std	Z+6, r18	; 0x06
     878:	84 81       	ldd	r24, Z+4	; 0x04
     87a:	95 81       	ldd	r25, Z+5	; 0x05
     87c:	28 17       	cp	r18, r24
     87e:	39 07       	cpc	r19, r25
     880:	20 f0       	brcs	.+8      	; 0x88a <prvCopyDataFromQueue+0x28>
     882:	80 81       	ld	r24, Z
     884:	91 81       	ldd	r25, Z+1	; 0x01
     886:	97 83       	std	Z+7, r25	; 0x07
     888:	86 83       	std	Z+6, r24	; 0x06
     88a:	cb 01       	movw	r24, r22
     88c:	66 81       	ldd	r22, Z+6	; 0x06
     88e:	77 81       	ldd	r23, Z+7	; 0x07
     890:	0c 94 a9 27 	jmp	0x4f52	; 0x4f52 <memcpy>
     894:	08 95       	ret

00000896 <prvUnlockQueue>:
     896:	1f 93       	push	r17
     898:	cf 93       	push	r28
     89a:	df 93       	push	r29
     89c:	ec 01       	movw	r28, r24
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	f8 94       	cli
     8a2:	0f 92       	push	r0
     8a4:	1a a1       	ldd	r17, Y+34	; 0x22
     8a6:	0b c0       	rjmp	.+22     	; 0x8be <prvUnlockQueue+0x28>
     8a8:	8b 89       	ldd	r24, Y+19	; 0x13
     8aa:	88 23       	and	r24, r24
     8ac:	51 f0       	breq	.+20     	; 0x8c2 <prvUnlockQueue+0x2c>
     8ae:	ce 01       	movw	r24, r28
     8b0:	43 96       	adiw	r24, 0x13	; 19
     8b2:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <xTaskRemoveFromEventList>
     8b6:	81 11       	cpse	r24, r1
     8b8:	0e 94 c6 10 	call	0x218c	; 0x218c <vTaskMissedYield>
     8bc:	11 50       	subi	r17, 0x01	; 1
     8be:	11 16       	cp	r1, r17
     8c0:	9c f3       	brlt	.-26     	; 0x8a8 <prvUnlockQueue+0x12>
     8c2:	8f ef       	ldi	r24, 0xFF	; 255
     8c4:	8a a3       	std	Y+34, r24	; 0x22
     8c6:	0f 90       	pop	r0
     8c8:	0f be       	out	0x3f, r0	; 63
     8ca:	0f b6       	in	r0, 0x3f	; 63
     8cc:	f8 94       	cli
     8ce:	0f 92       	push	r0
     8d0:	19 a1       	ldd	r17, Y+33	; 0x21
     8d2:	0b c0       	rjmp	.+22     	; 0x8ea <prvUnlockQueue+0x54>
     8d4:	88 85       	ldd	r24, Y+8	; 0x08
     8d6:	88 23       	and	r24, r24
     8d8:	51 f0       	breq	.+20     	; 0x8ee <prvUnlockQueue+0x58>
     8da:	ce 01       	movw	r24, r28
     8dc:	08 96       	adiw	r24, 0x08	; 8
     8de:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <xTaskRemoveFromEventList>
     8e2:	81 11       	cpse	r24, r1
     8e4:	0e 94 c6 10 	call	0x218c	; 0x218c <vTaskMissedYield>
     8e8:	11 50       	subi	r17, 0x01	; 1
     8ea:	11 16       	cp	r1, r17
     8ec:	9c f3       	brlt	.-26     	; 0x8d4 <prvUnlockQueue+0x3e>
     8ee:	8f ef       	ldi	r24, 0xFF	; 255
     8f0:	89 a3       	std	Y+33, r24	; 0x21
     8f2:	0f 90       	pop	r0
     8f4:	0f be       	out	0x3f, r0	; 63
     8f6:	df 91       	pop	r29
     8f8:	cf 91       	pop	r28
     8fa:	1f 91       	pop	r17
     8fc:	08 95       	ret

000008fe <xQueueGenericReset>:
     8fe:	cf 93       	push	r28
     900:	df 93       	push	r29
     902:	ec 01       	movw	r28, r24
     904:	0f b6       	in	r0, 0x3f	; 63
     906:	f8 94       	cli
     908:	0f 92       	push	r0
     90a:	e8 81       	ld	r30, Y
     90c:	f9 81       	ldd	r31, Y+1	; 0x01
     90e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     910:	28 a1       	ldd	r18, Y+32	; 0x20
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	30 e0       	ldi	r19, 0x00	; 0
     916:	82 9f       	mul	r24, r18
     918:	a0 01       	movw	r20, r0
     91a:	83 9f       	mul	r24, r19
     91c:	50 0d       	add	r21, r0
     91e:	92 9f       	mul	r25, r18
     920:	50 0d       	add	r21, r0
     922:	11 24       	eor	r1, r1
     924:	4e 0f       	add	r20, r30
     926:	5f 1f       	adc	r21, r31
     928:	5d 83       	std	Y+5, r21	; 0x05
     92a:	4c 83       	std	Y+4, r20	; 0x04
     92c:	1e 8e       	std	Y+30, r1	; 0x1e
     92e:	fb 83       	std	Y+3, r31	; 0x03
     930:	ea 83       	std	Y+2, r30	; 0x02
     932:	01 97       	sbiw	r24, 0x01	; 1
     934:	28 9f       	mul	r18, r24
     936:	a0 01       	movw	r20, r0
     938:	29 9f       	mul	r18, r25
     93a:	50 0d       	add	r21, r0
     93c:	38 9f       	mul	r19, r24
     93e:	50 0d       	add	r21, r0
     940:	11 24       	eor	r1, r1
     942:	cf 01       	movw	r24, r30
     944:	84 0f       	add	r24, r20
     946:	95 1f       	adc	r25, r21
     948:	9f 83       	std	Y+7, r25	; 0x07
     94a:	8e 83       	std	Y+6, r24	; 0x06
     94c:	8f ef       	ldi	r24, 0xFF	; 255
     94e:	89 a3       	std	Y+33, r24	; 0x21
     950:	8a a3       	std	Y+34, r24	; 0x22
     952:	61 11       	cpse	r22, r1
     954:	0b c0       	rjmp	.+22     	; 0x96c <xQueueGenericReset+0x6e>
     956:	88 85       	ldd	r24, Y+8	; 0x08
     958:	88 23       	and	r24, r24
     95a:	71 f0       	breq	.+28     	; 0x978 <xQueueGenericReset+0x7a>
     95c:	ce 01       	movw	r24, r28
     95e:	08 96       	adiw	r24, 0x08	; 8
     960:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <xTaskRemoveFromEventList>
     964:	88 23       	and	r24, r24
     966:	41 f0       	breq	.+16     	; 0x978 <xQueueGenericReset+0x7a>
     968:	3a de       	rcall	.-908    	; 0x5de <vPortYield>
     96a:	06 c0       	rjmp	.+12     	; 0x978 <xQueueGenericReset+0x7a>
     96c:	ce 01       	movw	r24, r28
     96e:	08 96       	adiw	r24, 0x08	; 8
     970:	68 dd       	rcall	.-1328   	; 0x442 <vListInitialise>
     972:	ce 01       	movw	r24, r28
     974:	43 96       	adiw	r24, 0x13	; 19
     976:	65 dd       	rcall	.-1334   	; 0x442 <vListInitialise>
     978:	0f 90       	pop	r0
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	81 e0       	ldi	r24, 0x01	; 1
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
=======
     4e4:	ff 90       	pop	r15
     4e6:	ef 90       	pop	r14
     4e8:	08 95       	ret

000004ea <vPortFree>:
     4ea:	0f 93       	push	r16
     4ec:	1f 93       	push	r17
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	00 97       	sbiw	r24, 0x00	; 0
     4f4:	91 f1       	breq	.+100    	; 0x55a <vPortFree+0x70>
     4f6:	ec 01       	movw	r28, r24
     4f8:	24 97       	sbiw	r28, 0x04	; 4
     4fa:	4a 81       	ldd	r20, Y+2	; 0x02
     4fc:	5b 81       	ldd	r21, Y+3	; 0x03
     4fe:	20 91 78 07 	lds	r18, 0x0778	; 0x800778 <__data_end>
     502:	30 91 79 07 	lds	r19, 0x0779	; 0x800779 <__data_end+0x1>
     506:	ba 01       	movw	r22, r20
     508:	62 23       	and	r22, r18
     50a:	73 23       	and	r23, r19
     50c:	67 2b       	or	r22, r23
     50e:	29 f1       	breq	.+74     	; 0x55a <vPortFree+0x70>
     510:	68 81       	ld	r22, Y
     512:	79 81       	ldd	r23, Y+1	; 0x01
     514:	67 2b       	or	r22, r23
     516:	09 f5       	brne	.+66     	; 0x55a <vPortFree+0x70>
     518:	20 95       	com	r18
     51a:	30 95       	com	r19
     51c:	24 23       	and	r18, r20
     51e:	35 23       	and	r19, r21
     520:	3b 83       	std	Y+3, r19	; 0x03
     522:	2a 83       	std	Y+2, r18	; 0x02
     524:	0e 94 c1 0c 	call	0x1982	; 0x1982 <vTaskSuspendAll>
     528:	8a 81       	ldd	r24, Y+2	; 0x02
     52a:	9b 81       	ldd	r25, Y+3	; 0x03
     52c:	20 91 80 07 	lds	r18, 0x0780	; 0x800780 <xFreeBytesRemaining>
     530:	30 91 81 07 	lds	r19, 0x0781	; 0x800781 <xFreeBytesRemaining+0x1>
     534:	82 0f       	add	r24, r18
     536:	93 1f       	adc	r25, r19
     538:	90 93 81 07 	sts	0x0781, r25	; 0x800781 <xFreeBytesRemaining+0x1>
     53c:	80 93 80 07 	sts	0x0780, r24	; 0x800780 <xFreeBytesRemaining>
     540:	ce 01       	movw	r24, r28
     542:	e0 de       	rcall	.-576    	; 0x304 <prvInsertBlockIntoFreeList>
     544:	80 91 7a 07 	lds	r24, 0x077A	; 0x80077a <xNumberOfSuccessfulFrees>
     548:	90 91 7b 07 	lds	r25, 0x077B	; 0x80077b <xNumberOfSuccessfulFrees+0x1>
     54c:	01 96       	adiw	r24, 0x01	; 1
     54e:	90 93 7b 07 	sts	0x077B, r25	; 0x80077b <xNumberOfSuccessfulFrees+0x1>
     552:	80 93 7a 07 	sts	0x077A, r24	; 0x80077a <xNumberOfSuccessfulFrees>
     556:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <xTaskResumeAll>
     55a:	df 91       	pop	r29
     55c:	cf 91       	pop	r28
     55e:	1f 91       	pop	r17
     560:	0f 91       	pop	r16
     562:	08 95       	ret

00000564 <vListInitialise>:
     564:	fc 01       	movw	r30, r24
     566:	03 96       	adiw	r24, 0x03	; 3
     568:	92 83       	std	Z+2, r25	; 0x02
     56a:	81 83       	std	Z+1, r24	; 0x01
     56c:	4f ef       	ldi	r20, 0xFF	; 255
     56e:	5f ef       	ldi	r21, 0xFF	; 255
     570:	ba 01       	movw	r22, r20
     572:	43 83       	std	Z+3, r20	; 0x03
     574:	54 83       	std	Z+4, r21	; 0x04
     576:	65 83       	std	Z+5, r22	; 0x05
     578:	76 83       	std	Z+6, r23	; 0x06
     57a:	90 87       	std	Z+8, r25	; 0x08
     57c:	87 83       	std	Z+7, r24	; 0x07
     57e:	92 87       	std	Z+10, r25	; 0x0a
     580:	81 87       	std	Z+9, r24	; 0x09
     582:	10 82       	st	Z, r1
     584:	08 95       	ret

00000586 <vListInitialiseItem>:
     586:	fc 01       	movw	r30, r24
     588:	13 86       	std	Z+11, r1	; 0x0b
     58a:	12 86       	std	Z+10, r1	; 0x0a
     58c:	08 95       	ret

0000058e <vListInsert>:
     58e:	0f 93       	push	r16
     590:	1f 93       	push	r17
     592:	cf 93       	push	r28
     594:	df 93       	push	r29
     596:	eb 01       	movw	r28, r22
     598:	08 81       	ld	r16, Y
     59a:	19 81       	ldd	r17, Y+1	; 0x01
     59c:	2a 81       	ldd	r18, Y+2	; 0x02
     59e:	3b 81       	ldd	r19, Y+3	; 0x03
     5a0:	0f 3f       	cpi	r16, 0xFF	; 255
     5a2:	4f ef       	ldi	r20, 0xFF	; 255
     5a4:	14 07       	cpc	r17, r20
     5a6:	24 07       	cpc	r18, r20
     5a8:	34 07       	cpc	r19, r20
     5aa:	21 f4       	brne	.+8      	; 0x5b4 <vListInsert+0x26>
     5ac:	fc 01       	movw	r30, r24
     5ae:	a1 85       	ldd	r26, Z+9	; 0x09
     5b0:	b2 85       	ldd	r27, Z+10	; 0x0a
     5b2:	11 c0       	rjmp	.+34     	; 0x5d6 <vListInsert+0x48>
     5b4:	dc 01       	movw	r26, r24
     5b6:	13 96       	adiw	r26, 0x03	; 3
     5b8:	01 c0       	rjmp	.+2      	; 0x5bc <vListInsert+0x2e>
     5ba:	df 01       	movw	r26, r30
     5bc:	14 96       	adiw	r26, 0x04	; 4
     5be:	ed 91       	ld	r30, X+
     5c0:	fc 91       	ld	r31, X
     5c2:	15 97       	sbiw	r26, 0x05	; 5
     5c4:	40 81       	ld	r20, Z
     5c6:	51 81       	ldd	r21, Z+1	; 0x01
     5c8:	62 81       	ldd	r22, Z+2	; 0x02
     5ca:	73 81       	ldd	r23, Z+3	; 0x03
     5cc:	04 17       	cp	r16, r20
     5ce:	15 07       	cpc	r17, r21
     5d0:	26 07       	cpc	r18, r22
     5d2:	37 07       	cpc	r19, r23
     5d4:	90 f7       	brcc	.-28     	; 0x5ba <vListInsert+0x2c>
     5d6:	14 96       	adiw	r26, 0x04	; 4
     5d8:	ed 91       	ld	r30, X+
     5da:	fc 91       	ld	r31, X
     5dc:	15 97       	sbiw	r26, 0x05	; 5
     5de:	fd 83       	std	Y+5, r31	; 0x05
     5e0:	ec 83       	std	Y+4, r30	; 0x04
     5e2:	d7 83       	std	Z+7, r29	; 0x07
     5e4:	c6 83       	std	Z+6, r28	; 0x06
     5e6:	bf 83       	std	Y+7, r27	; 0x07
     5e8:	ae 83       	std	Y+6, r26	; 0x06
     5ea:	15 96       	adiw	r26, 0x05	; 5
     5ec:	dc 93       	st	X, r29
     5ee:	ce 93       	st	-X, r28
     5f0:	14 97       	sbiw	r26, 0x04	; 4
     5f2:	9b 87       	std	Y+11, r25	; 0x0b
     5f4:	8a 87       	std	Y+10, r24	; 0x0a
     5f6:	fc 01       	movw	r30, r24
     5f8:	20 81       	ld	r18, Z
     5fa:	2f 5f       	subi	r18, 0xFF	; 255
     5fc:	20 83       	st	Z, r18
     5fe:	df 91       	pop	r29
     600:	cf 91       	pop	r28
     602:	1f 91       	pop	r17
     604:	0f 91       	pop	r16
     606:	08 95       	ret

00000608 <uxListRemove>:
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
     60c:	fc 01       	movw	r30, r24
     60e:	a2 85       	ldd	r26, Z+10	; 0x0a
     610:	b3 85       	ldd	r27, Z+11	; 0x0b
     612:	c4 81       	ldd	r28, Z+4	; 0x04
     614:	d5 81       	ldd	r29, Z+5	; 0x05
     616:	86 81       	ldd	r24, Z+6	; 0x06
     618:	97 81       	ldd	r25, Z+7	; 0x07
     61a:	9f 83       	std	Y+7, r25	; 0x07
     61c:	8e 83       	std	Y+6, r24	; 0x06
     61e:	c6 81       	ldd	r28, Z+6	; 0x06
     620:	d7 81       	ldd	r29, Z+7	; 0x07
     622:	84 81       	ldd	r24, Z+4	; 0x04
     624:	95 81       	ldd	r25, Z+5	; 0x05
     626:	9d 83       	std	Y+5, r25	; 0x05
     628:	8c 83       	std	Y+4, r24	; 0x04
     62a:	11 96       	adiw	r26, 0x01	; 1
     62c:	8d 91       	ld	r24, X+
     62e:	9c 91       	ld	r25, X
     630:	12 97       	sbiw	r26, 0x02	; 2
     632:	e8 17       	cp	r30, r24
     634:	f9 07       	cpc	r31, r25
     636:	31 f4       	brne	.+12     	; 0x644 <uxListRemove+0x3c>
     638:	86 81       	ldd	r24, Z+6	; 0x06
     63a:	97 81       	ldd	r25, Z+7	; 0x07
     63c:	12 96       	adiw	r26, 0x02	; 2
     63e:	9c 93       	st	X, r25
     640:	8e 93       	st	-X, r24
     642:	11 97       	sbiw	r26, 0x01	; 1
     644:	13 86       	std	Z+11, r1	; 0x0b
     646:	12 86       	std	Z+10, r1	; 0x0a
     648:	8c 91       	ld	r24, X
     64a:	81 50       	subi	r24, 0x01	; 1
     64c:	8c 93       	st	X, r24
     64e:	8c 91       	ld	r24, X
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	08 95       	ret

00000656 <prvSetupTimerInterrupt>:
     656:	a8 95       	wdr
     658:	90 ec       	ldi	r25, 0xC0	; 192
     65a:	88 e1       	ldi	r24, 0x18	; 24
     65c:	0f b6       	in	r0, 0x3f	; 63
     65e:	f8 94       	cli
     660:	a8 95       	wdr
     662:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     666:	0f be       	out	0x3f, r0	; 63
     668:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     66c:	08 95       	ret

0000066e <pxPortInitialiseStack>:
     66e:	fc 01       	movw	r30, r24
     670:	60 83       	st	Z, r22
     672:	31 97       	sbiw	r30, 0x01	; 1
     674:	70 83       	st	Z, r23
     676:	31 97       	sbiw	r30, 0x01	; 1
     678:	10 82       	st	Z, r1
     67a:	31 97       	sbiw	r30, 0x01	; 1
     67c:	10 82       	st	Z, r1
     67e:	31 97       	sbiw	r30, 0x01	; 1
     680:	20 e8       	ldi	r18, 0x80	; 128
     682:	20 83       	st	Z, r18
     684:	31 97       	sbiw	r30, 0x01	; 1
     686:	10 82       	st	Z, r1
     688:	31 97       	sbiw	r30, 0x01	; 1
     68a:	10 82       	st	Z, r1
     68c:	31 97       	sbiw	r30, 0x01	; 1
     68e:	10 82       	st	Z, r1
     690:	77 97       	sbiw	r30, 0x17	; 23
     692:	40 83       	st	Z, r20
     694:	31 97       	sbiw	r30, 0x01	; 1
     696:	50 83       	st	Z, r21
     698:	86 97       	sbiw	r24, 0x26	; 38
     69a:	08 95       	ret

0000069c <xPortStartScheduler>:
     69c:	dc df       	rcall	.-72     	; 0x656 <prvSetupTimerInterrupt>
     69e:	a0 91 0b 12 	lds	r26, 0x120B	; 0x80120b <pxCurrentTCB>
     6a2:	b0 91 0c 12 	lds	r27, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
     6a6:	cd 91       	ld	r28, X+
     6a8:	cd bf       	out	0x3d, r28	; 61
     6aa:	dd 91       	ld	r29, X+
     6ac:	de bf       	out	0x3e, r29	; 62
     6ae:	ff 91       	pop	r31
     6b0:	ef 91       	pop	r30
     6b2:	df 91       	pop	r29
     6b4:	cf 91       	pop	r28
     6b6:	bf 91       	pop	r27
     6b8:	af 91       	pop	r26
     6ba:	9f 91       	pop	r25
     6bc:	8f 91       	pop	r24
     6be:	7f 91       	pop	r23
     6c0:	6f 91       	pop	r22
     6c2:	5f 91       	pop	r21
     6c4:	4f 91       	pop	r20
     6c6:	3f 91       	pop	r19
     6c8:	2f 91       	pop	r18
     6ca:	1f 91       	pop	r17
     6cc:	0f 91       	pop	r16
     6ce:	ff 90       	pop	r15
     6d0:	ef 90       	pop	r14
     6d2:	df 90       	pop	r13
     6d4:	cf 90       	pop	r12
     6d6:	bf 90       	pop	r11
     6d8:	af 90       	pop	r10
     6da:	9f 90       	pop	r9
     6dc:	8f 90       	pop	r8
     6de:	7f 90       	pop	r7
     6e0:	6f 90       	pop	r6
     6e2:	5f 90       	pop	r5
     6e4:	4f 90       	pop	r4
     6e6:	3f 90       	pop	r3
     6e8:	2f 90       	pop	r2
     6ea:	1f 90       	pop	r1
     6ec:	0f 90       	pop	r0
     6ee:	0c be       	out	0x3c, r0	; 60
     6f0:	0f 90       	pop	r0
     6f2:	0b be       	out	0x3b, r0	; 59
     6f4:	0f 90       	pop	r0
     6f6:	0f be       	out	0x3f, r0	; 63
     6f8:	0f 90       	pop	r0
     6fa:	08 95       	ret
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	08 95       	ret

00000700 <vPortYield>:
     700:	0f 92       	push	r0
     702:	0f b6       	in	r0, 0x3f	; 63
     704:	f8 94       	cli
     706:	0f 92       	push	r0
     708:	0b b6       	in	r0, 0x3b	; 59
     70a:	0f 92       	push	r0
     70c:	0c b6       	in	r0, 0x3c	; 60
     70e:	0f 92       	push	r0
     710:	1f 92       	push	r1
     712:	11 24       	eor	r1, r1
     714:	2f 92       	push	r2
     716:	3f 92       	push	r3
     718:	4f 92       	push	r4
     71a:	5f 92       	push	r5
     71c:	6f 92       	push	r6
     71e:	7f 92       	push	r7
     720:	8f 92       	push	r8
     722:	9f 92       	push	r9
     724:	af 92       	push	r10
     726:	bf 92       	push	r11
     728:	cf 92       	push	r12
     72a:	df 92       	push	r13
     72c:	ef 92       	push	r14
     72e:	ff 92       	push	r15
     730:	0f 93       	push	r16
     732:	1f 93       	push	r17
     734:	2f 93       	push	r18
     736:	3f 93       	push	r19
     738:	4f 93       	push	r20
     73a:	5f 93       	push	r21
     73c:	6f 93       	push	r22
     73e:	7f 93       	push	r23
     740:	8f 93       	push	r24
     742:	9f 93       	push	r25
     744:	af 93       	push	r26
     746:	bf 93       	push	r27
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	ef 93       	push	r30
     74e:	ff 93       	push	r31
     750:	a0 91 0b 12 	lds	r26, 0x120B	; 0x80120b <pxCurrentTCB>
     754:	b0 91 0c 12 	lds	r27, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
     758:	0d b6       	in	r0, 0x3d	; 61
     75a:	0d 92       	st	X+, r0
     75c:	0e b6       	in	r0, 0x3e	; 62
     75e:	0d 92       	st	X+, r0
     760:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <vTaskSwitchContext>
     764:	a0 91 0b 12 	lds	r26, 0x120B	; 0x80120b <pxCurrentTCB>
     768:	b0 91 0c 12 	lds	r27, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
     76c:	cd 91       	ld	r28, X+
     76e:	cd bf       	out	0x3d, r28	; 61
     770:	dd 91       	ld	r29, X+
     772:	de bf       	out	0x3e, r29	; 62
     774:	ff 91       	pop	r31
     776:	ef 91       	pop	r30
     778:	df 91       	pop	r29
     77a:	cf 91       	pop	r28
     77c:	bf 91       	pop	r27
     77e:	af 91       	pop	r26
     780:	9f 91       	pop	r25
     782:	8f 91       	pop	r24
     784:	7f 91       	pop	r23
     786:	6f 91       	pop	r22
     788:	5f 91       	pop	r21
     78a:	4f 91       	pop	r20
     78c:	3f 91       	pop	r19
     78e:	2f 91       	pop	r18
     790:	1f 91       	pop	r17
     792:	0f 91       	pop	r16
     794:	ff 90       	pop	r15
     796:	ef 90       	pop	r14
     798:	df 90       	pop	r13
     79a:	cf 90       	pop	r12
     79c:	bf 90       	pop	r11
     79e:	af 90       	pop	r10
     7a0:	9f 90       	pop	r9
     7a2:	8f 90       	pop	r8
     7a4:	7f 90       	pop	r7
     7a6:	6f 90       	pop	r6
     7a8:	5f 90       	pop	r5
     7aa:	4f 90       	pop	r4
     7ac:	3f 90       	pop	r3
     7ae:	2f 90       	pop	r2
     7b0:	1f 90       	pop	r1
     7b2:	0f 90       	pop	r0
     7b4:	0c be       	out	0x3c, r0	; 60
     7b6:	0f 90       	pop	r0
     7b8:	0b be       	out	0x3b, r0	; 59
     7ba:	0f 90       	pop	r0
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	0f 90       	pop	r0
     7c0:	08 95       	ret

000007c2 <vPortYieldFromTick>:
     7c2:	0f 92       	push	r0
     7c4:	0f b6       	in	r0, 0x3f	; 63
     7c6:	f8 94       	cli
     7c8:	0f 92       	push	r0
     7ca:	0b b6       	in	r0, 0x3b	; 59
     7cc:	0f 92       	push	r0
     7ce:	0c b6       	in	r0, 0x3c	; 60
     7d0:	0f 92       	push	r0
     7d2:	1f 92       	push	r1
     7d4:	11 24       	eor	r1, r1
     7d6:	2f 92       	push	r2
     7d8:	3f 92       	push	r3
     7da:	4f 92       	push	r4
     7dc:	5f 92       	push	r5
     7de:	6f 92       	push	r6
     7e0:	7f 92       	push	r7
     7e2:	8f 92       	push	r8
     7e4:	9f 92       	push	r9
     7e6:	af 92       	push	r10
     7e8:	bf 92       	push	r11
     7ea:	cf 92       	push	r12
     7ec:	df 92       	push	r13
     7ee:	ef 92       	push	r14
     7f0:	ff 92       	push	r15
     7f2:	0f 93       	push	r16
     7f4:	1f 93       	push	r17
     7f6:	2f 93       	push	r18
     7f8:	3f 93       	push	r19
     7fa:	4f 93       	push	r20
     7fc:	5f 93       	push	r21
     7fe:	6f 93       	push	r22
     800:	7f 93       	push	r23
     802:	8f 93       	push	r24
     804:	9f 93       	push	r25
     806:	af 93       	push	r26
     808:	bf 93       	push	r27
     80a:	cf 93       	push	r28
     80c:	df 93       	push	r29
     80e:	ef 93       	push	r30
     810:	ff 93       	push	r31
     812:	a0 91 0b 12 	lds	r26, 0x120B	; 0x80120b <pxCurrentTCB>
     816:	b0 91 0c 12 	lds	r27, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
     81a:	0d b6       	in	r0, 0x3d	; 61
     81c:	0d 92       	st	X+, r0
     81e:	0e b6       	in	r0, 0x3e	; 62
     820:	0d 92       	st	X+, r0
     822:	13 be       	out	0x33, r1	; 51
     824:	0e 94 d5 0c 	call	0x19aa	; 0x19aa <xTaskIncrementTick>
     828:	81 11       	cpse	r24, r1
     82a:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <vTaskSwitchContext>
     82e:	a0 91 0b 12 	lds	r26, 0x120B	; 0x80120b <pxCurrentTCB>
     832:	b0 91 0c 12 	lds	r27, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
     836:	cd 91       	ld	r28, X+
     838:	cd bf       	out	0x3d, r28	; 61
     83a:	dd 91       	ld	r29, X+
     83c:	de bf       	out	0x3e, r29	; 62
     83e:	ff 91       	pop	r31
     840:	ef 91       	pop	r30
     842:	df 91       	pop	r29
     844:	cf 91       	pop	r28
     846:	bf 91       	pop	r27
     848:	af 91       	pop	r26
     84a:	9f 91       	pop	r25
     84c:	8f 91       	pop	r24
     84e:	7f 91       	pop	r23
     850:	6f 91       	pop	r22
     852:	5f 91       	pop	r21
     854:	4f 91       	pop	r20
     856:	3f 91       	pop	r19
     858:	2f 91       	pop	r18
     85a:	1f 91       	pop	r17
     85c:	0f 91       	pop	r16
     85e:	ff 90       	pop	r15
     860:	ef 90       	pop	r14
     862:	df 90       	pop	r13
     864:	cf 90       	pop	r12
     866:	bf 90       	pop	r11
     868:	af 90       	pop	r10
     86a:	9f 90       	pop	r9
     86c:	8f 90       	pop	r8
     86e:	7f 90       	pop	r7
     870:	6f 90       	pop	r6
     872:	5f 90       	pop	r5
     874:	4f 90       	pop	r4
     876:	3f 90       	pop	r3
     878:	2f 90       	pop	r2
     87a:	1f 90       	pop	r1
     87c:	0f 90       	pop	r0
     87e:	0c be       	out	0x3c, r0	; 60
     880:	0f 90       	pop	r0
     882:	0b be       	out	0x3b, r0	; 59
     884:	0f 90       	pop	r0
     886:	0f be       	out	0x3f, r0	; 63
     888:	0f 90       	pop	r0
     88a:	08 95       	ret

0000088c <__vector_12>:
     88c:	9a df       	rcall	.-204    	; 0x7c2 <vPortYieldFromTick>
     88e:	18 95       	reti

00000890 <prvIsQueueEmpty>:
     890:	0f b6       	in	r0, 0x3f	; 63
     892:	f8 94       	cli
     894:	0f 92       	push	r0
     896:	fc 01       	movw	r30, r24
     898:	86 8d       	ldd	r24, Z+30	; 0x1e
     89a:	81 11       	cpse	r24, r1
     89c:	02 c0       	rjmp	.+4      	; 0x8a2 <prvIsQueueEmpty+0x12>
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	01 c0       	rjmp	.+2      	; 0x8a4 <prvIsQueueEmpty+0x14>
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	0f 90       	pop	r0
     8a6:	0f be       	out	0x3f, r0	; 63
     8a8:	08 95       	ret

000008aa <prvIsQueueFull>:
     8aa:	0f b6       	in	r0, 0x3f	; 63
     8ac:	f8 94       	cli
     8ae:	0f 92       	push	r0
     8b0:	fc 01       	movw	r30, r24
     8b2:	26 8d       	ldd	r18, Z+30	; 0x1e
     8b4:	87 8d       	ldd	r24, Z+31	; 0x1f
     8b6:	28 13       	cpse	r18, r24
     8b8:	02 c0       	rjmp	.+4      	; 0x8be <prvIsQueueFull+0x14>
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	01 c0       	rjmp	.+2      	; 0x8c0 <prvIsQueueFull+0x16>
     8be:	80 e0       	ldi	r24, 0x00	; 0
     8c0:	0f 90       	pop	r0
     8c2:	0f be       	out	0x3f, r0	; 63
     8c4:	08 95       	ret

000008c6 <prvCopyDataToQueue>:
     8c6:	0f 93       	push	r16
     8c8:	1f 93       	push	r17
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	ec 01       	movw	r28, r24
     8d0:	04 2f       	mov	r16, r20
     8d2:	1e 8d       	ldd	r17, Y+30	; 0x1e
     8d4:	48 a1       	ldd	r20, Y+32	; 0x20
     8d6:	41 11       	cpse	r20, r1
     8d8:	0c c0       	rjmp	.+24     	; 0x8f2 <prvCopyDataToQueue+0x2c>
     8da:	88 81       	ld	r24, Y
     8dc:	99 81       	ldd	r25, Y+1	; 0x01
     8de:	89 2b       	or	r24, r25
     8e0:	09 f0       	breq	.+2      	; 0x8e4 <prvCopyDataToQueue+0x1e>
     8e2:	42 c0       	rjmp	.+132    	; 0x968 <prvCopyDataToQueue+0xa2>
     8e4:	8c 81       	ldd	r24, Y+4	; 0x04
     8e6:	9d 81       	ldd	r25, Y+5	; 0x05
     8e8:	0e 94 6e 11 	call	0x22dc	; 0x22dc <xTaskPriorityDisinherit>
     8ec:	1d 82       	std	Y+5, r1	; 0x05
     8ee:	1c 82       	std	Y+4, r1	; 0x04
     8f0:	42 c0       	rjmp	.+132    	; 0x976 <prvCopyDataToQueue+0xb0>
     8f2:	01 11       	cpse	r16, r1
     8f4:	17 c0       	rjmp	.+46     	; 0x924 <prvCopyDataToQueue+0x5e>
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	8a 81       	ldd	r24, Y+2	; 0x02
     8fa:	9b 81       	ldd	r25, Y+3	; 0x03
     8fc:	0e 94 31 2b 	call	0x5662	; 0x5662 <memcpy>
     900:	28 a1       	ldd	r18, Y+32	; 0x20
     902:	8a 81       	ldd	r24, Y+2	; 0x02
     904:	9b 81       	ldd	r25, Y+3	; 0x03
     906:	82 0f       	add	r24, r18
     908:	91 1d       	adc	r25, r1
     90a:	9b 83       	std	Y+3, r25	; 0x03
     90c:	8a 83       	std	Y+2, r24	; 0x02
     90e:	2c 81       	ldd	r18, Y+4	; 0x04
     910:	3d 81       	ldd	r19, Y+5	; 0x05
     912:	82 17       	cp	r24, r18
     914:	93 07       	cpc	r25, r19
     916:	50 f1       	brcs	.+84     	; 0x96c <prvCopyDataToQueue+0xa6>
     918:	88 81       	ld	r24, Y
     91a:	99 81       	ldd	r25, Y+1	; 0x01
     91c:	9b 83       	std	Y+3, r25	; 0x03
     91e:	8a 83       	std	Y+2, r24	; 0x02
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	29 c0       	rjmp	.+82     	; 0x976 <prvCopyDataToQueue+0xb0>
     924:	50 e0       	ldi	r21, 0x00	; 0
     926:	8e 81       	ldd	r24, Y+6	; 0x06
     928:	9f 81       	ldd	r25, Y+7	; 0x07
     92a:	0e 94 31 2b 	call	0x5662	; 0x5662 <memcpy>
     92e:	88 a1       	ldd	r24, Y+32	; 0x20
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	91 95       	neg	r25
     934:	81 95       	neg	r24
     936:	91 09       	sbc	r25, r1
     938:	2e 81       	ldd	r18, Y+6	; 0x06
     93a:	3f 81       	ldd	r19, Y+7	; 0x07
     93c:	28 0f       	add	r18, r24
     93e:	39 1f       	adc	r19, r25
     940:	3f 83       	std	Y+7, r19	; 0x07
     942:	2e 83       	std	Y+6, r18	; 0x06
     944:	48 81       	ld	r20, Y
     946:	59 81       	ldd	r21, Y+1	; 0x01
     948:	24 17       	cp	r18, r20
     94a:	35 07       	cpc	r19, r21
     94c:	30 f4       	brcc	.+12     	; 0x95a <prvCopyDataToQueue+0x94>
     94e:	2c 81       	ldd	r18, Y+4	; 0x04
     950:	3d 81       	ldd	r19, Y+5	; 0x05
     952:	82 0f       	add	r24, r18
     954:	93 1f       	adc	r25, r19
     956:	9f 83       	std	Y+7, r25	; 0x07
     958:	8e 83       	std	Y+6, r24	; 0x06
     95a:	02 30       	cpi	r16, 0x02	; 2
     95c:	49 f4       	brne	.+18     	; 0x970 <prvCopyDataToQueue+0xaa>
     95e:	11 23       	and	r17, r17
     960:	49 f0       	breq	.+18     	; 0x974 <prvCopyDataToQueue+0xae>
     962:	11 50       	subi	r17, 0x01	; 1
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	07 c0       	rjmp	.+14     	; 0x976 <prvCopyDataToQueue+0xb0>
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	05 c0       	rjmp	.+10     	; 0x976 <prvCopyDataToQueue+0xb0>
     96c:	80 e0       	ldi	r24, 0x00	; 0
     96e:	03 c0       	rjmp	.+6      	; 0x976 <prvCopyDataToQueue+0xb0>
     970:	80 e0       	ldi	r24, 0x00	; 0
     972:	01 c0       	rjmp	.+2      	; 0x976 <prvCopyDataToQueue+0xb0>
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	1f 5f       	subi	r17, 0xFF	; 255
     978:	1e 8f       	std	Y+30, r17	; 0x1e
     97a:	df 91       	pop	r29
     97c:	cf 91       	pop	r28
     97e:	1f 91       	pop	r17
     980:	0f 91       	pop	r16
>>>>>>> Stashed changes
     982:	08 95       	ret

00000984 <prvInitialiseNewQueue>:
     984:	0f 93       	push	r16
     986:	1f 93       	push	r17
     988:	f8 01       	movw	r30, r16
     98a:	61 11       	cpse	r22, r1
     98c:	03 c0       	rjmp	.+6      	; 0x994 <prvInitialiseNewQueue+0x10>
     98e:	11 83       	std	Z+1, r17	; 0x01
     990:	00 83       	st	Z, r16
     992:	02 c0       	rjmp	.+4      	; 0x998 <prvInitialiseNewQueue+0x14>
     994:	51 83       	std	Z+1, r21	; 0x01
     996:	40 83       	st	Z, r20
     998:	87 8f       	std	Z+31, r24	; 0x1f
     99a:	60 a3       	std	Z+32, r22	; 0x20
     99c:	61 e0       	ldi	r22, 0x01	; 1
     99e:	cf 01       	movw	r24, r30
     9a0:	ae df       	rcall	.-164    	; 0x8fe <xQueueGenericReset>
     9a2:	1f 91       	pop	r17
     9a4:	0f 91       	pop	r16
     9a6:	08 95       	ret

000009a8 <xQueueGenericCreate>:
     9a8:	df 92       	push	r13
     9aa:	ef 92       	push	r14
     9ac:	ff 92       	push	r15
     9ae:	0f 93       	push	r16
     9b0:	1f 93       	push	r17
     9b2:	cf 93       	push	r28
     9b4:	df 93       	push	r29
     9b6:	f8 2e       	mov	r15, r24
     9b8:	e6 2e       	mov	r14, r22
     9ba:	d4 2e       	mov	r13, r20
     9bc:	86 9f       	mul	r24, r22
     9be:	c0 01       	movw	r24, r0
     9c0:	11 24       	eor	r1, r1
     9c2:	83 96       	adiw	r24, 0x23	; 35
     9c4:	58 dc       	rcall	.-1872   	; 0x276 <pvPortMalloc>
     9c6:	ec 01       	movw	r28, r24
     9c8:	00 97       	sbiw	r24, 0x00	; 0
     9ca:	41 f0       	breq	.+16     	; 0x9dc <xQueueGenericCreate+0x34>
     9cc:	8c 01       	movw	r16, r24
     9ce:	2d 2d       	mov	r18, r13
     9d0:	ac 01       	movw	r20, r24
     9d2:	4d 5d       	subi	r20, 0xDD	; 221
     9d4:	5f 4f       	sbci	r21, 0xFF	; 255
     9d6:	6e 2d       	mov	r22, r14
     9d8:	8f 2d       	mov	r24, r15
     9da:	d4 df       	rcall	.-88     	; 0x984 <prvInitialiseNewQueue>
     9dc:	ce 01       	movw	r24, r28
     9de:	df 91       	pop	r29
     9e0:	cf 91       	pop	r28
     9e2:	1f 91       	pop	r17
     9e4:	0f 91       	pop	r16
     9e6:	ff 90       	pop	r15
     9e8:	ef 90       	pop	r14
     9ea:	df 90       	pop	r13
     9ec:	08 95       	ret

000009ee <xQueueGenericSend>:
     9ee:	cf 92       	push	r12
     9f0:	df 92       	push	r13
     9f2:	ef 92       	push	r14
     9f4:	ff 92       	push	r15
     9f6:	0f 93       	push	r16
     9f8:	1f 93       	push	r17
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
     9fe:	cd b7       	in	r28, 0x3d	; 61
     a00:	de b7       	in	r29, 0x3e	; 62
     a02:	29 97       	sbiw	r28, 0x09	; 9
     a04:	0f b6       	in	r0, 0x3f	; 63
     a06:	f8 94       	cli
     a08:	de bf       	out	0x3e, r29	; 62
     a0a:	0f be       	out	0x3f, r0	; 63
     a0c:	cd bf       	out	0x3d, r28	; 61
     a0e:	7c 01       	movw	r14, r24
     a10:	6b 01       	movw	r12, r22
     a12:	2e 83       	std	Y+6, r18	; 0x06
     a14:	3f 83       	std	Y+7, r19	; 0x07
     a16:	48 87       	std	Y+8, r20	; 0x08
     a18:	59 87       	std	Y+9, r21	; 0x09
     a1a:	10 e0       	ldi	r17, 0x00	; 0
     a1c:	0f b6       	in	r0, 0x3f	; 63
     a1e:	f8 94       	cli
     a20:	0f 92       	push	r0
     a22:	f7 01       	movw	r30, r14
     a24:	96 8d       	ldd	r25, Z+30	; 0x1e
     a26:	87 8d       	ldd	r24, Z+31	; 0x1f
     a28:	98 17       	cp	r25, r24
     a2a:	10 f0       	brcs	.+4      	; 0xa30 <xQueueGenericSend+0x42>
     a2c:	02 30       	cpi	r16, 0x02	; 2
     a2e:	b1 f4       	brne	.+44     	; 0xa5c <xQueueGenericSend+0x6e>
     a30:	40 2f       	mov	r20, r16
     a32:	b6 01       	movw	r22, r12
     a34:	c7 01       	movw	r24, r14
     a36:	b6 de       	rcall	.-660    	; 0x7a4 <prvCopyDataToQueue>
     a38:	f7 01       	movw	r30, r14
     a3a:	93 89       	ldd	r25, Z+19	; 0x13
     a3c:	99 23       	and	r25, r25
     a3e:	41 f0       	breq	.+16     	; 0xa50 <xQueueGenericSend+0x62>
     a40:	c7 01       	movw	r24, r14
     a42:	43 96       	adiw	r24, 0x13	; 19
     a44:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <xTaskRemoveFromEventList>
     a48:	88 23       	and	r24, r24
     a4a:	21 f0       	breq	.+8      	; 0xa54 <xQueueGenericSend+0x66>
     a4c:	c8 dd       	rcall	.-1136   	; 0x5de <vPortYield>
     a4e:	02 c0       	rjmp	.+4      	; 0xa54 <xQueueGenericSend+0x66>
     a50:	81 11       	cpse	r24, r1
     a52:	c5 dd       	rcall	.-1142   	; 0x5de <vPortYield>
     a54:	0f 90       	pop	r0
     a56:	0f be       	out	0x3f, r0	; 63
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	4a c0       	rjmp	.+148    	; 0xaf0 <xQueueGenericSend+0x102>
     a5c:	8e 81       	ldd	r24, Y+6	; 0x06
     a5e:	9f 81       	ldd	r25, Y+7	; 0x07
     a60:	a8 85       	ldd	r26, Y+8	; 0x08
     a62:	b9 85       	ldd	r27, Y+9	; 0x09
     a64:	89 2b       	or	r24, r25
     a66:	8a 2b       	or	r24, r26
     a68:	8b 2b       	or	r24, r27
     a6a:	21 f4       	brne	.+8      	; 0xa74 <xQueueGenericSend+0x86>
     a6c:	0f 90       	pop	r0
     a6e:	0f be       	out	0x3f, r0	; 63
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	3e c0       	rjmp	.+124    	; 0xaf0 <xQueueGenericSend+0x102>
     a74:	11 11       	cpse	r17, r1
     a76:	05 c0       	rjmp	.+10     	; 0xa82 <xQueueGenericSend+0x94>
     a78:	ce 01       	movw	r24, r28
     a7a:	01 96       	adiw	r24, 0x01	; 1
     a7c:	0e 94 4f 10 	call	0x209e	; 0x209e <vTaskInternalSetTimeOutState>
     a80:	11 e0       	ldi	r17, 0x01	; 1
     a82:	0f 90       	pop	r0
     a84:	0f be       	out	0x3f, r0	; 63
     a86:	ec d6       	rcall	.+3544   	; 0x1860 <vTaskSuspendAll>
     a88:	0f b6       	in	r0, 0x3f	; 63
     a8a:	f8 94       	cli
     a8c:	0f 92       	push	r0
     a8e:	f7 01       	movw	r30, r14
     a90:	81 a1       	ldd	r24, Z+33	; 0x21
     a92:	8f 3f       	cpi	r24, 0xFF	; 255
     a94:	09 f4       	brne	.+2      	; 0xa98 <xQueueGenericSend+0xaa>
     a96:	11 a2       	std	Z+33, r1	; 0x21
     a98:	f7 01       	movw	r30, r14
     a9a:	82 a1       	ldd	r24, Z+34	; 0x22
     a9c:	8f 3f       	cpi	r24, 0xFF	; 255
     a9e:	09 f4       	brne	.+2      	; 0xaa2 <xQueueGenericSend+0xb4>
     aa0:	12 a2       	std	Z+34, r1	; 0x22
     aa2:	0f 90       	pop	r0
     aa4:	0f be       	out	0x3f, r0	; 63
     aa6:	be 01       	movw	r22, r28
     aa8:	6a 5f       	subi	r22, 0xFA	; 250
     aaa:	7f 4f       	sbci	r23, 0xFF	; 255
     aac:	ce 01       	movw	r24, r28
     aae:	01 96       	adiw	r24, 0x01	; 1
     ab0:	0e 94 60 10 	call	0x20c0	; 0x20c0 <xTaskCheckForTimeOut>
     ab4:	81 11       	cpse	r24, r1
     ab6:	18 c0       	rjmp	.+48     	; 0xae8 <xQueueGenericSend+0xfa>
     ab8:	c7 01       	movw	r24, r14
     aba:	66 de       	rcall	.-820    	; 0x788 <prvIsQueueFull>
     abc:	88 23       	and	r24, r24
     abe:	81 f0       	breq	.+32     	; 0xae0 <xQueueGenericSend+0xf2>
     ac0:	4e 81       	ldd	r20, Y+6	; 0x06
     ac2:	5f 81       	ldd	r21, Y+7	; 0x07
     ac4:	68 85       	ldd	r22, Y+8	; 0x08
     ac6:	79 85       	ldd	r23, Y+9	; 0x09
     ac8:	c7 01       	movw	r24, r14
     aca:	08 96       	adiw	r24, 0x08	; 8
     acc:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <vTaskPlaceOnEventList>
     ad0:	c7 01       	movw	r24, r14
     ad2:	e1 de       	rcall	.-574    	; 0x896 <prvUnlockQueue>
     ad4:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <xTaskResumeAll>
     ad8:	81 11       	cpse	r24, r1
     ada:	a0 cf       	rjmp	.-192    	; 0xa1c <xQueueGenericSend+0x2e>
     adc:	80 dd       	rcall	.-1280   	; 0x5de <vPortYield>
     ade:	9e cf       	rjmp	.-196    	; 0xa1c <xQueueGenericSend+0x2e>
     ae0:	c7 01       	movw	r24, r14
     ae2:	d9 de       	rcall	.-590    	; 0x896 <prvUnlockQueue>
     ae4:	fd d7       	rcall	.+4090   	; 0x1ae0 <xTaskResumeAll>
     ae6:	9a cf       	rjmp	.-204    	; 0xa1c <xQueueGenericSend+0x2e>
     ae8:	c7 01       	movw	r24, r14
     aea:	d5 de       	rcall	.-598    	; 0x896 <prvUnlockQueue>
     aec:	f9 d7       	rcall	.+4082   	; 0x1ae0 <xTaskResumeAll>
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	29 96       	adiw	r28, 0x09	; 9
     af2:	0f b6       	in	r0, 0x3f	; 63
     af4:	f8 94       	cli
     af6:	de bf       	out	0x3e, r29	; 62
     af8:	0f be       	out	0x3f, r0	; 63
     afa:	cd bf       	out	0x3d, r28	; 61
     afc:	df 91       	pop	r29
     afe:	cf 91       	pop	r28
     b00:	1f 91       	pop	r17
     b02:	0f 91       	pop	r16
     b04:	ff 90       	pop	r15
     b06:	ef 90       	pop	r14
     b08:	df 90       	pop	r13
     b0a:	cf 90       	pop	r12
     b0c:	08 95       	ret

00000b0e <xQueueGenericSendFromISR>:
     b0e:	ef 92       	push	r14
     b10:	ff 92       	push	r15
     b12:	0f 93       	push	r16
     b14:	1f 93       	push	r17
     b16:	cf 93       	push	r28
     b18:	df 93       	push	r29
     b1a:	8a 01       	movw	r16, r20
     b1c:	fc 01       	movw	r30, r24
     b1e:	56 8d       	ldd	r21, Z+30	; 0x1e
     b20:	37 8d       	ldd	r19, Z+31	; 0x1f
     b22:	53 17       	cp	r21, r19
     b24:	10 f0       	brcs	.+4      	; 0xb2a <xQueueGenericSendFromISR+0x1c>
     b26:	22 30       	cpi	r18, 0x02	; 2
     b28:	f9 f4       	brne	.+62     	; 0xb68 <xQueueGenericSendFromISR+0x5a>
     b2a:	42 2f       	mov	r20, r18
     b2c:	78 01       	movw	r14, r16
     b2e:	ec 01       	movw	r28, r24
     b30:	1a a1       	ldd	r17, Y+34	; 0x22
     b32:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b34:	ce 01       	movw	r24, r28
     b36:	36 de       	rcall	.-916    	; 0x7a4 <prvCopyDataToQueue>
     b38:	1f 3f       	cpi	r17, 0xFF	; 255
     b3a:	81 f4       	brne	.+32     	; 0xb5c <xQueueGenericSendFromISR+0x4e>
     b3c:	8b 89       	ldd	r24, Y+19	; 0x13
     b3e:	88 23       	and	r24, r24
     b40:	a9 f0       	breq	.+42     	; 0xb6c <xQueueGenericSendFromISR+0x5e>
     b42:	ce 01       	movw	r24, r28
     b44:	43 96       	adiw	r24, 0x13	; 19
     b46:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <xTaskRemoveFromEventList>
     b4a:	88 23       	and	r24, r24
     b4c:	89 f0       	breq	.+34     	; 0xb70 <xQueueGenericSendFromISR+0x62>
     b4e:	e1 14       	cp	r14, r1
     b50:	f1 04       	cpc	r15, r1
     b52:	81 f0       	breq	.+32     	; 0xb74 <xQueueGenericSendFromISR+0x66>
     b54:	81 e0       	ldi	r24, 0x01	; 1
     b56:	f7 01       	movw	r30, r14
     b58:	80 83       	st	Z, r24
     b5a:	0d c0       	rjmp	.+26     	; 0xb76 <xQueueGenericSendFromISR+0x68>
     b5c:	ff 24       	eor	r15, r15
     b5e:	f3 94       	inc	r15
     b60:	f1 0e       	add	r15, r17
     b62:	fa a2       	std	Y+34, r15	; 0x22
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	07 c0       	rjmp	.+14     	; 0xb76 <xQueueGenericSendFromISR+0x68>
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	05 c0       	rjmp	.+10     	; 0xb76 <xQueueGenericSendFromISR+0x68>
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	03 c0       	rjmp	.+6      	; 0xb76 <xQueueGenericSendFromISR+0x68>
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	01 c0       	rjmp	.+2      	; 0xb76 <xQueueGenericSendFromISR+0x68>
     b74:	81 e0       	ldi	r24, 0x01	; 1
     b76:	df 91       	pop	r29
     b78:	cf 91       	pop	r28
     b7a:	1f 91       	pop	r17
     b7c:	0f 91       	pop	r16
     b7e:	ff 90       	pop	r15
     b80:	ef 90       	pop	r14
     b82:	08 95       	ret

00000b84 <xQueueReceive>:
     b84:	cf 92       	push	r12
     b86:	df 92       	push	r13
     b88:	ef 92       	push	r14
     b8a:	ff 92       	push	r15
     b8c:	0f 93       	push	r16
     b8e:	1f 93       	push	r17
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
     b98:	29 97       	sbiw	r28, 0x09	; 9
     b9a:	0f b6       	in	r0, 0x3f	; 63
     b9c:	f8 94       	cli
     b9e:	de bf       	out	0x3e, r29	; 62
     ba0:	0f be       	out	0x3f, r0	; 63
     ba2:	cd bf       	out	0x3d, r28	; 61
     ba4:	8c 01       	movw	r16, r24
     ba6:	6b 01       	movw	r12, r22
     ba8:	2e 83       	std	Y+6, r18	; 0x06
     baa:	3f 83       	std	Y+7, r19	; 0x07
     bac:	48 87       	std	Y+8, r20	; 0x08
     bae:	59 87       	std	Y+9, r21	; 0x09
     bb0:	e1 2c       	mov	r14, r1
     bb2:	0f b6       	in	r0, 0x3f	; 63
     bb4:	f8 94       	cli
     bb6:	0f 92       	push	r0
     bb8:	f8 01       	movw	r30, r16
     bba:	f6 8c       	ldd	r15, Z+30	; 0x1e
     bbc:	ff 20       	and	r15, r15
     bbe:	99 f0       	breq	.+38     	; 0xbe6 <xQueueReceive+0x62>
     bc0:	b6 01       	movw	r22, r12
     bc2:	c8 01       	movw	r24, r16
     bc4:	4e de       	rcall	.-868    	; 0x862 <prvCopyDataFromQueue>
     bc6:	fa 94       	dec	r15
     bc8:	f8 01       	movw	r30, r16
     bca:	f6 8e       	std	Z+30, r15	; 0x1e
     bcc:	80 85       	ldd	r24, Z+8	; 0x08
     bce:	88 23       	and	r24, r24
     bd0:	31 f0       	breq	.+12     	; 0xbde <xQueueReceive+0x5a>
     bd2:	c8 01       	movw	r24, r16
     bd4:	08 96       	adiw	r24, 0x08	; 8
     bd6:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <xTaskRemoveFromEventList>
     bda:	81 11       	cpse	r24, r1
     bdc:	00 dd       	rcall	.-1536   	; 0x5de <vPortYield>
     bde:	0f 90       	pop	r0
     be0:	0f be       	out	0x3f, r0	; 63
     be2:	81 e0       	ldi	r24, 0x01	; 1
     be4:	4f c0       	rjmp	.+158    	; 0xc84 <xQueueReceive+0x100>
     be6:	8e 81       	ldd	r24, Y+6	; 0x06
     be8:	9f 81       	ldd	r25, Y+7	; 0x07
     bea:	a8 85       	ldd	r26, Y+8	; 0x08
     bec:	b9 85       	ldd	r27, Y+9	; 0x09
     bee:	89 2b       	or	r24, r25
     bf0:	8a 2b       	or	r24, r26
     bf2:	8b 2b       	or	r24, r27
     bf4:	21 f4       	brne	.+8      	; 0xbfe <xQueueReceive+0x7a>
     bf6:	0f 90       	pop	r0
     bf8:	0f be       	out	0x3f, r0	; 63
     bfa:	80 e0       	ldi	r24, 0x00	; 0
     bfc:	43 c0       	rjmp	.+134    	; 0xc84 <xQueueReceive+0x100>
     bfe:	e1 10       	cpse	r14, r1
     c00:	06 c0       	rjmp	.+12     	; 0xc0e <xQueueReceive+0x8a>
     c02:	ce 01       	movw	r24, r28
     c04:	01 96       	adiw	r24, 0x01	; 1
     c06:	0e 94 4f 10 	call	0x209e	; 0x209e <vTaskInternalSetTimeOutState>
     c0a:	ee 24       	eor	r14, r14
     c0c:	e3 94       	inc	r14
     c0e:	0f 90       	pop	r0
     c10:	0f be       	out	0x3f, r0	; 63
     c12:	26 d6       	rcall	.+3148   	; 0x1860 <vTaskSuspendAll>
     c14:	0f b6       	in	r0, 0x3f	; 63
     c16:	f8 94       	cli
<<<<<<< Updated upstream
     c18:	0f 92       	push	r0
     c1a:	f8 01       	movw	r30, r16
     c1c:	81 a1       	ldd	r24, Z+33	; 0x21
     c1e:	8f 3f       	cpi	r24, 0xFF	; 255
     c20:	09 f4       	brne	.+2      	; 0xc24 <xQueueReceive+0xa0>
     c22:	11 a2       	std	Z+33, r1	; 0x21
     c24:	f8 01       	movw	r30, r16
     c26:	82 a1       	ldd	r24, Z+34	; 0x22
     c28:	8f 3f       	cpi	r24, 0xFF	; 255
     c2a:	09 f4       	brne	.+2      	; 0xc2e <xQueueReceive+0xaa>
     c2c:	12 a2       	std	Z+34, r1	; 0x22
     c2e:	0f 90       	pop	r0
     c30:	0f be       	out	0x3f, r0	; 63
     c32:	be 01       	movw	r22, r28
     c34:	6a 5f       	subi	r22, 0xFA	; 250
     c36:	7f 4f       	sbci	r23, 0xFF	; 255
     c38:	ce 01       	movw	r24, r28
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	0e 94 60 10 	call	0x20c0	; 0x20c0 <xTaskCheckForTimeOut>
     c40:	81 11       	cpse	r24, r1
     c42:	17 c0       	rjmp	.+46     	; 0xc72 <xQueueReceive+0xee>
     c44:	c8 01       	movw	r24, r16
     c46:	93 dd       	rcall	.-1242   	; 0x76e <prvIsQueueEmpty>
     c48:	88 23       	and	r24, r24
     c4a:	79 f0       	breq	.+30     	; 0xc6a <xQueueReceive+0xe6>
     c4c:	4e 81       	ldd	r20, Y+6	; 0x06
     c4e:	5f 81       	ldd	r21, Y+7	; 0x07
     c50:	68 85       	ldd	r22, Y+8	; 0x08
     c52:	79 85       	ldd	r23, Y+9	; 0x09
     c54:	c8 01       	movw	r24, r16
     c56:	43 96       	adiw	r24, 0x13	; 19
     c58:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <vTaskPlaceOnEventList>
     c5c:	c8 01       	movw	r24, r16
     c5e:	1b de       	rcall	.-970    	; 0x896 <prvUnlockQueue>
     c60:	3f d7       	rcall	.+3710   	; 0x1ae0 <xTaskResumeAll>
     c62:	81 11       	cpse	r24, r1
     c64:	a6 cf       	rjmp	.-180    	; 0xbb2 <xQueueReceive+0x2e>
     c66:	bb dc       	rcall	.-1674   	; 0x5de <vPortYield>
     c68:	a4 cf       	rjmp	.-184    	; 0xbb2 <xQueueReceive+0x2e>
     c6a:	c8 01       	movw	r24, r16
     c6c:	14 de       	rcall	.-984    	; 0x896 <prvUnlockQueue>
     c6e:	38 d7       	rcall	.+3696   	; 0x1ae0 <xTaskResumeAll>
     c70:	a0 cf       	rjmp	.-192    	; 0xbb2 <xQueueReceive+0x2e>
     c72:	c8 01       	movw	r24, r16
     c74:	10 de       	rcall	.-992    	; 0x896 <prvUnlockQueue>
     c76:	34 d7       	rcall	.+3688   	; 0x1ae0 <xTaskResumeAll>
     c78:	c8 01       	movw	r24, r16
     c7a:	79 dd       	rcall	.-1294   	; 0x76e <prvIsQueueEmpty>
     c7c:	88 23       	and	r24, r24
     c7e:	09 f4       	brne	.+2      	; 0xc82 <xQueueReceive+0xfe>
     c80:	98 cf       	rjmp	.-208    	; 0xbb2 <xQueueReceive+0x2e>
     c82:	80 e0       	ldi	r24, 0x00	; 0
     c84:	29 96       	adiw	r28, 0x09	; 9
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	f8 94       	cli
     c8a:	de bf       	out	0x3e, r29	; 62
     c8c:	0f be       	out	0x3f, r0	; 63
     c8e:	cd bf       	out	0x3d, r28	; 61
     c90:	df 91       	pop	r29
     c92:	cf 91       	pop	r28
     c94:	1f 91       	pop	r17
     c96:	0f 91       	pop	r16
     c98:	ff 90       	pop	r15
     c9a:	ef 90       	pop	r14
     c9c:	df 90       	pop	r13
     c9e:	cf 90       	pop	r12
     ca0:	08 95       	ret

00000ca2 <vQueueWaitForMessageRestricted>:
     ca2:	cf 93       	push	r28
     ca4:	df 93       	push	r29
     ca6:	ec 01       	movw	r28, r24
     ca8:	0f b6       	in	r0, 0x3f	; 63
     caa:	f8 94       	cli
     cac:	0f 92       	push	r0
     cae:	89 a1       	ldd	r24, Y+33	; 0x21
     cb0:	8f 3f       	cpi	r24, 0xFF	; 255
     cb2:	09 f4       	brne	.+2      	; 0xcb6 <vQueueWaitForMessageRestricted+0x14>
     cb4:	19 a2       	std	Y+33, r1	; 0x21
     cb6:	8a a1       	ldd	r24, Y+34	; 0x22
     cb8:	8f 3f       	cpi	r24, 0xFF	; 255
     cba:	09 f4       	brne	.+2      	; 0xcbe <vQueueWaitForMessageRestricted+0x1c>
     cbc:	1a a2       	std	Y+34, r1	; 0x22
     cbe:	0f 90       	pop	r0
     cc0:	0f be       	out	0x3f, r0	; 63
     cc2:	8e 8d       	ldd	r24, Y+30	; 0x1e
     cc4:	81 11       	cpse	r24, r1
     cc6:	04 c0       	rjmp	.+8      	; 0xcd0 <vQueueWaitForMessageRestricted+0x2e>
     cc8:	ce 01       	movw	r24, r28
     cca:	43 96       	adiw	r24, 0x13	; 19
     ccc:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <vTaskPlaceOnEventListRestricted>
     cd0:	ce 01       	movw	r24, r28
     cd2:	e1 dd       	rcall	.-1086   	; 0x896 <prvUnlockQueue>
     cd4:	df 91       	pop	r29
     cd6:	cf 91       	pop	r28
     cd8:	08 95       	ret

00000cda <prvBytesInBuffer>:
     cda:	fc 01       	movw	r30, r24
     cdc:	44 81       	ldd	r20, Z+4	; 0x04
     cde:	55 81       	ldd	r21, Z+5	; 0x05
     ce0:	22 81       	ldd	r18, Z+2	; 0x02
     ce2:	33 81       	ldd	r19, Z+3	; 0x03
     ce4:	24 0f       	add	r18, r20
     ce6:	35 1f       	adc	r19, r21
     ce8:	80 81       	ld	r24, Z
     cea:	91 81       	ldd	r25, Z+1	; 0x01
     cec:	b9 01       	movw	r22, r18
     cee:	68 1b       	sub	r22, r24
     cf0:	79 0b       	sbc	r23, r25
     cf2:	cb 01       	movw	r24, r22
     cf4:	64 17       	cp	r22, r20
     cf6:	75 07       	cpc	r23, r21
     cf8:	10 f0       	brcs	.+4      	; 0xcfe <prvBytesInBuffer+0x24>
     cfa:	84 1b       	sub	r24, r20
     cfc:	95 0b       	sbc	r25, r21
     cfe:	08 95       	ret

00000d00 <prvInitialiseNewStreamBuffer>:
     d00:	0f 93       	push	r16
     d02:	fc 01       	movw	r30, r24
     d04:	8f e0       	ldi	r24, 0x0F	; 15
     d06:	df 01       	movw	r26, r30
     d08:	1d 92       	st	X+, r1
     d0a:	8a 95       	dec	r24
     d0c:	e9 f7       	brne	.-6      	; 0xd08 <prvInitialiseNewStreamBuffer+0x8>
     d0e:	75 87       	std	Z+13, r23	; 0x0d
     d10:	64 87       	std	Z+12, r22	; 0x0c
     d12:	55 83       	std	Z+5, r21	; 0x05
     d14:	44 83       	std	Z+4, r20	; 0x04
     d16:	37 83       	std	Z+7, r19	; 0x07
     d18:	26 83       	std	Z+6, r18	; 0x06
     d1a:	06 87       	std	Z+14, r16	; 0x0e
     d1c:	0f 91       	pop	r16
     d1e:	08 95       	ret

00000d20 <prvWriteBytesToBuffer>:
     d20:	af 92       	push	r10
     d22:	bf 92       	push	r11
     d24:	cf 92       	push	r12
     d26:	df 92       	push	r13
     d28:	ef 92       	push	r14
     d2a:	ff 92       	push	r15
     d2c:	0f 93       	push	r16
     d2e:	1f 93       	push	r17
     d30:	cf 93       	push	r28
     d32:	df 93       	push	r29
     d34:	6c 01       	movw	r12, r24
     d36:	5b 01       	movw	r10, r22
     d38:	7a 01       	movw	r14, r20
     d3a:	fc 01       	movw	r30, r24
     d3c:	c2 81       	ldd	r28, Z+2	; 0x02
     d3e:	d3 81       	ldd	r29, Z+3	; 0x03
     d40:	04 81       	ldd	r16, Z+4	; 0x04
     d42:	15 81       	ldd	r17, Z+5	; 0x05
     d44:	0c 1b       	sub	r16, r28
     d46:	1d 0b       	sbc	r17, r29
     d48:	40 17       	cp	r20, r16
     d4a:	51 07       	cpc	r21, r17
     d4c:	08 f4       	brcc	.+2      	; 0xd50 <prvWriteBytesToBuffer+0x30>
     d4e:	8a 01       	movw	r16, r20
     d50:	f6 01       	movw	r30, r12
     d52:	84 85       	ldd	r24, Z+12	; 0x0c
     d54:	95 85       	ldd	r25, Z+13	; 0x0d
     d56:	a8 01       	movw	r20, r16
     d58:	b5 01       	movw	r22, r10
     d5a:	8c 0f       	add	r24, r28
     d5c:	9d 1f       	adc	r25, r29
     d5e:	0e 94 a9 27 	call	0x4f52	; 0x4f52 <memcpy>
     d62:	0e 15       	cp	r16, r14
     d64:	1f 05       	cpc	r17, r15
     d66:	58 f4       	brcc	.+22     	; 0xd7e <prvWriteBytesToBuffer+0x5e>
     d68:	a7 01       	movw	r20, r14
     d6a:	40 1b       	sub	r20, r16
     d6c:	51 0b       	sbc	r21, r17
     d6e:	b5 01       	movw	r22, r10
     d70:	60 0f       	add	r22, r16
     d72:	71 1f       	adc	r23, r17
     d74:	f6 01       	movw	r30, r12
     d76:	84 85       	ldd	r24, Z+12	; 0x0c
     d78:	95 85       	ldd	r25, Z+13	; 0x0d
     d7a:	0e 94 a9 27 	call	0x4f52	; 0x4f52 <memcpy>
     d7e:	ce 01       	movw	r24, r28
     d80:	8e 0d       	add	r24, r14
     d82:	9f 1d       	adc	r25, r15
     d84:	f6 01       	movw	r30, r12
     d86:	24 81       	ldd	r18, Z+4	; 0x04
     d88:	35 81       	ldd	r19, Z+5	; 0x05
     d8a:	82 17       	cp	r24, r18
     d8c:	93 07       	cpc	r25, r19
     d8e:	10 f0       	brcs	.+4      	; 0xd94 <prvWriteBytesToBuffer+0x74>
     d90:	82 1b       	sub	r24, r18
     d92:	93 0b       	sbc	r25, r19
     d94:	f6 01       	movw	r30, r12
     d96:	93 83       	std	Z+3, r25	; 0x03
     d98:	82 83       	std	Z+2, r24	; 0x02
     d9a:	c7 01       	movw	r24, r14
     d9c:	df 91       	pop	r29
     d9e:	cf 91       	pop	r28
     da0:	1f 91       	pop	r17
     da2:	0f 91       	pop	r16
     da4:	ff 90       	pop	r15
     da6:	ef 90       	pop	r14
     da8:	df 90       	pop	r13
     daa:	cf 90       	pop	r12
     dac:	bf 90       	pop	r11
     dae:	af 90       	pop	r10
     db0:	08 95       	ret

00000db2 <prvWriteMessageToBuffer>:
     db2:	cf 92       	push	r12
     db4:	df 92       	push	r13
     db6:	ef 92       	push	r14
     db8:	ff 92       	push	r15
     dba:	0f 93       	push	r16
     dbc:	1f 93       	push	r17
     dbe:	cf 93       	push	r28
     dc0:	df 93       	push	r29
     dc2:	1f 92       	push	r1
     dc4:	1f 92       	push	r1
     dc6:	cd b7       	in	r28, 0x3d	; 61
     dc8:	de b7       	in	r29, 0x3e	; 62
     dca:	7c 01       	movw	r14, r24
     dcc:	6b 01       	movw	r12, r22
     dce:	5a 83       	std	Y+2, r21	; 0x02
     dd0:	49 83       	std	Y+1, r20	; 0x01
     dd2:	21 15       	cp	r18, r1
     dd4:	31 05       	cpc	r19, r1
     dd6:	c1 f0       	breq	.+48     	; 0xe08 <prvWriteMessageToBuffer+0x56>
     dd8:	fc 01       	movw	r30, r24
     dda:	86 85       	ldd	r24, Z+14	; 0x0e
     ddc:	80 fd       	sbrc	r24, 0
     dde:	08 c0       	rjmp	.+16     	; 0xdf0 <prvWriteMessageToBuffer+0x3e>
     de0:	42 17       	cp	r20, r18
     de2:	53 07       	cpc	r21, r19
     de4:	08 f4       	brcc	.+2      	; 0xde8 <prvWriteMessageToBuffer+0x36>
     de6:	9a 01       	movw	r18, r20
     de8:	3a 83       	std	Y+2, r19	; 0x02
     dea:	29 83       	std	Y+1, r18	; 0x01
     dec:	81 e0       	ldi	r24, 0x01	; 1
     dee:	0f c0       	rjmp	.+30     	; 0xe0e <prvWriteMessageToBuffer+0x5c>
     df0:	20 17       	cp	r18, r16
     df2:	31 07       	cpc	r19, r17
     df4:	58 f0       	brcs	.+22     	; 0xe0c <prvWriteMessageToBuffer+0x5a>
     df6:	42 e0       	ldi	r20, 0x02	; 2
     df8:	50 e0       	ldi	r21, 0x00	; 0
     dfa:	be 01       	movw	r22, r28
     dfc:	6f 5f       	subi	r22, 0xFF	; 255
     dfe:	7f 4f       	sbci	r23, 0xFF	; 255
     e00:	c7 01       	movw	r24, r14
     e02:	8e df       	rcall	.-228    	; 0xd20 <prvWriteBytesToBuffer>
     e04:	81 e0       	ldi	r24, 0x01	; 1
     e06:	03 c0       	rjmp	.+6      	; 0xe0e <prvWriteMessageToBuffer+0x5c>
     e08:	80 e0       	ldi	r24, 0x00	; 0
     e0a:	01 c0       	rjmp	.+2      	; 0xe0e <prvWriteMessageToBuffer+0x5c>
     e0c:	80 e0       	ldi	r24, 0x00	; 0
     e0e:	88 23       	and	r24, r24
     e10:	31 f0       	breq	.+12     	; 0xe1e <prvWriteMessageToBuffer+0x6c>
     e12:	49 81       	ldd	r20, Y+1	; 0x01
     e14:	5a 81       	ldd	r21, Y+2	; 0x02
     e16:	b6 01       	movw	r22, r12
     e18:	c7 01       	movw	r24, r14
     e1a:	82 df       	rcall	.-252    	; 0xd20 <prvWriteBytesToBuffer>
     e1c:	02 c0       	rjmp	.+4      	; 0xe22 <prvWriteMessageToBuffer+0x70>
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0f 90       	pop	r0
     e24:	0f 90       	pop	r0
     e26:	df 91       	pop	r29
     e28:	cf 91       	pop	r28
     e2a:	1f 91       	pop	r17
     e2c:	0f 91       	pop	r16
     e2e:	ff 90       	pop	r15
     e30:	ef 90       	pop	r14
     e32:	df 90       	pop	r13
     e34:	cf 90       	pop	r12
     e36:	08 95       	ret

00000e38 <prvReadBytesFromBuffer>:
     e38:	af 92       	push	r10
     e3a:	bf 92       	push	r11
     e3c:	cf 92       	push	r12
     e3e:	df 92       	push	r13
     e40:	ef 92       	push	r14
     e42:	ff 92       	push	r15
     e44:	0f 93       	push	r16
     e46:	1f 93       	push	r17
     e48:	cf 93       	push	r28
     e4a:	df 93       	push	r29
     e4c:	7c 01       	movw	r14, r24
     e4e:	5b 01       	movw	r10, r22
     e50:	e9 01       	movw	r28, r18
     e52:	42 17       	cp	r20, r18
     e54:	53 07       	cpc	r21, r19
     e56:	08 f4       	brcc	.+2      	; 0xe5a <prvReadBytesFromBuffer+0x22>
     e58:	ea 01       	movw	r28, r20
     e5a:	20 97       	sbiw	r28, 0x00	; 0
     e5c:	81 f1       	breq	.+96     	; 0xebe <prvReadBytesFromBuffer+0x86>
     e5e:	f7 01       	movw	r30, r14
     e60:	00 81       	ld	r16, Z
     e62:	11 81       	ldd	r17, Z+1	; 0x01
     e64:	84 81       	ldd	r24, Z+4	; 0x04
     e66:	95 81       	ldd	r25, Z+5	; 0x05
     e68:	80 1b       	sub	r24, r16
     e6a:	91 0b       	sbc	r25, r17
     e6c:	6e 01       	movw	r12, r28
     e6e:	8c 17       	cp	r24, r28
     e70:	9d 07       	cpc	r25, r29
     e72:	08 f4       	brcc	.+2      	; 0xe76 <prvReadBytesFromBuffer+0x3e>
     e74:	6c 01       	movw	r12, r24
     e76:	f7 01       	movw	r30, r14
     e78:	64 85       	ldd	r22, Z+12	; 0x0c
     e7a:	75 85       	ldd	r23, Z+13	; 0x0d
     e7c:	60 0f       	add	r22, r16
     e7e:	71 1f       	adc	r23, r17
     e80:	a6 01       	movw	r20, r12
     e82:	c5 01       	movw	r24, r10
     e84:	0e 94 a9 27 	call	0x4f52	; 0x4f52 <memcpy>
     e88:	cc 16       	cp	r12, r28
     e8a:	dd 06       	cpc	r13, r29
     e8c:	58 f4       	brcc	.+22     	; 0xea4 <prvReadBytesFromBuffer+0x6c>
     e8e:	ae 01       	movw	r20, r28
     e90:	4c 19       	sub	r20, r12
     e92:	5d 09       	sbc	r21, r13
     e94:	f7 01       	movw	r30, r14
     e96:	64 85       	ldd	r22, Z+12	; 0x0c
     e98:	75 85       	ldd	r23, Z+13	; 0x0d
     e9a:	c5 01       	movw	r24, r10
     e9c:	8c 0d       	add	r24, r12
     e9e:	9d 1d       	adc	r25, r13
     ea0:	0e 94 a9 27 	call	0x4f52	; 0x4f52 <memcpy>
     ea4:	0c 0f       	add	r16, r28
     ea6:	1d 1f       	adc	r17, r29
     ea8:	f7 01       	movw	r30, r14
     eaa:	84 81       	ldd	r24, Z+4	; 0x04
     eac:	95 81       	ldd	r25, Z+5	; 0x05
     eae:	08 17       	cp	r16, r24
     eb0:	19 07       	cpc	r17, r25
     eb2:	10 f0       	brcs	.+4      	; 0xeb8 <prvReadBytesFromBuffer+0x80>
     eb4:	08 1b       	sub	r16, r24
     eb6:	19 0b       	sbc	r17, r25
     eb8:	f7 01       	movw	r30, r14
     eba:	11 83       	std	Z+1, r17	; 0x01
     ebc:	00 83       	st	Z, r16
     ebe:	ce 01       	movw	r24, r28
     ec0:	df 91       	pop	r29
     ec2:	cf 91       	pop	r28
     ec4:	1f 91       	pop	r17
     ec6:	0f 91       	pop	r16
     ec8:	ff 90       	pop	r15
     eca:	ef 90       	pop	r14
     ecc:	df 90       	pop	r13
     ece:	cf 90       	pop	r12
     ed0:	bf 90       	pop	r11
     ed2:	af 90       	pop	r10
     ed4:	08 95       	ret

00000ed6 <prvReadMessageFromBuffer>:
     ed6:	6f 92       	push	r6
     ed8:	7f 92       	push	r7
     eda:	8f 92       	push	r8
     edc:	9f 92       	push	r9
     ede:	af 92       	push	r10
     ee0:	bf 92       	push	r11
     ee2:	cf 92       	push	r12
     ee4:	df 92       	push	r13
     ee6:	ef 92       	push	r14
     ee8:	ff 92       	push	r15
     eea:	0f 93       	push	r16
     eec:	1f 93       	push	r17
     eee:	cf 93       	push	r28
     ef0:	df 93       	push	r29
     ef2:	1f 92       	push	r1
     ef4:	1f 92       	push	r1
     ef6:	cd b7       	in	r28, 0x3d	; 61
     ef8:	de b7       	in	r29, 0x3e	; 62
     efa:	6c 01       	movw	r12, r24
     efc:	4b 01       	movw	r8, r22
     efe:	5a 01       	movw	r10, r20
     f00:	79 01       	movw	r14, r18
     f02:	01 15       	cp	r16, r1
     f04:	11 05       	cpc	r17, r1
     f06:	b1 f0       	breq	.+44     	; 0xf34 <prvReadMessageFromBuffer+0x5e>
     f08:	fc 01       	movw	r30, r24
     f0a:	60 80       	ld	r6, Z
     f0c:	71 80       	ldd	r7, Z+1	; 0x01
     f0e:	a8 01       	movw	r20, r16
     f10:	be 01       	movw	r22, r28
     f12:	6f 5f       	subi	r22, 0xFF	; 255
     f14:	7f 4f       	sbci	r23, 0xFF	; 255
     f16:	90 df       	rcall	.-224    	; 0xe38 <prvReadBytesFromBuffer>
     f18:	89 81       	ldd	r24, Y+1	; 0x01
     f1a:	9a 81       	ldd	r25, Y+2	; 0x02
     f1c:	e0 1a       	sub	r14, r16
     f1e:	f1 0a       	sbc	r15, r17
     f20:	a8 16       	cp	r10, r24
     f22:	b9 06       	cpc	r11, r25
     f24:	30 f4       	brcc	.+12     	; 0xf32 <prvReadMessageFromBuffer+0x5c>
     f26:	f6 01       	movw	r30, r12
     f28:	71 82       	std	Z+1, r7	; 0x01
     f2a:	60 82       	st	Z, r6
     f2c:	a1 2c       	mov	r10, r1
     f2e:	b1 2c       	mov	r11, r1
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <prvReadMessageFromBuffer+0x5e>
     f32:	5c 01       	movw	r10, r24
     f34:	97 01       	movw	r18, r14
     f36:	a5 01       	movw	r20, r10
     f38:	b4 01       	movw	r22, r8
     f3a:	c6 01       	movw	r24, r12
     f3c:	7d df       	rcall	.-262    	; 0xe38 <prvReadBytesFromBuffer>
     f3e:	0f 90       	pop	r0
     f40:	0f 90       	pop	r0
     f42:	df 91       	pop	r29
     f44:	cf 91       	pop	r28
     f46:	1f 91       	pop	r17
     f48:	0f 91       	pop	r16
     f4a:	ff 90       	pop	r15
     f4c:	ef 90       	pop	r14
     f4e:	df 90       	pop	r13
     f50:	cf 90       	pop	r12
     f52:	bf 90       	pop	r11
     f54:	af 90       	pop	r10
     f56:	9f 90       	pop	r9
     f58:	8f 90       	pop	r8
     f5a:	7f 90       	pop	r7
     f5c:	6f 90       	pop	r6
     f5e:	08 95       	ret

00000f60 <xStreamBufferGenericCreate>:
     f60:	cf 92       	push	r12
     f62:	df 92       	push	r13
     f64:	ef 92       	push	r14
     f66:	ff 92       	push	r15
     f68:	0f 93       	push	r16
     f6a:	cf 93       	push	r28
     f6c:	df 93       	push	r29
     f6e:	ec 01       	movw	r28, r24
     f70:	6b 01       	movw	r12, r22
     f72:	41 30       	cpi	r20, 0x01	; 1
     f74:	11 f4       	brne	.+4      	; 0xf7a <xStreamBufferGenericCreate+0x1a>
     f76:	01 e0       	ldi	r16, 0x01	; 1
     f78:	01 c0       	rjmp	.+2      	; 0xf7c <xStreamBufferGenericCreate+0x1c>
     f7a:	00 e0       	ldi	r16, 0x00	; 0
     f7c:	c1 14       	cp	r12, r1
     f7e:	d1 04       	cpc	r13, r1
     f80:	19 f4       	brne	.+6      	; 0xf88 <xStreamBufferGenericCreate+0x28>
     f82:	cc 24       	eor	r12, r12
     f84:	c3 94       	inc	r12
     f86:	d1 2c       	mov	r13, r1
     f88:	ce 01       	movw	r24, r28
     f8a:	40 96       	adiw	r24, 0x10	; 16
     f8c:	c8 17       	cp	r28, r24
     f8e:	d9 07       	cpc	r29, r25
     f90:	20 f4       	brcc	.+8      	; 0xf9a <xStreamBufferGenericCreate+0x3a>
     f92:	21 96       	adiw	r28, 0x01	; 1
     f94:	70 d9       	rcall	.-3360   	; 0x276 <pvPortMalloc>
     f96:	7c 01       	movw	r14, r24
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <xStreamBufferGenericCreate+0x3e>
     f9a:	e1 2c       	mov	r14, r1
     f9c:	f1 2c       	mov	r15, r1
     f9e:	e1 14       	cp	r14, r1
     fa0:	f1 04       	cpc	r15, r1
     fa2:	39 f0       	breq	.+14     	; 0xfb2 <xStreamBufferGenericCreate+0x52>
     fa4:	96 01       	movw	r18, r12
     fa6:	ae 01       	movw	r20, r28
     fa8:	b7 01       	movw	r22, r14
     faa:	61 5f       	subi	r22, 0xF1	; 241
     fac:	7f 4f       	sbci	r23, 0xFF	; 255
     fae:	c7 01       	movw	r24, r14
     fb0:	a7 de       	rcall	.-690    	; 0xd00 <prvInitialiseNewStreamBuffer>
     fb2:	c7 01       	movw	r24, r14
     fb4:	df 91       	pop	r29
     fb6:	cf 91       	pop	r28
     fb8:	0f 91       	pop	r16
     fba:	ff 90       	pop	r15
     fbc:	ef 90       	pop	r14
     fbe:	df 90       	pop	r13
     fc0:	cf 90       	pop	r12
     fc2:	08 95       	ret

00000fc4 <xStreamBufferReset>:
     fc4:	0f 93       	push	r16
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	f8 94       	cli
     fca:	0f 92       	push	r0
     fcc:	fc 01       	movw	r30, r24
     fce:	20 85       	ldd	r18, Z+8	; 0x08
     fd0:	31 85       	ldd	r19, Z+9	; 0x09
     fd2:	23 2b       	or	r18, r19
     fd4:	71 f4       	brne	.+28     	; 0xff2 <xStreamBufferReset+0x2e>
     fd6:	22 85       	ldd	r18, Z+10	; 0x0a
     fd8:	33 85       	ldd	r19, Z+11	; 0x0b
     fda:	23 2b       	or	r18, r19
     fdc:	61 f4       	brne	.+24     	; 0xff6 <xStreamBufferReset+0x32>
     fde:	26 81       	ldd	r18, Z+6	; 0x06
     fe0:	37 81       	ldd	r19, Z+7	; 0x07
     fe2:	44 81       	ldd	r20, Z+4	; 0x04
     fe4:	55 81       	ldd	r21, Z+5	; 0x05
     fe6:	64 85       	ldd	r22, Z+12	; 0x0c
     fe8:	75 85       	ldd	r23, Z+13	; 0x0d
     fea:	06 85       	ldd	r16, Z+14	; 0x0e
     fec:	89 de       	rcall	.-750    	; 0xd00 <prvInitialiseNewStreamBuffer>
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	03 c0       	rjmp	.+6      	; 0xff8 <xStreamBufferReset+0x34>
     ff2:	80 e0       	ldi	r24, 0x00	; 0
     ff4:	01 c0       	rjmp	.+2      	; 0xff8 <xStreamBufferReset+0x34>
     ff6:	80 e0       	ldi	r24, 0x00	; 0
     ff8:	0f 90       	pop	r0
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	0f 91       	pop	r16
     ffe:	08 95       	ret

00001000 <xStreamBufferSpacesAvailable>:
    1000:	fc 01       	movw	r30, r24
    1002:	24 81       	ldd	r18, Z+4	; 0x04
    1004:	35 81       	ldd	r19, Z+5	; 0x05
    1006:	80 81       	ld	r24, Z
    1008:	91 81       	ldd	r25, Z+1	; 0x01
    100a:	82 0f       	add	r24, r18
    100c:	93 1f       	adc	r25, r19
    100e:	42 81       	ldd	r20, Z+2	; 0x02
    1010:	53 81       	ldd	r21, Z+3	; 0x03
    1012:	84 1b       	sub	r24, r20
    1014:	95 0b       	sbc	r25, r21
    1016:	01 97       	sbiw	r24, 0x01	; 1
    1018:	82 17       	cp	r24, r18
    101a:	93 07       	cpc	r25, r19
    101c:	10 f0       	brcs	.+4      	; 0x1022 <xStreamBufferSpacesAvailable+0x22>
    101e:	82 1b       	sub	r24, r18
    1020:	93 0b       	sbc	r25, r19
    1022:	08 95       	ret

00001024 <xStreamBufferSend>:
    1024:	2f 92       	push	r2
    1026:	3f 92       	push	r3
    1028:	4f 92       	push	r4
    102a:	5f 92       	push	r5
    102c:	6f 92       	push	r6
    102e:	7f 92       	push	r7
    1030:	8f 92       	push	r8
    1032:	9f 92       	push	r9
    1034:	af 92       	push	r10
    1036:	bf 92       	push	r11
    1038:	cf 92       	push	r12
    103a:	df 92       	push	r13
    103c:	ef 92       	push	r14
    103e:	ff 92       	push	r15
    1040:	0f 93       	push	r16
    1042:	1f 93       	push	r17
    1044:	cf 93       	push	r28
    1046:	df 93       	push	r29
    1048:	cd b7       	in	r28, 0x3d	; 61
    104a:	de b7       	in	r29, 0x3e	; 62
    104c:	2b 97       	sbiw	r28, 0x0b	; 11
    104e:	0f b6       	in	r0, 0x3f	; 63
    1050:	f8 94       	cli
    1052:	de bf       	out	0x3e, r29	; 62
    1054:	0f be       	out	0x3f, r0	; 63
    1056:	cd bf       	out	0x3d, r28	; 61
    1058:	4c 01       	movw	r8, r24
    105a:	7b 87       	std	Y+11, r23	; 0x0b
    105c:	6a 87       	std	Y+10, r22	; 0x0a
    105e:	1a 01       	movw	r2, r20
    1060:	0e 83       	std	Y+6, r16	; 0x06
    1062:	1f 83       	std	Y+7, r17	; 0x07
    1064:	28 87       	std	Y+8, r18	; 0x08
    1066:	39 87       	std	Y+9, r19	; 0x09
    1068:	fc 01       	movw	r30, r24
    106a:	84 81       	ldd	r24, Z+4	; 0x04
    106c:	95 81       	ldd	r25, Z+5	; 0x05
    106e:	01 97       	sbiw	r24, 0x01	; 1
    1070:	26 85       	ldd	r18, Z+14	; 0x0e
    1072:	20 ff       	sbrs	r18, 0
    1074:	0c c0       	rjmp	.+24     	; 0x108e <xStreamBufferSend+0x6a>
    1076:	2a 01       	movw	r4, r20
    1078:	f2 e0       	ldi	r31, 0x02	; 2
    107a:	4f 0e       	add	r4, r31
    107c:	51 1c       	adc	r5, r1
    107e:	84 15       	cp	r24, r4
    1080:	95 05       	cpc	r25, r5
    1082:	58 f4       	brcc	.+22     	; 0x109a <xStreamBufferSend+0x76>
    1084:	1e 82       	std	Y+6, r1	; 0x06
    1086:	1f 82       	std	Y+7, r1	; 0x07
    1088:	18 86       	std	Y+8, r1	; 0x08
    108a:	19 86       	std	Y+9, r1	; 0x09
    108c:	06 c0       	rjmp	.+12     	; 0x109a <xStreamBufferSend+0x76>
    108e:	84 17       	cp	r24, r20
    1090:	95 07       	cpc	r25, r21
    1092:	10 f0       	brcs	.+4      	; 0x1098 <xStreamBufferSend+0x74>
    1094:	2a 01       	movw	r4, r20
    1096:	01 c0       	rjmp	.+2      	; 0x109a <xStreamBufferSend+0x76>
    1098:	2c 01       	movw	r4, r24
    109a:	8e 81       	ldd	r24, Y+6	; 0x06
    109c:	9f 81       	ldd	r25, Y+7	; 0x07
    109e:	a8 85       	ldd	r26, Y+8	; 0x08
    10a0:	b9 85       	ldd	r27, Y+9	; 0x09
    10a2:	89 2b       	or	r24, r25
    10a4:	8a 2b       	or	r24, r26
    10a6:	8b 2b       	or	r24, r27
    10a8:	09 f4       	brne	.+2      	; 0x10ac <xStreamBufferSend+0x88>
    10aa:	36 c0       	rjmp	.+108    	; 0x1118 <xStreamBufferSend+0xf4>
    10ac:	ce 01       	movw	r24, r28
    10ae:	01 96       	adiw	r24, 0x01	; 1
    10b0:	e0 d7       	rcall	.+4032   	; 0x2072 <vTaskSetTimeOutState>
    10b2:	0f b6       	in	r0, 0x3f	; 63
    10b4:	f8 94       	cli
    10b6:	0f 92       	push	r0
    10b8:	c4 01       	movw	r24, r8
    10ba:	a2 df       	rcall	.-188    	; 0x1000 <xStreamBufferSpacesAvailable>
    10bc:	3c 01       	movw	r6, r24
    10be:	84 15       	cp	r24, r4
    10c0:	95 05       	cpc	r25, r5
    10c2:	38 f5       	brcc	.+78     	; 0x1112 <xStreamBufferSend+0xee>
    10c4:	60 e0       	ldi	r22, 0x00	; 0
    10c6:	80 e0       	ldi	r24, 0x00	; 0
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <xTaskGenericNotifyStateClear>
    10ce:	0e 94 ca 10 	call	0x2194	; 0x2194 <xTaskGetCurrentTaskHandle>
    10d2:	f4 01       	movw	r30, r8
    10d4:	93 87       	std	Z+11, r25	; 0x0b
    10d6:	82 87       	std	Z+10, r24	; 0x0a
    10d8:	0f 90       	pop	r0
    10da:	0f be       	out	0x3f, r0	; 63
    10dc:	ae 80       	ldd	r10, Y+6	; 0x06
    10de:	bf 80       	ldd	r11, Y+7	; 0x07
    10e0:	c8 84       	ldd	r12, Y+8	; 0x08
    10e2:	d9 84       	ldd	r13, Y+9	; 0x09
    10e4:	e1 2c       	mov	r14, r1
    10e6:	f1 2c       	mov	r15, r1
    10e8:	00 e0       	ldi	r16, 0x00	; 0
    10ea:	10 e0       	ldi	r17, 0x00	; 0
    10ec:	98 01       	movw	r18, r16
    10ee:	40 e0       	ldi	r20, 0x00	; 0
    10f0:	50 e0       	ldi	r21, 0x00	; 0
    10f2:	ba 01       	movw	r22, r20
    10f4:	80 e0       	ldi	r24, 0x00	; 0
    10f6:	0e 94 38 11 	call	0x2270	; 0x2270 <xTaskGenericNotifyWait>
    10fa:	f4 01       	movw	r30, r8
    10fc:	13 86       	std	Z+11, r1	; 0x0b
    10fe:	12 86       	std	Z+10, r1	; 0x0a
    1100:	be 01       	movw	r22, r28
    1102:	6a 5f       	subi	r22, 0xFA	; 250
    1104:	7f 4f       	sbci	r23, 0xFF	; 255
    1106:	ce 01       	movw	r24, r28
    1108:	01 96       	adiw	r24, 0x01	; 1
    110a:	da d7       	rcall	.+4020   	; 0x20c0 <xTaskCheckForTimeOut>
    110c:	88 23       	and	r24, r24
    110e:	89 f2       	breq	.-94     	; 0x10b2 <xStreamBufferSend+0x8e>
    1110:	05 c0       	rjmp	.+10     	; 0x111c <xStreamBufferSend+0xf8>
    1112:	0f 90       	pop	r0
    1114:	0f be       	out	0x3f, r0	; 63
    1116:	02 c0       	rjmp	.+4      	; 0x111c <xStreamBufferSend+0xf8>
    1118:	61 2c       	mov	r6, r1
    111a:	71 2c       	mov	r7, r1
    111c:	61 14       	cp	r6, r1
    111e:	71 04       	cpc	r7, r1
    1120:	19 f4       	brne	.+6      	; 0x1128 <xStreamBufferSend+0x104>
    1122:	c4 01       	movw	r24, r8
    1124:	6d df       	rcall	.-294    	; 0x1000 <xStreamBufferSpacesAvailable>
    1126:	3c 01       	movw	r6, r24
    1128:	82 01       	movw	r16, r4
    112a:	93 01       	movw	r18, r6
    112c:	a1 01       	movw	r20, r2
    112e:	6a 85       	ldd	r22, Y+10	; 0x0a
    1130:	7b 85       	ldd	r23, Y+11	; 0x0b
    1132:	c4 01       	movw	r24, r8
    1134:	3e de       	rcall	.-900    	; 0xdb2 <prvWriteMessageToBuffer>
    1136:	6c 01       	movw	r12, r24
    1138:	89 2b       	or	r24, r25
    113a:	e9 f0       	breq	.+58     	; 0x1176 <xStreamBufferSend+0x152>
    113c:	c4 01       	movw	r24, r8
    113e:	cd dd       	rcall	.-1126   	; 0xcda <prvBytesInBuffer>
    1140:	f4 01       	movw	r30, r8
    1142:	26 81       	ldd	r18, Z+6	; 0x06
    1144:	37 81       	ldd	r19, Z+7	; 0x07
    1146:	82 17       	cp	r24, r18
    1148:	93 07       	cpc	r25, r19
    114a:	a8 f0       	brcs	.+42     	; 0x1176 <xStreamBufferSend+0x152>
    114c:	89 d3       	rcall	.+1810   	; 0x1860 <vTaskSuspendAll>
    114e:	f4 01       	movw	r30, r8
    1150:	80 85       	ldd	r24, Z+8	; 0x08
    1152:	91 85       	ldd	r25, Z+9	; 0x09
    1154:	89 2b       	or	r24, r25
    1156:	71 f0       	breq	.+28     	; 0x1174 <xStreamBufferSend+0x150>
    1158:	80 85       	ldd	r24, Z+8	; 0x08
    115a:	91 85       	ldd	r25, Z+9	; 0x09
    115c:	e1 2c       	mov	r14, r1
    115e:	f1 2c       	mov	r15, r1
    1160:	00 e0       	ldi	r16, 0x00	; 0
    1162:	20 e0       	ldi	r18, 0x00	; 0
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	a9 01       	movw	r20, r18
    1168:	60 e0       	ldi	r22, 0x00	; 0
    116a:	0e 94 df 11 	call	0x23be	; 0x23be <xTaskGenericNotify>
    116e:	f4 01       	movw	r30, r8
    1170:	11 86       	std	Z+9, r1	; 0x09
    1172:	10 86       	std	Z+8, r1	; 0x08
    1174:	b5 d4       	rcall	.+2410   	; 0x1ae0 <xTaskResumeAll>
    1176:	c6 01       	movw	r24, r12
    1178:	2b 96       	adiw	r28, 0x0b	; 11
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	f8 94       	cli
    117e:	de bf       	out	0x3e, r29	; 62
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	cd bf       	out	0x3d, r28	; 61
    1184:	df 91       	pop	r29
    1186:	cf 91       	pop	r28
    1188:	1f 91       	pop	r17
    118a:	0f 91       	pop	r16
    118c:	ff 90       	pop	r15
    118e:	ef 90       	pop	r14
    1190:	df 90       	pop	r13
    1192:	cf 90       	pop	r12
    1194:	bf 90       	pop	r11
    1196:	af 90       	pop	r10
    1198:	9f 90       	pop	r9
    119a:	8f 90       	pop	r8
    119c:	7f 90       	pop	r7
    119e:	6f 90       	pop	r6
    11a0:	5f 90       	pop	r5
    11a2:	4f 90       	pop	r4
    11a4:	3f 90       	pop	r3
    11a6:	2f 90       	pop	r2
    11a8:	08 95       	ret

000011aa <xStreamBufferSendFromISR>:
    11aa:	af 92       	push	r10
    11ac:	bf 92       	push	r11
    11ae:	cf 92       	push	r12
    11b0:	df 92       	push	r13
    11b2:	ef 92       	push	r14
    11b4:	ff 92       	push	r15
    11b6:	0f 93       	push	r16
    11b8:	1f 93       	push	r17
    11ba:	cf 93       	push	r28
    11bc:	df 93       	push	r29
    11be:	ec 01       	movw	r28, r24
    11c0:	7b 01       	movw	r14, r22
    11c2:	5a 01       	movw	r10, r20
    11c4:	69 01       	movw	r12, r18
    11c6:	8e 85       	ldd	r24, Y+14	; 0x0e
    11c8:	80 ff       	sbrs	r24, 0
    11ca:	04 c0       	rjmp	.+8      	; 0x11d4 <xStreamBufferSendFromISR+0x2a>
    11cc:	8a 01       	movw	r16, r20
    11ce:	0e 5f       	subi	r16, 0xFE	; 254
    11d0:	1f 4f       	sbci	r17, 0xFF	; 255
    11d2:	01 c0       	rjmp	.+2      	; 0x11d6 <xStreamBufferSendFromISR+0x2c>
    11d4:	8a 01       	movw	r16, r20
    11d6:	ce 01       	movw	r24, r28
    11d8:	13 df       	rcall	.-474    	; 0x1000 <xStreamBufferSpacesAvailable>
    11da:	9c 01       	movw	r18, r24
    11dc:	a5 01       	movw	r20, r10
    11de:	b7 01       	movw	r22, r14
    11e0:	ce 01       	movw	r24, r28
    11e2:	e7 dd       	rcall	.-1074   	; 0xdb2 <prvWriteMessageToBuffer>
    11e4:	5c 01       	movw	r10, r24
    11e6:	89 2b       	or	r24, r25
    11e8:	c1 f0       	breq	.+48     	; 0x121a <xStreamBufferSendFromISR+0x70>
    11ea:	ce 01       	movw	r24, r28
    11ec:	76 dd       	rcall	.-1300   	; 0xcda <prvBytesInBuffer>
    11ee:	2e 81       	ldd	r18, Y+6	; 0x06
    11f0:	3f 81       	ldd	r19, Y+7	; 0x07
    11f2:	82 17       	cp	r24, r18
    11f4:	93 07       	cpc	r25, r19
    11f6:	88 f0       	brcs	.+34     	; 0x121a <xStreamBufferSendFromISR+0x70>
    11f8:	88 85       	ldd	r24, Y+8	; 0x08
    11fa:	99 85       	ldd	r25, Y+9	; 0x09
    11fc:	89 2b       	or	r24, r25
    11fe:	69 f0       	breq	.+26     	; 0x121a <xStreamBufferSendFromISR+0x70>
    1200:	88 85       	ldd	r24, Y+8	; 0x08
    1202:	99 85       	ldd	r25, Y+9	; 0x09
    1204:	e1 2c       	mov	r14, r1
    1206:	f1 2c       	mov	r15, r1
    1208:	00 e0       	ldi	r16, 0x00	; 0
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	a9 01       	movw	r20, r18
    1210:	60 e0       	ldi	r22, 0x00	; 0
    1212:	0e 94 d6 12 	call	0x25ac	; 0x25ac <xTaskGenericNotifyFromISR>
    1216:	19 86       	std	Y+9, r1	; 0x09
    1218:	18 86       	std	Y+8, r1	; 0x08
    121a:	c5 01       	movw	r24, r10
    121c:	df 91       	pop	r29
    121e:	cf 91       	pop	r28
    1220:	1f 91       	pop	r17
    1222:	0f 91       	pop	r16
    1224:	ff 90       	pop	r15
    1226:	ef 90       	pop	r14
    1228:	df 90       	pop	r13
    122a:	cf 90       	pop	r12
    122c:	bf 90       	pop	r11
    122e:	af 90       	pop	r10
    1230:	08 95       	ret

00001232 <xStreamBufferReceive>:
    1232:	4f 92       	push	r4
    1234:	5f 92       	push	r5
    1236:	6f 92       	push	r6
    1238:	7f 92       	push	r7
    123a:	8f 92       	push	r8
    123c:	9f 92       	push	r9
    123e:	af 92       	push	r10
    1240:	bf 92       	push	r11
    1242:	cf 92       	push	r12
    1244:	df 92       	push	r13
    1246:	ef 92       	push	r14
    1248:	ff 92       	push	r15
    124a:	0f 93       	push	r16
    124c:	1f 93       	push	r17
    124e:	cf 93       	push	r28
    1250:	df 93       	push	r29
    1252:	ec 01       	movw	r28, r24
    1254:	2b 01       	movw	r4, r22
    1256:	3a 01       	movw	r6, r20
    1258:	58 01       	movw	r10, r16
    125a:	69 01       	movw	r12, r18
    125c:	8e 85       	ldd	r24, Y+14	; 0x0e
    125e:	80 ff       	sbrs	r24, 0
    1260:	05 c0       	rjmp	.+10     	; 0x126c <xStreamBufferReceive+0x3a>
    1262:	68 94       	set
    1264:	88 24       	eor	r8, r8
    1266:	81 f8       	bld	r8, 1
    1268:	91 2c       	mov	r9, r1
    126a:	02 c0       	rjmp	.+4      	; 0x1270 <xStreamBufferReceive+0x3e>
    126c:	81 2c       	mov	r8, r1
    126e:	91 2c       	mov	r9, r1
    1270:	a1 14       	cp	r10, r1
    1272:	b1 04       	cpc	r11, r1
    1274:	c1 04       	cpc	r12, r1
    1276:	d1 04       	cpc	r13, r1
    1278:	31 f1       	breq	.+76     	; 0x12c6 <xStreamBufferReceive+0x94>
    127a:	0f b6       	in	r0, 0x3f	; 63
    127c:	f8 94       	cli
    127e:	0f 92       	push	r0
    1280:	ce 01       	movw	r24, r28
    1282:	2b dd       	rcall	.-1450   	; 0xcda <prvBytesInBuffer>
    1284:	7c 01       	movw	r14, r24
    1286:	88 16       	cp	r8, r24
    1288:	99 06       	cpc	r9, r25
    128a:	40 f0       	brcs	.+16     	; 0x129c <xStreamBufferReceive+0x6a>
    128c:	60 e0       	ldi	r22, 0x00	; 0
    128e:	80 e0       	ldi	r24, 0x00	; 0
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <xTaskGenericNotifyStateClear>
    1296:	7e d7       	rcall	.+3836   	; 0x2194 <xTaskGetCurrentTaskHandle>
    1298:	99 87       	std	Y+9, r25	; 0x09
    129a:	88 87       	std	Y+8, r24	; 0x08
    129c:	0f 90       	pop	r0
    129e:	0f be       	out	0x3f, r0	; 63
    12a0:	8e 14       	cp	r8, r14
    12a2:	9f 04       	cpc	r9, r15
    12a4:	98 f0       	brcs	.+38     	; 0x12cc <xStreamBufferReceive+0x9a>
    12a6:	e1 2c       	mov	r14, r1
    12a8:	f1 2c       	mov	r15, r1
    12aa:	00 e0       	ldi	r16, 0x00	; 0
    12ac:	10 e0       	ldi	r17, 0x00	; 0
    12ae:	98 01       	movw	r18, r16
    12b0:	40 e0       	ldi	r20, 0x00	; 0
    12b2:	50 e0       	ldi	r21, 0x00	; 0
    12b4:	ba 01       	movw	r22, r20
    12b6:	80 e0       	ldi	r24, 0x00	; 0
    12b8:	db d7       	rcall	.+4022   	; 0x2270 <xTaskGenericNotifyWait>
    12ba:	19 86       	std	Y+9, r1	; 0x09
    12bc:	18 86       	std	Y+8, r1	; 0x08
    12be:	ce 01       	movw	r24, r28
    12c0:	0c dd       	rcall	.-1512   	; 0xcda <prvBytesInBuffer>
    12c2:	7c 01       	movw	r14, r24
    12c4:	03 c0       	rjmp	.+6      	; 0x12cc <xStreamBufferReceive+0x9a>
    12c6:	ce 01       	movw	r24, r28
    12c8:	08 dd       	rcall	.-1520   	; 0xcda <prvBytesInBuffer>
    12ca:	7c 01       	movw	r14, r24
    12cc:	8e 14       	cp	r8, r14
    12ce:	9f 04       	cpc	r9, r15
    12d0:	e8 f4       	brcc	.+58     	; 0x130c <xStreamBufferReceive+0xda>
    12d2:	84 01       	movw	r16, r8
    12d4:	97 01       	movw	r18, r14
    12d6:	a3 01       	movw	r20, r6
    12d8:	b2 01       	movw	r22, r4
    12da:	ce 01       	movw	r24, r28
    12dc:	fc dd       	rcall	.-1032   	; 0xed6 <prvReadMessageFromBuffer>
    12de:	6c 01       	movw	r12, r24
    12e0:	89 2b       	or	r24, r25
    12e2:	b1 f0       	breq	.+44     	; 0x1310 <xStreamBufferReceive+0xde>
    12e4:	bd d2       	rcall	.+1402   	; 0x1860 <vTaskSuspendAll>
    12e6:	8a 85       	ldd	r24, Y+10	; 0x0a
    12e8:	9b 85       	ldd	r25, Y+11	; 0x0b
    12ea:	89 2b       	or	r24, r25
    12ec:	69 f0       	breq	.+26     	; 0x1308 <xStreamBufferReceive+0xd6>
    12ee:	8a 85       	ldd	r24, Y+10	; 0x0a
    12f0:	9b 85       	ldd	r25, Y+11	; 0x0b
    12f2:	e1 2c       	mov	r14, r1
    12f4:	f1 2c       	mov	r15, r1
    12f6:	00 e0       	ldi	r16, 0x00	; 0
    12f8:	20 e0       	ldi	r18, 0x00	; 0
    12fa:	30 e0       	ldi	r19, 0x00	; 0
    12fc:	a9 01       	movw	r20, r18
    12fe:	60 e0       	ldi	r22, 0x00	; 0
    1300:	0e 94 df 11 	call	0x23be	; 0x23be <xTaskGenericNotify>
    1304:	1b 86       	std	Y+11, r1	; 0x0b
    1306:	1a 86       	std	Y+10, r1	; 0x0a
    1308:	eb d3       	rcall	.+2006   	; 0x1ae0 <xTaskResumeAll>
    130a:	02 c0       	rjmp	.+4      	; 0x1310 <xStreamBufferReceive+0xde>
    130c:	c1 2c       	mov	r12, r1
    130e:	d1 2c       	mov	r13, r1
    1310:	c6 01       	movw	r24, r12
    1312:	df 91       	pop	r29
    1314:	cf 91       	pop	r28
    1316:	1f 91       	pop	r17
    1318:	0f 91       	pop	r16
    131a:	ff 90       	pop	r15
    131c:	ef 90       	pop	r14
    131e:	df 90       	pop	r13
    1320:	cf 90       	pop	r12
    1322:	bf 90       	pop	r11
    1324:	af 90       	pop	r10
    1326:	9f 90       	pop	r9
    1328:	8f 90       	pop	r8
    132a:	7f 90       	pop	r7
    132c:	6f 90       	pop	r6
    132e:	5f 90       	pop	r5
    1330:	4f 90       	pop	r4
    1332:	08 95       	ret

00001334 <prvResetNextTaskUnblockTime>:
    1334:	e0 91 4d 11 	lds	r30, 0x114D	; 0x80114d <pxDelayedTaskList>
    1338:	f0 91 4e 11 	lds	r31, 0x114E	; 0x80114e <pxDelayedTaskList+0x1>
    133c:	80 81       	ld	r24, Z
    133e:	81 11       	cpse	r24, r1
    1340:	0c c0       	rjmp	.+24     	; 0x135a <prvResetNextTaskUnblockTime+0x26>
    1342:	8f ef       	ldi	r24, 0xFF	; 255
    1344:	9f ef       	ldi	r25, 0xFF	; 255
    1346:	dc 01       	movw	r26, r24
    1348:	80 93 17 11 	sts	0x1117, r24	; 0x801117 <xNextTaskUnblockTime>
    134c:	90 93 18 11 	sts	0x1118, r25	; 0x801118 <xNextTaskUnblockTime+0x1>
    1350:	a0 93 19 11 	sts	0x1119, r26	; 0x801119 <xNextTaskUnblockTime+0x2>
    1354:	b0 93 1a 11 	sts	0x111A, r27	; 0x80111a <xNextTaskUnblockTime+0x3>
    1358:	08 95       	ret
    135a:	e0 91 4d 11 	lds	r30, 0x114D	; 0x80114d <pxDelayedTaskList>
    135e:	f0 91 4e 11 	lds	r31, 0x114E	; 0x80114e <pxDelayedTaskList+0x1>
    1362:	07 80       	ldd	r0, Z+7	; 0x07
    1364:	f0 85       	ldd	r31, Z+8	; 0x08
    1366:	e0 2d       	mov	r30, r0
    1368:	80 81       	ld	r24, Z
    136a:	91 81       	ldd	r25, Z+1	; 0x01
    136c:	a2 81       	ldd	r26, Z+2	; 0x02
    136e:	b3 81       	ldd	r27, Z+3	; 0x03
    1370:	80 93 17 11 	sts	0x1117, r24	; 0x801117 <xNextTaskUnblockTime>
    1374:	90 93 18 11 	sts	0x1118, r25	; 0x801118 <xNextTaskUnblockTime+0x1>
    1378:	a0 93 19 11 	sts	0x1119, r26	; 0x801119 <xNextTaskUnblockTime+0x2>
    137c:	b0 93 1a 11 	sts	0x111A, r27	; 0x80111a <xNextTaskUnblockTime+0x3>
    1380:	08 95       	ret

00001382 <prvDeleteTCB>:
    1382:	cf 93       	push	r28
    1384:	df 93       	push	r29
    1386:	ec 01       	movw	r28, r24
    1388:	8b 8d       	ldd	r24, Y+27	; 0x1b
    138a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    138c:	1d d8       	rcall	.-4038   	; 0x3c8 <vPortFree>
    138e:	ce 01       	movw	r24, r28
    1390:	1b d8       	rcall	.-4042   	; 0x3c8 <vPortFree>
    1392:	df 91       	pop	r29
    1394:	cf 91       	pop	r28
    1396:	08 95       	ret

00001398 <prvInitialiseNewTask>:
    1398:	4f 92       	push	r4
    139a:	5f 92       	push	r5
    139c:	6f 92       	push	r6
    139e:	7f 92       	push	r7
    13a0:	8f 92       	push	r8
    13a2:	9f 92       	push	r9
    13a4:	af 92       	push	r10
    13a6:	bf 92       	push	r11
    13a8:	cf 92       	push	r12
    13aa:	df 92       	push	r13
    13ac:	ef 92       	push	r14
    13ae:	ff 92       	push	r15
    13b0:	0f 93       	push	r16
    13b2:	cf 93       	push	r28
    13b4:	df 93       	push	r29
    13b6:	2c 01       	movw	r4, r24
    13b8:	5b 01       	movw	r10, r22
    13ba:	4a 01       	movw	r8, r20
    13bc:	39 01       	movw	r6, r18
    13be:	e6 01       	movw	r28, r12
    13c0:	65 ea       	ldi	r22, 0xA5	; 165
    13c2:	70 e0       	ldi	r23, 0x00	; 0
    13c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    13c6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    13c8:	0e 94 b2 27 	call	0x4f64	; 0x4f64 <memset>
    13cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    13ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
    13d0:	21 e0       	ldi	r18, 0x01	; 1
    13d2:	82 1a       	sub	r8, r18
    13d4:	91 08       	sbc	r9, r1
    13d6:	88 0e       	add	r8, r24
    13d8:	99 1e       	adc	r9, r25
    13da:	a1 14       	cp	r10, r1
    13dc:	b1 04       	cpc	r11, r1
    13de:	89 f4       	brne	.+34     	; 0x1402 <prvInitialiseNewTask+0x6a>
    13e0:	15 c0       	rjmp	.+42     	; 0x140c <prvInitialiseNewTask+0x74>
    13e2:	82 2f       	mov	r24, r18
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	f5 01       	movw	r30, r10
    13e8:	e8 0f       	add	r30, r24
    13ea:	f9 1f       	adc	r31, r25
    13ec:	30 81       	ld	r19, Z
    13ee:	de 01       	movw	r26, r28
    13f0:	a8 0f       	add	r26, r24
    13f2:	b9 1f       	adc	r27, r25
    13f4:	5d 96       	adiw	r26, 0x1d	; 29
    13f6:	3c 93       	st	X, r19
    13f8:	80 81       	ld	r24, Z
    13fa:	88 23       	and	r24, r24
    13fc:	29 f0       	breq	.+10     	; 0x1408 <prvInitialiseNewTask+0x70>
    13fe:	2f 5f       	subi	r18, 0xFF	; 255
    1400:	01 c0       	rjmp	.+2      	; 0x1404 <prvInitialiseNewTask+0x6c>
    1402:	20 e0       	ldi	r18, 0x00	; 0
    1404:	20 31       	cpi	r18, 0x10	; 16
    1406:	68 f3       	brcs	.-38     	; 0x13e2 <prvInitialiseNewTask+0x4a>
    1408:	1c a6       	std	Y+44, r1	; 0x2c
    140a:	01 c0       	rjmp	.+2      	; 0x140e <prvInitialiseNewTask+0x76>
    140c:	1d 8e       	std	Y+29, r1	; 0x1d
    140e:	0a 30       	cpi	r16, 0x0A	; 10
    1410:	08 f0       	brcs	.+2      	; 0x1414 <prvInitialiseNewTask+0x7c>
    1412:	09 e0       	ldi	r16, 0x09	; 9
    1414:	0a 8f       	std	Y+26, r16	; 0x1a
    1416:	0d a7       	std	Y+45, r16	; 0x2d
    1418:	1e a6       	std	Y+46, r1	; 0x2e
    141a:	ce 01       	movw	r24, r28
    141c:	02 96       	adiw	r24, 0x02	; 2
    141e:	22 d8       	rcall	.-4028   	; 0x464 <vListInitialiseItem>
    1420:	ce 01       	movw	r24, r28
    1422:	0e 96       	adiw	r24, 0x0e	; 14
    1424:	1f d8       	rcall	.-4034   	; 0x464 <vListInitialiseItem>
    1426:	db 87       	std	Y+11, r29	; 0x0b
    1428:	ca 87       	std	Y+10, r28	; 0x0a
    142a:	8a e0       	ldi	r24, 0x0A	; 10
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	a0 e0       	ldi	r26, 0x00	; 0
    1430:	b0 e0       	ldi	r27, 0x00	; 0
    1432:	80 1b       	sub	r24, r16
    1434:	91 09       	sbc	r25, r1
    1436:	a1 09       	sbc	r26, r1
    1438:	b1 09       	sbc	r27, r1
    143a:	8e 87       	std	Y+14, r24	; 0x0e
    143c:	9f 87       	std	Y+15, r25	; 0x0f
    143e:	a8 8b       	std	Y+16, r26	; 0x10
    1440:	b9 8b       	std	Y+17, r27	; 0x11
    1442:	df 8b       	std	Y+23, r29	; 0x17
    1444:	ce 8b       	std	Y+22, r28	; 0x16
    1446:	84 e0       	ldi	r24, 0x04	; 4
    1448:	fe 01       	movw	r30, r28
    144a:	bf 96       	adiw	r30, 0x2f	; 47
    144c:	df 01       	movw	r26, r30
    144e:	1d 92       	st	X+, r1
    1450:	8a 95       	dec	r24
    1452:	e9 f7       	brne	.-6      	; 0x144e <prvInitialiseNewTask+0xb6>
    1454:	1b aa       	std	Y+51, r1	; 0x33
    1456:	a3 01       	movw	r20, r6
    1458:	b2 01       	movw	r22, r4
    145a:	c4 01       	movw	r24, r8
    145c:	77 d8       	rcall	.-3858   	; 0x54c <pxPortInitialiseStack>
    145e:	99 83       	std	Y+1, r25	; 0x01
    1460:	88 83       	st	Y, r24
    1462:	e1 14       	cp	r14, r1
    1464:	f1 04       	cpc	r15, r1
    1466:	19 f0       	breq	.+6      	; 0x146e <prvInitialiseNewTask+0xd6>
    1468:	f7 01       	movw	r30, r14
    146a:	d1 83       	std	Z+1, r29	; 0x01
    146c:	c0 83       	st	Z, r28
    146e:	df 91       	pop	r29
    1470:	cf 91       	pop	r28
    1472:	0f 91       	pop	r16
    1474:	ff 90       	pop	r15
    1476:	ef 90       	pop	r14
    1478:	df 90       	pop	r13
    147a:	cf 90       	pop	r12
    147c:	bf 90       	pop	r11
    147e:	af 90       	pop	r10
    1480:	9f 90       	pop	r9
    1482:	8f 90       	pop	r8
    1484:	7f 90       	pop	r7
    1486:	6f 90       	pop	r6
    1488:	5f 90       	pop	r5
    148a:	4f 90       	pop	r4
    148c:	08 95       	ret

0000148e <prvInitialiseTaskLists>:
    148e:	cf 93       	push	r28
    1490:	c0 e0       	ldi	r28, 0x00	; 0
    1492:	09 c0       	rjmp	.+18     	; 0x14a6 <prvInitialiseTaskLists+0x18>
    1494:	2b e0       	ldi	r18, 0x0B	; 11
    1496:	c2 9f       	mul	r28, r18
    1498:	c0 01       	movw	r24, r0
    149a:	11 24       	eor	r1, r1
    149c:	8b 59       	subi	r24, 0x9B	; 155
    149e:	9e 4e       	sbci	r25, 0xEE	; 238
    14a0:	0e 94 21 02 	call	0x442	; 0x442 <vListInitialise>
    14a4:	cf 5f       	subi	r28, 0xFF	; 255
    14a6:	ca 30       	cpi	r28, 0x0A	; 10
    14a8:	a8 f3       	brcs	.-22     	; 0x1494 <prvInitialiseTaskLists+0x6>
    14aa:	8a e5       	ldi	r24, 0x5A	; 90
    14ac:	91 e1       	ldi	r25, 0x11	; 17
    14ae:	0e 94 21 02 	call	0x442	; 0x442 <vListInitialise>
    14b2:	8f e4       	ldi	r24, 0x4F	; 79
    14b4:	91 e1       	ldi	r25, 0x11	; 17
    14b6:	0e 94 21 02 	call	0x442	; 0x442 <vListInitialise>
    14ba:	80 e4       	ldi	r24, 0x40	; 64
    14bc:	91 e1       	ldi	r25, 0x11	; 17
    14be:	0e 94 21 02 	call	0x442	; 0x442 <vListInitialise>
    14c2:	85 e3       	ldi	r24, 0x35	; 53
    14c4:	91 e1       	ldi	r25, 0x11	; 17
    14c6:	0e 94 21 02 	call	0x442	; 0x442 <vListInitialise>
    14ca:	89 e2       	ldi	r24, 0x29	; 41
    14cc:	91 e1       	ldi	r25, 0x11	; 17
    14ce:	0e 94 21 02 	call	0x442	; 0x442 <vListInitialise>
    14d2:	8a e5       	ldi	r24, 0x5A	; 90
    14d4:	91 e1       	ldi	r25, 0x11	; 17
    14d6:	90 93 4e 11 	sts	0x114E, r25	; 0x80114e <pxDelayedTaskList+0x1>
    14da:	80 93 4d 11 	sts	0x114D, r24	; 0x80114d <pxDelayedTaskList>
    14de:	8f e4       	ldi	r24, 0x4F	; 79
    14e0:	91 e1       	ldi	r25, 0x11	; 17
    14e2:	90 93 4c 11 	sts	0x114C, r25	; 0x80114c <pxOverflowDelayedTaskList+0x1>
    14e6:	80 93 4b 11 	sts	0x114B, r24	; 0x80114b <pxOverflowDelayedTaskList>
    14ea:	cf 91       	pop	r28
    14ec:	08 95       	ret

000014ee <prvAddNewTaskToReadyList>:
    14ee:	cf 93       	push	r28
    14f0:	df 93       	push	r29
    14f2:	ec 01       	movw	r28, r24
    14f4:	0f b6       	in	r0, 0x3f	; 63
    14f6:	f8 94       	cli
    14f8:	0f 92       	push	r0
    14fa:	80 91 28 11 	lds	r24, 0x1128	; 0x801128 <uxCurrentNumberOfTasks>
    14fe:	8f 5f       	subi	r24, 0xFF	; 255
    1500:	80 93 28 11 	sts	0x1128, r24	; 0x801128 <uxCurrentNumberOfTasks>
    1504:	80 91 d3 11 	lds	r24, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1508:	90 91 d4 11 	lds	r25, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    150c:	89 2b       	or	r24, r25
    150e:	51 f4       	brne	.+20     	; 0x1524 <prvAddNewTaskToReadyList+0x36>
    1510:	d0 93 d4 11 	sts	0x11D4, r29	; 0x8011d4 <pxCurrentTCB+0x1>
    1514:	c0 93 d3 11 	sts	0x11D3, r28	; 0x8011d3 <pxCurrentTCB>
    1518:	80 91 28 11 	lds	r24, 0x1128	; 0x801128 <uxCurrentNumberOfTasks>
    151c:	81 30       	cpi	r24, 0x01	; 1
    151e:	91 f4       	brne	.+36     	; 0x1544 <prvAddNewTaskToReadyList+0x56>
    1520:	b6 df       	rcall	.-148    	; 0x148e <prvInitialiseTaskLists>
    1522:	10 c0       	rjmp	.+32     	; 0x1544 <prvAddNewTaskToReadyList+0x56>
    1524:	80 91 22 11 	lds	r24, 0x1122	; 0x801122 <xSchedulerRunning>
    1528:	81 11       	cpse	r24, r1
    152a:	0c c0       	rjmp	.+24     	; 0x1544 <prvAddNewTaskToReadyList+0x56>
    152c:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1530:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1534:	92 8d       	ldd	r25, Z+26	; 0x1a
    1536:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1538:	89 17       	cp	r24, r25
    153a:	20 f0       	brcs	.+8      	; 0x1544 <prvAddNewTaskToReadyList+0x56>
    153c:	d0 93 d4 11 	sts	0x11D4, r29	; 0x8011d4 <pxCurrentTCB+0x1>
    1540:	c0 93 d3 11 	sts	0x11D3, r28	; 0x8011d3 <pxCurrentTCB>
    1544:	80 91 1b 11 	lds	r24, 0x111B	; 0x80111b <uxTaskNumber>
    1548:	8f 5f       	subi	r24, 0xFF	; 255
    154a:	80 93 1b 11 	sts	0x111B, r24	; 0x80111b <uxTaskNumber>
    154e:	ea 8d       	ldd	r30, Y+26	; 0x1a
    1550:	80 91 23 11 	lds	r24, 0x1123	; 0x801123 <uxTopReadyPriority>
    1554:	8e 17       	cp	r24, r30
    1556:	10 f4       	brcc	.+4      	; 0x155c <prvAddNewTaskToReadyList+0x6e>
    1558:	e0 93 23 11 	sts	0x1123, r30	; 0x801123 <uxTopReadyPriority>
    155c:	8b e0       	ldi	r24, 0x0B	; 11
    155e:	8e 9f       	mul	r24, r30
    1560:	f0 01       	movw	r30, r0
    1562:	11 24       	eor	r1, r1
    1564:	eb 59       	subi	r30, 0x9B	; 155
    1566:	fe 4e       	sbci	r31, 0xEE	; 238
    1568:	01 80       	ldd	r0, Z+1	; 0x01
    156a:	f2 81       	ldd	r31, Z+2	; 0x02
    156c:	e0 2d       	mov	r30, r0
    156e:	ff 83       	std	Y+7, r31	; 0x07
    1570:	ee 83       	std	Y+6, r30	; 0x06
    1572:	26 81       	ldd	r18, Z+6	; 0x06
    1574:	37 81       	ldd	r19, Z+7	; 0x07
    1576:	39 87       	std	Y+9, r19	; 0x09
    1578:	28 87       	std	Y+8, r18	; 0x08
    157a:	a6 81       	ldd	r26, Z+6	; 0x06
    157c:	b7 81       	ldd	r27, Z+7	; 0x07
    157e:	9e 01       	movw	r18, r28
    1580:	2e 5f       	subi	r18, 0xFE	; 254
    1582:	3f 4f       	sbci	r19, 0xFF	; 255
    1584:	15 96       	adiw	r26, 0x05	; 5
    1586:	3c 93       	st	X, r19
    1588:	2e 93       	st	-X, r18
    158a:	14 97       	sbiw	r26, 0x04	; 4
    158c:	37 83       	std	Z+7, r19	; 0x07
    158e:	26 83       	std	Z+6, r18	; 0x06
    1590:	ea 8d       	ldd	r30, Y+26	; 0x1a
    1592:	8e 9f       	mul	r24, r30
    1594:	f0 01       	movw	r30, r0
    1596:	11 24       	eor	r1, r1
    1598:	eb 59       	subi	r30, 0x9B	; 155
    159a:	fe 4e       	sbci	r31, 0xEE	; 238
    159c:	fd 87       	std	Y+13, r31	; 0x0d
    159e:	ec 87       	std	Y+12, r30	; 0x0c
    15a0:	80 81       	ld	r24, Z
    15a2:	8f 5f       	subi	r24, 0xFF	; 255
    15a4:	80 83       	st	Z, r24
    15a6:	0f 90       	pop	r0
    15a8:	0f be       	out	0x3f, r0	; 63
    15aa:	80 91 22 11 	lds	r24, 0x1122	; 0x801122 <xSchedulerRunning>
    15ae:	88 23       	and	r24, r24
    15b0:	49 f0       	breq	.+18     	; 0x15c4 <prvAddNewTaskToReadyList+0xd6>
    15b2:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    15b6:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    15ba:	92 8d       	ldd	r25, Z+26	; 0x1a
    15bc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    15be:	98 17       	cp	r25, r24
    15c0:	08 f4       	brcc	.+2      	; 0x15c4 <prvAddNewTaskToReadyList+0xd6>
    15c2:	0d d8       	rcall	.-4070   	; 0x5de <vPortYield>
    15c4:	df 91       	pop	r29
    15c6:	cf 91       	pop	r28
    15c8:	08 95       	ret

000015ca <prvCheckTasksWaitingTermination>:
    15ca:	cf 93       	push	r28
    15cc:	df 93       	push	r29
    15ce:	1b c0       	rjmp	.+54     	; 0x1606 <prvCheckTasksWaitingTermination+0x3c>
    15d0:	0f b6       	in	r0, 0x3f	; 63
    15d2:	f8 94       	cli
    15d4:	0f 92       	push	r0
    15d6:	e0 91 3c 11 	lds	r30, 0x113C	; 0x80113c <xTasksWaitingTermination+0x7>
    15da:	f0 91 3d 11 	lds	r31, 0x113D	; 0x80113d <xTasksWaitingTermination+0x8>
    15de:	c0 85       	ldd	r28, Z+8	; 0x08
    15e0:	d1 85       	ldd	r29, Z+9	; 0x09
    15e2:	ce 01       	movw	r24, r28
    15e4:	02 96       	adiw	r24, 0x02	; 2
    15e6:	0e 94 73 02 	call	0x4e6	; 0x4e6 <uxListRemove>
    15ea:	80 91 28 11 	lds	r24, 0x1128	; 0x801128 <uxCurrentNumberOfTasks>
    15ee:	81 50       	subi	r24, 0x01	; 1
    15f0:	80 93 28 11 	sts	0x1128, r24	; 0x801128 <uxCurrentNumberOfTasks>
    15f4:	80 91 34 11 	lds	r24, 0x1134	; 0x801134 <uxDeletedTasksWaitingCleanUp>
    15f8:	81 50       	subi	r24, 0x01	; 1
    15fa:	80 93 34 11 	sts	0x1134, r24	; 0x801134 <uxDeletedTasksWaitingCleanUp>
    15fe:	0f 90       	pop	r0
    1600:	0f be       	out	0x3f, r0	; 63
    1602:	ce 01       	movw	r24, r28
    1604:	be de       	rcall	.-644    	; 0x1382 <prvDeleteTCB>
    1606:	80 91 34 11 	lds	r24, 0x1134	; 0x801134 <uxDeletedTasksWaitingCleanUp>
    160a:	81 11       	cpse	r24, r1
    160c:	e1 cf       	rjmp	.-62     	; 0x15d0 <prvCheckTasksWaitingTermination+0x6>
    160e:	df 91       	pop	r29
    1610:	cf 91       	pop	r28
    1612:	08 95       	ret

00001614 <prvAddCurrentTaskToDelayedList>:
    1614:	8f 92       	push	r8
    1616:	9f 92       	push	r9
    1618:	af 92       	push	r10
    161a:	bf 92       	push	r11
    161c:	cf 92       	push	r12
    161e:	df 92       	push	r13
    1620:	ef 92       	push	r14
    1622:	ff 92       	push	r15
    1624:	cf 93       	push	r28
    1626:	df 93       	push	r29
    1628:	6b 01       	movw	r12, r22
    162a:	7c 01       	movw	r14, r24
    162c:	c4 2f       	mov	r28, r20
    162e:	80 90 24 11 	lds	r8, 0x1124	; 0x801124 <xTickCount>
    1632:	90 90 25 11 	lds	r9, 0x1125	; 0x801125 <xTickCount+0x1>
    1636:	a0 90 26 11 	lds	r10, 0x1126	; 0x801126 <xTickCount+0x2>
    163a:	b0 90 27 11 	lds	r11, 0x1127	; 0x801127 <xTickCount+0x3>
    163e:	80 91 d3 11 	lds	r24, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1642:	90 91 d4 11 	lds	r25, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1646:	02 96       	adiw	r24, 0x02	; 2
    1648:	0e 94 73 02 	call	0x4e6	; 0x4e6 <uxListRemove>
    164c:	8f ef       	ldi	r24, 0xFF	; 255
    164e:	c8 16       	cp	r12, r24
    1650:	d8 06       	cpc	r13, r24
    1652:	e8 06       	cpc	r14, r24
    1654:	f8 06       	cpc	r15, r24
    1656:	b1 f5       	brne	.+108    	; 0x16c4 <prvAddCurrentTaskToDelayedList+0xb0>
    1658:	cc 23       	and	r28, r28
    165a:	a1 f1       	breq	.+104    	; 0x16c4 <prvAddCurrentTaskToDelayedList+0xb0>
    165c:	e9 e2       	ldi	r30, 0x29	; 41
    165e:	f1 e1       	ldi	r31, 0x11	; 17
    1660:	a1 81       	ldd	r26, Z+1	; 0x01
    1662:	b2 81       	ldd	r27, Z+2	; 0x02
    1664:	c0 91 d3 11 	lds	r28, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1668:	d0 91 d4 11 	lds	r29, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    166c:	bf 83       	std	Y+7, r27	; 0x07
    166e:	ae 83       	std	Y+6, r26	; 0x06
    1670:	c0 91 d3 11 	lds	r28, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1674:	d0 91 d4 11 	lds	r29, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1678:	16 96       	adiw	r26, 0x06	; 6
    167a:	8d 91       	ld	r24, X+
    167c:	9c 91       	ld	r25, X
    167e:	17 97       	sbiw	r26, 0x07	; 7
    1680:	99 87       	std	Y+9, r25	; 0x09
    1682:	88 87       	std	Y+8, r24	; 0x08
    1684:	16 96       	adiw	r26, 0x06	; 6
    1686:	cd 91       	ld	r28, X+
    1688:	dc 91       	ld	r29, X
    168a:	17 97       	sbiw	r26, 0x07	; 7
    168c:	80 91 d3 11 	lds	r24, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1690:	90 91 d4 11 	lds	r25, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1694:	02 96       	adiw	r24, 0x02	; 2
    1696:	9d 83       	std	Y+5, r25	; 0x05
    1698:	8c 83       	std	Y+4, r24	; 0x04
    169a:	80 91 d3 11 	lds	r24, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    169e:	90 91 d4 11 	lds	r25, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    16a2:	02 96       	adiw	r24, 0x02	; 2
    16a4:	17 96       	adiw	r26, 0x07	; 7
    16a6:	9c 93       	st	X, r25
    16a8:	8e 93       	st	-X, r24
    16aa:	16 97       	sbiw	r26, 0x06	; 6
    16ac:	a0 91 d3 11 	lds	r26, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    16b0:	b0 91 d4 11 	lds	r27, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    16b4:	1d 96       	adiw	r26, 0x0d	; 13
    16b6:	fc 93       	st	X, r31
    16b8:	ee 93       	st	-X, r30
    16ba:	1c 97       	sbiw	r26, 0x0c	; 12
    16bc:	80 81       	ld	r24, Z
    16be:	8f 5f       	subi	r24, 0xFF	; 255
    16c0:	80 83       	st	Z, r24
    16c2:	3f c0       	rjmp	.+126    	; 0x1742 <prvAddCurrentTaskToDelayedList+0x12e>
    16c4:	c8 0c       	add	r12, r8
    16c6:	d9 1c       	adc	r13, r9
    16c8:	ea 1c       	adc	r14, r10
    16ca:	fb 1c       	adc	r15, r11
    16cc:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    16d0:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    16d4:	c2 82       	std	Z+2, r12	; 0x02
    16d6:	d3 82       	std	Z+3, r13	; 0x03
    16d8:	e4 82       	std	Z+4, r14	; 0x04
    16da:	f5 82       	std	Z+5, r15	; 0x05
    16dc:	c8 14       	cp	r12, r8
    16de:	d9 04       	cpc	r13, r9
    16e0:	ea 04       	cpc	r14, r10
    16e2:	fb 04       	cpc	r15, r11
    16e4:	68 f4       	brcc	.+26     	; 0x1700 <prvAddCurrentTaskToDelayedList+0xec>
    16e6:	60 91 d3 11 	lds	r22, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    16ea:	70 91 d4 11 	lds	r23, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    16ee:	80 91 4b 11 	lds	r24, 0x114B	; 0x80114b <pxOverflowDelayedTaskList>
    16f2:	90 91 4c 11 	lds	r25, 0x114C	; 0x80114c <pxOverflowDelayedTaskList+0x1>
    16f6:	6e 5f       	subi	r22, 0xFE	; 254
    16f8:	7f 4f       	sbci	r23, 0xFF	; 255
    16fa:	0e 94 36 02 	call	0x46c	; 0x46c <vListInsert>
    16fe:	21 c0       	rjmp	.+66     	; 0x1742 <prvAddCurrentTaskToDelayedList+0x12e>
    1700:	60 91 d3 11 	lds	r22, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1704:	70 91 d4 11 	lds	r23, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1708:	80 91 4d 11 	lds	r24, 0x114D	; 0x80114d <pxDelayedTaskList>
    170c:	90 91 4e 11 	lds	r25, 0x114E	; 0x80114e <pxDelayedTaskList+0x1>
    1710:	6e 5f       	subi	r22, 0xFE	; 254
    1712:	7f 4f       	sbci	r23, 0xFF	; 255
    1714:	0e 94 36 02 	call	0x46c	; 0x46c <vListInsert>
    1718:	80 91 17 11 	lds	r24, 0x1117	; 0x801117 <xNextTaskUnblockTime>
    171c:	90 91 18 11 	lds	r25, 0x1118	; 0x801118 <xNextTaskUnblockTime+0x1>
    1720:	a0 91 19 11 	lds	r26, 0x1119	; 0x801119 <xNextTaskUnblockTime+0x2>
    1724:	b0 91 1a 11 	lds	r27, 0x111A	; 0x80111a <xNextTaskUnblockTime+0x3>
    1728:	c8 16       	cp	r12, r24
    172a:	d9 06       	cpc	r13, r25
    172c:	ea 06       	cpc	r14, r26
    172e:	fb 06       	cpc	r15, r27
    1730:	40 f4       	brcc	.+16     	; 0x1742 <prvAddCurrentTaskToDelayedList+0x12e>
    1732:	c0 92 17 11 	sts	0x1117, r12	; 0x801117 <xNextTaskUnblockTime>
    1736:	d0 92 18 11 	sts	0x1118, r13	; 0x801118 <xNextTaskUnblockTime+0x1>
    173a:	e0 92 19 11 	sts	0x1119, r14	; 0x801119 <xNextTaskUnblockTime+0x2>
    173e:	f0 92 1a 11 	sts	0x111A, r15	; 0x80111a <xNextTaskUnblockTime+0x3>
    1742:	df 91       	pop	r29
    1744:	cf 91       	pop	r28
    1746:	ff 90       	pop	r15
    1748:	ef 90       	pop	r14
    174a:	df 90       	pop	r13
    174c:	cf 90       	pop	r12
    174e:	bf 90       	pop	r11
    1750:	af 90       	pop	r10
    1752:	9f 90       	pop	r9
    1754:	8f 90       	pop	r8
    1756:	08 95       	ret

00001758 <xTaskCreate>:
    1758:	2f 92       	push	r2
    175a:	3f 92       	push	r3
    175c:	4f 92       	push	r4
    175e:	5f 92       	push	r5
    1760:	6f 92       	push	r6
    1762:	7f 92       	push	r7
    1764:	8f 92       	push	r8
    1766:	9f 92       	push	r9
    1768:	af 92       	push	r10
    176a:	bf 92       	push	r11
    176c:	cf 92       	push	r12
    176e:	df 92       	push	r13
    1770:	ef 92       	push	r14
    1772:	ff 92       	push	r15
    1774:	0f 93       	push	r16
    1776:	cf 93       	push	r28
    1778:	df 93       	push	r29
    177a:	3c 01       	movw	r6, r24
    177c:	1b 01       	movw	r2, r22
    177e:	4a 01       	movw	r8, r20
    1780:	29 01       	movw	r4, r18
    1782:	ca 01       	movw	r24, r20
    1784:	0e 94 3b 01 	call	0x276	; 0x276 <pvPortMalloc>
    1788:	6c 01       	movw	r12, r24
    178a:	89 2b       	or	r24, r25
    178c:	71 f0       	breq	.+28     	; 0x17aa <xTaskCreate+0x52>
    178e:	84 e3       	ldi	r24, 0x34	; 52
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	0e 94 3b 01 	call	0x276	; 0x276 <pvPortMalloc>
    1796:	ec 01       	movw	r28, r24
    1798:	89 2b       	or	r24, r25
    179a:	19 f0       	breq	.+6      	; 0x17a2 <xTaskCreate+0x4a>
    179c:	dc 8e       	std	Y+28, r13	; 0x1c
    179e:	cb 8e       	std	Y+27, r12	; 0x1b
    17a0:	06 c0       	rjmp	.+12     	; 0x17ae <xTaskCreate+0x56>
    17a2:	c6 01       	movw	r24, r12
    17a4:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <vPortFree>
    17a8:	02 c0       	rjmp	.+4      	; 0x17ae <xTaskCreate+0x56>
    17aa:	c0 e0       	ldi	r28, 0x00	; 0
    17ac:	d0 e0       	ldi	r29, 0x00	; 0
    17ae:	20 97       	sbiw	r28, 0x00	; 0
    17b0:	61 f0       	breq	.+24     	; 0x17ca <xTaskCreate+0x72>
    17b2:	a1 2c       	mov	r10, r1
    17b4:	b1 2c       	mov	r11, r1
    17b6:	6e 01       	movw	r12, r28
    17b8:	92 01       	movw	r18, r4
    17ba:	a4 01       	movw	r20, r8
    17bc:	b1 01       	movw	r22, r2
    17be:	c3 01       	movw	r24, r6
    17c0:	eb dd       	rcall	.-1066   	; 0x1398 <prvInitialiseNewTask>
    17c2:	ce 01       	movw	r24, r28
    17c4:	94 de       	rcall	.-728    	; 0x14ee <prvAddNewTaskToReadyList>
    17c6:	81 e0       	ldi	r24, 0x01	; 1
    17c8:	01 c0       	rjmp	.+2      	; 0x17cc <xTaskCreate+0x74>
    17ca:	8f ef       	ldi	r24, 0xFF	; 255
    17cc:	df 91       	pop	r29
    17ce:	cf 91       	pop	r28
    17d0:	0f 91       	pop	r16
    17d2:	ff 90       	pop	r15
    17d4:	ef 90       	pop	r14
    17d6:	df 90       	pop	r13
    17d8:	cf 90       	pop	r12
    17da:	bf 90       	pop	r11
    17dc:	af 90       	pop	r10
    17de:	9f 90       	pop	r9
    17e0:	8f 90       	pop	r8
    17e2:	7f 90       	pop	r7
    17e4:	6f 90       	pop	r6
    17e6:	5f 90       	pop	r5
    17e8:	4f 90       	pop	r4
    17ea:	3f 90       	pop	r3
    17ec:	2f 90       	pop	r2
    17ee:	08 95       	ret

000017f0 <vTaskStartScheduler>:
    17f0:	ef 92       	push	r14
    17f2:	ff 92       	push	r15
    17f4:	0f 93       	push	r16
    17f6:	0f 2e       	mov	r0, r31
    17f8:	f5 e1       	ldi	r31, 0x15	; 21
    17fa:	ef 2e       	mov	r14, r31
    17fc:	f1 e1       	ldi	r31, 0x11	; 17
    17fe:	ff 2e       	mov	r15, r31
    1800:	f0 2d       	mov	r31, r0
    1802:	00 e0       	ldi	r16, 0x00	; 0
    1804:	20 e0       	ldi	r18, 0x00	; 0
    1806:	30 e0       	ldi	r19, 0x00	; 0
    1808:	40 ec       	ldi	r20, 0xC0	; 192
    180a:	50 e0       	ldi	r21, 0x00	; 0
    180c:	67 e7       	ldi	r22, 0x77	; 119
    180e:	72 e0       	ldi	r23, 0x02	; 2
    1810:	8c e7       	ldi	r24, 0x7C	; 124
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	a1 df       	rcall	.-190    	; 0x1758 <xTaskCreate>
    1816:	81 30       	cpi	r24, 0x01	; 1
    1818:	11 f4       	brne	.+4      	; 0x181e <vTaskStartScheduler+0x2e>
    181a:	0e 94 9c 14 	call	0x2938	; 0x2938 <xTimerCreateTimerTask>
    181e:	81 30       	cpi	r24, 0x01	; 1
    1820:	c9 f4       	brne	.+50     	; 0x1854 <vTaskStartScheduler+0x64>
    1822:	f8 94       	cli
    1824:	8f ef       	ldi	r24, 0xFF	; 255
    1826:	9f ef       	ldi	r25, 0xFF	; 255
    1828:	dc 01       	movw	r26, r24
    182a:	80 93 17 11 	sts	0x1117, r24	; 0x801117 <xNextTaskUnblockTime>
    182e:	90 93 18 11 	sts	0x1118, r25	; 0x801118 <xNextTaskUnblockTime+0x1>
    1832:	a0 93 19 11 	sts	0x1119, r26	; 0x801119 <xNextTaskUnblockTime+0x2>
    1836:	b0 93 1a 11 	sts	0x111A, r27	; 0x80111a <xNextTaskUnblockTime+0x3>
    183a:	81 e0       	ldi	r24, 0x01	; 1
    183c:	80 93 22 11 	sts	0x1122, r24	; 0x801122 <xSchedulerRunning>
    1840:	10 92 24 11 	sts	0x1124, r1	; 0x801124 <xTickCount>
    1844:	10 92 25 11 	sts	0x1125, r1	; 0x801125 <xTickCount+0x1>
    1848:	10 92 26 11 	sts	0x1126, r1	; 0x801126 <xTickCount+0x2>
    184c:	10 92 27 11 	sts	0x1127, r1	; 0x801127 <xTickCount+0x3>
    1850:	0e 94 bd 02 	call	0x57a	; 0x57a <xPortStartScheduler>
    1854:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <uxTopUsedPriority>
    1858:	0f 91       	pop	r16
    185a:	ff 90       	pop	r15
    185c:	ef 90       	pop	r14
    185e:	08 95       	ret

00001860 <vTaskSuspendAll>:
    1860:	80 91 14 11 	lds	r24, 0x1114	; 0x801114 <uxSchedulerSuspended>
    1864:	8f 5f       	subi	r24, 0xFF	; 255
    1866:	80 93 14 11 	sts	0x1114, r24	; 0x801114 <uxSchedulerSuspended>
    186a:	08 95       	ret

0000186c <xTaskGetTickCount>:
    186c:	0f b6       	in	r0, 0x3f	; 63
    186e:	f8 94       	cli
    1870:	0f 92       	push	r0
    1872:	60 91 24 11 	lds	r22, 0x1124	; 0x801124 <xTickCount>
    1876:	70 91 25 11 	lds	r23, 0x1125	; 0x801125 <xTickCount+0x1>
    187a:	80 91 26 11 	lds	r24, 0x1126	; 0x801126 <xTickCount+0x2>
    187e:	90 91 27 11 	lds	r25, 0x1127	; 0x801127 <xTickCount+0x3>
    1882:	0f 90       	pop	r0
    1884:	0f be       	out	0x3f, r0	; 63
    1886:	08 95       	ret

00001888 <xTaskIncrementTick>:
    1888:	cf 92       	push	r12
    188a:	df 92       	push	r13
    188c:	ef 92       	push	r14
    188e:	ff 92       	push	r15
    1890:	cf 93       	push	r28
    1892:	df 93       	push	r29
    1894:	80 91 14 11 	lds	r24, 0x1114	; 0x801114 <uxSchedulerSuspended>
    1898:	81 11       	cpse	r24, r1
    189a:	05 c1       	rjmp	.+522    	; 0x1aa6 <xTaskIncrementTick+0x21e>
    189c:	c0 90 24 11 	lds	r12, 0x1124	; 0x801124 <xTickCount>
    18a0:	d0 90 25 11 	lds	r13, 0x1125	; 0x801125 <xTickCount+0x1>
    18a4:	e0 90 26 11 	lds	r14, 0x1126	; 0x801126 <xTickCount+0x2>
    18a8:	f0 90 27 11 	lds	r15, 0x1127	; 0x801127 <xTickCount+0x3>
    18ac:	8f ef       	ldi	r24, 0xFF	; 255
    18ae:	c8 1a       	sub	r12, r24
    18b0:	d8 0a       	sbc	r13, r24
    18b2:	e8 0a       	sbc	r14, r24
    18b4:	f8 0a       	sbc	r15, r24
    18b6:	c0 92 24 11 	sts	0x1124, r12	; 0x801124 <xTickCount>
    18ba:	d0 92 25 11 	sts	0x1125, r13	; 0x801125 <xTickCount+0x1>
    18be:	e0 92 26 11 	sts	0x1126, r14	; 0x801126 <xTickCount+0x2>
    18c2:	f0 92 27 11 	sts	0x1127, r15	; 0x801127 <xTickCount+0x3>
    18c6:	c1 14       	cp	r12, r1
    18c8:	d1 04       	cpc	r13, r1
    18ca:	e1 04       	cpc	r14, r1
    18cc:	f1 04       	cpc	r15, r1
    18ce:	b1 f4       	brne	.+44     	; 0x18fc <xTaskIncrementTick+0x74>
    18d0:	80 91 4d 11 	lds	r24, 0x114D	; 0x80114d <pxDelayedTaskList>
    18d4:	90 91 4e 11 	lds	r25, 0x114E	; 0x80114e <pxDelayedTaskList+0x1>
    18d8:	20 91 4b 11 	lds	r18, 0x114B	; 0x80114b <pxOverflowDelayedTaskList>
    18dc:	30 91 4c 11 	lds	r19, 0x114C	; 0x80114c <pxOverflowDelayedTaskList+0x1>
    18e0:	30 93 4e 11 	sts	0x114E, r19	; 0x80114e <pxDelayedTaskList+0x1>
    18e4:	20 93 4d 11 	sts	0x114D, r18	; 0x80114d <pxDelayedTaskList>
    18e8:	90 93 4c 11 	sts	0x114C, r25	; 0x80114c <pxOverflowDelayedTaskList+0x1>
    18ec:	80 93 4b 11 	sts	0x114B, r24	; 0x80114b <pxOverflowDelayedTaskList>
    18f0:	80 91 1c 11 	lds	r24, 0x111C	; 0x80111c <xNumOfOverflows>
    18f4:	8f 5f       	subi	r24, 0xFF	; 255
    18f6:	80 93 1c 11 	sts	0x111C, r24	; 0x80111c <xNumOfOverflows>
    18fa:	1c dd       	rcall	.-1480   	; 0x1334 <prvResetNextTaskUnblockTime>
    18fc:	80 91 17 11 	lds	r24, 0x1117	; 0x801117 <xNextTaskUnblockTime>
    1900:	90 91 18 11 	lds	r25, 0x1118	; 0x801118 <xNextTaskUnblockTime+0x1>
    1904:	a0 91 19 11 	lds	r26, 0x1119	; 0x801119 <xNextTaskUnblockTime+0x2>
    1908:	b0 91 1a 11 	lds	r27, 0x111A	; 0x80111a <xNextTaskUnblockTime+0x3>
    190c:	c8 16       	cp	r12, r24
    190e:	d9 06       	cpc	r13, r25
    1910:	ea 06       	cpc	r14, r26
    1912:	fb 06       	cpc	r15, r27
    1914:	20 f4       	brcc	.+8      	; 0x191e <xTaskIncrementTick+0x96>
    1916:	80 e0       	ldi	r24, 0x00	; 0
    1918:	b2 c0       	rjmp	.+356    	; 0x1a7e <xTaskIncrementTick+0x1f6>
    191a:	81 e0       	ldi	r24, 0x01	; 1
    191c:	01 c0       	rjmp	.+2      	; 0x1920 <xTaskIncrementTick+0x98>
    191e:	80 e0       	ldi	r24, 0x00	; 0
    1920:	e0 91 4d 11 	lds	r30, 0x114D	; 0x80114d <pxDelayedTaskList>
    1924:	f0 91 4e 11 	lds	r31, 0x114E	; 0x80114e <pxDelayedTaskList+0x1>
    1928:	90 81       	ld	r25, Z
    192a:	91 11       	cpse	r25, r1
    192c:	0c c0       	rjmp	.+24     	; 0x1946 <xTaskIncrementTick+0xbe>
    192e:	4f ef       	ldi	r20, 0xFF	; 255
    1930:	5f ef       	ldi	r21, 0xFF	; 255
    1932:	ba 01       	movw	r22, r20
    1934:	40 93 17 11 	sts	0x1117, r20	; 0x801117 <xNextTaskUnblockTime>
    1938:	50 93 18 11 	sts	0x1118, r21	; 0x801118 <xNextTaskUnblockTime+0x1>
    193c:	60 93 19 11 	sts	0x1119, r22	; 0x801119 <xNextTaskUnblockTime+0x2>
    1940:	70 93 1a 11 	sts	0x111A, r23	; 0x80111a <xNextTaskUnblockTime+0x3>
    1944:	9c c0       	rjmp	.+312    	; 0x1a7e <xTaskIncrementTick+0x1f6>
    1946:	e0 91 4d 11 	lds	r30, 0x114D	; 0x80114d <pxDelayedTaskList>
    194a:	f0 91 4e 11 	lds	r31, 0x114E	; 0x80114e <pxDelayedTaskList+0x1>
    194e:	07 80       	ldd	r0, Z+7	; 0x07
    1950:	f0 85       	ldd	r31, Z+8	; 0x08
    1952:	e0 2d       	mov	r30, r0
    1954:	00 84       	ldd	r0, Z+8	; 0x08
    1956:	f1 85       	ldd	r31, Z+9	; 0x09
    1958:	e0 2d       	mov	r30, r0
    195a:	42 81       	ldd	r20, Z+2	; 0x02
    195c:	53 81       	ldd	r21, Z+3	; 0x03
    195e:	64 81       	ldd	r22, Z+4	; 0x04
    1960:	75 81       	ldd	r23, Z+5	; 0x05
    1962:	c4 16       	cp	r12, r20
    1964:	d5 06       	cpc	r13, r21
    1966:	e6 06       	cpc	r14, r22
    1968:	f7 06       	cpc	r15, r23
    196a:	48 f4       	brcc	.+18     	; 0x197e <xTaskIncrementTick+0xf6>
    196c:	40 93 17 11 	sts	0x1117, r20	; 0x801117 <xNextTaskUnblockTime>
    1970:	50 93 18 11 	sts	0x1118, r21	; 0x801118 <xNextTaskUnblockTime+0x1>
    1974:	60 93 19 11 	sts	0x1119, r22	; 0x801119 <xNextTaskUnblockTime+0x2>
    1978:	70 93 1a 11 	sts	0x111A, r23	; 0x80111a <xNextTaskUnblockTime+0x3>
    197c:	80 c0       	rjmp	.+256    	; 0x1a7e <xTaskIncrementTick+0x1f6>
    197e:	a4 85       	ldd	r26, Z+12	; 0x0c
    1980:	b5 85       	ldd	r27, Z+13	; 0x0d
    1982:	c6 81       	ldd	r28, Z+6	; 0x06
    1984:	d7 81       	ldd	r29, Z+7	; 0x07
    1986:	20 85       	ldd	r18, Z+8	; 0x08
    1988:	31 85       	ldd	r19, Z+9	; 0x09
    198a:	3f 83       	std	Y+7, r19	; 0x07
    198c:	2e 83       	std	Y+6, r18	; 0x06
    198e:	c0 85       	ldd	r28, Z+8	; 0x08
    1990:	d1 85       	ldd	r29, Z+9	; 0x09
    1992:	26 81       	ldd	r18, Z+6	; 0x06
    1994:	37 81       	ldd	r19, Z+7	; 0x07
    1996:	3d 83       	std	Y+5, r19	; 0x05
    1998:	2c 83       	std	Y+4, r18	; 0x04
    199a:	11 96       	adiw	r26, 0x01	; 1
    199c:	4d 91       	ld	r20, X+
    199e:	5c 91       	ld	r21, X
    19a0:	12 97       	sbiw	r26, 0x02	; 2
    19a2:	9f 01       	movw	r18, r30
    19a4:	2e 5f       	subi	r18, 0xFE	; 254
    19a6:	3f 4f       	sbci	r19, 0xFF	; 255
    19a8:	42 17       	cp	r20, r18
    19aa:	53 07       	cpc	r21, r19
    19ac:	31 f4       	brne	.+12     	; 0x19ba <xTaskIncrementTick+0x132>
    19ae:	40 85       	ldd	r20, Z+8	; 0x08
    19b0:	51 85       	ldd	r21, Z+9	; 0x09
    19b2:	12 96       	adiw	r26, 0x02	; 2
    19b4:	5c 93       	st	X, r21
    19b6:	4e 93       	st	-X, r20
    19b8:	11 97       	sbiw	r26, 0x01	; 1
    19ba:	15 86       	std	Z+13, r1	; 0x0d
    19bc:	14 86       	std	Z+12, r1	; 0x0c
    19be:	9c 91       	ld	r25, X
    19c0:	91 50       	subi	r25, 0x01	; 1
    19c2:	9c 93       	st	X, r25
    19c4:	a0 8d       	ldd	r26, Z+24	; 0x18
    19c6:	b1 8d       	ldd	r27, Z+25	; 0x19
    19c8:	10 97       	sbiw	r26, 0x00	; 0
    19ca:	09 f1       	breq	.+66     	; 0x1a0e <xTaskIncrementTick+0x186>
    19cc:	c2 89       	ldd	r28, Z+18	; 0x12
    19ce:	d3 89       	ldd	r29, Z+19	; 0x13
    19d0:	44 89       	ldd	r20, Z+20	; 0x14
    19d2:	55 89       	ldd	r21, Z+21	; 0x15
    19d4:	5f 83       	std	Y+7, r21	; 0x07
    19d6:	4e 83       	std	Y+6, r20	; 0x06
    19d8:	c4 89       	ldd	r28, Z+20	; 0x14
    19da:	d5 89       	ldd	r29, Z+21	; 0x15
    19dc:	42 89       	ldd	r20, Z+18	; 0x12
    19de:	53 89       	ldd	r21, Z+19	; 0x13
    19e0:	5d 83       	std	Y+5, r21	; 0x05
    19e2:	4c 83       	std	Y+4, r20	; 0x04
    19e4:	11 96       	adiw	r26, 0x01	; 1
    19e6:	6d 91       	ld	r22, X+
    19e8:	7c 91       	ld	r23, X
    19ea:	12 97       	sbiw	r26, 0x02	; 2
    19ec:	af 01       	movw	r20, r30
    19ee:	42 5f       	subi	r20, 0xF2	; 242
    19f0:	5f 4f       	sbci	r21, 0xFF	; 255
    19f2:	64 17       	cp	r22, r20
    19f4:	75 07       	cpc	r23, r21
    19f6:	31 f4       	brne	.+12     	; 0x1a04 <xTaskIncrementTick+0x17c>
    19f8:	44 89       	ldd	r20, Z+20	; 0x14
    19fa:	55 89       	ldd	r21, Z+21	; 0x15
    19fc:	12 96       	adiw	r26, 0x02	; 2
    19fe:	5c 93       	st	X, r21
    1a00:	4e 93       	st	-X, r20
    1a02:	11 97       	sbiw	r26, 0x01	; 1
    1a04:	11 8e       	std	Z+25, r1	; 0x19
    1a06:	10 8e       	std	Z+24, r1	; 0x18
    1a08:	9c 91       	ld	r25, X
    1a0a:	91 50       	subi	r25, 0x01	; 1
    1a0c:	9c 93       	st	X, r25
    1a0e:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1a10:	90 91 23 11 	lds	r25, 0x1123	; 0x801123 <uxTopReadyPriority>
    1a14:	9a 17       	cp	r25, r26
    1a16:	10 f4       	brcc	.+4      	; 0x1a1c <xTaskIncrementTick+0x194>
    1a18:	a0 93 23 11 	sts	0x1123, r26	; 0x801123 <uxTopReadyPriority>
    1a1c:	9b e0       	ldi	r25, 0x0B	; 11
    1a1e:	9a 9f       	mul	r25, r26
    1a20:	d0 01       	movw	r26, r0
    1a22:	11 24       	eor	r1, r1
    1a24:	ab 59       	subi	r26, 0x9B	; 155
    1a26:	be 4e       	sbci	r27, 0xEE	; 238
    1a28:	11 96       	adiw	r26, 0x01	; 1
    1a2a:	0d 90       	ld	r0, X+
    1a2c:	bc 91       	ld	r27, X
    1a2e:	a0 2d       	mov	r26, r0
    1a30:	b7 83       	std	Z+7, r27	; 0x07
    1a32:	a6 83       	std	Z+6, r26	; 0x06
    1a34:	16 96       	adiw	r26, 0x06	; 6
    1a36:	4d 91       	ld	r20, X+
    1a38:	5c 91       	ld	r21, X
    1a3a:	17 97       	sbiw	r26, 0x07	; 7
    1a3c:	51 87       	std	Z+9, r21	; 0x09
    1a3e:	40 87       	std	Z+8, r20	; 0x08
    1a40:	16 96       	adiw	r26, 0x06	; 6
    1a42:	cd 91       	ld	r28, X+
    1a44:	dc 91       	ld	r29, X
    1a46:	17 97       	sbiw	r26, 0x07	; 7
    1a48:	3d 83       	std	Y+5, r19	; 0x05
    1a4a:	2c 83       	std	Y+4, r18	; 0x04
    1a4c:	17 96       	adiw	r26, 0x07	; 7
    1a4e:	3c 93       	st	X, r19
    1a50:	2e 93       	st	-X, r18
    1a52:	16 97       	sbiw	r26, 0x06	; 6
    1a54:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1a56:	9a 9f       	mul	r25, r26
    1a58:	d0 01       	movw	r26, r0
    1a5a:	11 24       	eor	r1, r1
    1a5c:	ab 59       	subi	r26, 0x9B	; 155
    1a5e:	be 4e       	sbci	r27, 0xEE	; 238
    1a60:	b5 87       	std	Z+13, r27	; 0x0d
    1a62:	a4 87       	std	Z+12, r26	; 0x0c
    1a64:	9c 91       	ld	r25, X
    1a66:	9f 5f       	subi	r25, 0xFF	; 255
    1a68:	9c 93       	st	X, r25
    1a6a:	22 8d       	ldd	r18, Z+26	; 0x1a
    1a6c:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1a70:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1a74:	92 8d       	ldd	r25, Z+26	; 0x1a
    1a76:	29 17       	cp	r18, r25
    1a78:	08 f0       	brcs	.+2      	; 0x1a7c <xTaskIncrementTick+0x1f4>
    1a7a:	4f cf       	rjmp	.-354    	; 0x191a <xTaskIncrementTick+0x92>
    1a7c:	51 cf       	rjmp	.-350    	; 0x1920 <xTaskIncrementTick+0x98>
    1a7e:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1a82:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1a86:	e2 8d       	ldd	r30, Z+26	; 0x1a
    1a88:	9b e0       	ldi	r25, 0x0B	; 11
    1a8a:	e9 9f       	mul	r30, r25
    1a8c:	f0 01       	movw	r30, r0
    1a8e:	11 24       	eor	r1, r1
    1a90:	eb 59       	subi	r30, 0x9B	; 155
    1a92:	fe 4e       	sbci	r31, 0xEE	; 238
    1a94:	90 81       	ld	r25, Z
    1a96:	92 30       	cpi	r25, 0x02	; 2
    1a98:	08 f0       	brcs	.+2      	; 0x1a9c <xTaskIncrementTick+0x214>
    1a9a:	81 e0       	ldi	r24, 0x01	; 1
    1a9c:	90 91 1d 11 	lds	r25, 0x111D	; 0x80111d <xYieldPending>
    1aa0:	91 11       	cpse	r25, r1
    1aa2:	16 c0       	rjmp	.+44     	; 0x1ad0 <xTaskIncrementTick+0x248>
    1aa4:	16 c0       	rjmp	.+44     	; 0x1ad2 <xTaskIncrementTick+0x24a>
    1aa6:	80 91 1e 11 	lds	r24, 0x111E	; 0x80111e <xPendedTicks>
    1aaa:	90 91 1f 11 	lds	r25, 0x111F	; 0x80111f <xPendedTicks+0x1>
    1aae:	a0 91 20 11 	lds	r26, 0x1120	; 0x801120 <xPendedTicks+0x2>
    1ab2:	b0 91 21 11 	lds	r27, 0x1121	; 0x801121 <xPendedTicks+0x3>
    1ab6:	01 96       	adiw	r24, 0x01	; 1
    1ab8:	a1 1d       	adc	r26, r1
    1aba:	b1 1d       	adc	r27, r1
    1abc:	80 93 1e 11 	sts	0x111E, r24	; 0x80111e <xPendedTicks>
    1ac0:	90 93 1f 11 	sts	0x111F, r25	; 0x80111f <xPendedTicks+0x1>
    1ac4:	a0 93 20 11 	sts	0x1120, r26	; 0x801120 <xPendedTicks+0x2>
    1ac8:	b0 93 21 11 	sts	0x1121, r27	; 0x801121 <xPendedTicks+0x3>
    1acc:	80 e0       	ldi	r24, 0x00	; 0
    1ace:	01 c0       	rjmp	.+2      	; 0x1ad2 <xTaskIncrementTick+0x24a>
    1ad0:	81 e0       	ldi	r24, 0x01	; 1
    1ad2:	df 91       	pop	r29
    1ad4:	cf 91       	pop	r28
    1ad6:	ff 90       	pop	r15
    1ad8:	ef 90       	pop	r14
    1ada:	df 90       	pop	r13
    1adc:	cf 90       	pop	r12
    1ade:	08 95       	ret

00001ae0 <xTaskResumeAll>:
    1ae0:	cf 92       	push	r12
    1ae2:	df 92       	push	r13
    1ae4:	ef 92       	push	r14
    1ae6:	ff 92       	push	r15
    1ae8:	cf 93       	push	r28
    1aea:	df 93       	push	r29
    1aec:	0f b6       	in	r0, 0x3f	; 63
    1aee:	f8 94       	cli
    1af0:	0f 92       	push	r0
    1af2:	80 91 14 11 	lds	r24, 0x1114	; 0x801114 <uxSchedulerSuspended>
    1af6:	81 50       	subi	r24, 0x01	; 1
    1af8:	80 93 14 11 	sts	0x1114, r24	; 0x801114 <uxSchedulerSuspended>
    1afc:	80 91 14 11 	lds	r24, 0x1114	; 0x801114 <uxSchedulerSuspended>
    1b00:	81 11       	cpse	r24, r1
    1b02:	be c0       	rjmp	.+380    	; 0x1c80 <xTaskResumeAll+0x1a0>
    1b04:	80 91 28 11 	lds	r24, 0x1128	; 0x801128 <uxCurrentNumberOfTasks>
    1b08:	81 11       	cpse	r24, r1
    1b0a:	88 c0       	rjmp	.+272    	; 0x1c1c <xTaskResumeAll+0x13c>
    1b0c:	bc c0       	rjmp	.+376    	; 0x1c86 <xTaskResumeAll+0x1a6>
    1b0e:	e0 91 47 11 	lds	r30, 0x1147	; 0x801147 <xPendingReadyList+0x7>
    1b12:	f0 91 48 11 	lds	r31, 0x1148	; 0x801148 <xPendingReadyList+0x8>
    1b16:	00 84       	ldd	r0, Z+8	; 0x08
    1b18:	f1 85       	ldd	r31, Z+9	; 0x09
    1b1a:	e0 2d       	mov	r30, r0
    1b1c:	a0 8d       	ldd	r26, Z+24	; 0x18
    1b1e:	b1 8d       	ldd	r27, Z+25	; 0x19
    1b20:	c2 89       	ldd	r28, Z+18	; 0x12
    1b22:	d3 89       	ldd	r29, Z+19	; 0x13
    1b24:	84 89       	ldd	r24, Z+20	; 0x14
    1b26:	95 89       	ldd	r25, Z+21	; 0x15
    1b28:	9f 83       	std	Y+7, r25	; 0x07
    1b2a:	8e 83       	std	Y+6, r24	; 0x06
    1b2c:	c4 89       	ldd	r28, Z+20	; 0x14
    1b2e:	d5 89       	ldd	r29, Z+21	; 0x15
    1b30:	82 89       	ldd	r24, Z+18	; 0x12
    1b32:	93 89       	ldd	r25, Z+19	; 0x13
    1b34:	9d 83       	std	Y+5, r25	; 0x05
    1b36:	8c 83       	std	Y+4, r24	; 0x04
    1b38:	11 96       	adiw	r26, 0x01	; 1
    1b3a:	2d 91       	ld	r18, X+
    1b3c:	3c 91       	ld	r19, X
    1b3e:	12 97       	sbiw	r26, 0x02	; 2
    1b40:	cf 01       	movw	r24, r30
    1b42:	0e 96       	adiw	r24, 0x0e	; 14
    1b44:	28 17       	cp	r18, r24
    1b46:	39 07       	cpc	r19, r25
    1b48:	31 f4       	brne	.+12     	; 0x1b56 <xTaskResumeAll+0x76>
    1b4a:	84 89       	ldd	r24, Z+20	; 0x14
    1b4c:	95 89       	ldd	r25, Z+21	; 0x15
    1b4e:	12 96       	adiw	r26, 0x02	; 2
    1b50:	9c 93       	st	X, r25
    1b52:	8e 93       	st	-X, r24
    1b54:	11 97       	sbiw	r26, 0x01	; 1
    1b56:	11 8e       	std	Z+25, r1	; 0x19
    1b58:	10 8e       	std	Z+24, r1	; 0x18
    1b5a:	8c 91       	ld	r24, X
    1b5c:	81 50       	subi	r24, 0x01	; 1
    1b5e:	8c 93       	st	X, r24
    1b60:	a4 85       	ldd	r26, Z+12	; 0x0c
    1b62:	b5 85       	ldd	r27, Z+13	; 0x0d
    1b64:	c6 81       	ldd	r28, Z+6	; 0x06
    1b66:	d7 81       	ldd	r29, Z+7	; 0x07
    1b68:	80 85       	ldd	r24, Z+8	; 0x08
    1b6a:	91 85       	ldd	r25, Z+9	; 0x09
    1b6c:	9f 83       	std	Y+7, r25	; 0x07
    1b6e:	8e 83       	std	Y+6, r24	; 0x06
    1b70:	c0 85       	ldd	r28, Z+8	; 0x08
    1b72:	d1 85       	ldd	r29, Z+9	; 0x09
    1b74:	86 81       	ldd	r24, Z+6	; 0x06
    1b76:	97 81       	ldd	r25, Z+7	; 0x07
    1b78:	9d 83       	std	Y+5, r25	; 0x05
    1b7a:	8c 83       	std	Y+4, r24	; 0x04
    1b7c:	11 96       	adiw	r26, 0x01	; 1
    1b7e:	8d 91       	ld	r24, X+
    1b80:	9c 91       	ld	r25, X
    1b82:	12 97       	sbiw	r26, 0x02	; 2
    1b84:	9f 01       	movw	r18, r30
    1b86:	2e 5f       	subi	r18, 0xFE	; 254
    1b88:	3f 4f       	sbci	r19, 0xFF	; 255
    1b8a:	82 17       	cp	r24, r18
    1b8c:	93 07       	cpc	r25, r19
    1b8e:	31 f4       	brne	.+12     	; 0x1b9c <xTaskResumeAll+0xbc>
    1b90:	80 85       	ldd	r24, Z+8	; 0x08
    1b92:	91 85       	ldd	r25, Z+9	; 0x09
    1b94:	12 96       	adiw	r26, 0x02	; 2
    1b96:	9c 93       	st	X, r25
    1b98:	8e 93       	st	-X, r24
    1b9a:	11 97       	sbiw	r26, 0x01	; 1
    1b9c:	15 86       	std	Z+13, r1	; 0x0d
    1b9e:	14 86       	std	Z+12, r1	; 0x0c
    1ba0:	8c 91       	ld	r24, X
    1ba2:	81 50       	subi	r24, 0x01	; 1
    1ba4:	8c 93       	st	X, r24
    1ba6:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1ba8:	80 91 23 11 	lds	r24, 0x1123	; 0x801123 <uxTopReadyPriority>
    1bac:	8a 17       	cp	r24, r26
    1bae:	10 f4       	brcc	.+4      	; 0x1bb4 <xTaskResumeAll+0xd4>
    1bb0:	a0 93 23 11 	sts	0x1123, r26	; 0x801123 <uxTopReadyPriority>
    1bb4:	8b e0       	ldi	r24, 0x0B	; 11
    1bb6:	8a 9f       	mul	r24, r26
    1bb8:	d0 01       	movw	r26, r0
    1bba:	11 24       	eor	r1, r1
    1bbc:	ab 59       	subi	r26, 0x9B	; 155
    1bbe:	be 4e       	sbci	r27, 0xEE	; 238
    1bc0:	11 96       	adiw	r26, 0x01	; 1
    1bc2:	0d 90       	ld	r0, X+
    1bc4:	bc 91       	ld	r27, X
    1bc6:	a0 2d       	mov	r26, r0
    1bc8:	b7 83       	std	Z+7, r27	; 0x07
    1bca:	a6 83       	std	Z+6, r26	; 0x06
    1bcc:	16 96       	adiw	r26, 0x06	; 6
    1bce:	4d 91       	ld	r20, X+
    1bd0:	5c 91       	ld	r21, X
    1bd2:	17 97       	sbiw	r26, 0x07	; 7
    1bd4:	51 87       	std	Z+9, r21	; 0x09
    1bd6:	40 87       	std	Z+8, r20	; 0x08
    1bd8:	16 96       	adiw	r26, 0x06	; 6
    1bda:	cd 91       	ld	r28, X+
    1bdc:	dc 91       	ld	r29, X
    1bde:	17 97       	sbiw	r26, 0x07	; 7
    1be0:	3d 83       	std	Y+5, r19	; 0x05
    1be2:	2c 83       	std	Y+4, r18	; 0x04
    1be4:	17 96       	adiw	r26, 0x07	; 7
    1be6:	3c 93       	st	X, r19
    1be8:	2e 93       	st	-X, r18
    1bea:	16 97       	sbiw	r26, 0x06	; 6
    1bec:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1bee:	8a 9f       	mul	r24, r26
    1bf0:	d0 01       	movw	r26, r0
    1bf2:	11 24       	eor	r1, r1
    1bf4:	ab 59       	subi	r26, 0x9B	; 155
    1bf6:	be 4e       	sbci	r27, 0xEE	; 238
    1bf8:	b5 87       	std	Z+13, r27	; 0x0d
    1bfa:	a4 87       	std	Z+12, r26	; 0x0c
    1bfc:	8c 91       	ld	r24, X
    1bfe:	8f 5f       	subi	r24, 0xFF	; 255
    1c00:	8c 93       	st	X, r24
    1c02:	92 8d       	ldd	r25, Z+26	; 0x1a
    1c04:	a0 91 d3 11 	lds	r26, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1c08:	b0 91 d4 11 	lds	r27, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1c0c:	5a 96       	adiw	r26, 0x1a	; 26
    1c0e:	8c 91       	ld	r24, X
    1c10:	98 17       	cp	r25, r24
    1c12:	30 f0       	brcs	.+12     	; 0x1c20 <xTaskResumeAll+0x140>
    1c14:	81 e0       	ldi	r24, 0x01	; 1
    1c16:	80 93 1d 11 	sts	0x111D, r24	; 0x80111d <xYieldPending>
    1c1a:	02 c0       	rjmp	.+4      	; 0x1c20 <xTaskResumeAll+0x140>
    1c1c:	e0 e0       	ldi	r30, 0x00	; 0
    1c1e:	f0 e0       	ldi	r31, 0x00	; 0
    1c20:	80 91 40 11 	lds	r24, 0x1140	; 0x801140 <xPendingReadyList>
    1c24:	81 11       	cpse	r24, r1
    1c26:	73 cf       	rjmp	.-282    	; 0x1b0e <xTaskResumeAll+0x2e>
    1c28:	ef 2b       	or	r30, r31
    1c2a:	09 f0       	breq	.+2      	; 0x1c2e <xTaskResumeAll+0x14e>
    1c2c:	83 db       	rcall	.-2298   	; 0x1334 <prvResetNextTaskUnblockTime>
    1c2e:	c0 90 1e 11 	lds	r12, 0x111E	; 0x80111e <xPendedTicks>
    1c32:	d0 90 1f 11 	lds	r13, 0x111F	; 0x80111f <xPendedTicks+0x1>
    1c36:	e0 90 20 11 	lds	r14, 0x1120	; 0x801120 <xPendedTicks+0x2>
    1c3a:	f0 90 21 11 	lds	r15, 0x1121	; 0x801121 <xPendedTicks+0x3>
    1c3e:	c1 14       	cp	r12, r1
    1c40:	d1 04       	cpc	r13, r1
    1c42:	e1 04       	cpc	r14, r1
    1c44:	f1 04       	cpc	r15, r1
    1c46:	a1 f0       	breq	.+40     	; 0x1c70 <xTaskResumeAll+0x190>
    1c48:	1f de       	rcall	.-962    	; 0x1888 <xTaskIncrementTick>
    1c4a:	88 23       	and	r24, r24
    1c4c:	19 f0       	breq	.+6      	; 0x1c54 <xTaskResumeAll+0x174>
    1c4e:	81 e0       	ldi	r24, 0x01	; 1
    1c50:	80 93 1d 11 	sts	0x111D, r24	; 0x80111d <xYieldPending>
    1c54:	81 e0       	ldi	r24, 0x01	; 1
    1c56:	c8 1a       	sub	r12, r24
    1c58:	d1 08       	sbc	r13, r1
    1c5a:	e1 08       	sbc	r14, r1
    1c5c:	f1 08       	sbc	r15, r1
    1c5e:	a1 f7       	brne	.-24     	; 0x1c48 <xTaskResumeAll+0x168>
    1c60:	10 92 1e 11 	sts	0x111E, r1	; 0x80111e <xPendedTicks>
    1c64:	10 92 1f 11 	sts	0x111F, r1	; 0x80111f <xPendedTicks+0x1>
    1c68:	10 92 20 11 	sts	0x1120, r1	; 0x801120 <xPendedTicks+0x2>
    1c6c:	10 92 21 11 	sts	0x1121, r1	; 0x801121 <xPendedTicks+0x3>
    1c70:	80 91 1d 11 	lds	r24, 0x111D	; 0x80111d <xYieldPending>
    1c74:	88 23       	and	r24, r24
    1c76:	31 f0       	breq	.+12     	; 0x1c84 <xTaskResumeAll+0x1a4>
    1c78:	0e 94 ef 02 	call	0x5de	; 0x5de <vPortYield>
    1c7c:	81 e0       	ldi	r24, 0x01	; 1
    1c7e:	03 c0       	rjmp	.+6      	; 0x1c86 <xTaskResumeAll+0x1a6>
    1c80:	80 e0       	ldi	r24, 0x00	; 0
    1c82:	01 c0       	rjmp	.+2      	; 0x1c86 <xTaskResumeAll+0x1a6>
    1c84:	80 e0       	ldi	r24, 0x00	; 0
    1c86:	0f 90       	pop	r0
    1c88:	0f be       	out	0x3f, r0	; 63
    1c8a:	df 91       	pop	r29
    1c8c:	cf 91       	pop	r28
    1c8e:	ff 90       	pop	r15
    1c90:	ef 90       	pop	r14
    1c92:	df 90       	pop	r13
    1c94:	cf 90       	pop	r12
    1c96:	08 95       	ret

00001c98 <xTaskDelayUntil>:
    1c98:	8f 92       	push	r8
    1c9a:	9f 92       	push	r9
    1c9c:	af 92       	push	r10
    1c9e:	bf 92       	push	r11
    1ca0:	cf 92       	push	r12
    1ca2:	df 92       	push	r13
    1ca4:	ef 92       	push	r14
    1ca6:	ff 92       	push	r15
    1ca8:	1f 93       	push	r17
    1caa:	cf 93       	push	r28
    1cac:	df 93       	push	r29
    1cae:	ec 01       	movw	r28, r24
    1cb0:	6a 01       	movw	r12, r20
    1cb2:	7b 01       	movw	r14, r22
    1cb4:	d5 dd       	rcall	.-1110   	; 0x1860 <vTaskSuspendAll>
    1cb6:	80 90 24 11 	lds	r8, 0x1124	; 0x801124 <xTickCount>
    1cba:	90 90 25 11 	lds	r9, 0x1125	; 0x801125 <xTickCount+0x1>
    1cbe:	a0 90 26 11 	lds	r10, 0x1126	; 0x801126 <xTickCount+0x2>
    1cc2:	b0 90 27 11 	lds	r11, 0x1127	; 0x801127 <xTickCount+0x3>
    1cc6:	88 81       	ld	r24, Y
    1cc8:	99 81       	ldd	r25, Y+1	; 0x01
    1cca:	aa 81       	ldd	r26, Y+2	; 0x02
    1ccc:	bb 81       	ldd	r27, Y+3	; 0x03
    1cce:	ac 01       	movw	r20, r24
    1cd0:	bd 01       	movw	r22, r26
    1cd2:	4c 0d       	add	r20, r12
    1cd4:	5d 1d       	adc	r21, r13
    1cd6:	6e 1d       	adc	r22, r14
    1cd8:	7f 1d       	adc	r23, r15
    1cda:	88 16       	cp	r8, r24
    1cdc:	99 06       	cpc	r9, r25
    1cde:	aa 06       	cpc	r10, r26
    1ce0:	bb 06       	cpc	r11, r27
    1ce2:	60 f4       	brcc	.+24     	; 0x1cfc <xTaskDelayUntil+0x64>
    1ce4:	48 17       	cp	r20, r24
    1ce6:	59 07       	cpc	r21, r25
    1ce8:	6a 07       	cpc	r22, r26
    1cea:	7b 07       	cpc	r23, r27
    1cec:	98 f4       	brcc	.+38     	; 0x1d14 <xTaskDelayUntil+0x7c>
    1cee:	84 16       	cp	r8, r20
    1cf0:	95 06       	cpc	r9, r21
    1cf2:	a6 06       	cpc	r10, r22
    1cf4:	b7 06       	cpc	r11, r23
    1cf6:	80 f0       	brcs	.+32     	; 0x1d18 <xTaskDelayUntil+0x80>
    1cf8:	10 e0       	ldi	r17, 0x00	; 0
    1cfa:	13 c0       	rjmp	.+38     	; 0x1d22 <xTaskDelayUntil+0x8a>
    1cfc:	48 17       	cp	r20, r24
    1cfe:	59 07       	cpc	r21, r25
    1d00:	6a 07       	cpc	r22, r26
    1d02:	7b 07       	cpc	r23, r27
    1d04:	58 f0       	brcs	.+22     	; 0x1d1c <xTaskDelayUntil+0x84>
    1d06:	84 16       	cp	r8, r20
    1d08:	95 06       	cpc	r9, r21
    1d0a:	a6 06       	cpc	r10, r22
    1d0c:	b7 06       	cpc	r11, r23
    1d0e:	40 f0       	brcs	.+16     	; 0x1d20 <xTaskDelayUntil+0x88>
    1d10:	10 e0       	ldi	r17, 0x00	; 0
    1d12:	07 c0       	rjmp	.+14     	; 0x1d22 <xTaskDelayUntil+0x8a>
    1d14:	10 e0       	ldi	r17, 0x00	; 0
    1d16:	05 c0       	rjmp	.+10     	; 0x1d22 <xTaskDelayUntil+0x8a>
    1d18:	11 e0       	ldi	r17, 0x01	; 1
    1d1a:	03 c0       	rjmp	.+6      	; 0x1d22 <xTaskDelayUntil+0x8a>
    1d1c:	11 e0       	ldi	r17, 0x01	; 1
    1d1e:	01 c0       	rjmp	.+2      	; 0x1d22 <xTaskDelayUntil+0x8a>
    1d20:	11 e0       	ldi	r17, 0x01	; 1
    1d22:	48 83       	st	Y, r20
    1d24:	59 83       	std	Y+1, r21	; 0x01
    1d26:	6a 83       	std	Y+2, r22	; 0x02
    1d28:	7b 83       	std	Y+3, r23	; 0x03
    1d2a:	11 23       	and	r17, r17
    1d2c:	41 f0       	breq	.+16     	; 0x1d3e <xTaskDelayUntil+0xa6>
    1d2e:	cb 01       	movw	r24, r22
    1d30:	ba 01       	movw	r22, r20
    1d32:	68 19       	sub	r22, r8
    1d34:	79 09       	sbc	r23, r9
    1d36:	8a 09       	sbc	r24, r10
    1d38:	9b 09       	sbc	r25, r11
    1d3a:	40 e0       	ldi	r20, 0x00	; 0
    1d3c:	6b dc       	rcall	.-1834   	; 0x1614 <prvAddCurrentTaskToDelayedList>
    1d3e:	d0 de       	rcall	.-608    	; 0x1ae0 <xTaskResumeAll>
    1d40:	81 11       	cpse	r24, r1
    1d42:	02 c0       	rjmp	.+4      	; 0x1d48 <xTaskDelayUntil+0xb0>
    1d44:	0e 94 ef 02 	call	0x5de	; 0x5de <vPortYield>
    1d48:	81 2f       	mov	r24, r17
    1d4a:	df 91       	pop	r29
    1d4c:	cf 91       	pop	r28
    1d4e:	1f 91       	pop	r17
    1d50:	ff 90       	pop	r15
    1d52:	ef 90       	pop	r14
    1d54:	df 90       	pop	r13
    1d56:	cf 90       	pop	r12
    1d58:	bf 90       	pop	r11
    1d5a:	af 90       	pop	r10
    1d5c:	9f 90       	pop	r9
    1d5e:	8f 90       	pop	r8
    1d60:	08 95       	ret

00001d62 <vTaskDelay>:
    1d62:	cf 92       	push	r12
    1d64:	df 92       	push	r13
    1d66:	ef 92       	push	r14
    1d68:	ff 92       	push	r15
    1d6a:	6b 01       	movw	r12, r22
    1d6c:	7c 01       	movw	r14, r24
    1d6e:	67 2b       	or	r22, r23
    1d70:	68 2b       	or	r22, r24
    1d72:	69 2b       	or	r22, r25
    1d74:	39 f0       	breq	.+14     	; 0x1d84 <vTaskDelay+0x22>
    1d76:	74 dd       	rcall	.-1304   	; 0x1860 <vTaskSuspendAll>
    1d78:	40 e0       	ldi	r20, 0x00	; 0
    1d7a:	c7 01       	movw	r24, r14
    1d7c:	b6 01       	movw	r22, r12
    1d7e:	4a dc       	rcall	.-1900   	; 0x1614 <prvAddCurrentTaskToDelayedList>
    1d80:	af de       	rcall	.-674    	; 0x1ae0 <xTaskResumeAll>
    1d82:	01 c0       	rjmp	.+2      	; 0x1d86 <vTaskDelay+0x24>
    1d84:	80 e0       	ldi	r24, 0x00	; 0
    1d86:	81 11       	cpse	r24, r1
    1d88:	02 c0       	rjmp	.+4      	; 0x1d8e <vTaskDelay+0x2c>
    1d8a:	0e 94 ef 02 	call	0x5de	; 0x5de <vPortYield>
    1d8e:	ff 90       	pop	r15
    1d90:	ef 90       	pop	r14
    1d92:	df 90       	pop	r13
    1d94:	cf 90       	pop	r12
    1d96:	08 95       	ret

00001d98 <vTaskSwitchContext>:
    1d98:	80 91 14 11 	lds	r24, 0x1114	; 0x801114 <uxSchedulerSuspended>
    1d9c:	88 23       	and	r24, r24
    1d9e:	21 f0       	breq	.+8      	; 0x1da8 <vTaskSwitchContext+0x10>
    1da0:	81 e0       	ldi	r24, 0x01	; 1
    1da2:	80 93 1d 11 	sts	0x111D, r24	; 0x80111d <xYieldPending>
    1da6:	08 95       	ret
    1da8:	10 92 1d 11 	sts	0x111D, r1	; 0x80111d <xYieldPending>
    1dac:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1db0:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1db4:	20 81       	ld	r18, Z
    1db6:	31 81       	ldd	r19, Z+1	; 0x01
    1db8:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1dbc:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1dc0:	83 8d       	ldd	r24, Z+27	; 0x1b
    1dc2:	94 8d       	ldd	r25, Z+28	; 0x1c
    1dc4:	82 17       	cp	r24, r18
    1dc6:	93 07       	cpc	r25, r19
    1dc8:	60 f0       	brcs	.+24     	; 0x1de2 <vTaskSwitchContext+0x4a>
    1dca:	60 91 d3 11 	lds	r22, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1dce:	70 91 d4 11 	lds	r23, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1dd2:	63 5e       	subi	r22, 0xE3	; 227
    1dd4:	7f 4f       	sbci	r23, 0xFF	; 255
    1dd6:	80 91 d3 11 	lds	r24, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1dda:	90 91 d4 11 	lds	r25, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1dde:	0e 94 2a 17 	call	0x2e54	; 0x2e54 <vApplicationStackOverflowHook>
    1de2:	80 91 23 11 	lds	r24, 0x1123	; 0x801123 <uxTopReadyPriority>
    1de6:	01 c0       	rjmp	.+2      	; 0x1dea <vTaskSwitchContext+0x52>
    1de8:	81 50       	subi	r24, 0x01	; 1
    1dea:	28 2f       	mov	r18, r24
    1dec:	30 e0       	ldi	r19, 0x00	; 0
    1dee:	9b e0       	ldi	r25, 0x0B	; 11
    1df0:	92 9f       	mul	r25, r18
    1df2:	f0 01       	movw	r30, r0
    1df4:	93 9f       	mul	r25, r19
    1df6:	f0 0d       	add	r31, r0
    1df8:	11 24       	eor	r1, r1
    1dfa:	eb 59       	subi	r30, 0x9B	; 155
    1dfc:	fe 4e       	sbci	r31, 0xEE	; 238
    1dfe:	90 81       	ld	r25, Z
    1e00:	99 23       	and	r25, r25
    1e02:	91 f3       	breq	.-28     	; 0x1de8 <vTaskSwitchContext+0x50>
    1e04:	9b e0       	ldi	r25, 0x0B	; 11
    1e06:	92 9f       	mul	r25, r18
    1e08:	a0 01       	movw	r20, r0
    1e0a:	93 9f       	mul	r25, r19
    1e0c:	50 0d       	add	r21, r0
    1e0e:	11 24       	eor	r1, r1
    1e10:	df 01       	movw	r26, r30
    1e12:	01 80       	ldd	r0, Z+1	; 0x01
    1e14:	f2 81       	ldd	r31, Z+2	; 0x02
    1e16:	e0 2d       	mov	r30, r0
    1e18:	04 80       	ldd	r0, Z+4	; 0x04
    1e1a:	f5 81       	ldd	r31, Z+5	; 0x05
    1e1c:	e0 2d       	mov	r30, r0
    1e1e:	12 96       	adiw	r26, 0x02	; 2
    1e20:	fc 93       	st	X, r31
    1e22:	ee 93       	st	-X, r30
    1e24:	11 97       	sbiw	r26, 0x01	; 1
    1e26:	48 59       	subi	r20, 0x98	; 152
    1e28:	5e 4e       	sbci	r21, 0xEE	; 238
    1e2a:	e4 17       	cp	r30, r20
    1e2c:	f5 07       	cpc	r31, r21
    1e2e:	29 f4       	brne	.+10     	; 0x1e3a <vTaskSwitchContext+0xa2>
    1e30:	44 81       	ldd	r20, Z+4	; 0x04
    1e32:	55 81       	ldd	r21, Z+5	; 0x05
    1e34:	fd 01       	movw	r30, r26
    1e36:	52 83       	std	Z+2, r21	; 0x02
    1e38:	41 83       	std	Z+1, r20	; 0x01
    1e3a:	9b e0       	ldi	r25, 0x0B	; 11
    1e3c:	92 9f       	mul	r25, r18
    1e3e:	f0 01       	movw	r30, r0
    1e40:	93 9f       	mul	r25, r19
    1e42:	f0 0d       	add	r31, r0
    1e44:	11 24       	eor	r1, r1
    1e46:	eb 59       	subi	r30, 0x9B	; 155
    1e48:	fe 4e       	sbci	r31, 0xEE	; 238
    1e4a:	01 80       	ldd	r0, Z+1	; 0x01
    1e4c:	f2 81       	ldd	r31, Z+2	; 0x02
    1e4e:	e0 2d       	mov	r30, r0
    1e50:	20 85       	ldd	r18, Z+8	; 0x08
    1e52:	31 85       	ldd	r19, Z+9	; 0x09
    1e54:	30 93 d4 11 	sts	0x11D4, r19	; 0x8011d4 <pxCurrentTCB+0x1>
    1e58:	20 93 d3 11 	sts	0x11D3, r18	; 0x8011d3 <pxCurrentTCB>
    1e5c:	80 93 23 11 	sts	0x1123, r24	; 0x801123 <uxTopReadyPriority>
    1e60:	08 95       	ret

00001e62 <vTaskPlaceOnEventList>:
    1e62:	cf 92       	push	r12
    1e64:	df 92       	push	r13
    1e66:	ef 92       	push	r14
    1e68:	ff 92       	push	r15
    1e6a:	6a 01       	movw	r12, r20
    1e6c:	7b 01       	movw	r14, r22
    1e6e:	60 91 d3 11 	lds	r22, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1e72:	70 91 d4 11 	lds	r23, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1e76:	62 5f       	subi	r22, 0xF2	; 242
    1e78:	7f 4f       	sbci	r23, 0xFF	; 255
    1e7a:	0e 94 36 02 	call	0x46c	; 0x46c <vListInsert>
    1e7e:	41 e0       	ldi	r20, 0x01	; 1
    1e80:	c7 01       	movw	r24, r14
    1e82:	b6 01       	movw	r22, r12
    1e84:	c7 db       	rcall	.-2162   	; 0x1614 <prvAddCurrentTaskToDelayedList>
    1e86:	ff 90       	pop	r15
    1e88:	ef 90       	pop	r14
    1e8a:	df 90       	pop	r13
    1e8c:	cf 90       	pop	r12
    1e8e:	08 95       	ret

00001e90 <vTaskPlaceOnEventListRestricted>:
    1e90:	cf 93       	push	r28
    1e92:	df 93       	push	r29
    1e94:	fc 01       	movw	r30, r24
    1e96:	cb 01       	movw	r24, r22
    1e98:	ba 01       	movw	r22, r20
    1e9a:	a1 81       	ldd	r26, Z+1	; 0x01
    1e9c:	b2 81       	ldd	r27, Z+2	; 0x02
    1e9e:	c0 91 d3 11 	lds	r28, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1ea2:	d0 91 d4 11 	lds	r29, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1ea6:	bb 8b       	std	Y+19, r27	; 0x13
    1ea8:	aa 8b       	std	Y+18, r26	; 0x12
    1eaa:	c0 91 d3 11 	lds	r28, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1eae:	d0 91 d4 11 	lds	r29, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1eb2:	16 96       	adiw	r26, 0x06	; 6
    1eb4:	4d 91       	ld	r20, X+
    1eb6:	5c 91       	ld	r21, X
    1eb8:	17 97       	sbiw	r26, 0x07	; 7
    1eba:	5d 8b       	std	Y+21, r21	; 0x15
    1ebc:	4c 8b       	std	Y+20, r20	; 0x14
    1ebe:	16 96       	adiw	r26, 0x06	; 6
    1ec0:	cd 91       	ld	r28, X+
    1ec2:	dc 91       	ld	r29, X
    1ec4:	17 97       	sbiw	r26, 0x07	; 7
    1ec6:	40 91 d3 11 	lds	r20, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1eca:	50 91 d4 11 	lds	r21, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1ece:	42 5f       	subi	r20, 0xF2	; 242
    1ed0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ed2:	5d 83       	std	Y+5, r21	; 0x05
    1ed4:	4c 83       	std	Y+4, r20	; 0x04
    1ed6:	40 91 d3 11 	lds	r20, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1eda:	50 91 d4 11 	lds	r21, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1ede:	42 5f       	subi	r20, 0xF2	; 242
    1ee0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ee2:	17 96       	adiw	r26, 0x07	; 7
    1ee4:	5c 93       	st	X, r21
    1ee6:	4e 93       	st	-X, r20
    1ee8:	16 97       	sbiw	r26, 0x06	; 6
    1eea:	a0 91 d3 11 	lds	r26, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    1eee:	b0 91 d4 11 	lds	r27, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    1ef2:	59 96       	adiw	r26, 0x19	; 25
    1ef4:	fc 93       	st	X, r31
    1ef6:	ee 93       	st	-X, r30
    1ef8:	58 97       	sbiw	r26, 0x18	; 24
    1efa:	30 81       	ld	r19, Z
    1efc:	3f 5f       	subi	r19, 0xFF	; 255
    1efe:	30 83       	st	Z, r19
    1f00:	22 23       	and	r18, r18
    1f02:	19 f0       	breq	.+6      	; 0x1f0a <vTaskPlaceOnEventListRestricted+0x7a>
    1f04:	6f ef       	ldi	r22, 0xFF	; 255
    1f06:	7f ef       	ldi	r23, 0xFF	; 255
    1f08:	cb 01       	movw	r24, r22
    1f0a:	42 2f       	mov	r20, r18
    1f0c:	83 db       	rcall	.-2298   	; 0x1614 <prvAddCurrentTaskToDelayedList>
    1f0e:	df 91       	pop	r29
    1f10:	cf 91       	pop	r28
    1f12:	08 95       	ret

00001f14 <xTaskRemoveFromEventList>:
    1f14:	cf 93       	push	r28
    1f16:	df 93       	push	r29
    1f18:	dc 01       	movw	r26, r24
    1f1a:	17 96       	adiw	r26, 0x07	; 7
    1f1c:	ed 91       	ld	r30, X+
    1f1e:	fc 91       	ld	r31, X
    1f20:	18 97       	sbiw	r26, 0x08	; 8
    1f22:	00 84       	ldd	r0, Z+8	; 0x08
    1f24:	f1 85       	ldd	r31, Z+9	; 0x09
    1f26:	e0 2d       	mov	r30, r0
    1f28:	a0 8d       	ldd	r26, Z+24	; 0x18
    1f2a:	b1 8d       	ldd	r27, Z+25	; 0x19
    1f2c:	c2 89       	ldd	r28, Z+18	; 0x12
    1f2e:	d3 89       	ldd	r29, Z+19	; 0x13
    1f30:	84 89       	ldd	r24, Z+20	; 0x14
    1f32:	95 89       	ldd	r25, Z+21	; 0x15
    1f34:	9f 83       	std	Y+7, r25	; 0x07
    1f36:	8e 83       	std	Y+6, r24	; 0x06
    1f38:	c4 89       	ldd	r28, Z+20	; 0x14
    1f3a:	d5 89       	ldd	r29, Z+21	; 0x15
    1f3c:	82 89       	ldd	r24, Z+18	; 0x12
    1f3e:	93 89       	ldd	r25, Z+19	; 0x13
    1f40:	9d 83       	std	Y+5, r25	; 0x05
    1f42:	8c 83       	std	Y+4, r24	; 0x04
    1f44:	11 96       	adiw	r26, 0x01	; 1
    1f46:	8d 91       	ld	r24, X+
    1f48:	9c 91       	ld	r25, X
    1f4a:	12 97       	sbiw	r26, 0x02	; 2
    1f4c:	9f 01       	movw	r18, r30
    1f4e:	22 5f       	subi	r18, 0xF2	; 242
    1f50:	3f 4f       	sbci	r19, 0xFF	; 255
    1f52:	82 17       	cp	r24, r18
    1f54:	93 07       	cpc	r25, r19
    1f56:	31 f4       	brne	.+12     	; 0x1f64 <xTaskRemoveFromEventList+0x50>
    1f58:	84 89       	ldd	r24, Z+20	; 0x14
    1f5a:	95 89       	ldd	r25, Z+21	; 0x15
    1f5c:	12 96       	adiw	r26, 0x02	; 2
    1f5e:	9c 93       	st	X, r25
    1f60:	8e 93       	st	-X, r24
    1f62:	11 97       	sbiw	r26, 0x01	; 1
    1f64:	11 8e       	std	Z+25, r1	; 0x19
    1f66:	10 8e       	std	Z+24, r1	; 0x18
    1f68:	8c 91       	ld	r24, X
    1f6a:	81 50       	subi	r24, 0x01	; 1
    1f6c:	8c 93       	st	X, r24
    1f6e:	80 91 14 11 	lds	r24, 0x1114	; 0x801114 <uxSchedulerSuspended>
    1f72:	81 11       	cpse	r24, r1
    1f74:	52 c0       	rjmp	.+164    	; 0x201a <__DATA_REGION_LENGTH__+0x1a>
    1f76:	a4 85       	ldd	r26, Z+12	; 0x0c
    1f78:	b5 85       	ldd	r27, Z+13	; 0x0d
    1f7a:	c6 81       	ldd	r28, Z+6	; 0x06
    1f7c:	d7 81       	ldd	r29, Z+7	; 0x07
    1f7e:	80 85       	ldd	r24, Z+8	; 0x08
    1f80:	91 85       	ldd	r25, Z+9	; 0x09
    1f82:	9f 83       	std	Y+7, r25	; 0x07
    1f84:	8e 83       	std	Y+6, r24	; 0x06
    1f86:	c0 85       	ldd	r28, Z+8	; 0x08
    1f88:	d1 85       	ldd	r29, Z+9	; 0x09
    1f8a:	86 81       	ldd	r24, Z+6	; 0x06
    1f8c:	97 81       	ldd	r25, Z+7	; 0x07
    1f8e:	9d 83       	std	Y+5, r25	; 0x05
    1f90:	8c 83       	std	Y+4, r24	; 0x04
    1f92:	11 96       	adiw	r26, 0x01	; 1
    1f94:	8d 91       	ld	r24, X+
    1f96:	9c 91       	ld	r25, X
    1f98:	12 97       	sbiw	r26, 0x02	; 2
    1f9a:	9f 01       	movw	r18, r30
    1f9c:	2e 5f       	subi	r18, 0xFE	; 254
    1f9e:	3f 4f       	sbci	r19, 0xFF	; 255
    1fa0:	82 17       	cp	r24, r18
    1fa2:	93 07       	cpc	r25, r19
    1fa4:	31 f4       	brne	.+12     	; 0x1fb2 <xTaskRemoveFromEventList+0x9e>
    1fa6:	80 85       	ldd	r24, Z+8	; 0x08
    1fa8:	91 85       	ldd	r25, Z+9	; 0x09
    1faa:	12 96       	adiw	r26, 0x02	; 2
    1fac:	9c 93       	st	X, r25
    1fae:	8e 93       	st	-X, r24
    1fb0:	11 97       	sbiw	r26, 0x01	; 1
    1fb2:	15 86       	std	Z+13, r1	; 0x0d
    1fb4:	14 86       	std	Z+12, r1	; 0x0c
    1fb6:	8c 91       	ld	r24, X
    1fb8:	81 50       	subi	r24, 0x01	; 1
    1fba:	8c 93       	st	X, r24
    1fbc:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1fbe:	80 91 23 11 	lds	r24, 0x1123	; 0x801123 <uxTopReadyPriority>
    1fc2:	8a 17       	cp	r24, r26
    1fc4:	10 f4       	brcc	.+4      	; 0x1fca <xTaskRemoveFromEventList+0xb6>
    1fc6:	a0 93 23 11 	sts	0x1123, r26	; 0x801123 <uxTopReadyPriority>
    1fca:	8b e0       	ldi	r24, 0x0B	; 11
    1fcc:	8a 9f       	mul	r24, r26
    1fce:	d0 01       	movw	r26, r0
    1fd0:	11 24       	eor	r1, r1
    1fd2:	ab 59       	subi	r26, 0x9B	; 155
    1fd4:	be 4e       	sbci	r27, 0xEE	; 238
    1fd6:	11 96       	adiw	r26, 0x01	; 1
    1fd8:	0d 90       	ld	r0, X+
    1fda:	bc 91       	ld	r27, X
    1fdc:	a0 2d       	mov	r26, r0
    1fde:	b7 83       	std	Z+7, r27	; 0x07
    1fe0:	a6 83       	std	Z+6, r26	; 0x06
    1fe2:	16 96       	adiw	r26, 0x06	; 6
    1fe4:	4d 91       	ld	r20, X+
    1fe6:	5c 91       	ld	r21, X
    1fe8:	17 97       	sbiw	r26, 0x07	; 7
    1fea:	51 87       	std	Z+9, r21	; 0x09
    1fec:	40 87       	std	Z+8, r20	; 0x08
    1fee:	16 96       	adiw	r26, 0x06	; 6
    1ff0:	cd 91       	ld	r28, X+
    1ff2:	dc 91       	ld	r29, X
    1ff4:	17 97       	sbiw	r26, 0x07	; 7
    1ff6:	3d 83       	std	Y+5, r19	; 0x05
    1ff8:	2c 83       	std	Y+4, r18	; 0x04
    1ffa:	17 96       	adiw	r26, 0x07	; 7
    1ffc:	3c 93       	st	X, r19
    1ffe:	2e 93       	st	-X, r18
    2000:	16 97       	sbiw	r26, 0x06	; 6
    2002:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2004:	8a 9f       	mul	r24, r26
    2006:	d0 01       	movw	r26, r0
    2008:	11 24       	eor	r1, r1
    200a:	ab 59       	subi	r26, 0x9B	; 155
    200c:	be 4e       	sbci	r27, 0xEE	; 238
    200e:	b5 87       	std	Z+13, r27	; 0x0d
    2010:	a4 87       	std	Z+12, r26	; 0x0c
    2012:	8c 91       	ld	r24, X
    2014:	8f 5f       	subi	r24, 0xFF	; 255
    2016:	8c 93       	st	X, r24
    2018:	1c c0       	rjmp	.+56     	; 0x2052 <__DATA_REGION_LENGTH__+0x52>
    201a:	40 e4       	ldi	r20, 0x40	; 64
    201c:	51 e1       	ldi	r21, 0x11	; 17
    201e:	da 01       	movw	r26, r20
    2020:	11 96       	adiw	r26, 0x01	; 1
    2022:	cd 91       	ld	r28, X+
    2024:	dc 91       	ld	r29, X
    2026:	12 97       	sbiw	r26, 0x02	; 2
    2028:	d3 8b       	std	Z+19, r29	; 0x13
    202a:	c2 8b       	std	Z+18, r28	; 0x12
    202c:	8e 81       	ldd	r24, Y+6	; 0x06
    202e:	9f 81       	ldd	r25, Y+7	; 0x07
    2030:	95 8b       	std	Z+21, r25	; 0x15
    2032:	84 8b       	std	Z+20, r24	; 0x14
    2034:	8e 81       	ldd	r24, Y+6	; 0x06
    2036:	9f 81       	ldd	r25, Y+7	; 0x07
    2038:	dc 01       	movw	r26, r24
    203a:	15 96       	adiw	r26, 0x05	; 5
    203c:	3c 93       	st	X, r19
    203e:	2e 93       	st	-X, r18
    2040:	14 97       	sbiw	r26, 0x04	; 4
    2042:	3f 83       	std	Y+7, r19	; 0x07
    2044:	2e 83       	std	Y+6, r18	; 0x06
    2046:	51 8f       	std	Z+25, r21	; 0x19
    2048:	40 8f       	std	Z+24, r20	; 0x18
    204a:	da 01       	movw	r26, r20
    204c:	8c 91       	ld	r24, X
    204e:	8f 5f       	subi	r24, 0xFF	; 255
    2050:	8c 93       	st	X, r24
    2052:	92 8d       	ldd	r25, Z+26	; 0x1a
    2054:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    2058:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    205c:	82 8d       	ldd	r24, Z+26	; 0x1a
    205e:	89 17       	cp	r24, r25
    2060:	20 f4       	brcc	.+8      	; 0x206a <__DATA_REGION_LENGTH__+0x6a>
    2062:	81 e0       	ldi	r24, 0x01	; 1
    2064:	80 93 1d 11 	sts	0x111D, r24	; 0x80111d <xYieldPending>
    2068:	01 c0       	rjmp	.+2      	; 0x206c <__DATA_REGION_LENGTH__+0x6c>
    206a:	80 e0       	ldi	r24, 0x00	; 0
    206c:	df 91       	pop	r29
    206e:	cf 91       	pop	r28
    2070:	08 95       	ret

00002072 <vTaskSetTimeOutState>:
    2072:	0f b6       	in	r0, 0x3f	; 63
    2074:	f8 94       	cli
    2076:	0f 92       	push	r0
    2078:	20 91 1c 11 	lds	r18, 0x111C	; 0x80111c <xNumOfOverflows>
    207c:	fc 01       	movw	r30, r24
    207e:	20 83       	st	Z, r18
    2080:	40 91 24 11 	lds	r20, 0x1124	; 0x801124 <xTickCount>
    2084:	50 91 25 11 	lds	r21, 0x1125	; 0x801125 <xTickCount+0x1>
    2088:	60 91 26 11 	lds	r22, 0x1126	; 0x801126 <xTickCount+0x2>
    208c:	70 91 27 11 	lds	r23, 0x1127	; 0x801127 <xTickCount+0x3>
    2090:	41 83       	std	Z+1, r20	; 0x01
    2092:	52 83       	std	Z+2, r21	; 0x02
    2094:	63 83       	std	Z+3, r22	; 0x03
    2096:	74 83       	std	Z+4, r23	; 0x04
    2098:	0f 90       	pop	r0
    209a:	0f be       	out	0x3f, r0	; 63
    209c:	08 95       	ret

0000209e <vTaskInternalSetTimeOutState>:
    209e:	20 91 1c 11 	lds	r18, 0x111C	; 0x80111c <xNumOfOverflows>
    20a2:	fc 01       	movw	r30, r24
    20a4:	20 83       	st	Z, r18
    20a6:	40 91 24 11 	lds	r20, 0x1124	; 0x801124 <xTickCount>
    20aa:	50 91 25 11 	lds	r21, 0x1125	; 0x801125 <xTickCount+0x1>
    20ae:	60 91 26 11 	lds	r22, 0x1126	; 0x801126 <xTickCount+0x2>
    20b2:	70 91 27 11 	lds	r23, 0x1127	; 0x801127 <xTickCount+0x3>
    20b6:	41 83       	std	Z+1, r20	; 0x01
    20b8:	52 83       	std	Z+2, r21	; 0x02
    20ba:	63 83       	std	Z+3, r22	; 0x03
    20bc:	74 83       	std	Z+4, r23	; 0x04
    20be:	08 95       	ret

000020c0 <xTaskCheckForTimeOut>:
    20c0:	8f 92       	push	r8
    20c2:	9f 92       	push	r9
    20c4:	af 92       	push	r10
    20c6:	bf 92       	push	r11
    20c8:	cf 92       	push	r12
    20ca:	df 92       	push	r13
    20cc:	ef 92       	push	r14
    20ce:	ff 92       	push	r15
    20d0:	0f 93       	push	r16
    20d2:	1f 93       	push	r17
    20d4:	cf 93       	push	r28
    20d6:	df 93       	push	r29
    20d8:	fb 01       	movw	r30, r22
    20da:	0f b6       	in	r0, 0x3f	; 63
    20dc:	f8 94       	cli
    20de:	0f 92       	push	r0
    20e0:	c0 90 24 11 	lds	r12, 0x1124	; 0x801124 <xTickCount>
    20e4:	d0 90 25 11 	lds	r13, 0x1125	; 0x801125 <xTickCount+0x1>
    20e8:	e0 90 26 11 	lds	r14, 0x1126	; 0x801126 <xTickCount+0x2>
    20ec:	f0 90 27 11 	lds	r15, 0x1127	; 0x801127 <xTickCount+0x3>
    20f0:	dc 01       	movw	r26, r24
    20f2:	11 96       	adiw	r26, 0x01	; 1
    20f4:	0d 91       	ld	r16, X+
    20f6:	1d 91       	ld	r17, X+
    20f8:	2d 91       	ld	r18, X+
    20fa:	3c 91       	ld	r19, X
    20fc:	14 97       	sbiw	r26, 0x04	; 4
    20fe:	46 01       	movw	r8, r12
    2100:	57 01       	movw	r10, r14
    2102:	80 1a       	sub	r8, r16
    2104:	91 0a       	sbc	r9, r17
    2106:	a2 0a       	sbc	r10, r18
    2108:	b3 0a       	sbc	r11, r19
    210a:	40 81       	ld	r20, Z
    210c:	51 81       	ldd	r21, Z+1	; 0x01
    210e:	62 81       	ldd	r22, Z+2	; 0x02
    2110:	73 81       	ldd	r23, Z+3	; 0x03
    2112:	4f 3f       	cpi	r20, 0xFF	; 255
    2114:	bf ef       	ldi	r27, 0xFF	; 255
    2116:	5b 07       	cpc	r21, r27
    2118:	6b 07       	cpc	r22, r27
    211a:	7b 07       	cpc	r23, r27
    211c:	39 f1       	breq	.+78     	; 0x216c <xTaskCheckForTimeOut+0xac>
    211e:	ec 01       	movw	r28, r24
    2120:	b8 81       	ld	r27, Y
    2122:	a0 91 1c 11 	lds	r26, 0x111C	; 0x80111c <xNumOfOverflows>
    2126:	ba 17       	cp	r27, r26
    2128:	59 f0       	breq	.+22     	; 0x2140 <xTaskCheckForTimeOut+0x80>
    212a:	c0 16       	cp	r12, r16
    212c:	d1 06       	cpc	r13, r17
    212e:	e2 06       	cpc	r14, r18
    2130:	f3 06       	cpc	r15, r19
    2132:	30 f0       	brcs	.+12     	; 0x2140 <xTaskCheckForTimeOut+0x80>
    2134:	10 82       	st	Z, r1
    2136:	11 82       	std	Z+1, r1	; 0x01
    2138:	12 82       	std	Z+2, r1	; 0x02
    213a:	13 82       	std	Z+3, r1	; 0x03
    213c:	81 e0       	ldi	r24, 0x01	; 1
    213e:	17 c0       	rjmp	.+46     	; 0x216e <xTaskCheckForTimeOut+0xae>
    2140:	84 16       	cp	r8, r20
    2142:	95 06       	cpc	r9, r21
    2144:	a6 06       	cpc	r10, r22
    2146:	b7 06       	cpc	r11, r23
    2148:	58 f4       	brcc	.+22     	; 0x2160 <xTaskCheckForTimeOut+0xa0>
    214a:	48 19       	sub	r20, r8
    214c:	59 09       	sbc	r21, r9
    214e:	6a 09       	sbc	r22, r10
    2150:	7b 09       	sbc	r23, r11
    2152:	40 83       	st	Z, r20
    2154:	51 83       	std	Z+1, r21	; 0x01
    2156:	62 83       	std	Z+2, r22	; 0x02
    2158:	73 83       	std	Z+3, r23	; 0x03
    215a:	a1 df       	rcall	.-190    	; 0x209e <vTaskInternalSetTimeOutState>
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	07 c0       	rjmp	.+14     	; 0x216e <xTaskCheckForTimeOut+0xae>
    2160:	10 82       	st	Z, r1
    2162:	11 82       	std	Z+1, r1	; 0x01
    2164:	12 82       	std	Z+2, r1	; 0x02
    2166:	13 82       	std	Z+3, r1	; 0x03
    2168:	81 e0       	ldi	r24, 0x01	; 1
    216a:	01 c0       	rjmp	.+2      	; 0x216e <xTaskCheckForTimeOut+0xae>
    216c:	80 e0       	ldi	r24, 0x00	; 0
    216e:	0f 90       	pop	r0
    2170:	0f be       	out	0x3f, r0	; 63
    2172:	df 91       	pop	r29
    2174:	cf 91       	pop	r28
    2176:	1f 91       	pop	r17
    2178:	0f 91       	pop	r16
    217a:	ff 90       	pop	r15
    217c:	ef 90       	pop	r14
    217e:	df 90       	pop	r13
    2180:	cf 90       	pop	r12
    2182:	bf 90       	pop	r11
    2184:	af 90       	pop	r10
    2186:	9f 90       	pop	r9
    2188:	8f 90       	pop	r8
    218a:	08 95       	ret

0000218c <vTaskMissedYield>:
    218c:	81 e0       	ldi	r24, 0x01	; 1
    218e:	80 93 1d 11 	sts	0x111D, r24	; 0x80111d <xYieldPending>
    2192:	08 95       	ret

00002194 <xTaskGetCurrentTaskHandle>:
    2194:	80 91 d3 11 	lds	r24, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    2198:	90 91 d4 11 	lds	r25, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    219c:	08 95       	ret

0000219e <xTaskGetSchedulerState>:
    219e:	80 91 22 11 	lds	r24, 0x1122	; 0x801122 <xSchedulerRunning>
    21a2:	88 23       	and	r24, r24
    21a4:	31 f0       	breq	.+12     	; 0x21b2 <xTaskGetSchedulerState+0x14>
    21a6:	80 91 14 11 	lds	r24, 0x1114	; 0x801114 <uxSchedulerSuspended>
    21aa:	81 11       	cpse	r24, r1
    21ac:	04 c0       	rjmp	.+8      	; 0x21b6 <xTaskGetSchedulerState+0x18>
    21ae:	82 e0       	ldi	r24, 0x02	; 2
    21b0:	08 95       	ret
    21b2:	81 e0       	ldi	r24, 0x01	; 1
    21b4:	08 95       	ret
    21b6:	80 e0       	ldi	r24, 0x00	; 0
    21b8:	08 95       	ret

000021ba <xTaskPriorityDisinherit>:
    21ba:	0f 93       	push	r16
    21bc:	1f 93       	push	r17
    21be:	cf 93       	push	r28
    21c0:	df 93       	push	r29
    21c2:	fc 01       	movw	r30, r24
    21c4:	89 2b       	or	r24, r25
    21c6:	09 f4       	brne	.+2      	; 0x21ca <xTaskPriorityDisinherit+0x10>
    21c8:	49 c0       	rjmp	.+146    	; 0x225c <__stack+0x5d>
    21ca:	86 a5       	ldd	r24, Z+46	; 0x2e
    21cc:	81 50       	subi	r24, 0x01	; 1
    21ce:	86 a7       	std	Z+46, r24	; 0x2e
    21d0:	22 8d       	ldd	r18, Z+26	; 0x1a
    21d2:	95 a5       	ldd	r25, Z+45	; 0x2d
    21d4:	29 17       	cp	r18, r25
    21d6:	09 f4       	brne	.+2      	; 0x21da <xTaskPriorityDisinherit+0x20>
    21d8:	43 c0       	rjmp	.+134    	; 0x2260 <__stack+0x61>
    21da:	81 11       	cpse	r24, r1
    21dc:	43 c0       	rjmp	.+134    	; 0x2264 <__stack+0x65>
    21de:	ef 01       	movw	r28, r30
    21e0:	8f 01       	movw	r16, r30
    21e2:	0e 5f       	subi	r16, 0xFE	; 254
    21e4:	1f 4f       	sbci	r17, 0xFF	; 255
    21e6:	c8 01       	movw	r24, r16
    21e8:	0e 94 73 02 	call	0x4e6	; 0x4e6 <uxListRemove>
    21ec:	ed a5       	ldd	r30, Y+45	; 0x2d
    21ee:	ea 8f       	std	Y+26, r30	; 0x1a
    21f0:	8a e0       	ldi	r24, 0x0A	; 10
    21f2:	90 e0       	ldi	r25, 0x00	; 0
    21f4:	a0 e0       	ldi	r26, 0x00	; 0
    21f6:	b0 e0       	ldi	r27, 0x00	; 0
    21f8:	8e 1b       	sub	r24, r30
    21fa:	91 09       	sbc	r25, r1
    21fc:	a1 09       	sbc	r26, r1
    21fe:	b1 09       	sbc	r27, r1
    2200:	8e 87       	std	Y+14, r24	; 0x0e
    2202:	9f 87       	std	Y+15, r25	; 0x0f
    2204:	a8 8b       	std	Y+16, r26	; 0x10
    2206:	b9 8b       	std	Y+17, r27	; 0x11
    2208:	80 91 23 11 	lds	r24, 0x1123	; 0x801123 <uxTopReadyPriority>
    220c:	8e 17       	cp	r24, r30
    220e:	10 f4       	brcc	.+4      	; 0x2214 <__stack+0x15>
    2210:	e0 93 23 11 	sts	0x1123, r30	; 0x801123 <uxTopReadyPriority>
    2214:	8b e0       	ldi	r24, 0x0B	; 11
    2216:	8e 9f       	mul	r24, r30
    2218:	f0 01       	movw	r30, r0
    221a:	11 24       	eor	r1, r1
    221c:	eb 59       	subi	r30, 0x9B	; 155
    221e:	fe 4e       	sbci	r31, 0xEE	; 238
    2220:	01 80       	ldd	r0, Z+1	; 0x01
    2222:	f2 81       	ldd	r31, Z+2	; 0x02
    2224:	e0 2d       	mov	r30, r0
    2226:	ff 83       	std	Y+7, r31	; 0x07
    2228:	ee 83       	std	Y+6, r30	; 0x06
    222a:	26 81       	ldd	r18, Z+6	; 0x06
    222c:	37 81       	ldd	r19, Z+7	; 0x07
    222e:	39 87       	std	Y+9, r19	; 0x09
    2230:	28 87       	std	Y+8, r18	; 0x08
    2232:	a6 81       	ldd	r26, Z+6	; 0x06
    2234:	b7 81       	ldd	r27, Z+7	; 0x07
    2236:	15 96       	adiw	r26, 0x05	; 5
    2238:	1c 93       	st	X, r17
    223a:	0e 93       	st	-X, r16
    223c:	14 97       	sbiw	r26, 0x04	; 4
    223e:	17 83       	std	Z+7, r17	; 0x07
    2240:	06 83       	std	Z+6, r16	; 0x06
    2242:	ea 8d       	ldd	r30, Y+26	; 0x1a
    2244:	8e 9f       	mul	r24, r30
    2246:	f0 01       	movw	r30, r0
    2248:	11 24       	eor	r1, r1
    224a:	eb 59       	subi	r30, 0x9B	; 155
    224c:	fe 4e       	sbci	r31, 0xEE	; 238
    224e:	fd 87       	std	Y+13, r31	; 0x0d
    2250:	ec 87       	std	Y+12, r30	; 0x0c
    2252:	80 81       	ld	r24, Z
    2254:	8f 5f       	subi	r24, 0xFF	; 255
    2256:	80 83       	st	Z, r24
    2258:	81 e0       	ldi	r24, 0x01	; 1
    225a:	05 c0       	rjmp	.+10     	; 0x2266 <__stack+0x67>
    225c:	80 e0       	ldi	r24, 0x00	; 0
    225e:	03 c0       	rjmp	.+6      	; 0x2266 <__stack+0x67>
    2260:	80 e0       	ldi	r24, 0x00	; 0
    2262:	01 c0       	rjmp	.+2      	; 0x2266 <__stack+0x67>
    2264:	80 e0       	ldi	r24, 0x00	; 0
    2266:	df 91       	pop	r29
    2268:	cf 91       	pop	r28
    226a:	1f 91       	pop	r17
    226c:	0f 91       	pop	r16
    226e:	08 95       	ret

00002270 <xTaskGenericNotifyWait>:
    2270:	4f 92       	push	r4
    2272:	5f 92       	push	r5
    2274:	6f 92       	push	r6
    2276:	7f 92       	push	r7
    2278:	af 92       	push	r10
    227a:	bf 92       	push	r11
    227c:	cf 92       	push	r12
    227e:	df 92       	push	r13
    2280:	ef 92       	push	r14
    2282:	ff 92       	push	r15
    2284:	0f 93       	push	r16
    2286:	1f 93       	push	r17
    2288:	cf 93       	push	r28
    228a:	df 93       	push	r29
    228c:	28 01       	movw	r4, r16
    228e:	39 01       	movw	r6, r18
    2290:	0f b6       	in	r0, 0x3f	; 63
    2292:	f8 94       	cli
    2294:	0f 92       	push	r0
    2296:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    229a:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    229e:	c8 2f       	mov	r28, r24
    22a0:	d0 e0       	ldi	r29, 0x00	; 0
    22a2:	ec 0f       	add	r30, r28
    22a4:	fd 1f       	adc	r31, r29
    22a6:	83 a9       	ldd	r24, Z+51	; 0x33
    22a8:	82 30       	cpi	r24, 0x02	; 2
    22aa:	71 f1       	breq	.+92     	; 0x2308 <xTaskGenericNotifyWait+0x98>
    22ac:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    22b0:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    22b4:	ce 01       	movw	r24, r28
    22b6:	88 0f       	add	r24, r24
    22b8:	99 1f       	adc	r25, r25
    22ba:	88 0f       	add	r24, r24
    22bc:	99 1f       	adc	r25, r25
    22be:	e8 0f       	add	r30, r24
    22c0:	f9 1f       	adc	r31, r25
    22c2:	87 a5       	ldd	r24, Z+47	; 0x2f
    22c4:	90 a9       	ldd	r25, Z+48	; 0x30
    22c6:	a1 a9       	ldd	r26, Z+49	; 0x31
    22c8:	b2 a9       	ldd	r27, Z+50	; 0x32
    22ca:	40 95       	com	r20
    22cc:	50 95       	com	r21
    22ce:	60 95       	com	r22
    22d0:	70 95       	com	r23
    22d2:	48 23       	and	r20, r24
    22d4:	59 23       	and	r21, r25
    22d6:	6a 23       	and	r22, r26
    22d8:	7b 23       	and	r23, r27
    22da:	47 a7       	std	Z+47, r20	; 0x2f
    22dc:	50 ab       	std	Z+48, r21	; 0x30
    22de:	61 ab       	std	Z+49, r22	; 0x31
    22e0:	72 ab       	std	Z+50, r23	; 0x32
    22e2:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    22e6:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    22ea:	ec 0f       	add	r30, r28
    22ec:	fd 1f       	adc	r31, r29
    22ee:	81 e0       	ldi	r24, 0x01	; 1
    22f0:	83 ab       	std	Z+51, r24	; 0x33
    22f2:	a1 14       	cp	r10, r1
    22f4:	b1 04       	cpc	r11, r1
    22f6:	c1 04       	cpc	r12, r1
    22f8:	d1 04       	cpc	r13, r1
    22fa:	31 f0       	breq	.+12     	; 0x2308 <xTaskGenericNotifyWait+0x98>
    22fc:	41 e0       	ldi	r20, 0x01	; 1
    22fe:	c6 01       	movw	r24, r12
    2300:	b5 01       	movw	r22, r10
    2302:	88 d9       	rcall	.-3312   	; 0x1614 <prvAddCurrentTaskToDelayedList>
    2304:	0e 94 ef 02 	call	0x5de	; 0x5de <vPortYield>
    2308:	0f 90       	pop	r0
    230a:	0f be       	out	0x3f, r0	; 63
    230c:	0f b6       	in	r0, 0x3f	; 63
    230e:	f8 94       	cli
    2310:	0f 92       	push	r0
    2312:	e1 14       	cp	r14, r1
    2314:	f1 04       	cpc	r15, r1
    2316:	a1 f0       	breq	.+40     	; 0x2340 <xTaskGenericNotifyWait+0xd0>
    2318:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    231c:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    2320:	ce 01       	movw	r24, r28
    2322:	88 0f       	add	r24, r24
    2324:	99 1f       	adc	r25, r25
    2326:	88 0f       	add	r24, r24
    2328:	99 1f       	adc	r25, r25
    232a:	e8 0f       	add	r30, r24
    232c:	f9 1f       	adc	r31, r25
    232e:	87 a5       	ldd	r24, Z+47	; 0x2f
    2330:	90 a9       	ldd	r25, Z+48	; 0x30
    2332:	a1 a9       	ldd	r26, Z+49	; 0x31
    2334:	b2 a9       	ldd	r27, Z+50	; 0x32
    2336:	f7 01       	movw	r30, r14
    2338:	80 83       	st	Z, r24
    233a:	91 83       	std	Z+1, r25	; 0x01
    233c:	a2 83       	std	Z+2, r26	; 0x02
    233e:	b3 83       	std	Z+3, r27	; 0x03
    2340:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    2344:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    2348:	ec 0f       	add	r30, r28
    234a:	fd 1f       	adc	r31, r29
    234c:	83 a9       	ldd	r24, Z+51	; 0x33
    234e:	82 30       	cpi	r24, 0x02	; 2
    2350:	e9 f4       	brne	.+58     	; 0x238c <xTaskGenericNotifyWait+0x11c>
    2352:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    2356:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    235a:	ce 01       	movw	r24, r28
    235c:	88 0f       	add	r24, r24
    235e:	99 1f       	adc	r25, r25
    2360:	88 0f       	add	r24, r24
    2362:	99 1f       	adc	r25, r25
    2364:	e8 0f       	add	r30, r24
    2366:	f9 1f       	adc	r31, r25
    2368:	87 a5       	ldd	r24, Z+47	; 0x2f
    236a:	90 a9       	ldd	r25, Z+48	; 0x30
    236c:	a1 a9       	ldd	r26, Z+49	; 0x31
    236e:	b2 a9       	ldd	r27, Z+50	; 0x32
    2370:	40 94       	com	r4
    2372:	50 94       	com	r5
    2374:	60 94       	com	r6
    2376:	70 94       	com	r7
    2378:	48 22       	and	r4, r24
    237a:	59 22       	and	r5, r25
    237c:	6a 22       	and	r6, r26
    237e:	7b 22       	and	r7, r27
    2380:	47 a6       	std	Z+47, r4	; 0x2f
    2382:	50 aa       	std	Z+48, r5	; 0x30
    2384:	61 aa       	std	Z+49, r6	; 0x31
    2386:	72 aa       	std	Z+50, r7	; 0x32
    2388:	81 e0       	ldi	r24, 0x01	; 1
    238a:	01 c0       	rjmp	.+2      	; 0x238e <xTaskGenericNotifyWait+0x11e>
    238c:	80 e0       	ldi	r24, 0x00	; 0
    238e:	20 91 d3 11 	lds	r18, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    2392:	30 91 d4 11 	lds	r19, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    2396:	c2 0f       	add	r28, r18
    2398:	d3 1f       	adc	r29, r19
    239a:	1b aa       	std	Y+51, r1	; 0x33
    239c:	0f 90       	pop	r0
    239e:	0f be       	out	0x3f, r0	; 63
    23a0:	df 91       	pop	r29
    23a2:	cf 91       	pop	r28
    23a4:	1f 91       	pop	r17
    23a6:	0f 91       	pop	r16
    23a8:	ff 90       	pop	r15
    23aa:	ef 90       	pop	r14
    23ac:	df 90       	pop	r13
    23ae:	cf 90       	pop	r12
    23b0:	bf 90       	pop	r11
    23b2:	af 90       	pop	r10
    23b4:	7f 90       	pop	r7
    23b6:	6f 90       	pop	r6
    23b8:	5f 90       	pop	r5
    23ba:	4f 90       	pop	r4
    23bc:	08 95       	ret

000023be <xTaskGenericNotify>:
    23be:	8f 92       	push	r8
    23c0:	9f 92       	push	r9
    23c2:	af 92       	push	r10
    23c4:	bf 92       	push	r11
    23c6:	ef 92       	push	r14
    23c8:	ff 92       	push	r15
    23ca:	0f 93       	push	r16
    23cc:	cf 93       	push	r28
    23ce:	df 93       	push	r29
    23d0:	dc 01       	movw	r26, r24
    23d2:	0f b6       	in	r0, 0x3f	; 63
    23d4:	f8 94       	cli
    23d6:	0f 92       	push	r0
    23d8:	e1 14       	cp	r14, r1
    23da:	f1 04       	cpc	r15, r1
    23dc:	89 f0       	breq	.+34     	; 0x2400 <xTaskGenericNotify+0x42>
    23de:	e6 2f       	mov	r30, r22
    23e0:	f0 e0       	ldi	r31, 0x00	; 0
    23e2:	ee 0f       	add	r30, r30
    23e4:	ff 1f       	adc	r31, r31
    23e6:	ee 0f       	add	r30, r30
    23e8:	ff 1f       	adc	r31, r31
    23ea:	e8 0f       	add	r30, r24
    23ec:	f9 1f       	adc	r31, r25
    23ee:	87 a4       	ldd	r8, Z+47	; 0x2f
    23f0:	90 a8       	ldd	r9, Z+48	; 0x30
    23f2:	a1 a8       	ldd	r10, Z+49	; 0x31
    23f4:	b2 a8       	ldd	r11, Z+50	; 0x32
    23f6:	f7 01       	movw	r30, r14
    23f8:	80 82       	st	Z, r8
    23fa:	91 82       	std	Z+1, r9	; 0x01
    23fc:	a2 82       	std	Z+2, r10	; 0x02
    23fe:	b3 82       	std	Z+3, r11	; 0x03
    2400:	70 e0       	ldi	r23, 0x00	; 0
    2402:	fd 01       	movw	r30, r26
    2404:	e6 0f       	add	r30, r22
    2406:	f7 1f       	adc	r31, r23
    2408:	83 a9       	ldd	r24, Z+51	; 0x33
    240a:	92 e0       	ldi	r25, 0x02	; 2
    240c:	93 ab       	std	Z+51, r25	; 0x33
    240e:	02 30       	cpi	r16, 0x02	; 2
    2410:	01 f1       	breq	.+64     	; 0x2452 <xTaskGenericNotify+0x94>
    2412:	18 f4       	brcc	.+6      	; 0x241a <xTaskGenericNotify+0x5c>
    2414:	01 30       	cpi	r16, 0x01	; 1
    2416:	31 f0       	breq	.+12     	; 0x2424 <xTaskGenericNotify+0x66>
    2418:	4d c0       	rjmp	.+154    	; 0x24b4 <xTaskGenericNotify+0xf6>
    241a:	03 30       	cpi	r16, 0x03	; 3
    241c:	79 f1       	breq	.+94     	; 0x247c <xTaskGenericNotify+0xbe>
    241e:	04 30       	cpi	r16, 0x04	; 4
    2420:	d1 f1       	breq	.+116    	; 0x2496 <xTaskGenericNotify+0xd8>
    2422:	48 c0       	rjmp	.+144    	; 0x24b4 <xTaskGenericNotify+0xf6>
    2424:	66 0f       	add	r22, r22
    2426:	77 1f       	adc	r23, r23
    2428:	66 0f       	add	r22, r22
    242a:	77 1f       	adc	r23, r23
    242c:	fd 01       	movw	r30, r26
    242e:	e6 0f       	add	r30, r22
    2430:	f7 1f       	adc	r31, r23
    2432:	87 a4       	ldd	r8, Z+47	; 0x2f
    2434:	90 a8       	ldd	r9, Z+48	; 0x30
    2436:	a1 a8       	ldd	r10, Z+49	; 0x31
    2438:	b2 a8       	ldd	r11, Z+50	; 0x32
    243a:	ba 01       	movw	r22, r20
    243c:	a9 01       	movw	r20, r18
    243e:	48 29       	or	r20, r8
    2440:	59 29       	or	r21, r9
    2442:	6a 29       	or	r22, r10
    2444:	7b 29       	or	r23, r11
    2446:	47 a7       	std	Z+47, r20	; 0x2f
    2448:	50 ab       	std	Z+48, r21	; 0x30
    244a:	61 ab       	std	Z+49, r22	; 0x31
    244c:	72 ab       	std	Z+50, r23	; 0x32
    244e:	01 e0       	ldi	r16, 0x01	; 1
    2450:	34 c0       	rjmp	.+104    	; 0x24ba <xTaskGenericNotify+0xfc>
    2452:	66 0f       	add	r22, r22
    2454:	77 1f       	adc	r23, r23
    2456:	66 0f       	add	r22, r22
    2458:	77 1f       	adc	r23, r23
    245a:	fd 01       	movw	r30, r26
    245c:	e6 0f       	add	r30, r22
    245e:	f7 1f       	adc	r31, r23
    2460:	47 a5       	ldd	r20, Z+47	; 0x2f
    2462:	50 a9       	ldd	r21, Z+48	; 0x30
    2464:	61 a9       	ldd	r22, Z+49	; 0x31
    2466:	72 a9       	ldd	r23, Z+50	; 0x32
    2468:	4f 5f       	subi	r20, 0xFF	; 255
    246a:	5f 4f       	sbci	r21, 0xFF	; 255
    246c:	6f 4f       	sbci	r22, 0xFF	; 255
    246e:	7f 4f       	sbci	r23, 0xFF	; 255
    2470:	47 a7       	std	Z+47, r20	; 0x2f
    2472:	50 ab       	std	Z+48, r21	; 0x30
    2474:	61 ab       	std	Z+49, r22	; 0x31
    2476:	72 ab       	std	Z+50, r23	; 0x32
    2478:	01 e0       	ldi	r16, 0x01	; 1
    247a:	1f c0       	rjmp	.+62     	; 0x24ba <xTaskGenericNotify+0xfc>
    247c:	66 0f       	add	r22, r22
    247e:	77 1f       	adc	r23, r23
    2480:	66 0f       	add	r22, r22
    2482:	77 1f       	adc	r23, r23
    2484:	fd 01       	movw	r30, r26
    2486:	e6 0f       	add	r30, r22
    2488:	f7 1f       	adc	r31, r23
    248a:	27 a7       	std	Z+47, r18	; 0x2f
    248c:	30 ab       	std	Z+48, r19	; 0x30
    248e:	41 ab       	std	Z+49, r20	; 0x31
    2490:	52 ab       	std	Z+50, r21	; 0x32
    2492:	01 e0       	ldi	r16, 0x01	; 1
    2494:	12 c0       	rjmp	.+36     	; 0x24ba <xTaskGenericNotify+0xfc>
    2496:	82 30       	cpi	r24, 0x02	; 2
    2498:	79 f0       	breq	.+30     	; 0x24b8 <xTaskGenericNotify+0xfa>
    249a:	66 0f       	add	r22, r22
    249c:	77 1f       	adc	r23, r23
    249e:	66 0f       	add	r22, r22
    24a0:	77 1f       	adc	r23, r23
    24a2:	fd 01       	movw	r30, r26
    24a4:	e6 0f       	add	r30, r22
    24a6:	f7 1f       	adc	r31, r23
    24a8:	27 a7       	std	Z+47, r18	; 0x2f
    24aa:	30 ab       	std	Z+48, r19	; 0x30
    24ac:	41 ab       	std	Z+49, r20	; 0x31
    24ae:	52 ab       	std	Z+50, r21	; 0x32
    24b0:	01 e0       	ldi	r16, 0x01	; 1
    24b2:	03 c0       	rjmp	.+6      	; 0x24ba <xTaskGenericNotify+0xfc>
    24b4:	01 e0       	ldi	r16, 0x01	; 1
    24b6:	01 c0       	rjmp	.+2      	; 0x24ba <xTaskGenericNotify+0xfc>
    24b8:	00 e0       	ldi	r16, 0x00	; 0
    24ba:	81 30       	cpi	r24, 0x01	; 1
    24bc:	09 f0       	breq	.+2      	; 0x24c0 <xTaskGenericNotify+0x102>
    24be:	69 c0       	rjmp	.+210    	; 0x2592 <xTaskGenericNotify+0x1d4>
    24c0:	1c 96       	adiw	r26, 0x0c	; 12
    24c2:	ed 91       	ld	r30, X+
    24c4:	fc 91       	ld	r31, X
    24c6:	1d 97       	sbiw	r26, 0x0d	; 13
    24c8:	16 96       	adiw	r26, 0x06	; 6
    24ca:	cd 91       	ld	r28, X+
    24cc:	dc 91       	ld	r29, X
    24ce:	17 97       	sbiw	r26, 0x07	; 7
    24d0:	18 96       	adiw	r26, 0x08	; 8
    24d2:	8d 91       	ld	r24, X+
    24d4:	9c 91       	ld	r25, X
    24d6:	19 97       	sbiw	r26, 0x09	; 9
    24d8:	9f 83       	std	Y+7, r25	; 0x07
    24da:	8e 83       	std	Y+6, r24	; 0x06
    24dc:	18 96       	adiw	r26, 0x08	; 8
    24de:	cd 91       	ld	r28, X+
    24e0:	dc 91       	ld	r29, X
    24e2:	19 97       	sbiw	r26, 0x09	; 9
    24e4:	16 96       	adiw	r26, 0x06	; 6
    24e6:	8d 91       	ld	r24, X+
    24e8:	9c 91       	ld	r25, X
    24ea:	17 97       	sbiw	r26, 0x07	; 7
    24ec:	9d 83       	std	Y+5, r25	; 0x05
    24ee:	8c 83       	std	Y+4, r24	; 0x04
    24f0:	81 81       	ldd	r24, Z+1	; 0x01
    24f2:	92 81       	ldd	r25, Z+2	; 0x02
    24f4:	9d 01       	movw	r18, r26
    24f6:	2e 5f       	subi	r18, 0xFE	; 254
    24f8:	3f 4f       	sbci	r19, 0xFF	; 255
    24fa:	82 17       	cp	r24, r18
    24fc:	93 07       	cpc	r25, r19
    24fe:	31 f4       	brne	.+12     	; 0x250c <xTaskGenericNotify+0x14e>
    2500:	18 96       	adiw	r26, 0x08	; 8
    2502:	8d 91       	ld	r24, X+
    2504:	9c 91       	ld	r25, X
    2506:	19 97       	sbiw	r26, 0x09	; 9
    2508:	92 83       	std	Z+2, r25	; 0x02
    250a:	81 83       	std	Z+1, r24	; 0x01
    250c:	1d 96       	adiw	r26, 0x0d	; 13
    250e:	1c 92       	st	X, r1
    2510:	1e 92       	st	-X, r1
    2512:	1c 97       	sbiw	r26, 0x0c	; 12
    2514:	80 81       	ld	r24, Z
    2516:	81 50       	subi	r24, 0x01	; 1
    2518:	80 83       	st	Z, r24
    251a:	5a 96       	adiw	r26, 0x1a	; 26
    251c:	ec 91       	ld	r30, X
    251e:	5a 97       	sbiw	r26, 0x1a	; 26
    2520:	80 91 23 11 	lds	r24, 0x1123	; 0x801123 <uxTopReadyPriority>
    2524:	8e 17       	cp	r24, r30
    2526:	10 f4       	brcc	.+4      	; 0x252c <xTaskGenericNotify+0x16e>
    2528:	e0 93 23 11 	sts	0x1123, r30	; 0x801123 <uxTopReadyPriority>
    252c:	8b e0       	ldi	r24, 0x0B	; 11
    252e:	8e 9f       	mul	r24, r30
    2530:	f0 01       	movw	r30, r0
    2532:	11 24       	eor	r1, r1
    2534:	eb 59       	subi	r30, 0x9B	; 155
    2536:	fe 4e       	sbci	r31, 0xEE	; 238
    2538:	01 80       	ldd	r0, Z+1	; 0x01
    253a:	f2 81       	ldd	r31, Z+2	; 0x02
    253c:	e0 2d       	mov	r30, r0
    253e:	17 96       	adiw	r26, 0x07	; 7
    2540:	fc 93       	st	X, r31
    2542:	ee 93       	st	-X, r30
    2544:	16 97       	sbiw	r26, 0x06	; 6
    2546:	46 81       	ldd	r20, Z+6	; 0x06
    2548:	57 81       	ldd	r21, Z+7	; 0x07
    254a:	19 96       	adiw	r26, 0x09	; 9
    254c:	5c 93       	st	X, r21
    254e:	4e 93       	st	-X, r20
    2550:	18 97       	sbiw	r26, 0x08	; 8
    2552:	c6 81       	ldd	r28, Z+6	; 0x06
    2554:	d7 81       	ldd	r29, Z+7	; 0x07
    2556:	3d 83       	std	Y+5, r19	; 0x05
    2558:	2c 83       	std	Y+4, r18	; 0x04
    255a:	37 83       	std	Z+7, r19	; 0x07
    255c:	26 83       	std	Z+6, r18	; 0x06
    255e:	5a 96       	adiw	r26, 0x1a	; 26
    2560:	ec 91       	ld	r30, X
    2562:	5a 97       	sbiw	r26, 0x1a	; 26
    2564:	8e 9f       	mul	r24, r30
    2566:	f0 01       	movw	r30, r0
    2568:	11 24       	eor	r1, r1
    256a:	eb 59       	subi	r30, 0x9B	; 155
    256c:	fe 4e       	sbci	r31, 0xEE	; 238
    256e:	1d 96       	adiw	r26, 0x0d	; 13
    2570:	fc 93       	st	X, r31
    2572:	ee 93       	st	-X, r30
    2574:	1c 97       	sbiw	r26, 0x0c	; 12
    2576:	80 81       	ld	r24, Z
    2578:	8f 5f       	subi	r24, 0xFF	; 255
    257a:	80 83       	st	Z, r24
    257c:	5a 96       	adiw	r26, 0x1a	; 26
    257e:	9c 91       	ld	r25, X
    2580:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    2584:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    2588:	82 8d       	ldd	r24, Z+26	; 0x1a
    258a:	89 17       	cp	r24, r25
    258c:	10 f4       	brcc	.+4      	; 0x2592 <xTaskGenericNotify+0x1d4>
    258e:	0e 94 ef 02 	call	0x5de	; 0x5de <vPortYield>
    2592:	0f 90       	pop	r0
    2594:	0f be       	out	0x3f, r0	; 63
    2596:	80 2f       	mov	r24, r16
    2598:	df 91       	pop	r29
    259a:	cf 91       	pop	r28
    259c:	0f 91       	pop	r16
    259e:	ff 90       	pop	r15
    25a0:	ef 90       	pop	r14
    25a2:	bf 90       	pop	r11
    25a4:	af 90       	pop	r10
    25a6:	9f 90       	pop	r9
    25a8:	8f 90       	pop	r8
    25aa:	08 95       	ret

000025ac <xTaskGenericNotifyFromISR>:
    25ac:	8f 92       	push	r8
    25ae:	9f 92       	push	r9
    25b0:	af 92       	push	r10
    25b2:	bf 92       	push	r11
    25b4:	cf 92       	push	r12
    25b6:	df 92       	push	r13
    25b8:	ef 92       	push	r14
    25ba:	ff 92       	push	r15
    25bc:	0f 93       	push	r16
    25be:	cf 93       	push	r28
    25c0:	df 93       	push	r29
    25c2:	dc 01       	movw	r26, r24
    25c4:	e1 14       	cp	r14, r1
    25c6:	f1 04       	cpc	r15, r1
    25c8:	89 f0       	breq	.+34     	; 0x25ec <xTaskGenericNotifyFromISR+0x40>
    25ca:	e6 2f       	mov	r30, r22
    25cc:	f0 e0       	ldi	r31, 0x00	; 0
    25ce:	ee 0f       	add	r30, r30
    25d0:	ff 1f       	adc	r31, r31
    25d2:	ee 0f       	add	r30, r30
    25d4:	ff 1f       	adc	r31, r31
    25d6:	e8 0f       	add	r30, r24
    25d8:	f9 1f       	adc	r31, r25
    25da:	87 a4       	ldd	r8, Z+47	; 0x2f
    25dc:	90 a8       	ldd	r9, Z+48	; 0x30
    25de:	a1 a8       	ldd	r10, Z+49	; 0x31
    25e0:	b2 a8       	ldd	r11, Z+50	; 0x32
    25e2:	f7 01       	movw	r30, r14
    25e4:	80 82       	st	Z, r8
    25e6:	91 82       	std	Z+1, r9	; 0x01
    25e8:	a2 82       	std	Z+2, r10	; 0x02
    25ea:	b3 82       	std	Z+3, r11	; 0x03
    25ec:	70 e0       	ldi	r23, 0x00	; 0
    25ee:	fd 01       	movw	r30, r26
    25f0:	e6 0f       	add	r30, r22
    25f2:	f7 1f       	adc	r31, r23
    25f4:	93 a9       	ldd	r25, Z+51	; 0x33
    25f6:	82 e0       	ldi	r24, 0x02	; 2
    25f8:	83 ab       	std	Z+51, r24	; 0x33
    25fa:	02 30       	cpi	r16, 0x02	; 2
    25fc:	01 f1       	breq	.+64     	; 0x263e <xTaskGenericNotifyFromISR+0x92>
    25fe:	18 f4       	brcc	.+6      	; 0x2606 <xTaskGenericNotifyFromISR+0x5a>
    2600:	01 30       	cpi	r16, 0x01	; 1
    2602:	31 f0       	breq	.+12     	; 0x2610 <xTaskGenericNotifyFromISR+0x64>
    2604:	4d c0       	rjmp	.+154    	; 0x26a0 <xTaskGenericNotifyFromISR+0xf4>
    2606:	03 30       	cpi	r16, 0x03	; 3
    2608:	79 f1       	breq	.+94     	; 0x2668 <xTaskGenericNotifyFromISR+0xbc>
    260a:	04 30       	cpi	r16, 0x04	; 4
    260c:	d1 f1       	breq	.+116    	; 0x2682 <xTaskGenericNotifyFromISR+0xd6>
    260e:	48 c0       	rjmp	.+144    	; 0x26a0 <xTaskGenericNotifyFromISR+0xf4>
    2610:	66 0f       	add	r22, r22
    2612:	77 1f       	adc	r23, r23
    2614:	66 0f       	add	r22, r22
    2616:	77 1f       	adc	r23, r23
    2618:	fd 01       	movw	r30, r26
    261a:	e6 0f       	add	r30, r22
    261c:	f7 1f       	adc	r31, r23
    261e:	87 a4       	ldd	r8, Z+47	; 0x2f
    2620:	90 a8       	ldd	r9, Z+48	; 0x30
    2622:	a1 a8       	ldd	r10, Z+49	; 0x31
    2624:	b2 a8       	ldd	r11, Z+50	; 0x32
    2626:	ba 01       	movw	r22, r20
    2628:	a9 01       	movw	r20, r18
    262a:	48 29       	or	r20, r8
    262c:	59 29       	or	r21, r9
    262e:	6a 29       	or	r22, r10
    2630:	7b 29       	or	r23, r11
    2632:	47 a7       	std	Z+47, r20	; 0x2f
    2634:	50 ab       	std	Z+48, r21	; 0x30
    2636:	61 ab       	std	Z+49, r22	; 0x31
    2638:	72 ab       	std	Z+50, r23	; 0x32
    263a:	81 e0       	ldi	r24, 0x01	; 1
    263c:	34 c0       	rjmp	.+104    	; 0x26a6 <xTaskGenericNotifyFromISR+0xfa>
    263e:	66 0f       	add	r22, r22
    2640:	77 1f       	adc	r23, r23
    2642:	66 0f       	add	r22, r22
    2644:	77 1f       	adc	r23, r23
    2646:	fd 01       	movw	r30, r26
    2648:	e6 0f       	add	r30, r22
    264a:	f7 1f       	adc	r31, r23
    264c:	47 a5       	ldd	r20, Z+47	; 0x2f
    264e:	50 a9       	ldd	r21, Z+48	; 0x30
    2650:	61 a9       	ldd	r22, Z+49	; 0x31
    2652:	72 a9       	ldd	r23, Z+50	; 0x32
    2654:	4f 5f       	subi	r20, 0xFF	; 255
    2656:	5f 4f       	sbci	r21, 0xFF	; 255
    2658:	6f 4f       	sbci	r22, 0xFF	; 255
    265a:	7f 4f       	sbci	r23, 0xFF	; 255
    265c:	47 a7       	std	Z+47, r20	; 0x2f
    265e:	50 ab       	std	Z+48, r21	; 0x30
    2660:	61 ab       	std	Z+49, r22	; 0x31
    2662:	72 ab       	std	Z+50, r23	; 0x32
    2664:	81 e0       	ldi	r24, 0x01	; 1
    2666:	1f c0       	rjmp	.+62     	; 0x26a6 <xTaskGenericNotifyFromISR+0xfa>
    2668:	66 0f       	add	r22, r22
    266a:	77 1f       	adc	r23, r23
    266c:	66 0f       	add	r22, r22
    266e:	77 1f       	adc	r23, r23
    2670:	fd 01       	movw	r30, r26
    2672:	e6 0f       	add	r30, r22
    2674:	f7 1f       	adc	r31, r23
    2676:	27 a7       	std	Z+47, r18	; 0x2f
    2678:	30 ab       	std	Z+48, r19	; 0x30
    267a:	41 ab       	std	Z+49, r20	; 0x31
    267c:	52 ab       	std	Z+50, r21	; 0x32
    267e:	81 e0       	ldi	r24, 0x01	; 1
    2680:	12 c0       	rjmp	.+36     	; 0x26a6 <xTaskGenericNotifyFromISR+0xfa>
    2682:	92 30       	cpi	r25, 0x02	; 2
    2684:	79 f0       	breq	.+30     	; 0x26a4 <xTaskGenericNotifyFromISR+0xf8>
    2686:	66 0f       	add	r22, r22
    2688:	77 1f       	adc	r23, r23
    268a:	66 0f       	add	r22, r22
    268c:	77 1f       	adc	r23, r23
    268e:	fd 01       	movw	r30, r26
    2690:	e6 0f       	add	r30, r22
    2692:	f7 1f       	adc	r31, r23
    2694:	27 a7       	std	Z+47, r18	; 0x2f
    2696:	30 ab       	std	Z+48, r19	; 0x30
    2698:	41 ab       	std	Z+49, r20	; 0x31
    269a:	52 ab       	std	Z+50, r21	; 0x32
    269c:	81 e0       	ldi	r24, 0x01	; 1
    269e:	03 c0       	rjmp	.+6      	; 0x26a6 <xTaskGenericNotifyFromISR+0xfa>
    26a0:	81 e0       	ldi	r24, 0x01	; 1
    26a2:	01 c0       	rjmp	.+2      	; 0x26a6 <xTaskGenericNotifyFromISR+0xfa>
    26a4:	80 e0       	ldi	r24, 0x00	; 0
    26a6:	91 30       	cpi	r25, 0x01	; 1
    26a8:	09 f0       	breq	.+2      	; 0x26ac <xTaskGenericNotifyFromISR+0x100>
    26aa:	96 c0       	rjmp	.+300    	; 0x27d8 <xTaskGenericNotifyFromISR+0x22c>
    26ac:	90 91 14 11 	lds	r25, 0x1114	; 0x801114 <uxSchedulerSuspended>
    26b0:	91 11       	cpse	r25, r1
    26b2:	5f c0       	rjmp	.+190    	; 0x2772 <xTaskGenericNotifyFromISR+0x1c6>
    26b4:	1c 96       	adiw	r26, 0x0c	; 12
    26b6:	ed 91       	ld	r30, X+
    26b8:	fc 91       	ld	r31, X
    26ba:	1d 97       	sbiw	r26, 0x0d	; 13
    26bc:	16 96       	adiw	r26, 0x06	; 6
    26be:	cd 91       	ld	r28, X+
    26c0:	dc 91       	ld	r29, X
    26c2:	17 97       	sbiw	r26, 0x07	; 7
    26c4:	18 96       	adiw	r26, 0x08	; 8
    26c6:	2d 91       	ld	r18, X+
    26c8:	3c 91       	ld	r19, X
    26ca:	19 97       	sbiw	r26, 0x09	; 9
    26cc:	3f 83       	std	Y+7, r19	; 0x07
    26ce:	2e 83       	std	Y+6, r18	; 0x06
    26d0:	18 96       	adiw	r26, 0x08	; 8
    26d2:	cd 91       	ld	r28, X+
    26d4:	dc 91       	ld	r29, X
    26d6:	19 97       	sbiw	r26, 0x09	; 9
    26d8:	16 96       	adiw	r26, 0x06	; 6
    26da:	2d 91       	ld	r18, X+
    26dc:	3c 91       	ld	r19, X
    26de:	17 97       	sbiw	r26, 0x07	; 7
    26e0:	3d 83       	std	Y+5, r19	; 0x05
    26e2:	2c 83       	std	Y+4, r18	; 0x04
    26e4:	41 81       	ldd	r20, Z+1	; 0x01
    26e6:	52 81       	ldd	r21, Z+2	; 0x02
    26e8:	9d 01       	movw	r18, r26
    26ea:	2e 5f       	subi	r18, 0xFE	; 254
    26ec:	3f 4f       	sbci	r19, 0xFF	; 255
    26ee:	42 17       	cp	r20, r18
    26f0:	53 07       	cpc	r21, r19
    26f2:	31 f4       	brne	.+12     	; 0x2700 <xTaskGenericNotifyFromISR+0x154>
    26f4:	18 96       	adiw	r26, 0x08	; 8
    26f6:	4d 91       	ld	r20, X+
    26f8:	5c 91       	ld	r21, X
    26fa:	19 97       	sbiw	r26, 0x09	; 9
    26fc:	52 83       	std	Z+2, r21	; 0x02
    26fe:	41 83       	std	Z+1, r20	; 0x01
    2700:	1d 96       	adiw	r26, 0x0d	; 13
    2702:	1c 92       	st	X, r1
    2704:	1e 92       	st	-X, r1
    2706:	1c 97       	sbiw	r26, 0x0c	; 12
    2708:	90 81       	ld	r25, Z
    270a:	91 50       	subi	r25, 0x01	; 1
    270c:	90 83       	st	Z, r25
    270e:	5a 96       	adiw	r26, 0x1a	; 26
    2710:	ec 91       	ld	r30, X
    2712:	5a 97       	sbiw	r26, 0x1a	; 26
    2714:	90 91 23 11 	lds	r25, 0x1123	; 0x801123 <uxTopReadyPriority>
    2718:	9e 17       	cp	r25, r30
    271a:	10 f4       	brcc	.+4      	; 0x2720 <xTaskGenericNotifyFromISR+0x174>
    271c:	e0 93 23 11 	sts	0x1123, r30	; 0x801123 <uxTopReadyPriority>
    2720:	9b e0       	ldi	r25, 0x0B	; 11
    2722:	9e 9f       	mul	r25, r30
    2724:	f0 01       	movw	r30, r0
    2726:	11 24       	eor	r1, r1
    2728:	eb 59       	subi	r30, 0x9B	; 155
    272a:	fe 4e       	sbci	r31, 0xEE	; 238
    272c:	01 80       	ldd	r0, Z+1	; 0x01
    272e:	f2 81       	ldd	r31, Z+2	; 0x02
    2730:	e0 2d       	mov	r30, r0
    2732:	17 96       	adiw	r26, 0x07	; 7
    2734:	fc 93       	st	X, r31
    2736:	ee 93       	st	-X, r30
    2738:	16 97       	sbiw	r26, 0x06	; 6
    273a:	46 81       	ldd	r20, Z+6	; 0x06
    273c:	57 81       	ldd	r21, Z+7	; 0x07
    273e:	19 96       	adiw	r26, 0x09	; 9
    2740:	5c 93       	st	X, r21
    2742:	4e 93       	st	-X, r20
    2744:	18 97       	sbiw	r26, 0x08	; 8
    2746:	c6 81       	ldd	r28, Z+6	; 0x06
    2748:	d7 81       	ldd	r29, Z+7	; 0x07
    274a:	3d 83       	std	Y+5, r19	; 0x05
    274c:	2c 83       	std	Y+4, r18	; 0x04
    274e:	37 83       	std	Z+7, r19	; 0x07
    2750:	26 83       	std	Z+6, r18	; 0x06
    2752:	5a 96       	adiw	r26, 0x1a	; 26
    2754:	ec 91       	ld	r30, X
    2756:	5a 97       	sbiw	r26, 0x1a	; 26
    2758:	9e 9f       	mul	r25, r30
    275a:	f0 01       	movw	r30, r0
    275c:	11 24       	eor	r1, r1
    275e:	eb 59       	subi	r30, 0x9B	; 155
    2760:	fe 4e       	sbci	r31, 0xEE	; 238
    2762:	1d 96       	adiw	r26, 0x0d	; 13
    2764:	fc 93       	st	X, r31
    2766:	ee 93       	st	-X, r30
    2768:	1c 97       	sbiw	r26, 0x0c	; 12
    276a:	90 81       	ld	r25, Z
    276c:	9f 5f       	subi	r25, 0xFF	; 255
    276e:	90 83       	st	Z, r25
    2770:	21 c0       	rjmp	.+66     	; 0x27b4 <xTaskGenericNotifyFromISR+0x208>
    2772:	60 e4       	ldi	r22, 0x40	; 64
    2774:	71 e1       	ldi	r23, 0x11	; 17
    2776:	fb 01       	movw	r30, r22
    2778:	c1 81       	ldd	r28, Z+1	; 0x01
    277a:	d2 81       	ldd	r29, Z+2	; 0x02
    277c:	53 96       	adiw	r26, 0x13	; 19
    277e:	dc 93       	st	X, r29
    2780:	ce 93       	st	-X, r28
    2782:	52 97       	sbiw	r26, 0x12	; 18
    2784:	2e 81       	ldd	r18, Y+6	; 0x06
    2786:	3f 81       	ldd	r19, Y+7	; 0x07
    2788:	55 96       	adiw	r26, 0x15	; 21
    278a:	3c 93       	st	X, r19
    278c:	2e 93       	st	-X, r18
    278e:	54 97       	sbiw	r26, 0x14	; 20
    2790:	4e 81       	ldd	r20, Y+6	; 0x06
    2792:	5f 81       	ldd	r21, Y+7	; 0x07
    2794:	9d 01       	movw	r18, r26
    2796:	22 5f       	subi	r18, 0xF2	; 242
    2798:	3f 4f       	sbci	r19, 0xFF	; 255
    279a:	fa 01       	movw	r30, r20
    279c:	35 83       	std	Z+5, r19	; 0x05
    279e:	24 83       	std	Z+4, r18	; 0x04
    27a0:	3f 83       	std	Y+7, r19	; 0x07
    27a2:	2e 83       	std	Y+6, r18	; 0x06
    27a4:	59 96       	adiw	r26, 0x19	; 25
    27a6:	7c 93       	st	X, r23
    27a8:	6e 93       	st	-X, r22
    27aa:	58 97       	sbiw	r26, 0x18	; 24
    27ac:	fb 01       	movw	r30, r22
    27ae:	90 81       	ld	r25, Z
    27b0:	9f 5f       	subi	r25, 0xFF	; 255
    27b2:	90 83       	st	Z, r25
    27b4:	5a 96       	adiw	r26, 0x1a	; 26
    27b6:	2c 91       	ld	r18, X
    27b8:	e0 91 d3 11 	lds	r30, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    27bc:	f0 91 d4 11 	lds	r31, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    27c0:	92 8d       	ldd	r25, Z+26	; 0x1a
    27c2:	92 17       	cp	r25, r18
    27c4:	48 f4       	brcc	.+18     	; 0x27d8 <xTaskGenericNotifyFromISR+0x22c>
    27c6:	c1 14       	cp	r12, r1
    27c8:	d1 04       	cpc	r13, r1
    27ca:	19 f0       	breq	.+6      	; 0x27d2 <xTaskGenericNotifyFromISR+0x226>
    27cc:	91 e0       	ldi	r25, 0x01	; 1
    27ce:	f6 01       	movw	r30, r12
    27d0:	90 83       	st	Z, r25
    27d2:	91 e0       	ldi	r25, 0x01	; 1
    27d4:	90 93 1d 11 	sts	0x111D, r25	; 0x80111d <xYieldPending>
    27d8:	df 91       	pop	r29
    27da:	cf 91       	pop	r28
    27dc:	0f 91       	pop	r16
    27de:	ff 90       	pop	r15
    27e0:	ef 90       	pop	r14
    27e2:	df 90       	pop	r13
    27e4:	cf 90       	pop	r12
    27e6:	bf 90       	pop	r11
    27e8:	af 90       	pop	r10
    27ea:	9f 90       	pop	r9
    27ec:	8f 90       	pop	r8
    27ee:	08 95       	ret

000027f0 <xTaskGenericNotifyStateClear>:
    27f0:	00 97       	sbiw	r24, 0x00	; 0
    27f2:	21 f4       	brne	.+8      	; 0x27fc <xTaskGenericNotifyStateClear+0xc>
    27f4:	80 91 d3 11 	lds	r24, 0x11D3	; 0x8011d3 <pxCurrentTCB>
    27f8:	90 91 d4 11 	lds	r25, 0x11D4	; 0x8011d4 <pxCurrentTCB+0x1>
    27fc:	0f b6       	in	r0, 0x3f	; 63
    27fe:	f8 94       	cli
    2800:	0f 92       	push	r0
    2802:	70 e0       	ldi	r23, 0x00	; 0
    2804:	fc 01       	movw	r30, r24
    2806:	e6 0f       	add	r30, r22
    2808:	f7 1f       	adc	r31, r23
    280a:	23 a9       	ldd	r18, Z+51	; 0x33
    280c:	22 30       	cpi	r18, 0x02	; 2
    280e:	31 f4       	brne	.+12     	; 0x281c <xTaskGenericNotifyStateClear+0x2c>
    2810:	fc 01       	movw	r30, r24
    2812:	e6 0f       	add	r30, r22
    2814:	f7 1f       	adc	r31, r23
    2816:	13 aa       	std	Z+51, r1	; 0x33
    2818:	81 e0       	ldi	r24, 0x01	; 1
    281a:	01 c0       	rjmp	.+2      	; 0x281e <xTaskGenericNotifyStateClear+0x2e>
    281c:	80 e0       	ldi	r24, 0x00	; 0
    281e:	0f 90       	pop	r0
    2820:	0f be       	out	0x3f, r0	; 63
    2822:	08 95       	ret

00002824 <prvGetNextExpireTime>:
    2824:	dc 01       	movw	r26, r24
    2826:	e0 91 df 11 	lds	r30, 0x11DF	; 0x8011df <pxCurrentTimerList>
    282a:	f0 91 e0 11 	lds	r31, 0x11E0	; 0x8011e0 <pxCurrentTimerList+0x1>
    282e:	80 81       	ld	r24, Z
    2830:	91 e0       	ldi	r25, 0x01	; 1
    2832:	81 11       	cpse	r24, r1
    2834:	90 e0       	ldi	r25, 0x00	; 0
    2836:	9c 93       	st	X, r25
    2838:	91 11       	cpse	r25, r1
    283a:	08 c0       	rjmp	.+16     	; 0x284c <prvGetNextExpireTime+0x28>
    283c:	07 80       	ldd	r0, Z+7	; 0x07
    283e:	f0 85       	ldd	r31, Z+8	; 0x08
    2840:	e0 2d       	mov	r30, r0
    2842:	60 81       	ld	r22, Z
    2844:	71 81       	ldd	r23, Z+1	; 0x01
    2846:	82 81       	ldd	r24, Z+2	; 0x02
    2848:	93 81       	ldd	r25, Z+3	; 0x03
    284a:	08 95       	ret
    284c:	60 e0       	ldi	r22, 0x00	; 0
    284e:	70 e0       	ldi	r23, 0x00	; 0
    2850:	cb 01       	movw	r24, r22
    2852:	08 95       	ret

00002854 <prvInsertTimerInActiveList>:
    2854:	cf 92       	push	r12
    2856:	df 92       	push	r13
    2858:	ef 92       	push	r14
    285a:	ff 92       	push	r15
    285c:	0f 93       	push	r16
    285e:	1f 93       	push	r17
    2860:	fc 01       	movw	r30, r24
    2862:	42 83       	std	Z+2, r20	; 0x02
    2864:	53 83       	std	Z+3, r21	; 0x03
    2866:	64 83       	std	Z+4, r22	; 0x04
    2868:	75 83       	std	Z+5, r23	; 0x05
    286a:	93 87       	std	Z+11, r25	; 0x0b
    286c:	82 87       	std	Z+10, r24	; 0x0a
    286e:	04 17       	cp	r16, r20
    2870:	15 07       	cpc	r17, r21
    2872:	26 07       	cpc	r18, r22
    2874:	37 07       	cpc	r19, r23
    2876:	c0 f0       	brcs	.+48     	; 0x28a8 <prvInsertTimerInActiveList+0x54>
    2878:	0c 19       	sub	r16, r12
    287a:	1d 09       	sbc	r17, r13
    287c:	2e 09       	sbc	r18, r14
    287e:	3f 09       	sbc	r19, r15
    2880:	86 85       	ldd	r24, Z+14	; 0x0e
    2882:	97 85       	ldd	r25, Z+15	; 0x0f
    2884:	a0 89       	ldd	r26, Z+16	; 0x10
    2886:	b1 89       	ldd	r27, Z+17	; 0x11
    2888:	08 17       	cp	r16, r24
    288a:	19 07       	cpc	r17, r25
    288c:	2a 07       	cpc	r18, r26
    288e:	3b 07       	cpc	r19, r27
    2890:	00 f5       	brcc	.+64     	; 0x28d2 <prvInsertTimerInActiveList+0x7e>
    2892:	bf 01       	movw	r22, r30
    2894:	6e 5f       	subi	r22, 0xFE	; 254
    2896:	7f 4f       	sbci	r23, 0xFF	; 255
    2898:	80 91 dd 11 	lds	r24, 0x11DD	; 0x8011dd <pxOverflowTimerList>
    289c:	90 91 de 11 	lds	r25, 0x11DE	; 0x8011de <pxOverflowTimerList+0x1>
    28a0:	0e 94 36 02 	call	0x46c	; 0x46c <vListInsert>
    28a4:	80 e0       	ldi	r24, 0x00	; 0
    28a6:	18 c0       	rjmp	.+48     	; 0x28d8 <prvInsertTimerInActiveList+0x84>
    28a8:	0c 15       	cp	r16, r12
    28aa:	1d 05       	cpc	r17, r13
    28ac:	2e 05       	cpc	r18, r14
    28ae:	3f 05       	cpc	r19, r15
    28b0:	28 f4       	brcc	.+10     	; 0x28bc <prvInsertTimerInActiveList+0x68>
    28b2:	4c 15       	cp	r20, r12
    28b4:	5d 05       	cpc	r21, r13
    28b6:	6e 05       	cpc	r22, r14
    28b8:	7f 05       	cpc	r23, r15
    28ba:	68 f4       	brcc	.+26     	; 0x28d6 <prvInsertTimerInActiveList+0x82>
    28bc:	bf 01       	movw	r22, r30
    28be:	6e 5f       	subi	r22, 0xFE	; 254
    28c0:	7f 4f       	sbci	r23, 0xFF	; 255
    28c2:	80 91 df 11 	lds	r24, 0x11DF	; 0x8011df <pxCurrentTimerList>
    28c6:	90 91 e0 11 	lds	r25, 0x11E0	; 0x8011e0 <pxCurrentTimerList+0x1>
    28ca:	0e 94 36 02 	call	0x46c	; 0x46c <vListInsert>
    28ce:	80 e0       	ldi	r24, 0x00	; 0
    28d0:	03 c0       	rjmp	.+6      	; 0x28d8 <prvInsertTimerInActiveList+0x84>
    28d2:	81 e0       	ldi	r24, 0x01	; 1
    28d4:	01 c0       	rjmp	.+2      	; 0x28d8 <prvInsertTimerInActiveList+0x84>
    28d6:	81 e0       	ldi	r24, 0x01	; 1
    28d8:	1f 91       	pop	r17
    28da:	0f 91       	pop	r16
    28dc:	ff 90       	pop	r15
    28de:	ef 90       	pop	r14
    28e0:	df 90       	pop	r13
    28e2:	cf 90       	pop	r12
    28e4:	08 95       	ret

000028e6 <prvCheckForValidListAndQueue>:
    28e6:	0f b6       	in	r0, 0x3f	; 63
    28e8:	f8 94       	cli
    28ea:	0f 92       	push	r0
    28ec:	80 91 db 11 	lds	r24, 0x11DB	; 0x8011db <xTimerQueue>
    28f0:	90 91 dc 11 	lds	r25, 0x11DC	; 0x8011dc <xTimerQueue+0x1>
    28f4:	89 2b       	or	r24, r25
    28f6:	e9 f4       	brne	.+58     	; 0x2932 <prvCheckForValidListAndQueue+0x4c>
    28f8:	8c ee       	ldi	r24, 0xEC	; 236
    28fa:	91 e1       	ldi	r25, 0x11	; 17
    28fc:	0e 94 21 02 	call	0x442	; 0x442 <vListInitialise>
    2900:	81 ee       	ldi	r24, 0xE1	; 225
    2902:	91 e1       	ldi	r25, 0x11	; 17
    2904:	0e 94 21 02 	call	0x442	; 0x442 <vListInitialise>
    2908:	8c ee       	ldi	r24, 0xEC	; 236
    290a:	91 e1       	ldi	r25, 0x11	; 17
    290c:	90 93 e0 11 	sts	0x11E0, r25	; 0x8011e0 <pxCurrentTimerList+0x1>
    2910:	80 93 df 11 	sts	0x11DF, r24	; 0x8011df <pxCurrentTimerList>
    2914:	81 ee       	ldi	r24, 0xE1	; 225
    2916:	91 e1       	ldi	r25, 0x11	; 17
    2918:	90 93 de 11 	sts	0x11DE, r25	; 0x8011de <pxOverflowTimerList+0x1>
    291c:	80 93 dd 11 	sts	0x11DD, r24	; 0x8011dd <pxOverflowTimerList>
    2920:	40 e0       	ldi	r20, 0x00	; 0
    2922:	67 e0       	ldi	r22, 0x07	; 7
    2924:	8a e0       	ldi	r24, 0x0A	; 10
    2926:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <xQueueGenericCreate>
    292a:	90 93 dc 11 	sts	0x11DC, r25	; 0x8011dc <xTimerQueue+0x1>
    292e:	80 93 db 11 	sts	0x11DB, r24	; 0x8011db <xTimerQueue>
    2932:	0f 90       	pop	r0
    2934:	0f be       	out	0x3f, r0	; 63
    2936:	08 95       	ret

00002938 <xTimerCreateTimerTask>:
    2938:	ef 92       	push	r14
    293a:	ff 92       	push	r15
    293c:	0f 93       	push	r16
    293e:	d3 df       	rcall	.-90     	; 0x28e6 <prvCheckForValidListAndQueue>
    2940:	80 91 db 11 	lds	r24, 0x11DB	; 0x8011db <xTimerQueue>
    2944:	90 91 dc 11 	lds	r25, 0x11DC	; 0x8011dc <xTimerQueue+0x1>
    2948:	89 2b       	or	r24, r25
    294a:	91 f0       	breq	.+36     	; 0x2970 <xTimerCreateTimerTask+0x38>
    294c:	0f 2e       	mov	r0, r31
    294e:	f9 ed       	ldi	r31, 0xD9	; 217
    2950:	ef 2e       	mov	r14, r31
    2952:	f1 e1       	ldi	r31, 0x11	; 17
    2954:	ff 2e       	mov	r15, r31
    2956:	f0 2d       	mov	r31, r0
    2958:	03 e0       	ldi	r16, 0x03	; 3
    295a:	20 e0       	ldi	r18, 0x00	; 0
    295c:	30 e0       	ldi	r19, 0x00	; 0
    295e:	40 ec       	ldi	r20, 0xC0	; 192
    2960:	50 e0       	ldi	r21, 0x00	; 0
    2962:	6c e7       	ldi	r22, 0x7C	; 124
    2964:	72 e0       	ldi	r23, 0x02	; 2
    2966:	86 e8       	ldi	r24, 0x86	; 134
    2968:	90 e0       	ldi	r25, 0x00	; 0
    296a:	0e 94 ac 0b 	call	0x1758	; 0x1758 <xTaskCreate>
    296e:	01 c0       	rjmp	.+2      	; 0x2972 <xTimerCreateTimerTask+0x3a>
    2970:	80 e0       	ldi	r24, 0x00	; 0
    2972:	0f 91       	pop	r16
    2974:	ff 90       	pop	r15
    2976:	ef 90       	pop	r14
    2978:	08 95       	ret

0000297a <xTimerGenericCommand>:
    297a:	8f 92       	push	r8
    297c:	9f 92       	push	r9
    297e:	af 92       	push	r10
    2980:	bf 92       	push	r11
    2982:	cf 92       	push	r12
    2984:	df 92       	push	r13
    2986:	ef 92       	push	r14
    2988:	ff 92       	push	r15
    298a:	0f 93       	push	r16
    298c:	1f 93       	push	r17
    298e:	cf 93       	push	r28
    2990:	df 93       	push	r29
    2992:	cd b7       	in	r28, 0x3d	; 61
    2994:	de b7       	in	r29, 0x3e	; 62
    2996:	27 97       	sbiw	r28, 0x07	; 7
    2998:	0f b6       	in	r0, 0x3f	; 63
    299a:	f8 94       	cli
    299c:	de bf       	out	0x3e, r29	; 62
    299e:	0f be       	out	0x3f, r0	; 63
    29a0:	cd bf       	out	0x3d, r28	; 61
    29a2:	e0 91 db 11 	lds	r30, 0x11DB	; 0x8011db <xTimerQueue>
    29a6:	f0 91 dc 11 	lds	r31, 0x11DC	; 0x8011dc <xTimerQueue+0x1>
    29aa:	30 97       	sbiw	r30, 0x00	; 0
    29ac:	81 f1       	breq	.+96     	; 0x2a0e <xTimerGenericCommand+0x94>
    29ae:	69 83       	std	Y+1, r22	; 0x01
    29b0:	2a 83       	std	Y+2, r18	; 0x02
    29b2:	3b 83       	std	Y+3, r19	; 0x03
    29b4:	4c 83       	std	Y+4, r20	; 0x04
    29b6:	5d 83       	std	Y+5, r21	; 0x05
    29b8:	9f 83       	std	Y+7, r25	; 0x07
    29ba:	8e 83       	std	Y+6, r24	; 0x06
    29bc:	66 30       	cpi	r22, 0x06	; 6
    29be:	f4 f4       	brge	.+60     	; 0x29fc <xTimerGenericCommand+0x82>
    29c0:	ee db       	rcall	.-2084   	; 0x219e <xTaskGetSchedulerState>
    29c2:	82 30       	cpi	r24, 0x02	; 2
    29c4:	69 f4       	brne	.+26     	; 0x29e0 <xTimerGenericCommand+0x66>
    29c6:	00 e0       	ldi	r16, 0x00	; 0
    29c8:	a7 01       	movw	r20, r14
    29ca:	96 01       	movw	r18, r12
    29cc:	be 01       	movw	r22, r28
    29ce:	6f 5f       	subi	r22, 0xFF	; 255
    29d0:	7f 4f       	sbci	r23, 0xFF	; 255
    29d2:	80 91 db 11 	lds	r24, 0x11DB	; 0x8011db <xTimerQueue>
    29d6:	90 91 dc 11 	lds	r25, 0x11DC	; 0x8011dc <xTimerQueue+0x1>
    29da:	0e 94 f7 04 	call	0x9ee	; 0x9ee <xQueueGenericSend>
    29de:	18 c0       	rjmp	.+48     	; 0x2a10 <xTimerGenericCommand+0x96>
    29e0:	00 e0       	ldi	r16, 0x00	; 0
    29e2:	20 e0       	ldi	r18, 0x00	; 0
    29e4:	30 e0       	ldi	r19, 0x00	; 0
    29e6:	a9 01       	movw	r20, r18
    29e8:	be 01       	movw	r22, r28
    29ea:	6f 5f       	subi	r22, 0xFF	; 255
    29ec:	7f 4f       	sbci	r23, 0xFF	; 255
    29ee:	80 91 db 11 	lds	r24, 0x11DB	; 0x8011db <xTimerQueue>
    29f2:	90 91 dc 11 	lds	r25, 0x11DC	; 0x8011dc <xTimerQueue+0x1>
    29f6:	0e 94 f7 04 	call	0x9ee	; 0x9ee <xQueueGenericSend>
    29fa:	0a c0       	rjmp	.+20     	; 0x2a10 <xTimerGenericCommand+0x96>
    29fc:	20 e0       	ldi	r18, 0x00	; 0
    29fe:	a8 01       	movw	r20, r16
    2a00:	be 01       	movw	r22, r28
    2a02:	6f 5f       	subi	r22, 0xFF	; 255
    2a04:	7f 4f       	sbci	r23, 0xFF	; 255
    2a06:	cf 01       	movw	r24, r30
    2a08:	0e 94 87 05 	call	0xb0e	; 0xb0e <xQueueGenericSendFromISR>
    2a0c:	01 c0       	rjmp	.+2      	; 0x2a10 <xTimerGenericCommand+0x96>
    2a0e:	80 e0       	ldi	r24, 0x00	; 0
    2a10:	27 96       	adiw	r28, 0x07	; 7
    2a12:	0f b6       	in	r0, 0x3f	; 63
    2a14:	f8 94       	cli
    2a16:	de bf       	out	0x3e, r29	; 62
    2a18:	0f be       	out	0x3f, r0	; 63
    2a1a:	cd bf       	out	0x3d, r28	; 61
    2a1c:	df 91       	pop	r29
    2a1e:	cf 91       	pop	r28
    2a20:	1f 91       	pop	r17
    2a22:	0f 91       	pop	r16
    2a24:	ff 90       	pop	r15
    2a26:	ef 90       	pop	r14
    2a28:	df 90       	pop	r13
    2a2a:	cf 90       	pop	r12
    2a2c:	bf 90       	pop	r11
    2a2e:	af 90       	pop	r10
    2a30:	9f 90       	pop	r9
    2a32:	8f 90       	pop	r8
    2a34:	08 95       	ret

00002a36 <prvSwitchTimerLists>:
    2a36:	8f 92       	push	r8
    2a38:	9f 92       	push	r9
    2a3a:	af 92       	push	r10
    2a3c:	bf 92       	push	r11
    2a3e:	cf 92       	push	r12
    2a40:	df 92       	push	r13
    2a42:	ef 92       	push	r14
    2a44:	ff 92       	push	r15
    2a46:	0f 93       	push	r16
    2a48:	1f 93       	push	r17
    2a4a:	cf 93       	push	r28
    2a4c:	df 93       	push	r29
    2a4e:	3b c0       	rjmp	.+118    	; 0x2ac6 <prvSwitchTimerLists+0x90>
    2a50:	07 80       	ldd	r0, Z+7	; 0x07
    2a52:	f0 85       	ldd	r31, Z+8	; 0x08
    2a54:	e0 2d       	mov	r30, r0
    2a56:	80 80       	ld	r8, Z
    2a58:	91 80       	ldd	r9, Z+1	; 0x01
    2a5a:	a2 80       	ldd	r10, Z+2	; 0x02
    2a5c:	b3 80       	ldd	r11, Z+3	; 0x03
    2a5e:	c0 85       	ldd	r28, Z+8	; 0x08
    2a60:	d1 85       	ldd	r29, Z+9	; 0x09
    2a62:	8e 01       	movw	r16, r28
    2a64:	0e 5f       	subi	r16, 0xFE	; 254
    2a66:	1f 4f       	sbci	r17, 0xFF	; 255
    2a68:	c8 01       	movw	r24, r16
    2a6a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <uxListRemove>
    2a6e:	ec 89       	ldd	r30, Y+20	; 0x14
    2a70:	fd 89       	ldd	r31, Y+21	; 0x15
    2a72:	ce 01       	movw	r24, r28
    2a74:	19 95       	eicall
    2a76:	8e 89       	ldd	r24, Y+22	; 0x16
    2a78:	82 ff       	sbrs	r24, 2
    2a7a:	25 c0       	rjmp	.+74     	; 0x2ac6 <prvSwitchTimerLists+0x90>
    2a7c:	8e 85       	ldd	r24, Y+14	; 0x0e
    2a7e:	9f 85       	ldd	r25, Y+15	; 0x0f
    2a80:	a8 89       	ldd	r26, Y+16	; 0x10
    2a82:	b9 89       	ldd	r27, Y+17	; 0x11
    2a84:	88 0d       	add	r24, r8
    2a86:	99 1d       	adc	r25, r9
    2a88:	aa 1d       	adc	r26, r10
    2a8a:	bb 1d       	adc	r27, r11
    2a8c:	88 16       	cp	r8, r24
    2a8e:	99 06       	cpc	r9, r25
    2a90:	aa 06       	cpc	r10, r26
    2a92:	bb 06       	cpc	r11, r27
    2a94:	70 f4       	brcc	.+28     	; 0x2ab2 <prvSwitchTimerLists+0x7c>
    2a96:	8a 83       	std	Y+2, r24	; 0x02
    2a98:	9b 83       	std	Y+3, r25	; 0x03
    2a9a:	ac 83       	std	Y+4, r26	; 0x04
    2a9c:	bd 83       	std	Y+5, r27	; 0x05
    2a9e:	db 87       	std	Y+11, r29	; 0x0b
    2aa0:	ca 87       	std	Y+10, r28	; 0x0a
    2aa2:	b8 01       	movw	r22, r16
    2aa4:	80 91 df 11 	lds	r24, 0x11DF	; 0x8011df <pxCurrentTimerList>
    2aa8:	90 91 e0 11 	lds	r25, 0x11E0	; 0x8011e0 <pxCurrentTimerList+0x1>
    2aac:	0e 94 36 02 	call	0x46c	; 0x46c <vListInsert>
    2ab0:	0a c0       	rjmp	.+20     	; 0x2ac6 <prvSwitchTimerLists+0x90>
    2ab2:	c1 2c       	mov	r12, r1
    2ab4:	d1 2c       	mov	r13, r1
    2ab6:	76 01       	movw	r14, r12
    2ab8:	00 e0       	ldi	r16, 0x00	; 0
    2aba:	10 e0       	ldi	r17, 0x00	; 0
    2abc:	a5 01       	movw	r20, r10
    2abe:	94 01       	movw	r18, r8
    2ac0:	60 e0       	ldi	r22, 0x00	; 0
    2ac2:	ce 01       	movw	r24, r28
    2ac4:	5a df       	rcall	.-332    	; 0x297a <xTimerGenericCommand>
    2ac6:	e0 91 df 11 	lds	r30, 0x11DF	; 0x8011df <pxCurrentTimerList>
    2aca:	f0 91 e0 11 	lds	r31, 0x11E0	; 0x8011e0 <pxCurrentTimerList+0x1>
    2ace:	80 81       	ld	r24, Z
    2ad0:	81 11       	cpse	r24, r1
    2ad2:	be cf       	rjmp	.-132    	; 0x2a50 <prvSwitchTimerLists+0x1a>
    2ad4:	80 91 dd 11 	lds	r24, 0x11DD	; 0x8011dd <pxOverflowTimerList>
    2ad8:	90 91 de 11 	lds	r25, 0x11DE	; 0x8011de <pxOverflowTimerList+0x1>
    2adc:	90 93 e0 11 	sts	0x11E0, r25	; 0x8011e0 <pxCurrentTimerList+0x1>
    2ae0:	80 93 df 11 	sts	0x11DF, r24	; 0x8011df <pxCurrentTimerList>
    2ae4:	f0 93 de 11 	sts	0x11DE, r31	; 0x8011de <pxOverflowTimerList+0x1>
    2ae8:	e0 93 dd 11 	sts	0x11DD, r30	; 0x8011dd <pxOverflowTimerList>
    2aec:	df 91       	pop	r29
    2aee:	cf 91       	pop	r28
    2af0:	1f 91       	pop	r17
    2af2:	0f 91       	pop	r16
    2af4:	ff 90       	pop	r15
    2af6:	ef 90       	pop	r14
    2af8:	df 90       	pop	r13
    2afa:	cf 90       	pop	r12
    2afc:	bf 90       	pop	r11
    2afe:	af 90       	pop	r10
    2b00:	9f 90       	pop	r9
    2b02:	8f 90       	pop	r8
    2b04:	08 95       	ret

00002b06 <prvSampleTimeNow>:
    2b06:	cf 92       	push	r12
    2b08:	df 92       	push	r13
    2b0a:	ef 92       	push	r14
    2b0c:	ff 92       	push	r15
    2b0e:	cf 93       	push	r28
    2b10:	df 93       	push	r29
    2b12:	ec 01       	movw	r28, r24
    2b14:	0e 94 36 0c 	call	0x186c	; 0x186c <xTaskGetTickCount>
    2b18:	6b 01       	movw	r12, r22
    2b1a:	7c 01       	movw	r14, r24
    2b1c:	80 91 d5 11 	lds	r24, 0x11D5	; 0x8011d5 <xLastTime.2436>
    2b20:	90 91 d6 11 	lds	r25, 0x11D6	; 0x8011d6 <xLastTime.2436+0x1>
    2b24:	a0 91 d7 11 	lds	r26, 0x11D7	; 0x8011d7 <xLastTime.2436+0x2>
    2b28:	b0 91 d8 11 	lds	r27, 0x11D8	; 0x8011d8 <xLastTime.2436+0x3>
    2b2c:	c8 16       	cp	r12, r24
    2b2e:	d9 06       	cpc	r13, r25
    2b30:	ea 06       	cpc	r14, r26
    2b32:	fb 06       	cpc	r15, r27
    2b34:	20 f4       	brcc	.+8      	; 0x2b3e <prvSampleTimeNow+0x38>
    2b36:	7f df       	rcall	.-258    	; 0x2a36 <prvSwitchTimerLists>
    2b38:	81 e0       	ldi	r24, 0x01	; 1
    2b3a:	88 83       	st	Y, r24
    2b3c:	01 c0       	rjmp	.+2      	; 0x2b40 <prvSampleTimeNow+0x3a>
    2b3e:	18 82       	st	Y, r1
    2b40:	c0 92 d5 11 	sts	0x11D5, r12	; 0x8011d5 <xLastTime.2436>
    2b44:	d0 92 d6 11 	sts	0x11D6, r13	; 0x8011d6 <xLastTime.2436+0x1>
    2b48:	e0 92 d7 11 	sts	0x11D7, r14	; 0x8011d7 <xLastTime.2436+0x2>
    2b4c:	f0 92 d8 11 	sts	0x11D8, r15	; 0x8011d8 <xLastTime.2436+0x3>
    2b50:	c7 01       	movw	r24, r14
    2b52:	b6 01       	movw	r22, r12
    2b54:	df 91       	pop	r29
    2b56:	cf 91       	pop	r28
    2b58:	ff 90       	pop	r15
    2b5a:	ef 90       	pop	r14
    2b5c:	df 90       	pop	r13
    2b5e:	cf 90       	pop	r12
    2b60:	08 95       	ret

00002b62 <prvProcessExpiredTimer>:
    2b62:	4f 92       	push	r4
    2b64:	5f 92       	push	r5
    2b66:	6f 92       	push	r6
    2b68:	7f 92       	push	r7
    2b6a:	8f 92       	push	r8
    2b6c:	9f 92       	push	r9
    2b6e:	af 92       	push	r10
    2b70:	bf 92       	push	r11
    2b72:	cf 92       	push	r12
    2b74:	df 92       	push	r13
    2b76:	ef 92       	push	r14
    2b78:	ff 92       	push	r15
    2b7a:	0f 93       	push	r16
    2b7c:	1f 93       	push	r17
    2b7e:	cf 93       	push	r28
    2b80:	df 93       	push	r29
    2b82:	4b 01       	movw	r8, r22
    2b84:	5c 01       	movw	r10, r24
    2b86:	29 01       	movw	r4, r18
    2b88:	3a 01       	movw	r6, r20
    2b8a:	e0 91 df 11 	lds	r30, 0x11DF	; 0x8011df <pxCurrentTimerList>
    2b8e:	f0 91 e0 11 	lds	r31, 0x11E0	; 0x8011e0 <pxCurrentTimerList+0x1>
    2b92:	07 80       	ldd	r0, Z+7	; 0x07
    2b94:	f0 85       	ldd	r31, Z+8	; 0x08
    2b96:	e0 2d       	mov	r30, r0
    2b98:	c0 85       	ldd	r28, Z+8	; 0x08
    2b9a:	d1 85       	ldd	r29, Z+9	; 0x09
    2b9c:	ce 01       	movw	r24, r28
    2b9e:	02 96       	adiw	r24, 0x02	; 2
    2ba0:	0e 94 73 02 	call	0x4e6	; 0x4e6 <uxListRemove>
    2ba4:	8e 89       	ldd	r24, Y+22	; 0x16
    2ba6:	82 ff       	sbrs	r24, 2
    2ba8:	1b c0       	rjmp	.+54     	; 0x2be0 <prvProcessExpiredTimer+0x7e>
    2baa:	4e 85       	ldd	r20, Y+14	; 0x0e
    2bac:	5f 85       	ldd	r21, Y+15	; 0x0f
    2bae:	68 89       	ldd	r22, Y+16	; 0x10
    2bb0:	79 89       	ldd	r23, Y+17	; 0x11
    2bb2:	48 0d       	add	r20, r8
    2bb4:	59 1d       	adc	r21, r9
    2bb6:	6a 1d       	adc	r22, r10
    2bb8:	7b 1d       	adc	r23, r11
    2bba:	75 01       	movw	r14, r10
    2bbc:	64 01       	movw	r12, r8
    2bbe:	93 01       	movw	r18, r6
    2bc0:	82 01       	movw	r16, r4
    2bc2:	ce 01       	movw	r24, r28
    2bc4:	47 de       	rcall	.-882    	; 0x2854 <prvInsertTimerInActiveList>
    2bc6:	88 23       	and	r24, r24
    2bc8:	69 f0       	breq	.+26     	; 0x2be4 <prvProcessExpiredTimer+0x82>
    2bca:	c1 2c       	mov	r12, r1
    2bcc:	d1 2c       	mov	r13, r1
    2bce:	76 01       	movw	r14, r12
    2bd0:	00 e0       	ldi	r16, 0x00	; 0
    2bd2:	10 e0       	ldi	r17, 0x00	; 0
    2bd4:	a5 01       	movw	r20, r10
    2bd6:	94 01       	movw	r18, r8
    2bd8:	60 e0       	ldi	r22, 0x00	; 0
    2bda:	ce 01       	movw	r24, r28
    2bdc:	ce de       	rcall	.-612    	; 0x297a <xTimerGenericCommand>
    2bde:	02 c0       	rjmp	.+4      	; 0x2be4 <prvProcessExpiredTimer+0x82>
    2be0:	8e 7f       	andi	r24, 0xFE	; 254
    2be2:	8e 8b       	std	Y+22, r24	; 0x16
    2be4:	ec 89       	ldd	r30, Y+20	; 0x14
    2be6:	fd 89       	ldd	r31, Y+21	; 0x15
    2be8:	ce 01       	movw	r24, r28
    2bea:	19 95       	eicall
    2bec:	df 91       	pop	r29
    2bee:	cf 91       	pop	r28
    2bf0:	1f 91       	pop	r17
    2bf2:	0f 91       	pop	r16
    2bf4:	ff 90       	pop	r15
    2bf6:	ef 90       	pop	r14
    2bf8:	df 90       	pop	r13
    2bfa:	cf 90       	pop	r12
    2bfc:	bf 90       	pop	r11
    2bfe:	af 90       	pop	r10
    2c00:	9f 90       	pop	r9
    2c02:	8f 90       	pop	r8
    2c04:	7f 90       	pop	r7
    2c06:	6f 90       	pop	r6
    2c08:	5f 90       	pop	r5
    2c0a:	4f 90       	pop	r4
    2c0c:	08 95       	ret

00002c0e <prvProcessTimerOrBlockTask>:
    2c0e:	8f 92       	push	r8
    2c10:	9f 92       	push	r9
    2c12:	af 92       	push	r10
    2c14:	bf 92       	push	r11
    2c16:	cf 92       	push	r12
    2c18:	df 92       	push	r13
    2c1a:	ef 92       	push	r14
    2c1c:	ff 92       	push	r15
    2c1e:	1f 93       	push	r17
    2c20:	cf 93       	push	r28
    2c22:	df 93       	push	r29
    2c24:	1f 92       	push	r1
    2c26:	cd b7       	in	r28, 0x3d	; 61
    2c28:	de b7       	in	r29, 0x3e	; 62
    2c2a:	6b 01       	movw	r12, r22
    2c2c:	7c 01       	movw	r14, r24
    2c2e:	14 2f       	mov	r17, r20
    2c30:	0e 94 30 0c 	call	0x1860	; 0x1860 <vTaskSuspendAll>
    2c34:	ce 01       	movw	r24, r28
    2c36:	01 96       	adiw	r24, 0x01	; 1
    2c38:	66 df       	rcall	.-308    	; 0x2b06 <prvSampleTimeNow>
    2c3a:	4b 01       	movw	r8, r22
    2c3c:	5c 01       	movw	r10, r24
    2c3e:	89 81       	ldd	r24, Y+1	; 0x01
    2c40:	81 11       	cpse	r24, r1
    2c42:	2d c0       	rjmp	.+90     	; 0x2c9e <prvProcessTimerOrBlockTask+0x90>
    2c44:	11 11       	cpse	r17, r1
    2c46:	0d c0       	rjmp	.+26     	; 0x2c62 <prvProcessTimerOrBlockTask+0x54>
    2c48:	8c 14       	cp	r8, r12
    2c4a:	9d 04       	cpc	r9, r13
    2c4c:	ae 04       	cpc	r10, r14
    2c4e:	bf 04       	cpc	r11, r15
    2c50:	40 f0       	brcs	.+16     	; 0x2c62 <prvProcessTimerOrBlockTask+0x54>
    2c52:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <xTaskResumeAll>
    2c56:	a5 01       	movw	r20, r10
    2c58:	94 01       	movw	r18, r8
    2c5a:	c7 01       	movw	r24, r14
    2c5c:	b6 01       	movw	r22, r12
    2c5e:	81 df       	rcall	.-254    	; 0x2b62 <prvProcessExpiredTimer>
    2c60:	20 c0       	rjmp	.+64     	; 0x2ca2 <prvProcessTimerOrBlockTask+0x94>
    2c62:	11 23       	and	r17, r17
    2c64:	41 f0       	breq	.+16     	; 0x2c76 <prvProcessTimerOrBlockTask+0x68>
    2c66:	e0 91 dd 11 	lds	r30, 0x11DD	; 0x8011dd <pxOverflowTimerList>
    2c6a:	f0 91 de 11 	lds	r31, 0x11DE	; 0x8011de <pxOverflowTimerList+0x1>
    2c6e:	80 81       	ld	r24, Z
    2c70:	11 e0       	ldi	r17, 0x01	; 1
    2c72:	81 11       	cpse	r24, r1
    2c74:	10 e0       	ldi	r17, 0x00	; 0
    2c76:	b7 01       	movw	r22, r14
    2c78:	a6 01       	movw	r20, r12
    2c7a:	48 19       	sub	r20, r8
    2c7c:	59 09       	sbc	r21, r9
    2c7e:	6a 09       	sbc	r22, r10
    2c80:	7b 09       	sbc	r23, r11
    2c82:	21 2f       	mov	r18, r17
    2c84:	80 91 db 11 	lds	r24, 0x11DB	; 0x8011db <xTimerQueue>
    2c88:	90 91 dc 11 	lds	r25, 0x11DC	; 0x8011dc <xTimerQueue+0x1>
    2c8c:	0e 94 51 06 	call	0xca2	; 0xca2 <vQueueWaitForMessageRestricted>
    2c90:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <xTaskResumeAll>
    2c94:	81 11       	cpse	r24, r1
    2c96:	05 c0       	rjmp	.+10     	; 0x2ca2 <prvProcessTimerOrBlockTask+0x94>
    2c98:	0e 94 ef 02 	call	0x5de	; 0x5de <vPortYield>
    2c9c:	02 c0       	rjmp	.+4      	; 0x2ca2 <prvProcessTimerOrBlockTask+0x94>
    2c9e:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <xTaskResumeAll>
    2ca2:	0f 90       	pop	r0
    2ca4:	df 91       	pop	r29
    2ca6:	cf 91       	pop	r28
    2ca8:	1f 91       	pop	r17
    2caa:	ff 90       	pop	r15
    2cac:	ef 90       	pop	r14
    2cae:	df 90       	pop	r13
    2cb0:	cf 90       	pop	r12
    2cb2:	bf 90       	pop	r11
    2cb4:	af 90       	pop	r10
    2cb6:	9f 90       	pop	r9
    2cb8:	8f 90       	pop	r8
    2cba:	08 95       	ret

00002cbc <prvProcessReceivedCommands>:
    2cbc:	af 92       	push	r10
    2cbe:	bf 92       	push	r11
    2cc0:	cf 92       	push	r12
    2cc2:	df 92       	push	r13
    2cc4:	ef 92       	push	r14
    2cc6:	ff 92       	push	r15
    2cc8:	0f 93       	push	r16
    2cca:	1f 93       	push	r17
    2ccc:	cf 93       	push	r28
    2cce:	df 93       	push	r29
    2cd0:	cd b7       	in	r28, 0x3d	; 61
    2cd2:	de b7       	in	r29, 0x3e	; 62
    2cd4:	28 97       	sbiw	r28, 0x08	; 8
    2cd6:	0f b6       	in	r0, 0x3f	; 63
    2cd8:	f8 94       	cli
    2cda:	de bf       	out	0x3e, r29	; 62
    2cdc:	0f be       	out	0x3f, r0	; 63
    2cde:	cd bf       	out	0x3d, r28	; 61
    2ce0:	82 c0       	rjmp	.+260    	; 0x2de6 <prvProcessReceivedCommands+0x12a>
    2ce2:	89 81       	ldd	r24, Y+1	; 0x01
    2ce4:	88 23       	and	r24, r24
    2ce6:	0c f4       	brge	.+2      	; 0x2cea <prvProcessReceivedCommands+0x2e>
    2ce8:	7e c0       	rjmp	.+252    	; 0x2de6 <prvProcessReceivedCommands+0x12a>
    2cea:	ae 80       	ldd	r10, Y+6	; 0x06
    2cec:	bf 80       	ldd	r11, Y+7	; 0x07
    2cee:	d5 01       	movw	r26, r10
    2cf0:	1c 96       	adiw	r26, 0x0c	; 12
    2cf2:	8d 91       	ld	r24, X+
    2cf4:	9c 91       	ld	r25, X
    2cf6:	1d 97       	sbiw	r26, 0x0d	; 13
    2cf8:	89 2b       	or	r24, r25
    2cfa:	21 f0       	breq	.+8      	; 0x2d04 <prvProcessReceivedCommands+0x48>
    2cfc:	c5 01       	movw	r24, r10
    2cfe:	02 96       	adiw	r24, 0x02	; 2
    2d00:	0e 94 73 02 	call	0x4e6	; 0x4e6 <uxListRemove>
    2d04:	ce 01       	movw	r24, r28
    2d06:	08 96       	adiw	r24, 0x08	; 8
    2d08:	fe de       	rcall	.-516    	; 0x2b06 <prvSampleTimeNow>
    2d0a:	8b 01       	movw	r16, r22
    2d0c:	9c 01       	movw	r18, r24
    2d0e:	e9 81       	ldd	r30, Y+1	; 0x01
    2d10:	0e 2e       	mov	r0, r30
    2d12:	00 0c       	add	r0, r0
    2d14:	ff 0b       	sbc	r31, r31
    2d16:	ea 30       	cpi	r30, 0x0A	; 10
    2d18:	f1 05       	cpc	r31, r1
    2d1a:	08 f0       	brcs	.+2      	; 0x2d1e <prvProcessReceivedCommands+0x62>
    2d1c:	64 c0       	rjmp	.+200    	; 0x2de6 <prvProcessReceivedCommands+0x12a>
    2d1e:	88 27       	eor	r24, r24
    2d20:	ee 58       	subi	r30, 0x8E	; 142
    2d22:	ff 4f       	sbci	r31, 0xFF	; 255
    2d24:	8f 4f       	sbci	r24, 0xFF	; 255
    2d26:	0c 94 62 26 	jmp	0x4cc4	; 0x4cc4 <__tablejump2__>
    2d2a:	f5 01       	movw	r30, r10
    2d2c:	86 89       	ldd	r24, Z+22	; 0x16
    2d2e:	81 60       	ori	r24, 0x01	; 1
    2d30:	86 8b       	std	Z+22, r24	; 0x16
    2d32:	ca 80       	ldd	r12, Y+2	; 0x02
    2d34:	db 80       	ldd	r13, Y+3	; 0x03
    2d36:	ec 80       	ldd	r14, Y+4	; 0x04
    2d38:	fd 80       	ldd	r15, Y+5	; 0x05
    2d3a:	46 85       	ldd	r20, Z+14	; 0x0e
    2d3c:	57 85       	ldd	r21, Z+15	; 0x0f
    2d3e:	60 89       	ldd	r22, Z+16	; 0x10
    2d40:	71 89       	ldd	r23, Z+17	; 0x11
    2d42:	4c 0d       	add	r20, r12
    2d44:	5d 1d       	adc	r21, r13
    2d46:	6e 1d       	adc	r22, r14
    2d48:	7f 1d       	adc	r23, r15
    2d4a:	c5 01       	movw	r24, r10
    2d4c:	83 dd       	rcall	.-1274   	; 0x2854 <prvInsertTimerInActiveList>
    2d4e:	88 23       	and	r24, r24
    2d50:	09 f4       	brne	.+2      	; 0x2d54 <prvProcessReceivedCommands+0x98>
    2d52:	49 c0       	rjmp	.+146    	; 0x2de6 <prvProcessReceivedCommands+0x12a>
    2d54:	d5 01       	movw	r26, r10
    2d56:	54 96       	adiw	r26, 0x14	; 20
    2d58:	ed 91       	ld	r30, X+
    2d5a:	fc 91       	ld	r31, X
    2d5c:	55 97       	sbiw	r26, 0x15	; 21
    2d5e:	c5 01       	movw	r24, r10
    2d60:	19 95       	eicall
    2d62:	f5 01       	movw	r30, r10
    2d64:	86 89       	ldd	r24, Z+22	; 0x16
    2d66:	82 ff       	sbrs	r24, 2
    2d68:	3e c0       	rjmp	.+124    	; 0x2de6 <prvProcessReceivedCommands+0x12a>
    2d6a:	4a 81       	ldd	r20, Y+2	; 0x02
    2d6c:	5b 81       	ldd	r21, Y+3	; 0x03
    2d6e:	6c 81       	ldd	r22, Y+4	; 0x04
    2d70:	7d 81       	ldd	r23, Y+5	; 0x05
    2d72:	86 85       	ldd	r24, Z+14	; 0x0e
    2d74:	97 85       	ldd	r25, Z+15	; 0x0f
    2d76:	a0 89       	ldd	r26, Z+16	; 0x10
    2d78:	b1 89       	ldd	r27, Z+17	; 0x11
    2d7a:	9a 01       	movw	r18, r20
    2d7c:	ab 01       	movw	r20, r22
    2d7e:	28 0f       	add	r18, r24
    2d80:	39 1f       	adc	r19, r25
    2d82:	4a 1f       	adc	r20, r26
    2d84:	5b 1f       	adc	r21, r27
    2d86:	c1 2c       	mov	r12, r1
    2d88:	d1 2c       	mov	r13, r1
    2d8a:	76 01       	movw	r14, r12
    2d8c:	00 e0       	ldi	r16, 0x00	; 0
    2d8e:	10 e0       	ldi	r17, 0x00	; 0
    2d90:	60 e0       	ldi	r22, 0x00	; 0
    2d92:	c5 01       	movw	r24, r10
    2d94:	f2 dd       	rcall	.-1052   	; 0x297a <xTimerGenericCommand>
    2d96:	27 c0       	rjmp	.+78     	; 0x2de6 <prvProcessReceivedCommands+0x12a>
    2d98:	d5 01       	movw	r26, r10
    2d9a:	56 96       	adiw	r26, 0x16	; 22
    2d9c:	8c 91       	ld	r24, X
    2d9e:	56 97       	sbiw	r26, 0x16	; 22
    2da0:	8e 7f       	andi	r24, 0xFE	; 254
    2da2:	56 96       	adiw	r26, 0x16	; 22
    2da4:	8c 93       	st	X, r24
    2da6:	1f c0       	rjmp	.+62     	; 0x2de6 <prvProcessReceivedCommands+0x12a>
    2da8:	f5 01       	movw	r30, r10
    2daa:	86 89       	ldd	r24, Z+22	; 0x16
    2dac:	81 60       	ori	r24, 0x01	; 1
    2dae:	86 8b       	std	Z+22, r24	; 0x16
    2db0:	4a 81       	ldd	r20, Y+2	; 0x02
    2db2:	5b 81       	ldd	r21, Y+3	; 0x03
    2db4:	6c 81       	ldd	r22, Y+4	; 0x04
    2db6:	7d 81       	ldd	r23, Y+5	; 0x05
    2db8:	46 87       	std	Z+14, r20	; 0x0e
    2dba:	57 87       	std	Z+15, r21	; 0x0f
    2dbc:	60 8b       	std	Z+16, r22	; 0x10
    2dbe:	71 8b       	std	Z+17, r23	; 0x11
    2dc0:	40 0f       	add	r20, r16
    2dc2:	51 1f       	adc	r21, r17
    2dc4:	62 1f       	adc	r22, r18
    2dc6:	73 1f       	adc	r23, r19
    2dc8:	68 01       	movw	r12, r16
    2dca:	79 01       	movw	r14, r18
    2dcc:	c5 01       	movw	r24, r10
    2dce:	42 dd       	rcall	.-1404   	; 0x2854 <prvInsertTimerInActiveList>
    2dd0:	0a c0       	rjmp	.+20     	; 0x2de6 <prvProcessReceivedCommands+0x12a>
    2dd2:	f5 01       	movw	r30, r10
    2dd4:	86 89       	ldd	r24, Z+22	; 0x16
    2dd6:	81 fd       	sbrc	r24, 1
    2dd8:	04 c0       	rjmp	.+8      	; 0x2de2 <prvProcessReceivedCommands+0x126>
    2dda:	c5 01       	movw	r24, r10
    2ddc:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <vPortFree>
    2de0:	02 c0       	rjmp	.+4      	; 0x2de6 <prvProcessReceivedCommands+0x12a>
    2de2:	8e 7f       	andi	r24, 0xFE	; 254
    2de4:	86 8b       	std	Z+22, r24	; 0x16
    2de6:	20 e0       	ldi	r18, 0x00	; 0
    2de8:	30 e0       	ldi	r19, 0x00	; 0
    2dea:	a9 01       	movw	r20, r18
    2dec:	be 01       	movw	r22, r28
    2dee:	6f 5f       	subi	r22, 0xFF	; 255
    2df0:	7f 4f       	sbci	r23, 0xFF	; 255
    2df2:	80 91 db 11 	lds	r24, 0x11DB	; 0x8011db <xTimerQueue>
    2df6:	90 91 dc 11 	lds	r25, 0x11DC	; 0x8011dc <xTimerQueue+0x1>
    2dfa:	0e 94 c2 05 	call	0xb84	; 0xb84 <xQueueReceive>
    2dfe:	81 11       	cpse	r24, r1
    2e00:	70 cf       	rjmp	.-288    	; 0x2ce2 <prvProcessReceivedCommands+0x26>
    2e02:	28 96       	adiw	r28, 0x08	; 8
    2e04:	0f b6       	in	r0, 0x3f	; 63
    2e06:	f8 94       	cli
    2e08:	de bf       	out	0x3e, r29	; 62
    2e0a:	0f be       	out	0x3f, r0	; 63
    2e0c:	cd bf       	out	0x3d, r28	; 61
    2e0e:	df 91       	pop	r29
    2e10:	cf 91       	pop	r28
    2e12:	1f 91       	pop	r17
    2e14:	0f 91       	pop	r16
    2e16:	ff 90       	pop	r15
    2e18:	ef 90       	pop	r14
    2e1a:	df 90       	pop	r13
    2e1c:	cf 90       	pop	r12
    2e1e:	bf 90       	pop	r11
    2e20:	af 90       	pop	r10
    2e22:	08 95       	ret

00002e24 <vApplicationIdleHook>:
    2e24:	08 95       	ret

00002e26 <prvSetMainLedOn>:
    2e26:	84 b1       	in	r24, 0x04	; 4
    2e28:	80 68       	ori	r24, 0x80	; 128
    2e2a:	84 b9       	out	0x04, r24	; 4
    2e2c:	85 b1       	in	r24, 0x05	; 5
    2e2e:	80 68       	ori	r24, 0x80	; 128
    2e30:	85 b9       	out	0x05, r24	; 5
    2e32:	08 95       	ret

00002e34 <prvBlinkMainLed>:
    2e34:	83 b1       	in	r24, 0x03	; 3
    2e36:	80 68       	ori	r24, 0x80	; 128
    2e38:	83 b9       	out	0x03, r24	; 3
    2e3a:	08 95       	ret

00002e3c <vApplicationMallocFailedHook>:
    2e3c:	f4 df       	rcall	.-24     	; 0x2e26 <prvSetMainLedOn>
=======
     c18:	de bf       	out	0x3e, r29	; 62
     c1a:	0f be       	out	0x3f, r0	; 63
     c1c:	cd bf       	out	0x3d, r28	; 61
     c1e:	df 91       	pop	r29
     c20:	cf 91       	pop	r28
     c22:	1f 91       	pop	r17
     c24:	0f 91       	pop	r16
     c26:	ff 90       	pop	r15
     c28:	ef 90       	pop	r14
     c2a:	df 90       	pop	r13
     c2c:	cf 90       	pop	r12
     c2e:	08 95       	ret

00000c30 <xQueueGenericSendFromISR>:
     c30:	ef 92       	push	r14
     c32:	ff 92       	push	r15
     c34:	0f 93       	push	r16
     c36:	1f 93       	push	r17
     c38:	cf 93       	push	r28
     c3a:	df 93       	push	r29
     c3c:	8a 01       	movw	r16, r20
     c3e:	fc 01       	movw	r30, r24
     c40:	56 8d       	ldd	r21, Z+30	; 0x1e
     c42:	37 8d       	ldd	r19, Z+31	; 0x1f
     c44:	53 17       	cp	r21, r19
     c46:	10 f0       	brcs	.+4      	; 0xc4c <xQueueGenericSendFromISR+0x1c>
     c48:	22 30       	cpi	r18, 0x02	; 2
     c4a:	f9 f4       	brne	.+62     	; 0xc8a <xQueueGenericSendFromISR+0x5a>
     c4c:	42 2f       	mov	r20, r18
     c4e:	78 01       	movw	r14, r16
     c50:	ec 01       	movw	r28, r24
     c52:	1a a1       	ldd	r17, Y+34	; 0x22
     c54:	8e 8d       	ldd	r24, Y+30	; 0x1e
     c56:	ce 01       	movw	r24, r28
     c58:	36 de       	rcall	.-916    	; 0x8c6 <prvCopyDataToQueue>
     c5a:	1f 3f       	cpi	r17, 0xFF	; 255
     c5c:	81 f4       	brne	.+32     	; 0xc7e <xQueueGenericSendFromISR+0x4e>
     c5e:	8b 89       	ldd	r24, Y+19	; 0x13
     c60:	88 23       	and	r24, r24
     c62:	a9 f0       	breq	.+42     	; 0xc8e <xQueueGenericSendFromISR+0x5e>
     c64:	ce 01       	movw	r24, r28
     c66:	43 96       	adiw	r24, 0x13	; 19
     c68:	0e 94 1b 10 	call	0x2036	; 0x2036 <xTaskRemoveFromEventList>
     c6c:	88 23       	and	r24, r24
     c6e:	89 f0       	breq	.+34     	; 0xc92 <xQueueGenericSendFromISR+0x62>
     c70:	e1 14       	cp	r14, r1
     c72:	f1 04       	cpc	r15, r1
     c74:	81 f0       	breq	.+32     	; 0xc96 <xQueueGenericSendFromISR+0x66>
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	f7 01       	movw	r30, r14
     c7a:	80 83       	st	Z, r24
     c7c:	0d c0       	rjmp	.+26     	; 0xc98 <xQueueGenericSendFromISR+0x68>
     c7e:	ff 24       	eor	r15, r15
     c80:	f3 94       	inc	r15
     c82:	f1 0e       	add	r15, r17
     c84:	fa a2       	std	Y+34, r15	; 0x22
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	07 c0       	rjmp	.+14     	; 0xc98 <xQueueGenericSendFromISR+0x68>
     c8a:	80 e0       	ldi	r24, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <xQueueGenericSendFromISR+0x68>
     c8e:	81 e0       	ldi	r24, 0x01	; 1
     c90:	03 c0       	rjmp	.+6      	; 0xc98 <xQueueGenericSendFromISR+0x68>
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	01 c0       	rjmp	.+2      	; 0xc98 <xQueueGenericSendFromISR+0x68>
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	df 91       	pop	r29
     c9a:	cf 91       	pop	r28
     c9c:	1f 91       	pop	r17
     c9e:	0f 91       	pop	r16
     ca0:	ff 90       	pop	r15
     ca2:	ef 90       	pop	r14
     ca4:	08 95       	ret

00000ca6 <xQueueReceive>:
     ca6:	cf 92       	push	r12
     ca8:	df 92       	push	r13
     caa:	ef 92       	push	r14
     cac:	ff 92       	push	r15
     cae:	0f 93       	push	r16
     cb0:	1f 93       	push	r17
     cb2:	cf 93       	push	r28
     cb4:	df 93       	push	r29
     cb6:	cd b7       	in	r28, 0x3d	; 61
     cb8:	de b7       	in	r29, 0x3e	; 62
     cba:	29 97       	sbiw	r28, 0x09	; 9
     cbc:	0f b6       	in	r0, 0x3f	; 63
     cbe:	f8 94       	cli
     cc0:	de bf       	out	0x3e, r29	; 62
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	cd bf       	out	0x3d, r28	; 61
     cc6:	8c 01       	movw	r16, r24
     cc8:	6b 01       	movw	r12, r22
     cca:	2e 83       	std	Y+6, r18	; 0x06
     ccc:	3f 83       	std	Y+7, r19	; 0x07
     cce:	48 87       	std	Y+8, r20	; 0x08
     cd0:	59 87       	std	Y+9, r21	; 0x09
     cd2:	e1 2c       	mov	r14, r1
     cd4:	0f b6       	in	r0, 0x3f	; 63
     cd6:	f8 94       	cli
     cd8:	0f 92       	push	r0
     cda:	f8 01       	movw	r30, r16
     cdc:	f6 8c       	ldd	r15, Z+30	; 0x1e
     cde:	ff 20       	and	r15, r15
     ce0:	99 f0       	breq	.+38     	; 0xd08 <xQueueReceive+0x62>
     ce2:	b6 01       	movw	r22, r12
     ce4:	c8 01       	movw	r24, r16
     ce6:	4e de       	rcall	.-868    	; 0x984 <prvCopyDataFromQueue>
     ce8:	fa 94       	dec	r15
     cea:	f8 01       	movw	r30, r16
     cec:	f6 8e       	std	Z+30, r15	; 0x1e
     cee:	80 85       	ldd	r24, Z+8	; 0x08
     cf0:	88 23       	and	r24, r24
     cf2:	31 f0       	breq	.+12     	; 0xd00 <xQueueReceive+0x5a>
     cf4:	c8 01       	movw	r24, r16
     cf6:	08 96       	adiw	r24, 0x08	; 8
     cf8:	0e 94 1b 10 	call	0x2036	; 0x2036 <xTaskRemoveFromEventList>
     cfc:	81 11       	cpse	r24, r1
     cfe:	00 dd       	rcall	.-1536   	; 0x700 <vPortYield>
     d00:	0f 90       	pop	r0
     d02:	0f be       	out	0x3f, r0	; 63
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	4f c0       	rjmp	.+158    	; 0xda6 <xQueueReceive+0x100>
     d08:	8e 81       	ldd	r24, Y+6	; 0x06
     d0a:	9f 81       	ldd	r25, Y+7	; 0x07
     d0c:	a8 85       	ldd	r26, Y+8	; 0x08
     d0e:	b9 85       	ldd	r27, Y+9	; 0x09
     d10:	89 2b       	or	r24, r25
     d12:	8a 2b       	or	r24, r26
     d14:	8b 2b       	or	r24, r27
     d16:	21 f4       	brne	.+8      	; 0xd20 <xQueueReceive+0x7a>
     d18:	0f 90       	pop	r0
     d1a:	0f be       	out	0x3f, r0	; 63
     d1c:	80 e0       	ldi	r24, 0x00	; 0
     d1e:	43 c0       	rjmp	.+134    	; 0xda6 <xQueueReceive+0x100>
     d20:	e1 10       	cpse	r14, r1
     d22:	06 c0       	rjmp	.+12     	; 0xd30 <xQueueReceive+0x8a>
     d24:	ce 01       	movw	r24, r28
     d26:	01 96       	adiw	r24, 0x01	; 1
     d28:	0e 94 e0 10 	call	0x21c0	; 0x21c0 <vTaskInternalSetTimeOutState>
     d2c:	ee 24       	eor	r14, r14
     d2e:	e3 94       	inc	r14
     d30:	0f 90       	pop	r0
     d32:	0f be       	out	0x3f, r0	; 63
     d34:	26 d6       	rcall	.+3148   	; 0x1982 <vTaskSuspendAll>
     d36:	0f b6       	in	r0, 0x3f	; 63
     d38:	f8 94       	cli
     d3a:	0f 92       	push	r0
     d3c:	f8 01       	movw	r30, r16
     d3e:	81 a1       	ldd	r24, Z+33	; 0x21
     d40:	8f 3f       	cpi	r24, 0xFF	; 255
     d42:	09 f4       	brne	.+2      	; 0xd46 <xQueueReceive+0xa0>
     d44:	11 a2       	std	Z+33, r1	; 0x21
     d46:	f8 01       	movw	r30, r16
     d48:	82 a1       	ldd	r24, Z+34	; 0x22
     d4a:	8f 3f       	cpi	r24, 0xFF	; 255
     d4c:	09 f4       	brne	.+2      	; 0xd50 <xQueueReceive+0xaa>
     d4e:	12 a2       	std	Z+34, r1	; 0x22
     d50:	0f 90       	pop	r0
     d52:	0f be       	out	0x3f, r0	; 63
     d54:	be 01       	movw	r22, r28
     d56:	6a 5f       	subi	r22, 0xFA	; 250
     d58:	7f 4f       	sbci	r23, 0xFF	; 255
     d5a:	ce 01       	movw	r24, r28
     d5c:	01 96       	adiw	r24, 0x01	; 1
     d5e:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <xTaskCheckForTimeOut>
     d62:	81 11       	cpse	r24, r1
     d64:	17 c0       	rjmp	.+46     	; 0xd94 <xQueueReceive+0xee>
     d66:	c8 01       	movw	r24, r16
     d68:	93 dd       	rcall	.-1242   	; 0x890 <prvIsQueueEmpty>
     d6a:	88 23       	and	r24, r24
     d6c:	79 f0       	breq	.+30     	; 0xd8c <xQueueReceive+0xe6>
     d6e:	4e 81       	ldd	r20, Y+6	; 0x06
     d70:	5f 81       	ldd	r21, Y+7	; 0x07
     d72:	68 85       	ldd	r22, Y+8	; 0x08
     d74:	79 85       	ldd	r23, Y+9	; 0x09
     d76:	c8 01       	movw	r24, r16
     d78:	43 96       	adiw	r24, 0x13	; 19
     d7a:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <vTaskPlaceOnEventList>
     d7e:	c8 01       	movw	r24, r16
     d80:	1b de       	rcall	.-970    	; 0x9b8 <prvUnlockQueue>
     d82:	3f d7       	rcall	.+3710   	; 0x1c02 <xTaskResumeAll>
     d84:	81 11       	cpse	r24, r1
     d86:	a6 cf       	rjmp	.-180    	; 0xcd4 <xQueueReceive+0x2e>
     d88:	bb dc       	rcall	.-1674   	; 0x700 <vPortYield>
     d8a:	a4 cf       	rjmp	.-184    	; 0xcd4 <xQueueReceive+0x2e>
     d8c:	c8 01       	movw	r24, r16
     d8e:	14 de       	rcall	.-984    	; 0x9b8 <prvUnlockQueue>
     d90:	38 d7       	rcall	.+3696   	; 0x1c02 <xTaskResumeAll>
     d92:	a0 cf       	rjmp	.-192    	; 0xcd4 <xQueueReceive+0x2e>
     d94:	c8 01       	movw	r24, r16
     d96:	10 de       	rcall	.-992    	; 0x9b8 <prvUnlockQueue>
     d98:	34 d7       	rcall	.+3688   	; 0x1c02 <xTaskResumeAll>
     d9a:	c8 01       	movw	r24, r16
     d9c:	79 dd       	rcall	.-1294   	; 0x890 <prvIsQueueEmpty>
     d9e:	88 23       	and	r24, r24
     da0:	09 f4       	brne	.+2      	; 0xda4 <xQueueReceive+0xfe>
     da2:	98 cf       	rjmp	.-208    	; 0xcd4 <xQueueReceive+0x2e>
     da4:	80 e0       	ldi	r24, 0x00	; 0
     da6:	29 96       	adiw	r28, 0x09	; 9
     da8:	0f b6       	in	r0, 0x3f	; 63
     daa:	f8 94       	cli
     dac:	de bf       	out	0x3e, r29	; 62
     dae:	0f be       	out	0x3f, r0	; 63
     db0:	cd bf       	out	0x3d, r28	; 61
     db2:	df 91       	pop	r29
     db4:	cf 91       	pop	r28
     db6:	1f 91       	pop	r17
     db8:	0f 91       	pop	r16
     dba:	ff 90       	pop	r15
     dbc:	ef 90       	pop	r14
     dbe:	df 90       	pop	r13
     dc0:	cf 90       	pop	r12
     dc2:	08 95       	ret

00000dc4 <vQueueWaitForMessageRestricted>:
     dc4:	cf 93       	push	r28
     dc6:	df 93       	push	r29
     dc8:	ec 01       	movw	r28, r24
     dca:	0f b6       	in	r0, 0x3f	; 63
     dcc:	f8 94       	cli
     dce:	0f 92       	push	r0
     dd0:	89 a1       	ldd	r24, Y+33	; 0x21
     dd2:	8f 3f       	cpi	r24, 0xFF	; 255
     dd4:	09 f4       	brne	.+2      	; 0xdd8 <vQueueWaitForMessageRestricted+0x14>
     dd6:	19 a2       	std	Y+33, r1	; 0x21
     dd8:	8a a1       	ldd	r24, Y+34	; 0x22
     dda:	8f 3f       	cpi	r24, 0xFF	; 255
     ddc:	09 f4       	brne	.+2      	; 0xde0 <vQueueWaitForMessageRestricted+0x1c>
     dde:	1a a2       	std	Y+34, r1	; 0x22
     de0:	0f 90       	pop	r0
     de2:	0f be       	out	0x3f, r0	; 63
     de4:	8e 8d       	ldd	r24, Y+30	; 0x1e
     de6:	81 11       	cpse	r24, r1
     de8:	04 c0       	rjmp	.+8      	; 0xdf2 <vQueueWaitForMessageRestricted+0x2e>
     dea:	ce 01       	movw	r24, r28
     dec:	43 96       	adiw	r24, 0x13	; 19
     dee:	0e 94 d9 0f 	call	0x1fb2	; 0x1fb2 <vTaskPlaceOnEventListRestricted>
     df2:	ce 01       	movw	r24, r28
     df4:	e1 dd       	rcall	.-1086   	; 0x9b8 <prvUnlockQueue>
     df6:	df 91       	pop	r29
     df8:	cf 91       	pop	r28
     dfa:	08 95       	ret

00000dfc <prvBytesInBuffer>:
     dfc:	fc 01       	movw	r30, r24
     dfe:	44 81       	ldd	r20, Z+4	; 0x04
     e00:	55 81       	ldd	r21, Z+5	; 0x05
     e02:	22 81       	ldd	r18, Z+2	; 0x02
     e04:	33 81       	ldd	r19, Z+3	; 0x03
     e06:	24 0f       	add	r18, r20
     e08:	35 1f       	adc	r19, r21
     e0a:	80 81       	ld	r24, Z
     e0c:	91 81       	ldd	r25, Z+1	; 0x01
     e0e:	b9 01       	movw	r22, r18
     e10:	68 1b       	sub	r22, r24
     e12:	79 0b       	sbc	r23, r25
     e14:	cb 01       	movw	r24, r22
     e16:	64 17       	cp	r22, r20
     e18:	75 07       	cpc	r23, r21
     e1a:	10 f0       	brcs	.+4      	; 0xe20 <prvBytesInBuffer+0x24>
     e1c:	84 1b       	sub	r24, r20
     e1e:	95 0b       	sbc	r25, r21
     e20:	08 95       	ret

00000e22 <prvInitialiseNewStreamBuffer>:
     e22:	0f 93       	push	r16
     e24:	fc 01       	movw	r30, r24
     e26:	8f e0       	ldi	r24, 0x0F	; 15
     e28:	df 01       	movw	r26, r30
     e2a:	1d 92       	st	X+, r1
     e2c:	8a 95       	dec	r24
     e2e:	e9 f7       	brne	.-6      	; 0xe2a <prvInitialiseNewStreamBuffer+0x8>
     e30:	75 87       	std	Z+13, r23	; 0x0d
     e32:	64 87       	std	Z+12, r22	; 0x0c
     e34:	55 83       	std	Z+5, r21	; 0x05
     e36:	44 83       	std	Z+4, r20	; 0x04
     e38:	37 83       	std	Z+7, r19	; 0x07
     e3a:	26 83       	std	Z+6, r18	; 0x06
     e3c:	06 87       	std	Z+14, r16	; 0x0e
     e3e:	0f 91       	pop	r16
     e40:	08 95       	ret

00000e42 <prvWriteBytesToBuffer>:
     e42:	af 92       	push	r10
     e44:	bf 92       	push	r11
     e46:	cf 92       	push	r12
     e48:	df 92       	push	r13
     e4a:	ef 92       	push	r14
     e4c:	ff 92       	push	r15
     e4e:	0f 93       	push	r16
     e50:	1f 93       	push	r17
     e52:	cf 93       	push	r28
     e54:	df 93       	push	r29
     e56:	6c 01       	movw	r12, r24
     e58:	5b 01       	movw	r10, r22
     e5a:	7a 01       	movw	r14, r20
     e5c:	fc 01       	movw	r30, r24
     e5e:	c2 81       	ldd	r28, Z+2	; 0x02
     e60:	d3 81       	ldd	r29, Z+3	; 0x03
     e62:	04 81       	ldd	r16, Z+4	; 0x04
     e64:	15 81       	ldd	r17, Z+5	; 0x05
     e66:	0c 1b       	sub	r16, r28
     e68:	1d 0b       	sbc	r17, r29
     e6a:	40 17       	cp	r20, r16
     e6c:	51 07       	cpc	r21, r17
     e6e:	08 f4       	brcc	.+2      	; 0xe72 <prvWriteBytesToBuffer+0x30>
     e70:	8a 01       	movw	r16, r20
     e72:	f6 01       	movw	r30, r12
     e74:	84 85       	ldd	r24, Z+12	; 0x0c
     e76:	95 85       	ldd	r25, Z+13	; 0x0d
     e78:	a8 01       	movw	r20, r16
     e7a:	b5 01       	movw	r22, r10
     e7c:	8c 0f       	add	r24, r28
     e7e:	9d 1f       	adc	r25, r29
     e80:	0e 94 31 2b 	call	0x5662	; 0x5662 <memcpy>
     e84:	0e 15       	cp	r16, r14
     e86:	1f 05       	cpc	r17, r15
     e88:	58 f4       	brcc	.+22     	; 0xea0 <prvWriteBytesToBuffer+0x5e>
     e8a:	a7 01       	movw	r20, r14
     e8c:	40 1b       	sub	r20, r16
     e8e:	51 0b       	sbc	r21, r17
     e90:	b5 01       	movw	r22, r10
     e92:	60 0f       	add	r22, r16
     e94:	71 1f       	adc	r23, r17
     e96:	f6 01       	movw	r30, r12
     e98:	84 85       	ldd	r24, Z+12	; 0x0c
     e9a:	95 85       	ldd	r25, Z+13	; 0x0d
     e9c:	0e 94 31 2b 	call	0x5662	; 0x5662 <memcpy>
     ea0:	ce 01       	movw	r24, r28
     ea2:	8e 0d       	add	r24, r14
     ea4:	9f 1d       	adc	r25, r15
     ea6:	f6 01       	movw	r30, r12
     ea8:	24 81       	ldd	r18, Z+4	; 0x04
     eaa:	35 81       	ldd	r19, Z+5	; 0x05
     eac:	82 17       	cp	r24, r18
     eae:	93 07       	cpc	r25, r19
     eb0:	10 f0       	brcs	.+4      	; 0xeb6 <prvWriteBytesToBuffer+0x74>
     eb2:	82 1b       	sub	r24, r18
     eb4:	93 0b       	sbc	r25, r19
     eb6:	f6 01       	movw	r30, r12
     eb8:	93 83       	std	Z+3, r25	; 0x03
     eba:	82 83       	std	Z+2, r24	; 0x02
     ebc:	c7 01       	movw	r24, r14
     ebe:	df 91       	pop	r29
     ec0:	cf 91       	pop	r28
     ec2:	1f 91       	pop	r17
     ec4:	0f 91       	pop	r16
     ec6:	ff 90       	pop	r15
     ec8:	ef 90       	pop	r14
     eca:	df 90       	pop	r13
     ecc:	cf 90       	pop	r12
     ece:	bf 90       	pop	r11
     ed0:	af 90       	pop	r10
     ed2:	08 95       	ret

00000ed4 <prvWriteMessageToBuffer>:
     ed4:	cf 92       	push	r12
     ed6:	df 92       	push	r13
     ed8:	ef 92       	push	r14
     eda:	ff 92       	push	r15
     edc:	0f 93       	push	r16
     ede:	1f 93       	push	r17
     ee0:	cf 93       	push	r28
     ee2:	df 93       	push	r29
     ee4:	1f 92       	push	r1
     ee6:	1f 92       	push	r1
     ee8:	cd b7       	in	r28, 0x3d	; 61
     eea:	de b7       	in	r29, 0x3e	; 62
     eec:	7c 01       	movw	r14, r24
     eee:	6b 01       	movw	r12, r22
     ef0:	5a 83       	std	Y+2, r21	; 0x02
     ef2:	49 83       	std	Y+1, r20	; 0x01
     ef4:	21 15       	cp	r18, r1
     ef6:	31 05       	cpc	r19, r1
     ef8:	c1 f0       	breq	.+48     	; 0xf2a <prvWriteMessageToBuffer+0x56>
     efa:	fc 01       	movw	r30, r24
     efc:	86 85       	ldd	r24, Z+14	; 0x0e
     efe:	80 fd       	sbrc	r24, 0
     f00:	08 c0       	rjmp	.+16     	; 0xf12 <prvWriteMessageToBuffer+0x3e>
     f02:	42 17       	cp	r20, r18
     f04:	53 07       	cpc	r21, r19
     f06:	08 f4       	brcc	.+2      	; 0xf0a <prvWriteMessageToBuffer+0x36>
     f08:	9a 01       	movw	r18, r20
     f0a:	3a 83       	std	Y+2, r19	; 0x02
     f0c:	29 83       	std	Y+1, r18	; 0x01
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	0f c0       	rjmp	.+30     	; 0xf30 <prvWriteMessageToBuffer+0x5c>
     f12:	20 17       	cp	r18, r16
     f14:	31 07       	cpc	r19, r17
     f16:	58 f0       	brcs	.+22     	; 0xf2e <prvWriteMessageToBuffer+0x5a>
     f18:	42 e0       	ldi	r20, 0x02	; 2
     f1a:	50 e0       	ldi	r21, 0x00	; 0
     f1c:	be 01       	movw	r22, r28
     f1e:	6f 5f       	subi	r22, 0xFF	; 255
     f20:	7f 4f       	sbci	r23, 0xFF	; 255
     f22:	c7 01       	movw	r24, r14
     f24:	8e df       	rcall	.-228    	; 0xe42 <prvWriteBytesToBuffer>
     f26:	81 e0       	ldi	r24, 0x01	; 1
     f28:	03 c0       	rjmp	.+6      	; 0xf30 <prvWriteMessageToBuffer+0x5c>
     f2a:	80 e0       	ldi	r24, 0x00	; 0
     f2c:	01 c0       	rjmp	.+2      	; 0xf30 <prvWriteMessageToBuffer+0x5c>
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	88 23       	and	r24, r24
     f32:	31 f0       	breq	.+12     	; 0xf40 <prvWriteMessageToBuffer+0x6c>
     f34:	49 81       	ldd	r20, Y+1	; 0x01
     f36:	5a 81       	ldd	r21, Y+2	; 0x02
     f38:	b6 01       	movw	r22, r12
     f3a:	c7 01       	movw	r24, r14
     f3c:	82 df       	rcall	.-252    	; 0xe42 <prvWriteBytesToBuffer>
     f3e:	02 c0       	rjmp	.+4      	; 0xf44 <prvWriteMessageToBuffer+0x70>
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	0f 90       	pop	r0
     f46:	0f 90       	pop	r0
     f48:	df 91       	pop	r29
     f4a:	cf 91       	pop	r28
     f4c:	1f 91       	pop	r17
     f4e:	0f 91       	pop	r16
     f50:	ff 90       	pop	r15
     f52:	ef 90       	pop	r14
     f54:	df 90       	pop	r13
     f56:	cf 90       	pop	r12
     f58:	08 95       	ret

00000f5a <prvReadBytesFromBuffer>:
     f5a:	af 92       	push	r10
     f5c:	bf 92       	push	r11
     f5e:	cf 92       	push	r12
     f60:	df 92       	push	r13
     f62:	ef 92       	push	r14
     f64:	ff 92       	push	r15
     f66:	0f 93       	push	r16
     f68:	1f 93       	push	r17
     f6a:	cf 93       	push	r28
     f6c:	df 93       	push	r29
     f6e:	7c 01       	movw	r14, r24
     f70:	5b 01       	movw	r10, r22
     f72:	e9 01       	movw	r28, r18
     f74:	42 17       	cp	r20, r18
     f76:	53 07       	cpc	r21, r19
     f78:	08 f4       	brcc	.+2      	; 0xf7c <prvReadBytesFromBuffer+0x22>
     f7a:	ea 01       	movw	r28, r20
     f7c:	20 97       	sbiw	r28, 0x00	; 0
     f7e:	81 f1       	breq	.+96     	; 0xfe0 <prvReadBytesFromBuffer+0x86>
     f80:	f7 01       	movw	r30, r14
     f82:	00 81       	ld	r16, Z
     f84:	11 81       	ldd	r17, Z+1	; 0x01
     f86:	84 81       	ldd	r24, Z+4	; 0x04
     f88:	95 81       	ldd	r25, Z+5	; 0x05
     f8a:	80 1b       	sub	r24, r16
     f8c:	91 0b       	sbc	r25, r17
     f8e:	6e 01       	movw	r12, r28
     f90:	8c 17       	cp	r24, r28
     f92:	9d 07       	cpc	r25, r29
     f94:	08 f4       	brcc	.+2      	; 0xf98 <prvReadBytesFromBuffer+0x3e>
     f96:	6c 01       	movw	r12, r24
     f98:	f7 01       	movw	r30, r14
     f9a:	64 85       	ldd	r22, Z+12	; 0x0c
     f9c:	75 85       	ldd	r23, Z+13	; 0x0d
     f9e:	60 0f       	add	r22, r16
     fa0:	71 1f       	adc	r23, r17
     fa2:	a6 01       	movw	r20, r12
     fa4:	c5 01       	movw	r24, r10
     fa6:	0e 94 31 2b 	call	0x5662	; 0x5662 <memcpy>
     faa:	cc 16       	cp	r12, r28
     fac:	dd 06       	cpc	r13, r29
     fae:	58 f4       	brcc	.+22     	; 0xfc6 <prvReadBytesFromBuffer+0x6c>
     fb0:	ae 01       	movw	r20, r28
     fb2:	4c 19       	sub	r20, r12
     fb4:	5d 09       	sbc	r21, r13
     fb6:	f7 01       	movw	r30, r14
     fb8:	64 85       	ldd	r22, Z+12	; 0x0c
     fba:	75 85       	ldd	r23, Z+13	; 0x0d
     fbc:	c5 01       	movw	r24, r10
     fbe:	8c 0d       	add	r24, r12
     fc0:	9d 1d       	adc	r25, r13
     fc2:	0e 94 31 2b 	call	0x5662	; 0x5662 <memcpy>
     fc6:	0c 0f       	add	r16, r28
     fc8:	1d 1f       	adc	r17, r29
     fca:	f7 01       	movw	r30, r14
     fcc:	84 81       	ldd	r24, Z+4	; 0x04
     fce:	95 81       	ldd	r25, Z+5	; 0x05
     fd0:	08 17       	cp	r16, r24
     fd2:	19 07       	cpc	r17, r25
     fd4:	10 f0       	brcs	.+4      	; 0xfda <prvReadBytesFromBuffer+0x80>
     fd6:	08 1b       	sub	r16, r24
     fd8:	19 0b       	sbc	r17, r25
     fda:	f7 01       	movw	r30, r14
     fdc:	11 83       	std	Z+1, r17	; 0x01
     fde:	00 83       	st	Z, r16
     fe0:	ce 01       	movw	r24, r28
     fe2:	df 91       	pop	r29
     fe4:	cf 91       	pop	r28
     fe6:	1f 91       	pop	r17
     fe8:	0f 91       	pop	r16
     fea:	ff 90       	pop	r15
     fec:	ef 90       	pop	r14
     fee:	df 90       	pop	r13
     ff0:	cf 90       	pop	r12
     ff2:	bf 90       	pop	r11
     ff4:	af 90       	pop	r10
     ff6:	08 95       	ret

00000ff8 <prvReadMessageFromBuffer>:
     ff8:	6f 92       	push	r6
     ffa:	7f 92       	push	r7
     ffc:	8f 92       	push	r8
     ffe:	9f 92       	push	r9
    1000:	af 92       	push	r10
    1002:	bf 92       	push	r11
    1004:	cf 92       	push	r12
    1006:	df 92       	push	r13
    1008:	ef 92       	push	r14
    100a:	ff 92       	push	r15
    100c:	0f 93       	push	r16
    100e:	1f 93       	push	r17
    1010:	cf 93       	push	r28
    1012:	df 93       	push	r29
    1014:	1f 92       	push	r1
    1016:	1f 92       	push	r1
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
    101c:	6c 01       	movw	r12, r24
    101e:	4b 01       	movw	r8, r22
    1020:	5a 01       	movw	r10, r20
    1022:	79 01       	movw	r14, r18
    1024:	01 15       	cp	r16, r1
    1026:	11 05       	cpc	r17, r1
    1028:	b1 f0       	breq	.+44     	; 0x1056 <__EEPROM_REGION_LENGTH__+0x56>
    102a:	fc 01       	movw	r30, r24
    102c:	60 80       	ld	r6, Z
    102e:	71 80       	ldd	r7, Z+1	; 0x01
    1030:	a8 01       	movw	r20, r16
    1032:	be 01       	movw	r22, r28
    1034:	6f 5f       	subi	r22, 0xFF	; 255
    1036:	7f 4f       	sbci	r23, 0xFF	; 255
    1038:	90 df       	rcall	.-224    	; 0xf5a <prvReadBytesFromBuffer>
    103a:	89 81       	ldd	r24, Y+1	; 0x01
    103c:	9a 81       	ldd	r25, Y+2	; 0x02
    103e:	e0 1a       	sub	r14, r16
    1040:	f1 0a       	sbc	r15, r17
    1042:	a8 16       	cp	r10, r24
    1044:	b9 06       	cpc	r11, r25
    1046:	30 f4       	brcc	.+12     	; 0x1054 <__EEPROM_REGION_LENGTH__+0x54>
    1048:	f6 01       	movw	r30, r12
    104a:	71 82       	std	Z+1, r7	; 0x01
    104c:	60 82       	st	Z, r6
    104e:	a1 2c       	mov	r10, r1
    1050:	b1 2c       	mov	r11, r1
    1052:	01 c0       	rjmp	.+2      	; 0x1056 <__EEPROM_REGION_LENGTH__+0x56>
    1054:	5c 01       	movw	r10, r24
    1056:	97 01       	movw	r18, r14
    1058:	a5 01       	movw	r20, r10
    105a:	b4 01       	movw	r22, r8
    105c:	c6 01       	movw	r24, r12
    105e:	7d df       	rcall	.-262    	; 0xf5a <prvReadBytesFromBuffer>
    1060:	0f 90       	pop	r0
    1062:	0f 90       	pop	r0
    1064:	df 91       	pop	r29
    1066:	cf 91       	pop	r28
    1068:	1f 91       	pop	r17
    106a:	0f 91       	pop	r16
    106c:	ff 90       	pop	r15
    106e:	ef 90       	pop	r14
    1070:	df 90       	pop	r13
    1072:	cf 90       	pop	r12
    1074:	bf 90       	pop	r11
    1076:	af 90       	pop	r10
    1078:	9f 90       	pop	r9
    107a:	8f 90       	pop	r8
    107c:	7f 90       	pop	r7
    107e:	6f 90       	pop	r6
    1080:	08 95       	ret

00001082 <xStreamBufferGenericCreate>:
    1082:	cf 92       	push	r12
    1084:	df 92       	push	r13
    1086:	ef 92       	push	r14
    1088:	ff 92       	push	r15
    108a:	0f 93       	push	r16
    108c:	cf 93       	push	r28
    108e:	df 93       	push	r29
    1090:	ec 01       	movw	r28, r24
    1092:	6b 01       	movw	r12, r22
    1094:	41 30       	cpi	r20, 0x01	; 1
    1096:	11 f4       	brne	.+4      	; 0x109c <xStreamBufferGenericCreate+0x1a>
    1098:	01 e0       	ldi	r16, 0x01	; 1
    109a:	01 c0       	rjmp	.+2      	; 0x109e <xStreamBufferGenericCreate+0x1c>
    109c:	00 e0       	ldi	r16, 0x00	; 0
    109e:	c1 14       	cp	r12, r1
    10a0:	d1 04       	cpc	r13, r1
    10a2:	19 f4       	brne	.+6      	; 0x10aa <xStreamBufferGenericCreate+0x28>
    10a4:	cc 24       	eor	r12, r12
    10a6:	c3 94       	inc	r12
    10a8:	d1 2c       	mov	r13, r1
    10aa:	ce 01       	movw	r24, r28
    10ac:	40 96       	adiw	r24, 0x10	; 16
    10ae:	c8 17       	cp	r28, r24
    10b0:	d9 07       	cpc	r29, r25
    10b2:	20 f4       	brcc	.+8      	; 0x10bc <xStreamBufferGenericCreate+0x3a>
    10b4:	21 96       	adiw	r28, 0x01	; 1
    10b6:	70 d9       	rcall	.-3360   	; 0x398 <pvPortMalloc>
    10b8:	7c 01       	movw	r14, r24
    10ba:	02 c0       	rjmp	.+4      	; 0x10c0 <xStreamBufferGenericCreate+0x3e>
    10bc:	e1 2c       	mov	r14, r1
    10be:	f1 2c       	mov	r15, r1
    10c0:	e1 14       	cp	r14, r1
    10c2:	f1 04       	cpc	r15, r1
    10c4:	39 f0       	breq	.+14     	; 0x10d4 <xStreamBufferGenericCreate+0x52>
    10c6:	96 01       	movw	r18, r12
    10c8:	ae 01       	movw	r20, r28
    10ca:	b7 01       	movw	r22, r14
    10cc:	61 5f       	subi	r22, 0xF1	; 241
    10ce:	7f 4f       	sbci	r23, 0xFF	; 255
    10d0:	c7 01       	movw	r24, r14
    10d2:	a7 de       	rcall	.-690    	; 0xe22 <prvInitialiseNewStreamBuffer>
    10d4:	c7 01       	movw	r24, r14
    10d6:	df 91       	pop	r29
    10d8:	cf 91       	pop	r28
    10da:	0f 91       	pop	r16
    10dc:	ff 90       	pop	r15
    10de:	ef 90       	pop	r14
    10e0:	df 90       	pop	r13
    10e2:	cf 90       	pop	r12
    10e4:	08 95       	ret

000010e6 <xStreamBufferReset>:
    10e6:	0f 93       	push	r16
    10e8:	0f b6       	in	r0, 0x3f	; 63
    10ea:	f8 94       	cli
    10ec:	0f 92       	push	r0
    10ee:	fc 01       	movw	r30, r24
    10f0:	20 85       	ldd	r18, Z+8	; 0x08
    10f2:	31 85       	ldd	r19, Z+9	; 0x09
    10f4:	23 2b       	or	r18, r19
    10f6:	71 f4       	brne	.+28     	; 0x1114 <xStreamBufferReset+0x2e>
    10f8:	22 85       	ldd	r18, Z+10	; 0x0a
    10fa:	33 85       	ldd	r19, Z+11	; 0x0b
    10fc:	23 2b       	or	r18, r19
    10fe:	61 f4       	brne	.+24     	; 0x1118 <xStreamBufferReset+0x32>
    1100:	26 81       	ldd	r18, Z+6	; 0x06
    1102:	37 81       	ldd	r19, Z+7	; 0x07
    1104:	44 81       	ldd	r20, Z+4	; 0x04
    1106:	55 81       	ldd	r21, Z+5	; 0x05
    1108:	64 85       	ldd	r22, Z+12	; 0x0c
    110a:	75 85       	ldd	r23, Z+13	; 0x0d
    110c:	06 85       	ldd	r16, Z+14	; 0x0e
    110e:	89 de       	rcall	.-750    	; 0xe22 <prvInitialiseNewStreamBuffer>
    1110:	81 e0       	ldi	r24, 0x01	; 1
    1112:	03 c0       	rjmp	.+6      	; 0x111a <xStreamBufferReset+0x34>
    1114:	80 e0       	ldi	r24, 0x00	; 0
    1116:	01 c0       	rjmp	.+2      	; 0x111a <xStreamBufferReset+0x34>
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	0f 90       	pop	r0
    111c:	0f be       	out	0x3f, r0	; 63
    111e:	0f 91       	pop	r16
    1120:	08 95       	ret

00001122 <xStreamBufferSpacesAvailable>:
    1122:	fc 01       	movw	r30, r24
    1124:	24 81       	ldd	r18, Z+4	; 0x04
    1126:	35 81       	ldd	r19, Z+5	; 0x05
    1128:	80 81       	ld	r24, Z
    112a:	91 81       	ldd	r25, Z+1	; 0x01
    112c:	82 0f       	add	r24, r18
    112e:	93 1f       	adc	r25, r19
    1130:	42 81       	ldd	r20, Z+2	; 0x02
    1132:	53 81       	ldd	r21, Z+3	; 0x03
    1134:	84 1b       	sub	r24, r20
    1136:	95 0b       	sbc	r25, r21
    1138:	01 97       	sbiw	r24, 0x01	; 1
    113a:	82 17       	cp	r24, r18
    113c:	93 07       	cpc	r25, r19
    113e:	10 f0       	brcs	.+4      	; 0x1144 <xStreamBufferSpacesAvailable+0x22>
    1140:	82 1b       	sub	r24, r18
    1142:	93 0b       	sbc	r25, r19
    1144:	08 95       	ret

00001146 <xStreamBufferSend>:
    1146:	2f 92       	push	r2
    1148:	3f 92       	push	r3
    114a:	4f 92       	push	r4
    114c:	5f 92       	push	r5
    114e:	6f 92       	push	r6
    1150:	7f 92       	push	r7
    1152:	8f 92       	push	r8
    1154:	9f 92       	push	r9
    1156:	af 92       	push	r10
    1158:	bf 92       	push	r11
    115a:	cf 92       	push	r12
    115c:	df 92       	push	r13
    115e:	ef 92       	push	r14
    1160:	ff 92       	push	r15
    1162:	0f 93       	push	r16
    1164:	1f 93       	push	r17
    1166:	cf 93       	push	r28
    1168:	df 93       	push	r29
    116a:	cd b7       	in	r28, 0x3d	; 61
    116c:	de b7       	in	r29, 0x3e	; 62
    116e:	2b 97       	sbiw	r28, 0x0b	; 11
    1170:	0f b6       	in	r0, 0x3f	; 63
    1172:	f8 94       	cli
    1174:	de bf       	out	0x3e, r29	; 62
    1176:	0f be       	out	0x3f, r0	; 63
    1178:	cd bf       	out	0x3d, r28	; 61
    117a:	4c 01       	movw	r8, r24
    117c:	7b 87       	std	Y+11, r23	; 0x0b
    117e:	6a 87       	std	Y+10, r22	; 0x0a
    1180:	1a 01       	movw	r2, r20
    1182:	0e 83       	std	Y+6, r16	; 0x06
    1184:	1f 83       	std	Y+7, r17	; 0x07
    1186:	28 87       	std	Y+8, r18	; 0x08
    1188:	39 87       	std	Y+9, r19	; 0x09
    118a:	fc 01       	movw	r30, r24
    118c:	84 81       	ldd	r24, Z+4	; 0x04
    118e:	95 81       	ldd	r25, Z+5	; 0x05
    1190:	01 97       	sbiw	r24, 0x01	; 1
    1192:	26 85       	ldd	r18, Z+14	; 0x0e
    1194:	20 ff       	sbrs	r18, 0
    1196:	0c c0       	rjmp	.+24     	; 0x11b0 <xStreamBufferSend+0x6a>
    1198:	2a 01       	movw	r4, r20
    119a:	f2 e0       	ldi	r31, 0x02	; 2
    119c:	4f 0e       	add	r4, r31
    119e:	51 1c       	adc	r5, r1
    11a0:	84 15       	cp	r24, r4
    11a2:	95 05       	cpc	r25, r5
    11a4:	58 f4       	brcc	.+22     	; 0x11bc <xStreamBufferSend+0x76>
    11a6:	1e 82       	std	Y+6, r1	; 0x06
    11a8:	1f 82       	std	Y+7, r1	; 0x07
    11aa:	18 86       	std	Y+8, r1	; 0x08
    11ac:	19 86       	std	Y+9, r1	; 0x09
    11ae:	06 c0       	rjmp	.+12     	; 0x11bc <xStreamBufferSend+0x76>
    11b0:	84 17       	cp	r24, r20
    11b2:	95 07       	cpc	r25, r21
    11b4:	10 f0       	brcs	.+4      	; 0x11ba <xStreamBufferSend+0x74>
    11b6:	2a 01       	movw	r4, r20
    11b8:	01 c0       	rjmp	.+2      	; 0x11bc <xStreamBufferSend+0x76>
    11ba:	2c 01       	movw	r4, r24
    11bc:	8e 81       	ldd	r24, Y+6	; 0x06
    11be:	9f 81       	ldd	r25, Y+7	; 0x07
    11c0:	a8 85       	ldd	r26, Y+8	; 0x08
    11c2:	b9 85       	ldd	r27, Y+9	; 0x09
    11c4:	89 2b       	or	r24, r25
    11c6:	8a 2b       	or	r24, r26
    11c8:	8b 2b       	or	r24, r27
    11ca:	09 f4       	brne	.+2      	; 0x11ce <xStreamBufferSend+0x88>
    11cc:	36 c0       	rjmp	.+108    	; 0x123a <xStreamBufferSend+0xf4>
    11ce:	ce 01       	movw	r24, r28
    11d0:	01 96       	adiw	r24, 0x01	; 1
    11d2:	e0 d7       	rcall	.+4032   	; 0x2194 <vTaskSetTimeOutState>
    11d4:	0f b6       	in	r0, 0x3f	; 63
    11d6:	f8 94       	cli
    11d8:	0f 92       	push	r0
    11da:	c4 01       	movw	r24, r8
    11dc:	a2 df       	rcall	.-188    	; 0x1122 <xStreamBufferSpacesAvailable>
    11de:	3c 01       	movw	r6, r24
    11e0:	84 15       	cp	r24, r4
    11e2:	95 05       	cpc	r25, r5
    11e4:	38 f5       	brcc	.+78     	; 0x1234 <xStreamBufferSend+0xee>
    11e6:	60 e0       	ldi	r22, 0x00	; 0
    11e8:	80 e0       	ldi	r24, 0x00	; 0
    11ea:	90 e0       	ldi	r25, 0x00	; 0
    11ec:	0e 94 89 14 	call	0x2912	; 0x2912 <xTaskGenericNotifyStateClear>
    11f0:	0e 94 5b 11 	call	0x22b6	; 0x22b6 <xTaskGetCurrentTaskHandle>
    11f4:	f4 01       	movw	r30, r8
    11f6:	93 87       	std	Z+11, r25	; 0x0b
    11f8:	82 87       	std	Z+10, r24	; 0x0a
    11fa:	0f 90       	pop	r0
    11fc:	0f be       	out	0x3f, r0	; 63
    11fe:	ae 80       	ldd	r10, Y+6	; 0x06
    1200:	bf 80       	ldd	r11, Y+7	; 0x07
    1202:	c8 84       	ldd	r12, Y+8	; 0x08
    1204:	d9 84       	ldd	r13, Y+9	; 0x09
    1206:	e1 2c       	mov	r14, r1
    1208:	f1 2c       	mov	r15, r1
    120a:	00 e0       	ldi	r16, 0x00	; 0
    120c:	10 e0       	ldi	r17, 0x00	; 0
    120e:	98 01       	movw	r18, r16
    1210:	40 e0       	ldi	r20, 0x00	; 0
    1212:	50 e0       	ldi	r21, 0x00	; 0
    1214:	ba 01       	movw	r22, r20
    1216:	80 e0       	ldi	r24, 0x00	; 0
    1218:	0e 94 c9 11 	call	0x2392	; 0x2392 <xTaskGenericNotifyWait>
    121c:	f4 01       	movw	r30, r8
    121e:	13 86       	std	Z+11, r1	; 0x0b
    1220:	12 86       	std	Z+10, r1	; 0x0a
    1222:	be 01       	movw	r22, r28
    1224:	6a 5f       	subi	r22, 0xFA	; 250
    1226:	7f 4f       	sbci	r23, 0xFF	; 255
    1228:	ce 01       	movw	r24, r28
    122a:	01 96       	adiw	r24, 0x01	; 1
    122c:	da d7       	rcall	.+4020   	; 0x21e2 <xTaskCheckForTimeOut>
    122e:	88 23       	and	r24, r24
    1230:	89 f2       	breq	.-94     	; 0x11d4 <xStreamBufferSend+0x8e>
    1232:	05 c0       	rjmp	.+10     	; 0x123e <xStreamBufferSend+0xf8>
    1234:	0f 90       	pop	r0
    1236:	0f be       	out	0x3f, r0	; 63
    1238:	02 c0       	rjmp	.+4      	; 0x123e <xStreamBufferSend+0xf8>
    123a:	61 2c       	mov	r6, r1
    123c:	71 2c       	mov	r7, r1
    123e:	61 14       	cp	r6, r1
    1240:	71 04       	cpc	r7, r1
    1242:	19 f4       	brne	.+6      	; 0x124a <xStreamBufferSend+0x104>
    1244:	c4 01       	movw	r24, r8
    1246:	6d df       	rcall	.-294    	; 0x1122 <xStreamBufferSpacesAvailable>
    1248:	3c 01       	movw	r6, r24
    124a:	82 01       	movw	r16, r4
    124c:	93 01       	movw	r18, r6
    124e:	a1 01       	movw	r20, r2
    1250:	6a 85       	ldd	r22, Y+10	; 0x0a
    1252:	7b 85       	ldd	r23, Y+11	; 0x0b
    1254:	c4 01       	movw	r24, r8
    1256:	3e de       	rcall	.-900    	; 0xed4 <prvWriteMessageToBuffer>
    1258:	6c 01       	movw	r12, r24
    125a:	89 2b       	or	r24, r25
    125c:	e9 f0       	breq	.+58     	; 0x1298 <xStreamBufferSend+0x152>
    125e:	c4 01       	movw	r24, r8
    1260:	cd dd       	rcall	.-1126   	; 0xdfc <prvBytesInBuffer>
    1262:	f4 01       	movw	r30, r8
    1264:	26 81       	ldd	r18, Z+6	; 0x06
    1266:	37 81       	ldd	r19, Z+7	; 0x07
    1268:	82 17       	cp	r24, r18
    126a:	93 07       	cpc	r25, r19
    126c:	a8 f0       	brcs	.+42     	; 0x1298 <xStreamBufferSend+0x152>
    126e:	89 d3       	rcall	.+1810   	; 0x1982 <vTaskSuspendAll>
    1270:	f4 01       	movw	r30, r8
    1272:	80 85       	ldd	r24, Z+8	; 0x08
    1274:	91 85       	ldd	r25, Z+9	; 0x09
    1276:	89 2b       	or	r24, r25
    1278:	71 f0       	breq	.+28     	; 0x1296 <xStreamBufferSend+0x150>
    127a:	80 85       	ldd	r24, Z+8	; 0x08
    127c:	91 85       	ldd	r25, Z+9	; 0x09
    127e:	e1 2c       	mov	r14, r1
    1280:	f1 2c       	mov	r15, r1
    1282:	00 e0       	ldi	r16, 0x00	; 0
    1284:	20 e0       	ldi	r18, 0x00	; 0
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	a9 01       	movw	r20, r18
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	0e 94 70 12 	call	0x24e0	; 0x24e0 <xTaskGenericNotify>
    1290:	f4 01       	movw	r30, r8
    1292:	11 86       	std	Z+9, r1	; 0x09
    1294:	10 86       	std	Z+8, r1	; 0x08
    1296:	b5 d4       	rcall	.+2410   	; 0x1c02 <xTaskResumeAll>
    1298:	c6 01       	movw	r24, r12
    129a:	2b 96       	adiw	r28, 0x0b	; 11
    129c:	0f b6       	in	r0, 0x3f	; 63
    129e:	f8 94       	cli
    12a0:	de bf       	out	0x3e, r29	; 62
    12a2:	0f be       	out	0x3f, r0	; 63
    12a4:	cd bf       	out	0x3d, r28	; 61
    12a6:	df 91       	pop	r29
    12a8:	cf 91       	pop	r28
    12aa:	1f 91       	pop	r17
    12ac:	0f 91       	pop	r16
    12ae:	ff 90       	pop	r15
    12b0:	ef 90       	pop	r14
    12b2:	df 90       	pop	r13
    12b4:	cf 90       	pop	r12
    12b6:	bf 90       	pop	r11
    12b8:	af 90       	pop	r10
    12ba:	9f 90       	pop	r9
    12bc:	8f 90       	pop	r8
    12be:	7f 90       	pop	r7
    12c0:	6f 90       	pop	r6
    12c2:	5f 90       	pop	r5
    12c4:	4f 90       	pop	r4
    12c6:	3f 90       	pop	r3
    12c8:	2f 90       	pop	r2
    12ca:	08 95       	ret

000012cc <xStreamBufferSendFromISR>:
    12cc:	af 92       	push	r10
    12ce:	bf 92       	push	r11
    12d0:	cf 92       	push	r12
    12d2:	df 92       	push	r13
    12d4:	ef 92       	push	r14
    12d6:	ff 92       	push	r15
    12d8:	0f 93       	push	r16
    12da:	1f 93       	push	r17
    12dc:	cf 93       	push	r28
    12de:	df 93       	push	r29
    12e0:	ec 01       	movw	r28, r24
    12e2:	7b 01       	movw	r14, r22
    12e4:	5a 01       	movw	r10, r20
    12e6:	69 01       	movw	r12, r18
    12e8:	8e 85       	ldd	r24, Y+14	; 0x0e
    12ea:	80 ff       	sbrs	r24, 0
    12ec:	04 c0       	rjmp	.+8      	; 0x12f6 <xStreamBufferSendFromISR+0x2a>
    12ee:	8a 01       	movw	r16, r20
    12f0:	0e 5f       	subi	r16, 0xFE	; 254
    12f2:	1f 4f       	sbci	r17, 0xFF	; 255
    12f4:	01 c0       	rjmp	.+2      	; 0x12f8 <xStreamBufferSendFromISR+0x2c>
    12f6:	8a 01       	movw	r16, r20
    12f8:	ce 01       	movw	r24, r28
    12fa:	13 df       	rcall	.-474    	; 0x1122 <xStreamBufferSpacesAvailable>
    12fc:	9c 01       	movw	r18, r24
    12fe:	a5 01       	movw	r20, r10
    1300:	b7 01       	movw	r22, r14
    1302:	ce 01       	movw	r24, r28
    1304:	e7 dd       	rcall	.-1074   	; 0xed4 <prvWriteMessageToBuffer>
    1306:	5c 01       	movw	r10, r24
    1308:	89 2b       	or	r24, r25
    130a:	c1 f0       	breq	.+48     	; 0x133c <xStreamBufferSendFromISR+0x70>
    130c:	ce 01       	movw	r24, r28
    130e:	76 dd       	rcall	.-1300   	; 0xdfc <prvBytesInBuffer>
    1310:	2e 81       	ldd	r18, Y+6	; 0x06
    1312:	3f 81       	ldd	r19, Y+7	; 0x07
    1314:	82 17       	cp	r24, r18
    1316:	93 07       	cpc	r25, r19
    1318:	88 f0       	brcs	.+34     	; 0x133c <xStreamBufferSendFromISR+0x70>
    131a:	88 85       	ldd	r24, Y+8	; 0x08
    131c:	99 85       	ldd	r25, Y+9	; 0x09
    131e:	89 2b       	or	r24, r25
    1320:	69 f0       	breq	.+26     	; 0x133c <xStreamBufferSendFromISR+0x70>
    1322:	88 85       	ldd	r24, Y+8	; 0x08
    1324:	99 85       	ldd	r25, Y+9	; 0x09
    1326:	e1 2c       	mov	r14, r1
    1328:	f1 2c       	mov	r15, r1
    132a:	00 e0       	ldi	r16, 0x00	; 0
    132c:	20 e0       	ldi	r18, 0x00	; 0
    132e:	30 e0       	ldi	r19, 0x00	; 0
    1330:	a9 01       	movw	r20, r18
    1332:	60 e0       	ldi	r22, 0x00	; 0
    1334:	0e 94 67 13 	call	0x26ce	; 0x26ce <xTaskGenericNotifyFromISR>
    1338:	19 86       	std	Y+9, r1	; 0x09
    133a:	18 86       	std	Y+8, r1	; 0x08
    133c:	c5 01       	movw	r24, r10
    133e:	df 91       	pop	r29
    1340:	cf 91       	pop	r28
    1342:	1f 91       	pop	r17
    1344:	0f 91       	pop	r16
    1346:	ff 90       	pop	r15
    1348:	ef 90       	pop	r14
    134a:	df 90       	pop	r13
    134c:	cf 90       	pop	r12
    134e:	bf 90       	pop	r11
    1350:	af 90       	pop	r10
    1352:	08 95       	ret

00001354 <xStreamBufferReceive>:
    1354:	4f 92       	push	r4
    1356:	5f 92       	push	r5
    1358:	6f 92       	push	r6
    135a:	7f 92       	push	r7
    135c:	8f 92       	push	r8
    135e:	9f 92       	push	r9
    1360:	af 92       	push	r10
    1362:	bf 92       	push	r11
    1364:	cf 92       	push	r12
    1366:	df 92       	push	r13
    1368:	ef 92       	push	r14
    136a:	ff 92       	push	r15
    136c:	0f 93       	push	r16
    136e:	1f 93       	push	r17
    1370:	cf 93       	push	r28
    1372:	df 93       	push	r29
    1374:	ec 01       	movw	r28, r24
    1376:	2b 01       	movw	r4, r22
    1378:	3a 01       	movw	r6, r20
    137a:	58 01       	movw	r10, r16
    137c:	69 01       	movw	r12, r18
    137e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1380:	80 ff       	sbrs	r24, 0
    1382:	05 c0       	rjmp	.+10     	; 0x138e <xStreamBufferReceive+0x3a>
    1384:	68 94       	set
    1386:	88 24       	eor	r8, r8
    1388:	81 f8       	bld	r8, 1
    138a:	91 2c       	mov	r9, r1
    138c:	02 c0       	rjmp	.+4      	; 0x1392 <xStreamBufferReceive+0x3e>
    138e:	81 2c       	mov	r8, r1
    1390:	91 2c       	mov	r9, r1
    1392:	a1 14       	cp	r10, r1
    1394:	b1 04       	cpc	r11, r1
    1396:	c1 04       	cpc	r12, r1
    1398:	d1 04       	cpc	r13, r1
    139a:	31 f1       	breq	.+76     	; 0x13e8 <xStreamBufferReceive+0x94>
    139c:	0f b6       	in	r0, 0x3f	; 63
    139e:	f8 94       	cli
    13a0:	0f 92       	push	r0
    13a2:	ce 01       	movw	r24, r28
    13a4:	2b dd       	rcall	.-1450   	; 0xdfc <prvBytesInBuffer>
    13a6:	7c 01       	movw	r14, r24
    13a8:	88 16       	cp	r8, r24
    13aa:	99 06       	cpc	r9, r25
    13ac:	40 f0       	brcs	.+16     	; 0x13be <xStreamBufferReceive+0x6a>
    13ae:	60 e0       	ldi	r22, 0x00	; 0
    13b0:	80 e0       	ldi	r24, 0x00	; 0
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	0e 94 89 14 	call	0x2912	; 0x2912 <xTaskGenericNotifyStateClear>
    13b8:	7e d7       	rcall	.+3836   	; 0x22b6 <xTaskGetCurrentTaskHandle>
    13ba:	99 87       	std	Y+9, r25	; 0x09
    13bc:	88 87       	std	Y+8, r24	; 0x08
    13be:	0f 90       	pop	r0
    13c0:	0f be       	out	0x3f, r0	; 63
    13c2:	8e 14       	cp	r8, r14
    13c4:	9f 04       	cpc	r9, r15
    13c6:	98 f0       	brcs	.+38     	; 0x13ee <xStreamBufferReceive+0x9a>
    13c8:	e1 2c       	mov	r14, r1
    13ca:	f1 2c       	mov	r15, r1
    13cc:	00 e0       	ldi	r16, 0x00	; 0
    13ce:	10 e0       	ldi	r17, 0x00	; 0
    13d0:	98 01       	movw	r18, r16
    13d2:	40 e0       	ldi	r20, 0x00	; 0
    13d4:	50 e0       	ldi	r21, 0x00	; 0
    13d6:	ba 01       	movw	r22, r20
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	db d7       	rcall	.+4022   	; 0x2392 <xTaskGenericNotifyWait>
    13dc:	19 86       	std	Y+9, r1	; 0x09
    13de:	18 86       	std	Y+8, r1	; 0x08
    13e0:	ce 01       	movw	r24, r28
    13e2:	0c dd       	rcall	.-1512   	; 0xdfc <prvBytesInBuffer>
    13e4:	7c 01       	movw	r14, r24
    13e6:	03 c0       	rjmp	.+6      	; 0x13ee <xStreamBufferReceive+0x9a>
    13e8:	ce 01       	movw	r24, r28
    13ea:	08 dd       	rcall	.-1520   	; 0xdfc <prvBytesInBuffer>
    13ec:	7c 01       	movw	r14, r24
    13ee:	8e 14       	cp	r8, r14
    13f0:	9f 04       	cpc	r9, r15
    13f2:	e8 f4       	brcc	.+58     	; 0x142e <xStreamBufferReceive+0xda>
    13f4:	84 01       	movw	r16, r8
    13f6:	97 01       	movw	r18, r14
    13f8:	a3 01       	movw	r20, r6
    13fa:	b2 01       	movw	r22, r4
    13fc:	ce 01       	movw	r24, r28
    13fe:	fc dd       	rcall	.-1032   	; 0xff8 <prvReadMessageFromBuffer>
    1400:	6c 01       	movw	r12, r24
    1402:	89 2b       	or	r24, r25
    1404:	b1 f0       	breq	.+44     	; 0x1432 <xStreamBufferReceive+0xde>
    1406:	bd d2       	rcall	.+1402   	; 0x1982 <vTaskSuspendAll>
    1408:	8a 85       	ldd	r24, Y+10	; 0x0a
    140a:	9b 85       	ldd	r25, Y+11	; 0x0b
    140c:	89 2b       	or	r24, r25
    140e:	69 f0       	breq	.+26     	; 0x142a <xStreamBufferReceive+0xd6>
    1410:	8a 85       	ldd	r24, Y+10	; 0x0a
    1412:	9b 85       	ldd	r25, Y+11	; 0x0b
    1414:	e1 2c       	mov	r14, r1
    1416:	f1 2c       	mov	r15, r1
    1418:	00 e0       	ldi	r16, 0x00	; 0
    141a:	20 e0       	ldi	r18, 0x00	; 0
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	a9 01       	movw	r20, r18
    1420:	60 e0       	ldi	r22, 0x00	; 0
    1422:	0e 94 70 12 	call	0x24e0	; 0x24e0 <xTaskGenericNotify>
    1426:	1b 86       	std	Y+11, r1	; 0x0b
    1428:	1a 86       	std	Y+10, r1	; 0x0a
    142a:	eb d3       	rcall	.+2006   	; 0x1c02 <xTaskResumeAll>
    142c:	02 c0       	rjmp	.+4      	; 0x1432 <xStreamBufferReceive+0xde>
    142e:	c1 2c       	mov	r12, r1
    1430:	d1 2c       	mov	r13, r1
    1432:	c6 01       	movw	r24, r12
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	1f 91       	pop	r17
    143a:	0f 91       	pop	r16
    143c:	ff 90       	pop	r15
    143e:	ef 90       	pop	r14
    1440:	df 90       	pop	r13
    1442:	cf 90       	pop	r12
    1444:	bf 90       	pop	r11
    1446:	af 90       	pop	r10
    1448:	9f 90       	pop	r9
    144a:	8f 90       	pop	r8
    144c:	7f 90       	pop	r7
    144e:	6f 90       	pop	r6
    1450:	5f 90       	pop	r5
    1452:	4f 90       	pop	r4
    1454:	08 95       	ret

00001456 <prvResetNextTaskUnblockTime>:
    1456:	e0 91 85 11 	lds	r30, 0x1185	; 0x801185 <pxDelayedTaskList>
    145a:	f0 91 86 11 	lds	r31, 0x1186	; 0x801186 <pxDelayedTaskList+0x1>
    145e:	80 81       	ld	r24, Z
    1460:	81 11       	cpse	r24, r1
    1462:	0c c0       	rjmp	.+24     	; 0x147c <prvResetNextTaskUnblockTime+0x26>
    1464:	8f ef       	ldi	r24, 0xFF	; 255
    1466:	9f ef       	ldi	r25, 0xFF	; 255
    1468:	dc 01       	movw	r26, r24
    146a:	80 93 4f 11 	sts	0x114F, r24	; 0x80114f <xNextTaskUnblockTime>
    146e:	90 93 50 11 	sts	0x1150, r25	; 0x801150 <xNextTaskUnblockTime+0x1>
    1472:	a0 93 51 11 	sts	0x1151, r26	; 0x801151 <xNextTaskUnblockTime+0x2>
    1476:	b0 93 52 11 	sts	0x1152, r27	; 0x801152 <xNextTaskUnblockTime+0x3>
    147a:	08 95       	ret
    147c:	e0 91 85 11 	lds	r30, 0x1185	; 0x801185 <pxDelayedTaskList>
    1480:	f0 91 86 11 	lds	r31, 0x1186	; 0x801186 <pxDelayedTaskList+0x1>
    1484:	07 80       	ldd	r0, Z+7	; 0x07
    1486:	f0 85       	ldd	r31, Z+8	; 0x08
    1488:	e0 2d       	mov	r30, r0
    148a:	80 81       	ld	r24, Z
    148c:	91 81       	ldd	r25, Z+1	; 0x01
    148e:	a2 81       	ldd	r26, Z+2	; 0x02
    1490:	b3 81       	ldd	r27, Z+3	; 0x03
    1492:	80 93 4f 11 	sts	0x114F, r24	; 0x80114f <xNextTaskUnblockTime>
    1496:	90 93 50 11 	sts	0x1150, r25	; 0x801150 <xNextTaskUnblockTime+0x1>
    149a:	a0 93 51 11 	sts	0x1151, r26	; 0x801151 <xNextTaskUnblockTime+0x2>
    149e:	b0 93 52 11 	sts	0x1152, r27	; 0x801152 <xNextTaskUnblockTime+0x3>
    14a2:	08 95       	ret

000014a4 <prvDeleteTCB>:
    14a4:	cf 93       	push	r28
    14a6:	df 93       	push	r29
    14a8:	ec 01       	movw	r28, r24
    14aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14ac:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14ae:	1d d8       	rcall	.-4038   	; 0x4ea <vPortFree>
    14b0:	ce 01       	movw	r24, r28
    14b2:	1b d8       	rcall	.-4042   	; 0x4ea <vPortFree>
    14b4:	df 91       	pop	r29
    14b6:	cf 91       	pop	r28
    14b8:	08 95       	ret

000014ba <prvInitialiseNewTask>:
    14ba:	4f 92       	push	r4
    14bc:	5f 92       	push	r5
    14be:	6f 92       	push	r6
    14c0:	7f 92       	push	r7
    14c2:	8f 92       	push	r8
    14c4:	9f 92       	push	r9
    14c6:	af 92       	push	r10
    14c8:	bf 92       	push	r11
    14ca:	cf 92       	push	r12
    14cc:	df 92       	push	r13
    14ce:	ef 92       	push	r14
    14d0:	ff 92       	push	r15
    14d2:	0f 93       	push	r16
    14d4:	cf 93       	push	r28
    14d6:	df 93       	push	r29
    14d8:	2c 01       	movw	r4, r24
    14da:	5b 01       	movw	r10, r22
    14dc:	4a 01       	movw	r8, r20
    14de:	39 01       	movw	r6, r18
    14e0:	e6 01       	movw	r28, r12
    14e2:	65 ea       	ldi	r22, 0xA5	; 165
    14e4:	70 e0       	ldi	r23, 0x00	; 0
    14e6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14e8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14ea:	0e 94 3a 2b 	call	0x5674	; 0x5674 <memset>
    14ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14f2:	21 e0       	ldi	r18, 0x01	; 1
    14f4:	82 1a       	sub	r8, r18
    14f6:	91 08       	sbc	r9, r1
    14f8:	88 0e       	add	r8, r24
    14fa:	99 1e       	adc	r9, r25
    14fc:	a1 14       	cp	r10, r1
    14fe:	b1 04       	cpc	r11, r1
    1500:	89 f4       	brne	.+34     	; 0x1524 <prvInitialiseNewTask+0x6a>
    1502:	15 c0       	rjmp	.+42     	; 0x152e <prvInitialiseNewTask+0x74>
    1504:	82 2f       	mov	r24, r18
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	f5 01       	movw	r30, r10
    150a:	e8 0f       	add	r30, r24
    150c:	f9 1f       	adc	r31, r25
    150e:	30 81       	ld	r19, Z
    1510:	de 01       	movw	r26, r28
    1512:	a8 0f       	add	r26, r24
    1514:	b9 1f       	adc	r27, r25
    1516:	5d 96       	adiw	r26, 0x1d	; 29
    1518:	3c 93       	st	X, r19
    151a:	80 81       	ld	r24, Z
    151c:	88 23       	and	r24, r24
    151e:	29 f0       	breq	.+10     	; 0x152a <prvInitialiseNewTask+0x70>
    1520:	2f 5f       	subi	r18, 0xFF	; 255
    1522:	01 c0       	rjmp	.+2      	; 0x1526 <prvInitialiseNewTask+0x6c>
    1524:	20 e0       	ldi	r18, 0x00	; 0
    1526:	20 31       	cpi	r18, 0x10	; 16
    1528:	68 f3       	brcs	.-38     	; 0x1504 <prvInitialiseNewTask+0x4a>
    152a:	1c a6       	std	Y+44, r1	; 0x2c
    152c:	01 c0       	rjmp	.+2      	; 0x1530 <prvInitialiseNewTask+0x76>
    152e:	1d 8e       	std	Y+29, r1	; 0x1d
    1530:	0a 30       	cpi	r16, 0x0A	; 10
    1532:	08 f0       	brcs	.+2      	; 0x1536 <prvInitialiseNewTask+0x7c>
    1534:	09 e0       	ldi	r16, 0x09	; 9
    1536:	0a 8f       	std	Y+26, r16	; 0x1a
    1538:	0d a7       	std	Y+45, r16	; 0x2d
    153a:	1e a6       	std	Y+46, r1	; 0x2e
    153c:	ce 01       	movw	r24, r28
    153e:	02 96       	adiw	r24, 0x02	; 2
    1540:	22 d8       	rcall	.-4028   	; 0x586 <vListInitialiseItem>
    1542:	ce 01       	movw	r24, r28
    1544:	0e 96       	adiw	r24, 0x0e	; 14
    1546:	1f d8       	rcall	.-4034   	; 0x586 <vListInitialiseItem>
    1548:	db 87       	std	Y+11, r29	; 0x0b
    154a:	ca 87       	std	Y+10, r28	; 0x0a
    154c:	8a e0       	ldi	r24, 0x0A	; 10
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	a0 e0       	ldi	r26, 0x00	; 0
    1552:	b0 e0       	ldi	r27, 0x00	; 0
    1554:	80 1b       	sub	r24, r16
    1556:	91 09       	sbc	r25, r1
    1558:	a1 09       	sbc	r26, r1
    155a:	b1 09       	sbc	r27, r1
    155c:	8e 87       	std	Y+14, r24	; 0x0e
    155e:	9f 87       	std	Y+15, r25	; 0x0f
    1560:	a8 8b       	std	Y+16, r26	; 0x10
    1562:	b9 8b       	std	Y+17, r27	; 0x11
    1564:	df 8b       	std	Y+23, r29	; 0x17
    1566:	ce 8b       	std	Y+22, r28	; 0x16
    1568:	84 e0       	ldi	r24, 0x04	; 4
    156a:	fe 01       	movw	r30, r28
    156c:	bf 96       	adiw	r30, 0x2f	; 47
    156e:	df 01       	movw	r26, r30
    1570:	1d 92       	st	X+, r1
    1572:	8a 95       	dec	r24
    1574:	e9 f7       	brne	.-6      	; 0x1570 <prvInitialiseNewTask+0xb6>
    1576:	1b aa       	std	Y+51, r1	; 0x33
    1578:	a3 01       	movw	r20, r6
    157a:	b2 01       	movw	r22, r4
    157c:	c4 01       	movw	r24, r8
    157e:	77 d8       	rcall	.-3858   	; 0x66e <pxPortInitialiseStack>
    1580:	99 83       	std	Y+1, r25	; 0x01
    1582:	88 83       	st	Y, r24
    1584:	e1 14       	cp	r14, r1
    1586:	f1 04       	cpc	r15, r1
    1588:	19 f0       	breq	.+6      	; 0x1590 <prvInitialiseNewTask+0xd6>
    158a:	f7 01       	movw	r30, r14
    158c:	d1 83       	std	Z+1, r29	; 0x01
    158e:	c0 83       	st	Z, r28
    1590:	df 91       	pop	r29
    1592:	cf 91       	pop	r28
    1594:	0f 91       	pop	r16
    1596:	ff 90       	pop	r15
    1598:	ef 90       	pop	r14
    159a:	df 90       	pop	r13
    159c:	cf 90       	pop	r12
    159e:	bf 90       	pop	r11
    15a0:	af 90       	pop	r10
    15a2:	9f 90       	pop	r9
    15a4:	8f 90       	pop	r8
    15a6:	7f 90       	pop	r7
    15a8:	6f 90       	pop	r6
    15aa:	5f 90       	pop	r5
    15ac:	4f 90       	pop	r4
    15ae:	08 95       	ret

000015b0 <prvInitialiseTaskLists>:
    15b0:	cf 93       	push	r28
    15b2:	c0 e0       	ldi	r28, 0x00	; 0
    15b4:	09 c0       	rjmp	.+18     	; 0x15c8 <prvInitialiseTaskLists+0x18>
    15b6:	2b e0       	ldi	r18, 0x0B	; 11
    15b8:	c2 9f       	mul	r28, r18
    15ba:	c0 01       	movw	r24, r0
    15bc:	11 24       	eor	r1, r1
    15be:	83 56       	subi	r24, 0x63	; 99
    15c0:	9e 4e       	sbci	r25, 0xEE	; 238
    15c2:	0e 94 b2 02 	call	0x564	; 0x564 <vListInitialise>
    15c6:	cf 5f       	subi	r28, 0xFF	; 255
    15c8:	ca 30       	cpi	r28, 0x0A	; 10
    15ca:	a8 f3       	brcs	.-22     	; 0x15b6 <prvInitialiseTaskLists+0x6>
    15cc:	82 e9       	ldi	r24, 0x92	; 146
    15ce:	91 e1       	ldi	r25, 0x11	; 17
    15d0:	0e 94 b2 02 	call	0x564	; 0x564 <vListInitialise>
    15d4:	87 e8       	ldi	r24, 0x87	; 135
    15d6:	91 e1       	ldi	r25, 0x11	; 17
    15d8:	0e 94 b2 02 	call	0x564	; 0x564 <vListInitialise>
    15dc:	88 e7       	ldi	r24, 0x78	; 120
    15de:	91 e1       	ldi	r25, 0x11	; 17
    15e0:	0e 94 b2 02 	call	0x564	; 0x564 <vListInitialise>
    15e4:	8d e6       	ldi	r24, 0x6D	; 109
    15e6:	91 e1       	ldi	r25, 0x11	; 17
    15e8:	0e 94 b2 02 	call	0x564	; 0x564 <vListInitialise>
    15ec:	81 e6       	ldi	r24, 0x61	; 97
    15ee:	91 e1       	ldi	r25, 0x11	; 17
    15f0:	0e 94 b2 02 	call	0x564	; 0x564 <vListInitialise>
    15f4:	82 e9       	ldi	r24, 0x92	; 146
    15f6:	91 e1       	ldi	r25, 0x11	; 17
    15f8:	90 93 86 11 	sts	0x1186, r25	; 0x801186 <pxDelayedTaskList+0x1>
    15fc:	80 93 85 11 	sts	0x1185, r24	; 0x801185 <pxDelayedTaskList>
    1600:	87 e8       	ldi	r24, 0x87	; 135
    1602:	91 e1       	ldi	r25, 0x11	; 17
    1604:	90 93 84 11 	sts	0x1184, r25	; 0x801184 <pxOverflowDelayedTaskList+0x1>
    1608:	80 93 83 11 	sts	0x1183, r24	; 0x801183 <pxOverflowDelayedTaskList>
    160c:	cf 91       	pop	r28
    160e:	08 95       	ret

00001610 <prvAddNewTaskToReadyList>:
    1610:	cf 93       	push	r28
    1612:	df 93       	push	r29
    1614:	ec 01       	movw	r28, r24
    1616:	0f b6       	in	r0, 0x3f	; 63
    1618:	f8 94       	cli
    161a:	0f 92       	push	r0
    161c:	80 91 60 11 	lds	r24, 0x1160	; 0x801160 <uxCurrentNumberOfTasks>
    1620:	8f 5f       	subi	r24, 0xFF	; 255
    1622:	80 93 60 11 	sts	0x1160, r24	; 0x801160 <uxCurrentNumberOfTasks>
    1626:	80 91 0b 12 	lds	r24, 0x120B	; 0x80120b <pxCurrentTCB>
    162a:	90 91 0c 12 	lds	r25, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    162e:	89 2b       	or	r24, r25
    1630:	51 f4       	brne	.+20     	; 0x1646 <prvAddNewTaskToReadyList+0x36>
    1632:	d0 93 0c 12 	sts	0x120C, r29	; 0x80120c <pxCurrentTCB+0x1>
    1636:	c0 93 0b 12 	sts	0x120B, r28	; 0x80120b <pxCurrentTCB>
    163a:	80 91 60 11 	lds	r24, 0x1160	; 0x801160 <uxCurrentNumberOfTasks>
    163e:	81 30       	cpi	r24, 0x01	; 1
    1640:	91 f4       	brne	.+36     	; 0x1666 <prvAddNewTaskToReadyList+0x56>
    1642:	b6 df       	rcall	.-148    	; 0x15b0 <prvInitialiseTaskLists>
    1644:	10 c0       	rjmp	.+32     	; 0x1666 <prvAddNewTaskToReadyList+0x56>
    1646:	80 91 5a 11 	lds	r24, 0x115A	; 0x80115a <xSchedulerRunning>
    164a:	81 11       	cpse	r24, r1
    164c:	0c c0       	rjmp	.+24     	; 0x1666 <prvAddNewTaskToReadyList+0x56>
    164e:	e0 91 0b 12 	lds	r30, 0x120B	; 0x80120b <pxCurrentTCB>
    1652:	f0 91 0c 12 	lds	r31, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    1656:	92 8d       	ldd	r25, Z+26	; 0x1a
    1658:	8a 8d       	ldd	r24, Y+26	; 0x1a
    165a:	89 17       	cp	r24, r25
    165c:	20 f0       	brcs	.+8      	; 0x1666 <prvAddNewTaskToReadyList+0x56>
    165e:	d0 93 0c 12 	sts	0x120C, r29	; 0x80120c <pxCurrentTCB+0x1>
    1662:	c0 93 0b 12 	sts	0x120B, r28	; 0x80120b <pxCurrentTCB>
    1666:	80 91 53 11 	lds	r24, 0x1153	; 0x801153 <uxTaskNumber>
    166a:	8f 5f       	subi	r24, 0xFF	; 255
    166c:	80 93 53 11 	sts	0x1153, r24	; 0x801153 <uxTaskNumber>
    1670:	ea 8d       	ldd	r30, Y+26	; 0x1a
    1672:	80 91 5b 11 	lds	r24, 0x115B	; 0x80115b <uxTopReadyPriority>
    1676:	8e 17       	cp	r24, r30
    1678:	10 f4       	brcc	.+4      	; 0x167e <prvAddNewTaskToReadyList+0x6e>
    167a:	e0 93 5b 11 	sts	0x115B, r30	; 0x80115b <uxTopReadyPriority>
    167e:	8b e0       	ldi	r24, 0x0B	; 11
    1680:	8e 9f       	mul	r24, r30
    1682:	f0 01       	movw	r30, r0
    1684:	11 24       	eor	r1, r1
    1686:	e3 56       	subi	r30, 0x63	; 99
    1688:	fe 4e       	sbci	r31, 0xEE	; 238
    168a:	01 80       	ldd	r0, Z+1	; 0x01
    168c:	f2 81       	ldd	r31, Z+2	; 0x02
    168e:	e0 2d       	mov	r30, r0
    1690:	ff 83       	std	Y+7, r31	; 0x07
    1692:	ee 83       	std	Y+6, r30	; 0x06
    1694:	26 81       	ldd	r18, Z+6	; 0x06
    1696:	37 81       	ldd	r19, Z+7	; 0x07
    1698:	39 87       	std	Y+9, r19	; 0x09
    169a:	28 87       	std	Y+8, r18	; 0x08
    169c:	a6 81       	ldd	r26, Z+6	; 0x06
    169e:	b7 81       	ldd	r27, Z+7	; 0x07
    16a0:	9e 01       	movw	r18, r28
    16a2:	2e 5f       	subi	r18, 0xFE	; 254
    16a4:	3f 4f       	sbci	r19, 0xFF	; 255
    16a6:	15 96       	adiw	r26, 0x05	; 5
    16a8:	3c 93       	st	X, r19
    16aa:	2e 93       	st	-X, r18
    16ac:	14 97       	sbiw	r26, 0x04	; 4
    16ae:	37 83       	std	Z+7, r19	; 0x07
    16b0:	26 83       	std	Z+6, r18	; 0x06
    16b2:	ea 8d       	ldd	r30, Y+26	; 0x1a
    16b4:	8e 9f       	mul	r24, r30
    16b6:	f0 01       	movw	r30, r0
    16b8:	11 24       	eor	r1, r1
    16ba:	e3 56       	subi	r30, 0x63	; 99
    16bc:	fe 4e       	sbci	r31, 0xEE	; 238
    16be:	fd 87       	std	Y+13, r31	; 0x0d
    16c0:	ec 87       	std	Y+12, r30	; 0x0c
    16c2:	80 81       	ld	r24, Z
=======
}

void enqueueSharedData()
{
     222:	cf 92       	push	r12
     224:	df 92       	push	r13
     226:	ef 92       	push	r14
     228:	ff 92       	push	r15
     22a:	0f 93       	push	r16
     22c:	1f 93       	push	r17
     22e:	cf 93       	push	r28
     230:	df 93       	push	r29
	
	int counter = 0;
	
	uint16_t co2 = 0;
	int16_t temp = 0;
	uint16_t hum = 0;
     232:	00 e0       	ldi	r16, 0x00	; 0
     234:	10 e0       	ldi	r17, 0x00	; 0
	//uint16_t hum = dequeueHumidityMeasure();
	
	int counter = 0;
	
	uint16_t co2 = 0;
	int16_t temp = 0;
     236:	e1 2c       	mov	r14, r1
     238:	f1 2c       	mov	r15, r1
	//int16_t temp = dequeueTempMeasure();
	//uint16_t hum = dequeueHumidityMeasure();
	
	int counter = 0;
	
	uint16_t co2 = 0;
     23a:	c1 2c       	mov	r12, r1
     23c:	d1 2c       	mov	r13, r1
{
	//uint16_t co2 = dequeueCO2Measure();
	//int16_t temp = dequeueTempMeasure();
	//uint16_t hum = dequeueHumidityMeasure();
	
	int counter = 0;
     23e:	c0 e0       	ldi	r28, 0x00	; 0
     240:	d0 e0       	ldi	r29, 0x00	; 0
	uint16_t hum = 0;
	
	int co2res = 0;
	int tempres = 0;
	int humres = 0;
	while (counter < 10) {
     242:	0d c0       	rjmp	.+26     	; 0x25e <enqueueSharedData+0x3c>
		co2 += dequeueCO2Measure();
     244:	0e 94 28 18 	call	0x3050	; 0x3050 <dequeueCO2Measure>
     248:	c8 0e       	add	r12, r24
     24a:	d9 1e       	adc	r13, r25
		temp += dequeueTempMeasure();
     24c:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <dequeueTempMeasure>
     250:	e8 0e       	add	r14, r24
     252:	f9 1e       	adc	r15, r25
		hum += dequeueHumidityMeasure();
     254:	0e 94 05 19 	call	0x320a	; 0x320a <dequeueHumidityMeasure>
     258:	08 0f       	add	r16, r24
     25a:	19 1f       	adc	r17, r25
		counter++;
     25c:	21 96       	adiw	r28, 0x01	; 1
	uint16_t hum = 0;
	
	int co2res = 0;
	int tempres = 0;
	int humres = 0;
	while (counter < 10) {
     25e:	ca 30       	cpi	r28, 0x0A	; 10
     260:	d1 05       	cpc	r29, r1
     262:	84 f3       	brlt	.-32     	; 0x244 <enqueueSharedData+0x22>
		co2 += dequeueCO2Measure();
		temp += dequeueTempMeasure();
		hum += dequeueHumidityMeasure();
		counter++;
	}
	co2res = (co2 / (counter + 1));
     264:	21 96       	adiw	r28, 0x01	; 1
     266:	c6 01       	movw	r24, r12
     268:	be 01       	movw	r22, r28
     26a:	0e 94 bb 2a 	call	0x5576	; 0x5576 <__udivmodhi4>
     26e:	26 2f       	mov	r18, r22
     270:	37 2f       	mov	r19, r23
	co2 = (uint16_t) co2res;
	
	tempres = (temp / (counter + 1));
     272:	c7 01       	movw	r24, r14
     274:	be 01       	movw	r22, r28
     276:	0e 94 cf 2a 	call	0x559e	; 0x559e <__divmodhi4>
     27a:	46 2f       	mov	r20, r22
     27c:	f7 2e       	mov	r15, r23
	temp = (int16_t) tempres;
	
	humres = (hum / (counter + 1));
     27e:	c8 01       	movw	r24, r16
     280:	be 01       	movw	r22, r28
     282:	0e 94 bb 2a 	call	0x5576	; 0x5576 <__udivmodhi4>
	
	


	SharedData_t shared = &sharedData;
	shared->co2 = co2;
     286:	e3 ee       	ldi	r30, 0xE3	; 227
     288:	f7 e1       	ldi	r31, 0x17	; 23
     28a:	20 83       	st	Z, r18
     28c:	31 83       	std	Z+1, r19	; 0x01
	shared->temperature = temp;
     28e:	42 83       	std	Z+2, r20	; 0x02
     290:	f3 82       	std	Z+3, r15	; 0x03
	shared->humidity = hum;
     292:	64 83       	std	Z+4, r22	; 0x04
     294:	75 83       	std	Z+5, r23	; 0x05

	printf("ENQUEUE: humidity: %d, co2: %d, Temp: %d \n", shared->humidity, shared->co2, shared->temperature);
     296:	ff 92       	push	r15
     298:	4f 93       	push	r20
     29a:	3f 93       	push	r19
     29c:	2f 93       	push	r18
     29e:	7f 93       	push	r23
     2a0:	6f 93       	push	r22
     2a2:	8f e6       	ldi	r24, 0x6F	; 111
     2a4:	92 e0       	ldi	r25, 0x02	; 2
     2a6:	9f 93       	push	r25
     2a8:	8f 93       	push	r24
     2aa:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>

	xQueueSend(xQueueShared, (void*)&sharedData, portMAX_DELAY);
     2ae:	00 e0       	ldi	r16, 0x00	; 0
     2b0:	2f ef       	ldi	r18, 0xFF	; 255
     2b2:	3f ef       	ldi	r19, 0xFF	; 255
     2b4:	a9 01       	movw	r20, r18
     2b6:	63 ee       	ldi	r22, 0xE3	; 227
     2b8:	77 e1       	ldi	r23, 0x17	; 23
     2ba:	80 91 e9 17 	lds	r24, 0x17E9	; 0x8017e9 <xQueueShared>
     2be:	90 91 ea 17 	lds	r25, 0x17EA	; 0x8017ea <xQueueShared+0x1>
     2c2:	53 d4       	rcall	.+2214   	; 0xb6a <xQueueGenericSend>

}
     2c4:	8d b7       	in	r24, 0x3d	; 61
     2c6:	9e b7       	in	r25, 0x3e	; 62
     2c8:	08 96       	adiw	r24, 0x08	; 8
     2ca:	0f b6       	in	r0, 0x3f	; 63
     2cc:	f8 94       	cli
     2ce:	9e bf       	out	0x3e, r25	; 62
     2d0:	0f be       	out	0x3f, r0	; 63
     2d2:	8d bf       	out	0x3d, r24	; 61
     2d4:	df 91       	pop	r29
     2d6:	cf 91       	pop	r28
     2d8:	1f 91       	pop	r17
     2da:	0f 91       	pop	r16
     2dc:	ff 90       	pop	r15
     2de:	ef 90       	pop	r14
     2e0:	df 90       	pop	r13
     2e2:	cf 90       	pop	r12
     2e4:	08 95       	ret

000002e6 <dequeueSharedData>:

SharedData_t dequeueSharedData() {
	SharedData_t data = &receiveSharedData;
	xQueueReceive(xQueueShared, &receiveSharedData, (TickType_t) 10);
     2e6:	2a e0       	ldi	r18, 0x0A	; 10
     2e8:	30 e0       	ldi	r19, 0x00	; 0
     2ea:	40 e0       	ldi	r20, 0x00	; 0
     2ec:	50 e0       	ldi	r21, 0x00	; 0
     2ee:	6b ee       	ldi	r22, 0xEB	; 235
     2f0:	77 e1       	ldi	r23, 0x17	; 23
     2f2:	80 91 e9 17 	lds	r24, 0x17E9	; 0x8017e9 <xQueueShared>
     2f6:	90 91 ea 17 	lds	r25, 0x17EA	; 0x8017ea <xQueueShared+0x1>
     2fa:	02 d5       	rcall	.+2564   	; 0xd00 <xQueueReceive>
	return data;
}
     2fc:	8b ee       	ldi	r24, 0xEB	; 235
     2fe:	97 e1       	ldi	r25, 0x17	; 23
     300:	08 95       	ret

00000302 <prvHeapInit>:

    pucAlignedHeap = ( uint8_t * ) uxAddress;

    /* xStart is used to hold a pointer to the first item in the list of free
     * blocks.  The void cast is used to prevent compiler warnings. */
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
     302:	ee ed       	ldi	r30, 0xDE	; 222
     304:	f7 e0       	ldi	r31, 0x07	; 7
     306:	a2 ee       	ldi	r26, 0xE2	; 226
     308:	b7 e0       	ldi	r27, 0x07	; 7
     30a:	b1 83       	std	Z+1, r27	; 0x01
     30c:	a0 83       	st	Z, r26
    xStart.xBlockSize = ( size_t ) 0;
     30e:	13 82       	std	Z+3, r1	; 0x03
     310:	12 82       	std	Z+2, r1	; 0x02

    /* pxEnd is used to mark the end of the list of free blocks and is inserted
     * at the end of the heap space. */
    uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
    uxAddress -= xHeapStructSize;
     312:	ea e8       	ldi	r30, 0x8A	; 138
     314:	f5 e1       	ldi	r31, 0x15	; 21
    uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
    pxEnd = ( void * ) uxAddress;
     316:	f0 93 dd 07 	sts	0x07DD, r31	; 0x8007dd <pxEnd+0x1>
     31a:	e0 93 dc 07 	sts	0x07DC, r30	; 0x8007dc <pxEnd>
    pxEnd->xBlockSize = 0;
     31e:	13 82       	std	Z+3, r1	; 0x03
     320:	12 82       	std	Z+2, r1	; 0x02
    pxEnd->pxNextFreeBlock = NULL;
     322:	11 82       	std	Z+1, r1	; 0x01
     324:	10 82       	st	Z, r1

    /* To start with there is a single free block that is sized to take up the
     * entire heap space, minus the space taken by pxEnd. */
    pxFirstFreeBlock = ( void * ) pucAlignedHeap;
    pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
     326:	88 ea       	ldi	r24, 0xA8	; 168
     328:	9d e0       	ldi	r25, 0x0D	; 13
     32a:	13 96       	adiw	r26, 0x03	; 3
     32c:	9c 93       	st	X, r25
     32e:	8e 93       	st	-X, r24
     330:	12 97       	sbiw	r26, 0x02	; 2
    pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
     332:	ed 93       	st	X+, r30
     334:	fc 93       	st	X, r31

    /* Only one block exists - and it covers the entire usable heap space. */
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
     336:	90 93 d9 07 	sts	0x07D9, r25	; 0x8007d9 <xMinimumEverFreeBytesRemaining+0x1>
     33a:	80 93 d8 07 	sts	0x07D8, r24	; 0x8007d8 <xMinimumEverFreeBytesRemaining>
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
     33e:	90 93 db 07 	sts	0x07DB, r25	; 0x8007db <xFreeBytesRemaining+0x1>
     342:	80 93 da 07 	sts	0x07DA, r24	; 0x8007da <xFreeBytesRemaining>

    /* Work out the position of the top bit in a size_t variable. */
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
     346:	80 e0       	ldi	r24, 0x00	; 0
     348:	90 e8       	ldi	r25, 0x80	; 128
     34a:	90 93 d3 07 	sts	0x07D3, r25	; 0x8007d3 <__data_end+0x1>
     34e:	80 93 d2 07 	sts	0x07D2, r24	; 0x8007d2 <__data_end>
     352:	08 95       	ret

00000354 <prvInsertBlockIntoFreeList>:
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t * pxBlockToInsert ) /* PRIVILEGED_FUNCTION */
{
     354:	cf 93       	push	r28
     356:	df 93       	push	r29
     358:	ec 01       	movw	r28, r24
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
     35a:	ae ed       	ldi	r26, 0xDE	; 222
     35c:	b7 e0       	ldi	r27, 0x07	; 7
     35e:	01 c0       	rjmp	.+2      	; 0x362 <prvInsertBlockIntoFreeList+0xe>
     360:	df 01       	movw	r26, r30
     362:	ed 91       	ld	r30, X+
     364:	fc 91       	ld	r31, X
     366:	11 97       	sbiw	r26, 0x01	; 1
     368:	ec 17       	cp	r30, r28
     36a:	fd 07       	cpc	r31, r29
     36c:	c8 f3       	brcs	.-14     	; 0x360 <prvInsertBlockIntoFreeList+0xc>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
     36e:	12 96       	adiw	r26, 0x02	; 2
     370:	8d 91       	ld	r24, X+
     372:	9c 91       	ld	r25, X
     374:	13 97       	sbiw	r26, 0x03	; 3
     376:	9d 01       	movw	r18, r26
     378:	28 0f       	add	r18, r24
     37a:	39 1f       	adc	r19, r25
     37c:	c2 17       	cp	r28, r18
     37e:	d3 07       	cpc	r29, r19
     380:	49 f4       	brne	.+18     	; 0x394 <prvInsertBlockIntoFreeList+0x40>
    {
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
     382:	2a 81       	ldd	r18, Y+2	; 0x02
     384:	3b 81       	ldd	r19, Y+3	; 0x03
     386:	82 0f       	add	r24, r18
     388:	93 1f       	adc	r25, r19
     38a:	13 96       	adiw	r26, 0x03	; 3
     38c:	9c 93       	st	X, r25
     38e:	8e 93       	st	-X, r24
     390:	12 97       	sbiw	r26, 0x02	; 2
        pxBlockToInsert = pxIterator;
     392:	ed 01       	movw	r28, r26

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
     394:	8a 81       	ldd	r24, Y+2	; 0x02
     396:	9b 81       	ldd	r25, Y+3	; 0x03
     398:	9e 01       	movw	r18, r28
     39a:	28 0f       	add	r18, r24
     39c:	39 1f       	adc	r19, r25
     39e:	e2 17       	cp	r30, r18
     3a0:	f3 07       	cpc	r31, r19
     3a2:	c1 f4       	brne	.+48     	; 0x3d4 <prvInsertBlockIntoFreeList+0x80>
    {
        if( pxIterator->pxNextFreeBlock != pxEnd )
     3a4:	20 91 dc 07 	lds	r18, 0x07DC	; 0x8007dc <pxEnd>
     3a8:	30 91 dd 07 	lds	r19, 0x07DD	; 0x8007dd <pxEnd+0x1>
     3ac:	e2 17       	cp	r30, r18
     3ae:	f3 07       	cpc	r31, r19
     3b0:	71 f0       	breq	.+28     	; 0x3ce <prvInsertBlockIntoFreeList+0x7a>
        {
            /* Form one big block from the two blocks. */
            pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
     3b2:	22 81       	ldd	r18, Z+2	; 0x02
     3b4:	33 81       	ldd	r19, Z+3	; 0x03
     3b6:	82 0f       	add	r24, r18
     3b8:	93 1f       	adc	r25, r19
     3ba:	9b 83       	std	Y+3, r25	; 0x03
     3bc:	8a 83       	std	Y+2, r24	; 0x02
            pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
     3be:	ed 91       	ld	r30, X+
     3c0:	fc 91       	ld	r31, X
     3c2:	11 97       	sbiw	r26, 0x01	; 1
     3c4:	80 81       	ld	r24, Z
     3c6:	91 81       	ldd	r25, Z+1	; 0x01
     3c8:	99 83       	std	Y+1, r25	; 0x01
     3ca:	88 83       	st	Y, r24
     3cc:	05 c0       	rjmp	.+10     	; 0x3d8 <prvInsertBlockIntoFreeList+0x84>
        }
        else
        {
            pxBlockToInsert->pxNextFreeBlock = pxEnd;
     3ce:	39 83       	std	Y+1, r19	; 0x01
     3d0:	28 83       	st	Y, r18
     3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <prvInsertBlockIntoFreeList+0x84>
        }
    }
    else
    {
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
     3d4:	f9 83       	std	Y+1, r31	; 0x01
     3d6:	e8 83       	st	Y, r30

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
     3d8:	ca 17       	cp	r28, r26
     3da:	db 07       	cpc	r29, r27
     3dc:	11 f0       	breq	.+4      	; 0x3e2 <prvInsertBlockIntoFreeList+0x8e>
    {
        pxIterator->pxNextFreeBlock = pxBlockToInsert;
     3de:	cd 93       	st	X+, r28
     3e0:	dc 93       	st	X, r29
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	08 95       	ret

000003e8 <pvPortMalloc>:
PRIVILEGED_DATA static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void * pvPortMalloc( size_t xWantedSize )
{
     3e8:	ef 92       	push	r14
     3ea:	ff 92       	push	r15
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	8c 01       	movw	r16, r24
    BlockLink_t * pxBlock, * pxPreviousBlock, * pxNewBlockLink;
    void * pvReturn = NULL;

    vTaskSuspendAll();
     3f6:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <vTaskSuspendAll>
    {
        /* If this is the first call to malloc then the heap will require
         * initialisation to setup the list of free blocks. */
        if( pxEnd == NULL )
     3fa:	80 91 dc 07 	lds	r24, 0x07DC	; 0x8007dc <pxEnd>
     3fe:	90 91 dd 07 	lds	r25, 0x07DD	; 0x8007dd <pxEnd+0x1>
     402:	89 2b       	or	r24, r25
     404:	09 f4       	brne	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
        {
            prvHeapInit();
     406:	7d df       	rcall	.-262    	; 0x302 <prvHeapInit>

        /* Check the requested block size is not so large that the top bit is
         * set.  The top bit of the block size member of the BlockLink_t structure
         * is used to determine who owns the block - the application or the
         * kernel, so it must be free. */
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
     408:	80 91 d2 07 	lds	r24, 0x07D2	; 0x8007d2 <__data_end>
     40c:	90 91 d3 07 	lds	r25, 0x07D3	; 0x8007d3 <__data_end+0x1>
     410:	80 23       	and	r24, r16
     412:	91 23       	and	r25, r17
     414:	89 2b       	or	r24, r25
     416:	09 f0       	breq	.+2      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     418:	76 c0       	rjmp	.+236    	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
        {
            /* The wanted size must be increased so it can contain a BlockLink_t
             * structure in addition to the requested amount of bytes. */
            if( ( xWantedSize > 0 ) && 
     41a:	01 15       	cp	r16, r1
     41c:	11 05       	cpc	r17, r1
     41e:	49 f0       	breq	.+18     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
                ( ( xWantedSize + xHeapStructSize ) >  xWantedSize ) ) /* Overflow check */
     420:	c8 01       	movw	r24, r16
     422:	04 96       	adiw	r24, 0x04	; 4
         * kernel, so it must be free. */
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
        {
            /* The wanted size must be increased so it can contain a BlockLink_t
             * structure in addition to the requested amount of bytes. */
            if( ( xWantedSize > 0 ) && 
     424:	08 17       	cp	r16, r24
     426:	19 07       	cpc	r17, r25
     428:	18 f0       	brcs	.+6      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
                    mtCOVERAGE_TEST_MARKER();
                }
            } 
            else 
            {
                xWantedSize = 0;
     42a:	00 e0       	ldi	r16, 0x00	; 0
     42c:	10 e0       	ldi	r17, 0x00	; 0
     42e:	01 c0       	rjmp	.+2      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
            /* The wanted size must be increased so it can contain a BlockLink_t
             * structure in addition to the requested amount of bytes. */
            if( ( xWantedSize > 0 ) && 
                ( ( xWantedSize + xHeapStructSize ) >  xWantedSize ) ) /* Overflow check */
            {
                xWantedSize += xHeapStructSize;
     430:	8c 01       	movw	r16, r24
            else 
            {
                xWantedSize = 0;
            }

            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
     432:	01 15       	cp	r16, r1
     434:	11 05       	cpc	r17, r1
     436:	09 f4       	brne	.+2      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     438:	69 c0       	rjmp	.+210    	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
     43a:	80 91 da 07 	lds	r24, 0x07DA	; 0x8007da <xFreeBytesRemaining>
     43e:	90 91 db 07 	lds	r25, 0x07DB	; 0x8007db <xFreeBytesRemaining+0x1>
     442:	80 17       	cp	r24, r16
     444:	91 07       	cpc	r25, r17
     446:	08 f4       	brcc	.+2      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     448:	64 c0       	rjmp	.+200    	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
            {
                /* Traverse the list from the start	(lowest address) block until
                 * one of adequate size is found. */
                pxPreviousBlock = &xStart;
                pxBlock = xStart.pxNextFreeBlock;
     44a:	c0 91 de 07 	lds	r28, 0x07DE	; 0x8007de <xStart>
     44e:	d0 91 df 07 	lds	r29, 0x07DF	; 0x8007df <xStart+0x1>

            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
            {
                /* Traverse the list from the start	(lowest address) block until
                 * one of adequate size is found. */
                pxPreviousBlock = &xStart;
     452:	ee ed       	ldi	r30, 0xDE	; 222
     454:	f7 e0       	ldi	r31, 0x07	; 7
                pxBlock = xStart.pxNextFreeBlock;

                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
     456:	02 c0       	rjmp	.+4      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
                {
                    pxPreviousBlock = pxBlock;
     458:	fe 01       	movw	r30, r28
                    pxBlock = pxBlock->pxNextFreeBlock;
     45a:	ec 01       	movw	r28, r24
                /* Traverse the list from the start	(lowest address) block until
                 * one of adequate size is found. */
                pxPreviousBlock = &xStart;
                pxBlock = xStart.pxNextFreeBlock;

                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
     45c:	8a 81       	ldd	r24, Y+2	; 0x02
     45e:	9b 81       	ldd	r25, Y+3	; 0x03
     460:	80 17       	cp	r24, r16
     462:	91 07       	cpc	r25, r17
     464:	20 f4       	brcc	.+8      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
     466:	88 81       	ld	r24, Y
     468:	99 81       	ldd	r25, Y+1	; 0x01
     46a:	00 97       	sbiw	r24, 0x00	; 0
     46c:	a9 f7       	brne	.-22     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
                    pxBlock = pxBlock->pxNextFreeBlock;
                }

                /* If the end marker was reached then a block of adequate size
                 * was not found. */
                if( pxBlock != pxEnd )
     46e:	80 91 dc 07 	lds	r24, 0x07DC	; 0x8007dc <pxEnd>
     472:	90 91 dd 07 	lds	r25, 0x07DD	; 0x8007dd <pxEnd+0x1>
     476:	c8 17       	cp	r28, r24
     478:	d9 07       	cpc	r29, r25
     47a:	09 f4       	brne	.+2      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     47c:	4d c0       	rjmp	.+154    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
                {
                    /* Return the memory space pointed to - jumping over the
                     * BlockLink_t structure at its start. */
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
     47e:	e0 80       	ld	r14, Z
     480:	f1 80       	ldd	r15, Z+1	; 0x01
     482:	84 e0       	ldi	r24, 0x04	; 4
     484:	e8 0e       	add	r14, r24
     486:	f1 1c       	adc	r15, r1

                    /* This block is being returned for use so must be taken out
                     * of the list of free blocks. */
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
     488:	88 81       	ld	r24, Y
     48a:	99 81       	ldd	r25, Y+1	; 0x01
     48c:	91 83       	std	Z+1, r25	; 0x01
     48e:	80 83       	st	Z, r24

                    /* If the block is larger than required it can be split into
                     * two. */
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
     490:	2a 81       	ldd	r18, Y+2	; 0x02
     492:	3b 81       	ldd	r19, Y+3	; 0x03
     494:	20 1b       	sub	r18, r16
     496:	31 0b       	sbc	r19, r17
     498:	29 30       	cpi	r18, 0x09	; 9
     49a:	31 05       	cpc	r19, r1
     49c:	48 f0       	brcs	.+18     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
                    {
                        /* This block is to be split into two.  Create a new
                         * block following the number of bytes requested. The void
                         * cast is used to prevent byte alignment warnings from the
                         * compiler. */
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
     49e:	ce 01       	movw	r24, r28
     4a0:	80 0f       	add	r24, r16
     4a2:	91 1f       	adc	r25, r17
                        configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );

                        /* Calculate the sizes of two blocks split from the
                         * single block. */
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
     4a4:	fc 01       	movw	r30, r24
     4a6:	33 83       	std	Z+3, r19	; 0x03
     4a8:	22 83       	std	Z+2, r18	; 0x02
                        pxBlock->xBlockSize = xWantedSize;
     4aa:	1b 83       	std	Y+3, r17	; 0x03

                        /* Insert the new block into the list of free blocks. */
                        prvInsertBlockIntoFreeList( pxNewBlockLink );
     4ac:	0a 83       	std	Y+2, r16	; 0x02
     4ae:	52 df       	rcall	.-348    	; 0x354 <prvInsertBlockIntoFreeList>
                    else
                    {
                        mtCOVERAGE_TEST_MARKER();
                    }

                    xFreeBytesRemaining -= pxBlock->xBlockSize;
     4b0:	2a 81       	ldd	r18, Y+2	; 0x02
     4b2:	3b 81       	ldd	r19, Y+3	; 0x03
     4b4:	80 91 da 07 	lds	r24, 0x07DA	; 0x8007da <xFreeBytesRemaining>
     4b8:	90 91 db 07 	lds	r25, 0x07DB	; 0x8007db <xFreeBytesRemaining+0x1>
     4bc:	82 1b       	sub	r24, r18
     4be:	93 0b       	sbc	r25, r19
     4c0:	90 93 db 07 	sts	0x07DB, r25	; 0x8007db <xFreeBytesRemaining+0x1>
     4c4:	80 93 da 07 	sts	0x07DA, r24	; 0x8007da <xFreeBytesRemaining>

                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
     4c8:	40 91 d8 07 	lds	r20, 0x07D8	; 0x8007d8 <xMinimumEverFreeBytesRemaining>
     4cc:	50 91 d9 07 	lds	r21, 0x07D9	; 0x8007d9 <xMinimumEverFreeBytesRemaining+0x1>
     4d0:	84 17       	cp	r24, r20
     4d2:	95 07       	cpc	r25, r21
     4d4:	20 f4       	brcc	.+8      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
                    {
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
     4d6:	90 93 d9 07 	sts	0x07D9, r25	; 0x8007d9 <xMinimumEverFreeBytesRemaining+0x1>
     4da:	80 93 d8 07 	sts	0x07D8, r24	; 0x8007d8 <xMinimumEverFreeBytesRemaining>
                        mtCOVERAGE_TEST_MARKER();
                    }

                    /* The block is being returned - it is allocated and owned
                     * by the application and has no "next" block. */
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
     4de:	80 91 d2 07 	lds	r24, 0x07D2	; 0x8007d2 <__data_end>
     4e2:	90 91 d3 07 	lds	r25, 0x07D3	; 0x8007d3 <__data_end+0x1>
     4e6:	28 2b       	or	r18, r24
     4e8:	39 2b       	or	r19, r25
     4ea:	3b 83       	std	Y+3, r19	; 0x03
     4ec:	2a 83       	std	Y+2, r18	; 0x02
                    pxBlock->pxNextFreeBlock = NULL;
     4ee:	19 82       	std	Y+1, r1	; 0x01
     4f0:	18 82       	st	Y, r1
                    xNumberOfSuccessfulAllocations++;
     4f2:	80 91 d6 07 	lds	r24, 0x07D6	; 0x8007d6 <xNumberOfSuccessfulAllocations>
     4f6:	90 91 d7 07 	lds	r25, 0x07D7	; 0x8007d7 <xNumberOfSuccessfulAllocations+0x1>
     4fa:	01 96       	adiw	r24, 0x01	; 1
     4fc:	90 93 d7 07 	sts	0x07D7, r25	; 0x8007d7 <xNumberOfSuccessfulAllocations+0x1>
     500:	80 93 d6 07 	sts	0x07D6, r24	; 0x8007d6 <xNumberOfSuccessfulAllocations>
     504:	0b c0       	rjmp	.+22     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
/*-----------------------------------------------------------*/

void * pvPortMalloc( size_t xWantedSize )
{
    BlockLink_t * pxBlock, * pxPreviousBlock, * pxNewBlockLink;
    void * pvReturn = NULL;
     506:	e1 2c       	mov	r14, r1
     508:	f1 2c       	mov	r15, r1
     50a:	08 c0       	rjmp	.+16     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     50c:	e1 2c       	mov	r14, r1
     50e:	f1 2c       	mov	r15, r1
     510:	05 c0       	rjmp	.+10     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     512:	e1 2c       	mov	r14, r1
     514:	f1 2c       	mov	r15, r1
     516:	02 c0       	rjmp	.+4      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     518:	e1 2c       	mov	r14, r1
     51a:	f1 2c       	mov	r15, r1
            mtCOVERAGE_TEST_MARKER();
        }

        traceMALLOC( pvReturn, xWantedSize );
    }
    ( void ) xTaskResumeAll();
     51c:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <xTaskResumeAll>

    #if ( configUSE_MALLOC_FAILED_HOOK == 1 )
        {
            if( pvReturn == NULL )
     520:	e1 14       	cp	r14, r1
     522:	f1 04       	cpc	r15, r1
     524:	11 f4       	brne	.+4      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
            {
                extern void vApplicationMallocFailedHook( void );
                vApplicationMallocFailedHook();
     526:	0e 94 dc 17 	call	0x2fb8	; 0x2fb8 <vApplicationMallocFailedHook>
        }
    #endif /* if ( configUSE_MALLOC_FAILED_HOOK == 1 ) */

    configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
    return pvReturn;
}
     52a:	c7 01       	movw	r24, r14
     52c:	df 91       	pop	r29
     52e:	cf 91       	pop	r28
     530:	1f 91       	pop	r17
     532:	0f 91       	pop	r16
     534:	ff 90       	pop	r15
     536:	ef 90       	pop	r14
     538:	08 95       	ret

0000053a <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void * pv )
{
     53a:	0f 93       	push	r16
     53c:	1f 93       	push	r17
     53e:	cf 93       	push	r28
     540:	df 93       	push	r29
    uint8_t * puc = ( uint8_t * ) pv;
    BlockLink_t * pxLink;

    if( pv != NULL )
     542:	00 97       	sbiw	r24, 0x00	; 0
     544:	91 f1       	breq	.+100    	; 0x5aa <vPortFree+0x70>
    {
        /* The memory being freed will have an BlockLink_t structure immediately
         * before it. */
        puc -= xHeapStructSize;
     546:	ec 01       	movw	r28, r24
     548:	24 97       	sbiw	r28, 0x04	; 4

        /* Check the block is actually allocated. */
        configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
        configASSERT( pxLink->pxNextFreeBlock == NULL );

        if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
     54a:	4a 81       	ldd	r20, Y+2	; 0x02
     54c:	5b 81       	ldd	r21, Y+3	; 0x03
     54e:	20 91 d2 07 	lds	r18, 0x07D2	; 0x8007d2 <__data_end>
     552:	30 91 d3 07 	lds	r19, 0x07D3	; 0x8007d3 <__data_end+0x1>
     556:	ba 01       	movw	r22, r20
     558:	62 23       	and	r22, r18
     55a:	73 23       	and	r23, r19
     55c:	67 2b       	or	r22, r23
     55e:	29 f1       	breq	.+74     	; 0x5aa <vPortFree+0x70>
        {
            if( pxLink->pxNextFreeBlock == NULL )
     560:	68 81       	ld	r22, Y
     562:	79 81       	ldd	r23, Y+1	; 0x01
     564:	67 2b       	or	r22, r23
     566:	09 f5       	brne	.+66     	; 0x5aa <vPortFree+0x70>
            {
                /* The block is being returned to the heap - it is no longer
                 * allocated. */
                pxLink->xBlockSize &= ~xBlockAllocatedBit;
     568:	20 95       	com	r18
     56a:	30 95       	com	r19
     56c:	24 23       	and	r18, r20
     56e:	35 23       	and	r19, r21
     570:	3b 83       	std	Y+3, r19	; 0x03
     572:	2a 83       	std	Y+2, r18	; 0x02

                vTaskSuspendAll();
     574:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <vTaskSuspendAll>
                {
                    /* Add this block to the list of free blocks. */
                    xFreeBytesRemaining += pxLink->xBlockSize;
     578:	8a 81       	ldd	r24, Y+2	; 0x02
     57a:	9b 81       	ldd	r25, Y+3	; 0x03
     57c:	20 91 da 07 	lds	r18, 0x07DA	; 0x8007da <xFreeBytesRemaining>
     580:	30 91 db 07 	lds	r19, 0x07DB	; 0x8007db <xFreeBytesRemaining+0x1>
     584:	82 0f       	add	r24, r18
     586:	93 1f       	adc	r25, r19
     588:	90 93 db 07 	sts	0x07DB, r25	; 0x8007db <xFreeBytesRemaining+0x1>
     58c:	80 93 da 07 	sts	0x07DA, r24	; 0x8007da <xFreeBytesRemaining>
                    traceFREE( pv, pxLink->xBlockSize );
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
     590:	ce 01       	movw	r24, r28
     592:	e0 de       	rcall	.-576    	; 0x354 <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
     594:	80 91 d4 07 	lds	r24, 0x07D4	; 0x8007d4 <xNumberOfSuccessfulFrees>
     598:	90 91 d5 07 	lds	r25, 0x07D5	; 0x8007d5 <xNumberOfSuccessfulFrees+0x1>
     59c:	01 96       	adiw	r24, 0x01	; 1
     59e:	90 93 d5 07 	sts	0x07D5, r25	; 0x8007d5 <xNumberOfSuccessfulFrees+0x1>
     5a2:	80 93 d4 07 	sts	0x07D4, r24	; 0x8007d4 <xNumberOfSuccessfulFrees>
                }
                ( void ) xTaskResumeAll();
     5a6:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <xTaskResumeAll>
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }
    }
}
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	1f 91       	pop	r17
     5b0:	0f 91       	pop	r16
     5b2:	08 95       	ret

000005b4 <xPortGetFreeHeapSize>:
/*-----------------------------------------------------------*/

size_t xPortGetFreeHeapSize( void )
{
    return xFreeBytesRemaining;
}
     5b4:	80 91 da 07 	lds	r24, 0x07DA	; 0x8007da <xFreeBytesRemaining>
     5b8:	90 91 db 07 	lds	r25, 0x07DB	; 0x8007db <xFreeBytesRemaining+0x1>
     5bc:	08 95       	ret

000005be <vListInitialise>:

    /* Remember which list the item is in. */
    pxNewListItem->pxContainer = pxList;

    ( pxList->uxNumberOfItems )++;
}
     5be:	fc 01       	movw	r30, r24
     5c0:	03 96       	adiw	r24, 0x03	; 3
     5c2:	92 83       	std	Z+2, r25	; 0x02
     5c4:	81 83       	std	Z+1, r24	; 0x01
     5c6:	4f ef       	ldi	r20, 0xFF	; 255
     5c8:	5f ef       	ldi	r21, 0xFF	; 255
     5ca:	ba 01       	movw	r22, r20
     5cc:	43 83       	std	Z+3, r20	; 0x03
     5ce:	54 83       	std	Z+4, r21	; 0x04
     5d0:	65 83       	std	Z+5, r22	; 0x05
     5d2:	76 83       	std	Z+6, r23	; 0x06
     5d4:	90 87       	std	Z+8, r25	; 0x08
     5d6:	87 83       	std	Z+7, r24	; 0x07
     5d8:	92 87       	std	Z+10, r25	; 0x0a
     5da:	81 87       	std	Z+9, r24	; 0x09
     5dc:	10 82       	st	Z, r1
     5de:	08 95       	ret

000005e0 <vListInitialiseItem>:
     5e0:	fc 01       	movw	r30, r24
     5e2:	13 86       	std	Z+11, r1	; 0x0b
     5e4:	12 86       	std	Z+10, r1	; 0x0a
     5e6:	08 95       	ret

000005e8 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
     5e8:	0f 93       	push	r16
     5ea:	1f 93       	push	r17
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	eb 01       	movw	r28, r22
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
     5f2:	08 81       	ld	r16, Y
     5f4:	19 81       	ldd	r17, Y+1	; 0x01
     5f6:	2a 81       	ldd	r18, Y+2	; 0x02
     5f8:	3b 81       	ldd	r19, Y+3	; 0x03
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
     5fa:	0f 3f       	cpi	r16, 0xFF	; 255
     5fc:	4f ef       	ldi	r20, 0xFF	; 255
     5fe:	14 07       	cpc	r17, r20
     600:	24 07       	cpc	r18, r20
     602:	34 07       	cpc	r19, r20
     604:	21 f4       	brne	.+8      	; 0x60e <vListInsert+0x26>
    {
        pxIterator = pxList->xListEnd.pxPrevious;
     606:	fc 01       	movw	r30, r24
     608:	a1 85       	ldd	r26, Z+9	; 0x09
     60a:	b2 85       	ldd	r27, Z+10	; 0x0a
     60c:	11 c0       	rjmp	.+34     	; 0x630 <vListInsert+0x48>
        *   4) Using a queue or semaphore before it has been initialised or
        *      before the scheduler has been started (are interrupts firing
        *      before vTaskStartScheduler() has been called?).
        **********************************************************************/

        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
     60e:	dc 01       	movw	r26, r24
     610:	13 96       	adiw	r26, 0x03	; 3
     612:	01 c0       	rjmp	.+2      	; 0x616 <vListInsert+0x2e>
     614:	df 01       	movw	r26, r30
     616:	14 96       	adiw	r26, 0x04	; 4
     618:	ed 91       	ld	r30, X+
     61a:	fc 91       	ld	r31, X
     61c:	15 97       	sbiw	r26, 0x05	; 5
     61e:	40 81       	ld	r20, Z
     620:	51 81       	ldd	r21, Z+1	; 0x01
     622:	62 81       	ldd	r22, Z+2	; 0x02
     624:	73 81       	ldd	r23, Z+3	; 0x03
     626:	04 17       	cp	r16, r20
     628:	15 07       	cpc	r17, r21
     62a:	26 07       	cpc	r18, r22
     62c:	37 07       	cpc	r19, r23
     62e:	90 f7       	brcc	.-28     	; 0x614 <vListInsert+0x2c>
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
     630:	14 96       	adiw	r26, 0x04	; 4
     632:	ed 91       	ld	r30, X+
     634:	fc 91       	ld	r31, X
     636:	15 97       	sbiw	r26, 0x05	; 5
     638:	fd 83       	std	Y+5, r31	; 0x05
     63a:	ec 83       	std	Y+4, r30	; 0x04
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
     63c:	d7 83       	std	Z+7, r29	; 0x07
     63e:	c6 83       	std	Z+6, r28	; 0x06
    pxNewListItem->pxPrevious = pxIterator;
     640:	bf 83       	std	Y+7, r27	; 0x07
     642:	ae 83       	std	Y+6, r26	; 0x06
    pxIterator->pxNext = pxNewListItem;
     644:	15 96       	adiw	r26, 0x05	; 5
     646:	dc 93       	st	X, r29
     648:	ce 93       	st	-X, r28
     64a:	14 97       	sbiw	r26, 0x04	; 4

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;
     64c:	9b 87       	std	Y+11, r25	; 0x0b
     64e:	8a 87       	std	Y+10, r24	; 0x0a

    ( pxList->uxNumberOfItems )++;
     650:	fc 01       	movw	r30, r24
     652:	20 81       	ld	r18, Z
     654:	2f 5f       	subi	r18, 0xFF	; 255
     656:	20 83       	st	Z, r18
}
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	1f 91       	pop	r17
     65e:	0f 91       	pop	r16
     660:	08 95       	ret

00000662 <uxListRemove>:
/*-----------------------------------------------------------*/

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
     662:	cf 93       	push	r28
     664:	df 93       	push	r29
     666:	fc 01       	movw	r30, r24
/* The list item knows which list it is in.  Obtain the list from the list
 * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
     668:	a2 85       	ldd	r26, Z+10	; 0x0a
     66a:	b3 85       	ldd	r27, Z+11	; 0x0b

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     66c:	c4 81       	ldd	r28, Z+4	; 0x04
     66e:	d5 81       	ldd	r29, Z+5	; 0x05
     670:	86 81       	ldd	r24, Z+6	; 0x06
     672:	97 81       	ldd	r25, Z+7	; 0x07
     674:	9f 83       	std	Y+7, r25	; 0x07
     676:	8e 83       	std	Y+6, r24	; 0x06
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     678:	c6 81       	ldd	r28, Z+6	; 0x06
     67a:	d7 81       	ldd	r29, Z+7	; 0x07
     67c:	84 81       	ldd	r24, Z+4	; 0x04
     67e:	95 81       	ldd	r25, Z+5	; 0x05
     680:	9d 83       	std	Y+5, r25	; 0x05
     682:	8c 83       	std	Y+4, r24	; 0x04

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
     684:	11 96       	adiw	r26, 0x01	; 1
     686:	8d 91       	ld	r24, X+
     688:	9c 91       	ld	r25, X
     68a:	12 97       	sbiw	r26, 0x02	; 2
     68c:	e8 17       	cp	r30, r24
     68e:	f9 07       	cpc	r31, r25
     690:	31 f4       	brne	.+12     	; 0x69e <uxListRemove+0x3c>
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
     692:	86 81       	ldd	r24, Z+6	; 0x06
     694:	97 81       	ldd	r25, Z+7	; 0x07
     696:	12 96       	adiw	r26, 0x02	; 2
     698:	9c 93       	st	X, r25
     69a:	8e 93       	st	-X, r24
     69c:	11 97       	sbiw	r26, 0x01	; 1
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
     69e:	13 86       	std	Z+11, r1	; 0x0b
     6a0:	12 86       	std	Z+10, r1	; 0x0a
    ( pxList->uxNumberOfItems )--;
     6a2:	8c 91       	ld	r24, X
     6a4:	81 50       	subi	r24, 0x01	; 1
     6a6:	8c 93       	st	X, r24

    return pxList->uxNumberOfItems;
     6a8:	8c 91       	ld	r24, X
}
     6aa:	df 91       	pop	r29
     6ac:	cf 91       	pop	r28
     6ae:	08 95       	ret

000006b0 <prvSetupTimerInterrupt>:
{
    portSAVE_CONTEXT();
    vTaskSwitchContext();
    portRESTORE_CONTEXT();

    __asm__ __volatile__ ( "reti" );
     6b0:	a8 95       	wdr
     6b2:	90 ec       	ldi	r25, 0xC0	; 192
     6b4:	88 e1       	ldi	r24, 0x18	; 24
     6b6:	0f b6       	in	r0, 0x3f	; 63
     6b8:	f8 94       	cli
     6ba:	a8 95       	wdr
     6bc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     6c0:	0f be       	out	0x3f, r0	; 63
     6c2:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     6c6:	08 95       	ret

000006c8 <pxPortInitialiseStack>:
     6c8:	fc 01       	movw	r30, r24
     6ca:	60 83       	st	Z, r22
     6cc:	31 97       	sbiw	r30, 0x01	; 1
     6ce:	70 83       	st	Z, r23
     6d0:	31 97       	sbiw	r30, 0x01	; 1
     6d2:	10 82       	st	Z, r1
     6d4:	31 97       	sbiw	r30, 0x01	; 1
     6d6:	10 82       	st	Z, r1
     6d8:	31 97       	sbiw	r30, 0x01	; 1
     6da:	20 e8       	ldi	r18, 0x80	; 128
     6dc:	20 83       	st	Z, r18
     6de:	31 97       	sbiw	r30, 0x01	; 1
     6e0:	10 82       	st	Z, r1
     6e2:	31 97       	sbiw	r30, 0x01	; 1
     6e4:	10 82       	st	Z, r1
     6e6:	31 97       	sbiw	r30, 0x01	; 1
     6e8:	10 82       	st	Z, r1
     6ea:	77 97       	sbiw	r30, 0x17	; 23
     6ec:	40 83       	st	Z, r20
     6ee:	31 97       	sbiw	r30, 0x01	; 1
     6f0:	50 83       	st	Z, r21
     6f2:	86 97       	sbiw	r24, 0x26	; 38
     6f4:	08 95       	ret

000006f6 <xPortStartScheduler>:
     6f6:	dc df       	rcall	.-72     	; 0x6b0 <prvSetupTimerInterrupt>
     6f8:	a0 91 4d 16 	lds	r26, 0x164D	; 0x80164d <pxCurrentTCB>
     6fc:	b0 91 4e 16 	lds	r27, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
     700:	cd 91       	ld	r28, X+
     702:	cd bf       	out	0x3d, r28	; 61
     704:	dd 91       	ld	r29, X+
     706:	de bf       	out	0x3e, r29	; 62
     708:	ff 91       	pop	r31
     70a:	ef 91       	pop	r30
     70c:	df 91       	pop	r29
     70e:	cf 91       	pop	r28
     710:	bf 91       	pop	r27
     712:	af 91       	pop	r26
     714:	9f 91       	pop	r25
     716:	8f 91       	pop	r24
     718:	7f 91       	pop	r23
     71a:	6f 91       	pop	r22
     71c:	5f 91       	pop	r21
     71e:	4f 91       	pop	r20
     720:	3f 91       	pop	r19
     722:	2f 91       	pop	r18
     724:	1f 91       	pop	r17
     726:	0f 91       	pop	r16
     728:	ff 90       	pop	r15
     72a:	ef 90       	pop	r14
     72c:	df 90       	pop	r13
     72e:	cf 90       	pop	r12
     730:	bf 90       	pop	r11
     732:	af 90       	pop	r10
     734:	9f 90       	pop	r9
     736:	8f 90       	pop	r8
     738:	7f 90       	pop	r7
     73a:	6f 90       	pop	r6
     73c:	5f 90       	pop	r5
     73e:	4f 90       	pop	r4
     740:	3f 90       	pop	r3
     742:	2f 90       	pop	r2
     744:	1f 90       	pop	r1
     746:	0f 90       	pop	r0
     748:	0c be       	out	0x3c, r0	; 60
     74a:	0f 90       	pop	r0
     74c:	0b be       	out	0x3b, r0	; 59
     74e:	0f 90       	pop	r0
     750:	0f be       	out	0x3f, r0	; 63
     752:	0f 90       	pop	r0
     754:	08 95       	ret
     756:	81 e0       	ldi	r24, 0x01	; 1
     758:	08 95       	ret

0000075a <vPortYield>:
     75a:	0f 92       	push	r0
     75c:	0f b6       	in	r0, 0x3f	; 63
     75e:	f8 94       	cli
     760:	0f 92       	push	r0
     762:	0b b6       	in	r0, 0x3b	; 59
     764:	0f 92       	push	r0
     766:	0c b6       	in	r0, 0x3c	; 60
     768:	0f 92       	push	r0
     76a:	1f 92       	push	r1
     76c:	11 24       	eor	r1, r1
     76e:	2f 92       	push	r2
     770:	3f 92       	push	r3
     772:	4f 92       	push	r4
     774:	5f 92       	push	r5
     776:	6f 92       	push	r6
     778:	7f 92       	push	r7
     77a:	8f 92       	push	r8
     77c:	9f 92       	push	r9
     77e:	af 92       	push	r10
     780:	bf 92       	push	r11
     782:	cf 92       	push	r12
     784:	df 92       	push	r13
     786:	ef 92       	push	r14
     788:	ff 92       	push	r15
     78a:	0f 93       	push	r16
     78c:	1f 93       	push	r17
     78e:	2f 93       	push	r18
     790:	3f 93       	push	r19
     792:	4f 93       	push	r20
     794:	5f 93       	push	r21
     796:	6f 93       	push	r22
     798:	7f 93       	push	r23
     79a:	8f 93       	push	r24
     79c:	9f 93       	push	r25
     79e:	af 93       	push	r26
     7a0:	bf 93       	push	r27
     7a2:	cf 93       	push	r28
     7a4:	df 93       	push	r29
     7a6:	ef 93       	push	r30
     7a8:	ff 93       	push	r31
     7aa:	a0 91 4d 16 	lds	r26, 0x164D	; 0x80164d <pxCurrentTCB>
     7ae:	b0 91 4e 16 	lds	r27, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
     7b2:	0d b6       	in	r0, 0x3d	; 61
     7b4:	0d 92       	st	X+, r0
     7b6:	0e b6       	in	r0, 0x3e	; 62
     7b8:	0d 92       	st	X+, r0
     7ba:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <vTaskSwitchContext>
     7be:	a0 91 4d 16 	lds	r26, 0x164D	; 0x80164d <pxCurrentTCB>
     7c2:	b0 91 4e 16 	lds	r27, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
     7c6:	cd 91       	ld	r28, X+
     7c8:	cd bf       	out	0x3d, r28	; 61
     7ca:	dd 91       	ld	r29, X+
     7cc:	de bf       	out	0x3e, r29	; 62
     7ce:	ff 91       	pop	r31
     7d0:	ef 91       	pop	r30
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	bf 91       	pop	r27
     7d8:	af 91       	pop	r26
     7da:	9f 91       	pop	r25
     7dc:	8f 91       	pop	r24
     7de:	7f 91       	pop	r23
     7e0:	6f 91       	pop	r22
     7e2:	5f 91       	pop	r21
     7e4:	4f 91       	pop	r20
     7e6:	3f 91       	pop	r19
     7e8:	2f 91       	pop	r18
     7ea:	1f 91       	pop	r17
     7ec:	0f 91       	pop	r16
     7ee:	ff 90       	pop	r15
     7f0:	ef 90       	pop	r14
     7f2:	df 90       	pop	r13
     7f4:	cf 90       	pop	r12
     7f6:	bf 90       	pop	r11
     7f8:	af 90       	pop	r10
     7fa:	9f 90       	pop	r9
     7fc:	8f 90       	pop	r8
     7fe:	7f 90       	pop	r7
     800:	6f 90       	pop	r6
     802:	5f 90       	pop	r5
     804:	4f 90       	pop	r4
     806:	3f 90       	pop	r3
     808:	2f 90       	pop	r2
     80a:	1f 90       	pop	r1
     80c:	0f 90       	pop	r0
     80e:	0c be       	out	0x3c, r0	; 60
     810:	0f 90       	pop	r0
     812:	0b be       	out	0x3b, r0	; 59
     814:	0f 90       	pop	r0
     816:	0f be       	out	0x3f, r0	; 63
     818:	0f 90       	pop	r0
     81a:	08 95       	ret

0000081c <vPortYieldFromTick>:
 * call comes from the tick ISR.
 */
void vPortYieldFromTick( void ) __attribute__ ( ( hot, flatten, naked ) );
void vPortYieldFromTick( void )
{
    portSAVE_CONTEXT();
     81c:	0f 92       	push	r0
     81e:	0f b6       	in	r0, 0x3f	; 63
     820:	f8 94       	cli
     822:	0f 92       	push	r0
     824:	0b b6       	in	r0, 0x3b	; 59
     826:	0f 92       	push	r0
     828:	0c b6       	in	r0, 0x3c	; 60
     82a:	0f 92       	push	r0
     82c:	1f 92       	push	r1
     82e:	11 24       	eor	r1, r1
     830:	2f 92       	push	r2
     832:	3f 92       	push	r3
     834:	4f 92       	push	r4
     836:	5f 92       	push	r5
     838:	6f 92       	push	r6
     83a:	7f 92       	push	r7
     83c:	8f 92       	push	r8
     83e:	9f 92       	push	r9
     840:	af 92       	push	r10
     842:	bf 92       	push	r11
     844:	cf 92       	push	r12
     846:	df 92       	push	r13
     848:	ef 92       	push	r14
     84a:	ff 92       	push	r15
     84c:	0f 93       	push	r16
     84e:	1f 93       	push	r17
     850:	2f 93       	push	r18
     852:	3f 93       	push	r19
     854:	4f 93       	push	r20
     856:	5f 93       	push	r21
     858:	6f 93       	push	r22
     85a:	7f 93       	push	r23
     85c:	8f 93       	push	r24
     85e:	9f 93       	push	r25
     860:	af 93       	push	r26
     862:	bf 93       	push	r27
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
     868:	ef 93       	push	r30
     86a:	ff 93       	push	r31
     86c:	a0 91 4d 16 	lds	r26, 0x164D	; 0x80164d <pxCurrentTCB>
     870:	b0 91 4e 16 	lds	r27, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
     874:	0d b6       	in	r0, 0x3d	; 61
     876:	0d 92       	st	X+, r0
     878:	0e b6       	in	r0, 0x3e	; 62
     87a:	0d 92       	st	X+, r0
    sleep_reset();        /* reset the sleep_mode() faster than sleep_disable(); */
     87c:	13 be       	out	0x33, r1	; 51
    if( xTaskIncrementTick() != pdFALSE )
     87e:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <xTaskIncrementTick>
     882:	81 11       	cpse	r24, r1
    {
        vTaskSwitchContext();
     884:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <vTaskSwitchContext>
    }
    portRESTORE_CONTEXT();
     888:	a0 91 4d 16 	lds	r26, 0x164D	; 0x80164d <pxCurrentTCB>
     88c:	b0 91 4e 16 	lds	r27, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
     890:	cd 91       	ld	r28, X+
     892:	cd bf       	out	0x3d, r28	; 61
     894:	dd 91       	ld	r29, X+
     896:	de bf       	out	0x3e, r29	; 62
     898:	ff 91       	pop	r31
     89a:	ef 91       	pop	r30
     89c:	df 91       	pop	r29
     89e:	cf 91       	pop	r28
     8a0:	bf 91       	pop	r27
     8a2:	af 91       	pop	r26
     8a4:	9f 91       	pop	r25
     8a6:	8f 91       	pop	r24
     8a8:	7f 91       	pop	r23
     8aa:	6f 91       	pop	r22
     8ac:	5f 91       	pop	r21
     8ae:	4f 91       	pop	r20
     8b0:	3f 91       	pop	r19
     8b2:	2f 91       	pop	r18
     8b4:	1f 91       	pop	r17
     8b6:	0f 91       	pop	r16
     8b8:	ff 90       	pop	r15
     8ba:	ef 90       	pop	r14
     8bc:	df 90       	pop	r13
     8be:	cf 90       	pop	r12
     8c0:	bf 90       	pop	r11
     8c2:	af 90       	pop	r10
     8c4:	9f 90       	pop	r9
     8c6:	8f 90       	pop	r8
     8c8:	7f 90       	pop	r7
     8ca:	6f 90       	pop	r6
     8cc:	5f 90       	pop	r5
     8ce:	4f 90       	pop	r4
     8d0:	3f 90       	pop	r3
     8d2:	2f 90       	pop	r2
     8d4:	1f 90       	pop	r1
     8d6:	0f 90       	pop	r0
     8d8:	0c be       	out	0x3c, r0	; 60
     8da:	0f 90       	pop	r0
     8dc:	0b be       	out	0x3b, r0	; 59
     8de:	0f 90       	pop	r0
     8e0:	0f be       	out	0x3f, r0	; 63
     8e2:	0f 90       	pop	r0

    __asm__ __volatile__ ( "ret" );
     8e4:	08 95       	ret

000008e6 <__vector_12>:
    ISR(portSCHEDULER_ISR, ISR_NAKED) __attribute__ ((hot, flatten));
/*  ISR(portSCHEDULER_ISR, ISR_NAKED ISR_NOBLOCK) __attribute__ ((hot, flatten));
 */
    ISR(portSCHEDULER_ISR)
    {
        vPortYieldFromTick();
     8e6:	9a df       	rcall	.-204    	; 0x81c <vPortYieldFromTick>
        __asm__ __volatile__ ( "reti" );
     8e8:	18 95       	reti

000008ea <prvIsQueueEmpty>:
    {
        xReturn = pdFALSE;
    }

    return xReturn;
} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
     8ea:	0f b6       	in	r0, 0x3f	; 63
     8ec:	f8 94       	cli
     8ee:	0f 92       	push	r0
     8f0:	fc 01       	movw	r30, r24
     8f2:	86 8d       	ldd	r24, Z+30	; 0x1e
     8f4:	81 11       	cpse	r24, r1
     8f6:	02 c0       	rjmp	.+4      	; 0x8fc <prvIsQueueEmpty+0x12>
     8f8:	81 e0       	ldi	r24, 0x01	; 1
     8fa:	01 c0       	rjmp	.+2      	; 0x8fe <prvIsQueueEmpty+0x14>
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	0f 90       	pop	r0
     900:	0f be       	out	0x3f, r0	; 63
     902:	08 95       	ret

00000904 <prvIsQueueFull>:
     904:	0f b6       	in	r0, 0x3f	; 63
     906:	f8 94       	cli
     908:	0f 92       	push	r0
     90a:	fc 01       	movw	r30, r24
     90c:	26 8d       	ldd	r18, Z+30	; 0x1e
     90e:	87 8d       	ldd	r24, Z+31	; 0x1f
     910:	28 13       	cpse	r18, r24
     912:	02 c0       	rjmp	.+4      	; 0x918 <prvIsQueueFull+0x14>
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	01 c0       	rjmp	.+2      	; 0x91a <prvIsQueueFull+0x16>
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	0f 90       	pop	r0
     91c:	0f be       	out	0x3f, r0	; 63
     91e:	08 95       	ret

00000920 <prvCopyDataToQueue>:
     920:	0f 93       	push	r16
     922:	1f 93       	push	r17
     924:	cf 93       	push	r28
     926:	df 93       	push	r29
     928:	ec 01       	movw	r28, r24
     92a:	04 2f       	mov	r16, r20
     92c:	1e 8d       	ldd	r17, Y+30	; 0x1e
     92e:	48 a1       	ldd	r20, Y+32	; 0x20
     930:	41 11       	cpse	r20, r1
     932:	0c c0       	rjmp	.+24     	; 0x94c <prvCopyDataToQueue+0x2c>
     934:	88 81       	ld	r24, Y
     936:	99 81       	ldd	r25, Y+1	; 0x01
     938:	89 2b       	or	r24, r25
     93a:	09 f0       	breq	.+2      	; 0x93e <prvCopyDataToQueue+0x1e>
     93c:	42 c0       	rjmp	.+132    	; 0x9c2 <prvCopyDataToQueue+0xa2>
     93e:	8c 81       	ldd	r24, Y+4	; 0x04
     940:	9d 81       	ldd	r25, Y+5	; 0x05
     942:	0e 94 9b 11 	call	0x2336	; 0x2336 <xTaskPriorityDisinherit>
     946:	1d 82       	std	Y+5, r1	; 0x05
     948:	1c 82       	std	Y+4, r1	; 0x04
     94a:	42 c0       	rjmp	.+132    	; 0x9d0 <prvCopyDataToQueue+0xb0>
     94c:	01 11       	cpse	r16, r1
     94e:	17 c0       	rjmp	.+46     	; 0x97e <prvCopyDataToQueue+0x5e>
     950:	50 e0       	ldi	r21, 0x00	; 0
     952:	8a 81       	ldd	r24, Y+2	; 0x02
     954:	9b 81       	ldd	r25, Y+3	; 0x03
     956:	0e 94 4b 2c 	call	0x5896	; 0x5896 <memcpy>
     95a:	28 a1       	ldd	r18, Y+32	; 0x20
     95c:	8a 81       	ldd	r24, Y+2	; 0x02
     95e:	9b 81       	ldd	r25, Y+3	; 0x03
     960:	82 0f       	add	r24, r18
     962:	91 1d       	adc	r25, r1
     964:	9b 83       	std	Y+3, r25	; 0x03
     966:	8a 83       	std	Y+2, r24	; 0x02
     968:	2c 81       	ldd	r18, Y+4	; 0x04
     96a:	3d 81       	ldd	r19, Y+5	; 0x05
     96c:	82 17       	cp	r24, r18
     96e:	93 07       	cpc	r25, r19
     970:	50 f1       	brcs	.+84     	; 0x9c6 <prvCopyDataToQueue+0xa6>
     972:	88 81       	ld	r24, Y
     974:	99 81       	ldd	r25, Y+1	; 0x01
     976:	9b 83       	std	Y+3, r25	; 0x03
     978:	8a 83       	std	Y+2, r24	; 0x02
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	29 c0       	rjmp	.+82     	; 0x9d0 <prvCopyDataToQueue+0xb0>
     97e:	50 e0       	ldi	r21, 0x00	; 0
     980:	8e 81       	ldd	r24, Y+6	; 0x06
     982:	9f 81       	ldd	r25, Y+7	; 0x07
     984:	0e 94 4b 2c 	call	0x5896	; 0x5896 <memcpy>
     988:	88 a1       	ldd	r24, Y+32	; 0x20
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	91 95       	neg	r25
     98e:	81 95       	neg	r24
     990:	91 09       	sbc	r25, r1
     992:	2e 81       	ldd	r18, Y+6	; 0x06
     994:	3f 81       	ldd	r19, Y+7	; 0x07
     996:	28 0f       	add	r18, r24
     998:	39 1f       	adc	r19, r25
     99a:	3f 83       	std	Y+7, r19	; 0x07
     99c:	2e 83       	std	Y+6, r18	; 0x06
     99e:	48 81       	ld	r20, Y
     9a0:	59 81       	ldd	r21, Y+1	; 0x01
     9a2:	24 17       	cp	r18, r20
     9a4:	35 07       	cpc	r19, r21
     9a6:	30 f4       	brcc	.+12     	; 0x9b4 <prvCopyDataToQueue+0x94>
     9a8:	2c 81       	ldd	r18, Y+4	; 0x04
     9aa:	3d 81       	ldd	r19, Y+5	; 0x05
     9ac:	82 0f       	add	r24, r18
     9ae:	93 1f       	adc	r25, r19
     9b0:	9f 83       	std	Y+7, r25	; 0x07
     9b2:	8e 83       	std	Y+6, r24	; 0x06
     9b4:	02 30       	cpi	r16, 0x02	; 2
     9b6:	49 f4       	brne	.+18     	; 0x9ca <prvCopyDataToQueue+0xaa>
     9b8:	11 23       	and	r17, r17
     9ba:	49 f0       	breq	.+18     	; 0x9ce <prvCopyDataToQueue+0xae>
     9bc:	11 50       	subi	r17, 0x01	; 1
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	07 c0       	rjmp	.+14     	; 0x9d0 <prvCopyDataToQueue+0xb0>
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	05 c0       	rjmp	.+10     	; 0x9d0 <prvCopyDataToQueue+0xb0>
     9c6:	80 e0       	ldi	r24, 0x00	; 0
     9c8:	03 c0       	rjmp	.+6      	; 0x9d0 <prvCopyDataToQueue+0xb0>
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	01 c0       	rjmp	.+2      	; 0x9d0 <prvCopyDataToQueue+0xb0>
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	1f 5f       	subi	r17, 0xFF	; 255
     9d2:	1e 8f       	std	Y+30, r17	; 0x1e
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	1f 91       	pop	r17
     9da:	0f 91       	pop	r16
     9dc:	08 95       	ret

000009de <prvCopyDataFromQueue>:
     9de:	fc 01       	movw	r30, r24
     9e0:	40 a1       	ldd	r20, Z+32	; 0x20
     9e2:	44 23       	and	r20, r20
     9e4:	a9 f0       	breq	.+42     	; 0xa10 <prvCopyDataFromQueue+0x32>
     9e6:	50 e0       	ldi	r21, 0x00	; 0
     9e8:	26 81       	ldd	r18, Z+6	; 0x06
     9ea:	37 81       	ldd	r19, Z+7	; 0x07
     9ec:	24 0f       	add	r18, r20
     9ee:	35 1f       	adc	r19, r21
     9f0:	37 83       	std	Z+7, r19	; 0x07
     9f2:	26 83       	std	Z+6, r18	; 0x06
     9f4:	84 81       	ldd	r24, Z+4	; 0x04
     9f6:	95 81       	ldd	r25, Z+5	; 0x05
     9f8:	28 17       	cp	r18, r24
     9fa:	39 07       	cpc	r19, r25
     9fc:	20 f0       	brcs	.+8      	; 0xa06 <prvCopyDataFromQueue+0x28>
     9fe:	80 81       	ld	r24, Z
     a00:	91 81       	ldd	r25, Z+1	; 0x01
     a02:	97 83       	std	Z+7, r25	; 0x07
     a04:	86 83       	std	Z+6, r24	; 0x06
     a06:	cb 01       	movw	r24, r22
     a08:	66 81       	ldd	r22, Z+6	; 0x06
     a0a:	77 81       	ldd	r23, Z+7	; 0x07
     a0c:	0c 94 4b 2c 	jmp	0x5896	; 0x5896 <memcpy>
     a10:	08 95       	ret

00000a12 <prvUnlockQueue>:
     a12:	1f 93       	push	r17
     a14:	cf 93       	push	r28
     a16:	df 93       	push	r29
     a18:	ec 01       	movw	r28, r24
     a1a:	0f b6       	in	r0, 0x3f	; 63
     a1c:	f8 94       	cli
     a1e:	0f 92       	push	r0
     a20:	1a a1       	ldd	r17, Y+34	; 0x22
     a22:	0b c0       	rjmp	.+22     	; 0xa3a <prvUnlockQueue+0x28>
     a24:	8b 89       	ldd	r24, Y+19	; 0x13
     a26:	88 23       	and	r24, r24
     a28:	51 f0       	breq	.+20     	; 0xa3e <prvUnlockQueue+0x2c>
     a2a:	ce 01       	movw	r24, r28
     a2c:	43 96       	adiw	r24, 0x13	; 19
     a2e:	0e 94 48 10 	call	0x2090	; 0x2090 <xTaskRemoveFromEventList>
     a32:	81 11       	cpse	r24, r1
     a34:	0e 94 84 11 	call	0x2308	; 0x2308 <vTaskMissedYield>
     a38:	11 50       	subi	r17, 0x01	; 1
     a3a:	11 16       	cp	r1, r17
     a3c:	9c f3       	brlt	.-26     	; 0xa24 <prvUnlockQueue+0x12>
     a3e:	8f ef       	ldi	r24, 0xFF	; 255
     a40:	8a a3       	std	Y+34, r24	; 0x22
     a42:	0f 90       	pop	r0
     a44:	0f be       	out	0x3f, r0	; 63
     a46:	0f b6       	in	r0, 0x3f	; 63
     a48:	f8 94       	cli
     a4a:	0f 92       	push	r0
     a4c:	19 a1       	ldd	r17, Y+33	; 0x21
     a4e:	0b c0       	rjmp	.+22     	; 0xa66 <prvUnlockQueue+0x54>
     a50:	88 85       	ldd	r24, Y+8	; 0x08
     a52:	88 23       	and	r24, r24
     a54:	51 f0       	breq	.+20     	; 0xa6a <prvUnlockQueue+0x58>
     a56:	ce 01       	movw	r24, r28
     a58:	08 96       	adiw	r24, 0x08	; 8
     a5a:	0e 94 48 10 	call	0x2090	; 0x2090 <xTaskRemoveFromEventList>
     a5e:	81 11       	cpse	r24, r1
     a60:	0e 94 84 11 	call	0x2308	; 0x2308 <vTaskMissedYield>
     a64:	11 50       	subi	r17, 0x01	; 1
     a66:	11 16       	cp	r1, r17
     a68:	9c f3       	brlt	.-26     	; 0xa50 <prvUnlockQueue+0x3e>
     a6a:	8f ef       	ldi	r24, 0xFF	; 255
     a6c:	89 a3       	std	Y+33, r24	; 0x21
     a6e:	0f 90       	pop	r0
     a70:	0f be       	out	0x3f, r0	; 63
     a72:	df 91       	pop	r29
     a74:	cf 91       	pop	r28
     a76:	1f 91       	pop	r17
     a78:	08 95       	ret

00000a7a <xQueueGenericReset>:
     a7a:	cf 93       	push	r28
     a7c:	df 93       	push	r29
     a7e:	ec 01       	movw	r28, r24
     a80:	0f b6       	in	r0, 0x3f	; 63
     a82:	f8 94       	cli
     a84:	0f 92       	push	r0
     a86:	e8 81       	ld	r30, Y
     a88:	f9 81       	ldd	r31, Y+1	; 0x01
     a8a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a8c:	28 a1       	ldd	r18, Y+32	; 0x20
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	82 9f       	mul	r24, r18
     a94:	a0 01       	movw	r20, r0
     a96:	83 9f       	mul	r24, r19
     a98:	50 0d       	add	r21, r0
     a9a:	92 9f       	mul	r25, r18
     a9c:	50 0d       	add	r21, r0
     a9e:	11 24       	eor	r1, r1
     aa0:	4e 0f       	add	r20, r30
     aa2:	5f 1f       	adc	r21, r31
     aa4:	5d 83       	std	Y+5, r21	; 0x05
     aa6:	4c 83       	std	Y+4, r20	; 0x04
     aa8:	1e 8e       	std	Y+30, r1	; 0x1e
     aaa:	fb 83       	std	Y+3, r31	; 0x03
     aac:	ea 83       	std	Y+2, r30	; 0x02
     aae:	01 97       	sbiw	r24, 0x01	; 1
     ab0:	28 9f       	mul	r18, r24
     ab2:	a0 01       	movw	r20, r0
     ab4:	29 9f       	mul	r18, r25
     ab6:	50 0d       	add	r21, r0
     ab8:	38 9f       	mul	r19, r24
     aba:	50 0d       	add	r21, r0
     abc:	11 24       	eor	r1, r1
     abe:	cf 01       	movw	r24, r30
     ac0:	84 0f       	add	r24, r20
     ac2:	95 1f       	adc	r25, r21
     ac4:	9f 83       	std	Y+7, r25	; 0x07
     ac6:	8e 83       	std	Y+6, r24	; 0x06
     ac8:	8f ef       	ldi	r24, 0xFF	; 255
     aca:	89 a3       	std	Y+33, r24	; 0x21
     acc:	8a a3       	std	Y+34, r24	; 0x22
     ace:	61 11       	cpse	r22, r1
     ad0:	0b c0       	rjmp	.+22     	; 0xae8 <xQueueGenericReset+0x6e>
     ad2:	88 85       	ldd	r24, Y+8	; 0x08
     ad4:	88 23       	and	r24, r24
     ad6:	71 f0       	breq	.+28     	; 0xaf4 <xQueueGenericReset+0x7a>
     ad8:	ce 01       	movw	r24, r28
     ada:	08 96       	adiw	r24, 0x08	; 8
     adc:	0e 94 48 10 	call	0x2090	; 0x2090 <xTaskRemoveFromEventList>
     ae0:	88 23       	and	r24, r24
     ae2:	41 f0       	breq	.+16     	; 0xaf4 <xQueueGenericReset+0x7a>
     ae4:	3a de       	rcall	.-908    	; 0x75a <vPortYield>
     ae6:	06 c0       	rjmp	.+12     	; 0xaf4 <xQueueGenericReset+0x7a>
     ae8:	ce 01       	movw	r24, r28
     aea:	08 96       	adiw	r24, 0x08	; 8
     aec:	68 dd       	rcall	.-1328   	; 0x5be <vListInitialise>
     aee:	ce 01       	movw	r24, r28
     af0:	43 96       	adiw	r24, 0x13	; 19
     af2:	65 dd       	rcall	.-1334   	; 0x5be <vListInitialise>
     af4:	0f 90       	pop	r0
     af6:	0f be       	out	0x3f, r0	; 63
     af8:	81 e0       	ldi	r24, 0x01	; 1
     afa:	df 91       	pop	r29
     afc:	cf 91       	pop	r28
     afe:	08 95       	ret

00000b00 <prvInitialiseNewQueue>:
     b00:	0f 93       	push	r16
     b02:	1f 93       	push	r17
     b04:	f8 01       	movw	r30, r16
     b06:	61 11       	cpse	r22, r1
     b08:	03 c0       	rjmp	.+6      	; 0xb10 <prvInitialiseNewQueue+0x10>
     b0a:	11 83       	std	Z+1, r17	; 0x01
     b0c:	00 83       	st	Z, r16
     b0e:	02 c0       	rjmp	.+4      	; 0xb14 <prvInitialiseNewQueue+0x14>
     b10:	51 83       	std	Z+1, r21	; 0x01
     b12:	40 83       	st	Z, r20
     b14:	87 8f       	std	Z+31, r24	; 0x1f
     b16:	60 a3       	std	Z+32, r22	; 0x20
     b18:	61 e0       	ldi	r22, 0x01	; 1
     b1a:	cf 01       	movw	r24, r30
     b1c:	ae df       	rcall	.-164    	; 0xa7a <xQueueGenericReset>
     b1e:	1f 91       	pop	r17
     b20:	0f 91       	pop	r16
     b22:	08 95       	ret

00000b24 <xQueueGenericCreate>:
     b24:	df 92       	push	r13
     b26:	ef 92       	push	r14
     b28:	ff 92       	push	r15
     b2a:	0f 93       	push	r16
     b2c:	1f 93       	push	r17
     b2e:	cf 93       	push	r28
     b30:	df 93       	push	r29
     b32:	f8 2e       	mov	r15, r24
     b34:	e6 2e       	mov	r14, r22
     b36:	d4 2e       	mov	r13, r20
     b38:	86 9f       	mul	r24, r22
     b3a:	c0 01       	movw	r24, r0
     b3c:	11 24       	eor	r1, r1
     b3e:	83 96       	adiw	r24, 0x23	; 35
     b40:	53 dc       	rcall	.-1882   	; 0x3e8 <pvPortMalloc>
     b42:	ec 01       	movw	r28, r24
     b44:	00 97       	sbiw	r24, 0x00	; 0
     b46:	41 f0       	breq	.+16     	; 0xb58 <xQueueGenericCreate+0x34>
     b48:	8c 01       	movw	r16, r24
     b4a:	2d 2d       	mov	r18, r13
     b4c:	ac 01       	movw	r20, r24
     b4e:	4d 5d       	subi	r20, 0xDD	; 221
     b50:	5f 4f       	sbci	r21, 0xFF	; 255
     b52:	6e 2d       	mov	r22, r14
     b54:	8f 2d       	mov	r24, r15
     b56:	d4 df       	rcall	.-88     	; 0xb00 <prvInitialiseNewQueue>
     b58:	ce 01       	movw	r24, r28
     b5a:	df 91       	pop	r29
     b5c:	cf 91       	pop	r28
     b5e:	1f 91       	pop	r17
     b60:	0f 91       	pop	r16
     b62:	ff 90       	pop	r15
     b64:	ef 90       	pop	r14
     b66:	df 90       	pop	r13
     b68:	08 95       	ret

00000b6a <xQueueGenericSend>:
     b6a:	cf 92       	push	r12
     b6c:	df 92       	push	r13
     b6e:	ef 92       	push	r14
     b70:	ff 92       	push	r15
     b72:	0f 93       	push	r16
     b74:	1f 93       	push	r17
     b76:	cf 93       	push	r28
     b78:	df 93       	push	r29
     b7a:	cd b7       	in	r28, 0x3d	; 61
     b7c:	de b7       	in	r29, 0x3e	; 62
     b7e:	29 97       	sbiw	r28, 0x09	; 9
     b80:	0f b6       	in	r0, 0x3f	; 63
     b82:	f8 94       	cli
     b84:	de bf       	out	0x3e, r29	; 62
     b86:	0f be       	out	0x3f, r0	; 63
     b88:	cd bf       	out	0x3d, r28	; 61
     b8a:	7c 01       	movw	r14, r24
     b8c:	6b 01       	movw	r12, r22
     b8e:	2e 83       	std	Y+6, r18	; 0x06
     b90:	3f 83       	std	Y+7, r19	; 0x07
     b92:	48 87       	std	Y+8, r20	; 0x08
     b94:	59 87       	std	Y+9, r21	; 0x09
     b96:	10 e0       	ldi	r17, 0x00	; 0
     b98:	0f b6       	in	r0, 0x3f	; 63
     b9a:	f8 94       	cli
     b9c:	0f 92       	push	r0
     b9e:	f7 01       	movw	r30, r14
     ba0:	96 8d       	ldd	r25, Z+30	; 0x1e
     ba2:	87 8d       	ldd	r24, Z+31	; 0x1f
     ba4:	98 17       	cp	r25, r24
     ba6:	10 f0       	brcs	.+4      	; 0xbac <xQueueGenericSend+0x42>
     ba8:	02 30       	cpi	r16, 0x02	; 2
     baa:	b1 f4       	brne	.+44     	; 0xbd8 <xQueueGenericSend+0x6e>
     bac:	40 2f       	mov	r20, r16
     bae:	b6 01       	movw	r22, r12
     bb0:	c7 01       	movw	r24, r14
     bb2:	b6 de       	rcall	.-660    	; 0x920 <prvCopyDataToQueue>
     bb4:	f7 01       	movw	r30, r14
     bb6:	93 89       	ldd	r25, Z+19	; 0x13
     bb8:	99 23       	and	r25, r25
     bba:	41 f0       	breq	.+16     	; 0xbcc <xQueueGenericSend+0x62>
     bbc:	c7 01       	movw	r24, r14
     bbe:	43 96       	adiw	r24, 0x13	; 19
     bc0:	0e 94 48 10 	call	0x2090	; 0x2090 <xTaskRemoveFromEventList>
     bc4:	88 23       	and	r24, r24
     bc6:	21 f0       	breq	.+8      	; 0xbd0 <xQueueGenericSend+0x66>
     bc8:	c8 dd       	rcall	.-1136   	; 0x75a <vPortYield>
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <xQueueGenericSend+0x66>
     bcc:	81 11       	cpse	r24, r1
     bce:	c5 dd       	rcall	.-1142   	; 0x75a <vPortYield>
     bd0:	0f 90       	pop	r0
     bd2:	0f be       	out	0x3f, r0	; 63
     bd4:	81 e0       	ldi	r24, 0x01	; 1
     bd6:	4a c0       	rjmp	.+148    	; 0xc6c <xQueueGenericSend+0x102>
     bd8:	8e 81       	ldd	r24, Y+6	; 0x06
     bda:	9f 81       	ldd	r25, Y+7	; 0x07
     bdc:	a8 85       	ldd	r26, Y+8	; 0x08
     bde:	b9 85       	ldd	r27, Y+9	; 0x09
     be0:	89 2b       	or	r24, r25
     be2:	8a 2b       	or	r24, r26
     be4:	8b 2b       	or	r24, r27
     be6:	21 f4       	brne	.+8      	; 0xbf0 <xQueueGenericSend+0x86>
     be8:	0f 90       	pop	r0
     bea:	0f be       	out	0x3f, r0	; 63
     bec:	80 e0       	ldi	r24, 0x00	; 0
     bee:	3e c0       	rjmp	.+124    	; 0xc6c <xQueueGenericSend+0x102>
     bf0:	11 11       	cpse	r17, r1
     bf2:	05 c0       	rjmp	.+10     	; 0xbfe <xQueueGenericSend+0x94>
     bf4:	ce 01       	movw	r24, r28
     bf6:	01 96       	adiw	r24, 0x01	; 1
     bf8:	0e 94 0d 11 	call	0x221a	; 0x221a <vTaskInternalSetTimeOutState>
     bfc:	11 e0       	ldi	r17, 0x01	; 1
     bfe:	0f 90       	pop	r0
     c00:	0f be       	out	0x3f, r0	; 63
     c02:	ec d6       	rcall	.+3544   	; 0x19dc <vTaskSuspendAll>
     c04:	0f b6       	in	r0, 0x3f	; 63
     c06:	f8 94       	cli
     c08:	0f 92       	push	r0
     c0a:	f7 01       	movw	r30, r14
     c0c:	81 a1       	ldd	r24, Z+33	; 0x21
     c0e:	8f 3f       	cpi	r24, 0xFF	; 255
     c10:	09 f4       	brne	.+2      	; 0xc14 <xQueueGenericSend+0xaa>
     c12:	11 a2       	std	Z+33, r1	; 0x21
     c14:	f7 01       	movw	r30, r14
     c16:	82 a1       	ldd	r24, Z+34	; 0x22
     c18:	8f 3f       	cpi	r24, 0xFF	; 255
     c1a:	09 f4       	brne	.+2      	; 0xc1e <xQueueGenericSend+0xb4>
     c1c:	12 a2       	std	Z+34, r1	; 0x22
     c1e:	0f 90       	pop	r0
     c20:	0f be       	out	0x3f, r0	; 63
     c22:	be 01       	movw	r22, r28
     c24:	6a 5f       	subi	r22, 0xFA	; 250
     c26:	7f 4f       	sbci	r23, 0xFF	; 255
     c28:	ce 01       	movw	r24, r28
     c2a:	01 96       	adiw	r24, 0x01	; 1
     c2c:	0e 94 1e 11 	call	0x223c	; 0x223c <xTaskCheckForTimeOut>
     c30:	81 11       	cpse	r24, r1
     c32:	18 c0       	rjmp	.+48     	; 0xc64 <xQueueGenericSend+0xfa>
     c34:	c7 01       	movw	r24, r14
     c36:	66 de       	rcall	.-820    	; 0x904 <prvIsQueueFull>
     c38:	88 23       	and	r24, r24
     c3a:	81 f0       	breq	.+32     	; 0xc5c <xQueueGenericSend+0xf2>
     c3c:	4e 81       	ldd	r20, Y+6	; 0x06
     c3e:	5f 81       	ldd	r21, Y+7	; 0x07
     c40:	68 85       	ldd	r22, Y+8	; 0x08
     c42:	79 85       	ldd	r23, Y+9	; 0x09
     c44:	c7 01       	movw	r24, r14
     c46:	08 96       	adiw	r24, 0x08	; 8
     c48:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <vTaskPlaceOnEventList>
     c4c:	c7 01       	movw	r24, r14
     c4e:	e1 de       	rcall	.-574    	; 0xa12 <prvUnlockQueue>
     c50:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <xTaskResumeAll>
     c54:	81 11       	cpse	r24, r1
     c56:	a0 cf       	rjmp	.-192    	; 0xb98 <xQueueGenericSend+0x2e>
     c58:	80 dd       	rcall	.-1280   	; 0x75a <vPortYield>
     c5a:	9e cf       	rjmp	.-196    	; 0xb98 <xQueueGenericSend+0x2e>
     c5c:	c7 01       	movw	r24, r14
     c5e:	d9 de       	rcall	.-590    	; 0xa12 <prvUnlockQueue>
     c60:	fd d7       	rcall	.+4090   	; 0x1c5c <xTaskResumeAll>
     c62:	9a cf       	rjmp	.-204    	; 0xb98 <xQueueGenericSend+0x2e>
     c64:	c7 01       	movw	r24, r14
     c66:	d5 de       	rcall	.-598    	; 0xa12 <prvUnlockQueue>
     c68:	f9 d7       	rcall	.+4082   	; 0x1c5c <xTaskResumeAll>
     c6a:	80 e0       	ldi	r24, 0x00	; 0
     c6c:	29 96       	adiw	r28, 0x09	; 9
     c6e:	0f b6       	in	r0, 0x3f	; 63
     c70:	f8 94       	cli
     c72:	de bf       	out	0x3e, r29	; 62
     c74:	0f be       	out	0x3f, r0	; 63
     c76:	cd bf       	out	0x3d, r28	; 61
     c78:	df 91       	pop	r29
     c7a:	cf 91       	pop	r28
     c7c:	1f 91       	pop	r17
     c7e:	0f 91       	pop	r16
     c80:	ff 90       	pop	r15
     c82:	ef 90       	pop	r14
     c84:	df 90       	pop	r13
     c86:	cf 90       	pop	r12
     c88:	08 95       	ret

00000c8a <xQueueGenericSendFromISR>:
     c8a:	ef 92       	push	r14
     c8c:	ff 92       	push	r15
     c8e:	0f 93       	push	r16
     c90:	1f 93       	push	r17
     c92:	cf 93       	push	r28
     c94:	df 93       	push	r29
     c96:	8a 01       	movw	r16, r20
     c98:	fc 01       	movw	r30, r24
     c9a:	56 8d       	ldd	r21, Z+30	; 0x1e
     c9c:	37 8d       	ldd	r19, Z+31	; 0x1f
     c9e:	53 17       	cp	r21, r19
     ca0:	10 f0       	brcs	.+4      	; 0xca6 <xQueueGenericSendFromISR+0x1c>
     ca2:	22 30       	cpi	r18, 0x02	; 2
     ca4:	f9 f4       	brne	.+62     	; 0xce4 <xQueueGenericSendFromISR+0x5a>
     ca6:	42 2f       	mov	r20, r18
     ca8:	78 01       	movw	r14, r16
     caa:	ec 01       	movw	r28, r24
     cac:	1a a1       	ldd	r17, Y+34	; 0x22
     cae:	8e 8d       	ldd	r24, Y+30	; 0x1e
     cb0:	ce 01       	movw	r24, r28
     cb2:	36 de       	rcall	.-916    	; 0x920 <prvCopyDataToQueue>
     cb4:	1f 3f       	cpi	r17, 0xFF	; 255
     cb6:	81 f4       	brne	.+32     	; 0xcd8 <xQueueGenericSendFromISR+0x4e>
     cb8:	8b 89       	ldd	r24, Y+19	; 0x13
     cba:	88 23       	and	r24, r24
     cbc:	a9 f0       	breq	.+42     	; 0xce8 <xQueueGenericSendFromISR+0x5e>
     cbe:	ce 01       	movw	r24, r28
     cc0:	43 96       	adiw	r24, 0x13	; 19
     cc2:	0e 94 48 10 	call	0x2090	; 0x2090 <xTaskRemoveFromEventList>
     cc6:	88 23       	and	r24, r24
     cc8:	89 f0       	breq	.+34     	; 0xcec <xQueueGenericSendFromISR+0x62>
     cca:	e1 14       	cp	r14, r1
     ccc:	f1 04       	cpc	r15, r1
     cce:	81 f0       	breq	.+32     	; 0xcf0 <xQueueGenericSendFromISR+0x66>
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	f7 01       	movw	r30, r14
     cd4:	80 83       	st	Z, r24
     cd6:	0d c0       	rjmp	.+26     	; 0xcf2 <xQueueGenericSendFromISR+0x68>
     cd8:	ff 24       	eor	r15, r15
     cda:	f3 94       	inc	r15
     cdc:	f1 0e       	add	r15, r17
     cde:	fa a2       	std	Y+34, r15	; 0x22
     ce0:	81 e0       	ldi	r24, 0x01	; 1
     ce2:	07 c0       	rjmp	.+14     	; 0xcf2 <xQueueGenericSendFromISR+0x68>
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	05 c0       	rjmp	.+10     	; 0xcf2 <xQueueGenericSendFromISR+0x68>
     ce8:	81 e0       	ldi	r24, 0x01	; 1
     cea:	03 c0       	rjmp	.+6      	; 0xcf2 <xQueueGenericSendFromISR+0x68>
     cec:	81 e0       	ldi	r24, 0x01	; 1
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <xQueueGenericSendFromISR+0x68>
     cf0:	81 e0       	ldi	r24, 0x01	; 1
     cf2:	df 91       	pop	r29
     cf4:	cf 91       	pop	r28
     cf6:	1f 91       	pop	r17
     cf8:	0f 91       	pop	r16
     cfa:	ff 90       	pop	r15
     cfc:	ef 90       	pop	r14
     cfe:	08 95       	ret

00000d00 <xQueueReceive>:
     d00:	cf 92       	push	r12
     d02:	df 92       	push	r13
     d04:	ef 92       	push	r14
     d06:	ff 92       	push	r15
     d08:	0f 93       	push	r16
     d0a:	1f 93       	push	r17
     d0c:	cf 93       	push	r28
     d0e:	df 93       	push	r29
     d10:	cd b7       	in	r28, 0x3d	; 61
     d12:	de b7       	in	r29, 0x3e	; 62
     d14:	29 97       	sbiw	r28, 0x09	; 9
     d16:	0f b6       	in	r0, 0x3f	; 63
     d18:	f8 94       	cli
     d1a:	de bf       	out	0x3e, r29	; 62
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	cd bf       	out	0x3d, r28	; 61
     d20:	8c 01       	movw	r16, r24
     d22:	6b 01       	movw	r12, r22
     d24:	2e 83       	std	Y+6, r18	; 0x06
     d26:	3f 83       	std	Y+7, r19	; 0x07
     d28:	48 87       	std	Y+8, r20	; 0x08
     d2a:	59 87       	std	Y+9, r21	; 0x09
     d2c:	e1 2c       	mov	r14, r1
     d2e:	0f b6       	in	r0, 0x3f	; 63
     d30:	f8 94       	cli
     d32:	0f 92       	push	r0
     d34:	f8 01       	movw	r30, r16
     d36:	f6 8c       	ldd	r15, Z+30	; 0x1e
     d38:	ff 20       	and	r15, r15
     d3a:	99 f0       	breq	.+38     	; 0xd62 <xQueueReceive+0x62>
     d3c:	b6 01       	movw	r22, r12
     d3e:	c8 01       	movw	r24, r16
     d40:	4e de       	rcall	.-868    	; 0x9de <prvCopyDataFromQueue>
     d42:	fa 94       	dec	r15
     d44:	f8 01       	movw	r30, r16
     d46:	f6 8e       	std	Z+30, r15	; 0x1e
     d48:	80 85       	ldd	r24, Z+8	; 0x08
     d4a:	88 23       	and	r24, r24
     d4c:	31 f0       	breq	.+12     	; 0xd5a <xQueueReceive+0x5a>
     d4e:	c8 01       	movw	r24, r16
     d50:	08 96       	adiw	r24, 0x08	; 8
     d52:	0e 94 48 10 	call	0x2090	; 0x2090 <xTaskRemoveFromEventList>
     d56:	81 11       	cpse	r24, r1
     d58:	00 dd       	rcall	.-1536   	; 0x75a <vPortYield>
     d5a:	0f 90       	pop	r0
     d5c:	0f be       	out	0x3f, r0	; 63
     d5e:	81 e0       	ldi	r24, 0x01	; 1
     d60:	4f c0       	rjmp	.+158    	; 0xe00 <xQueueReceive+0x100>
     d62:	8e 81       	ldd	r24, Y+6	; 0x06
     d64:	9f 81       	ldd	r25, Y+7	; 0x07
     d66:	a8 85       	ldd	r26, Y+8	; 0x08
     d68:	b9 85       	ldd	r27, Y+9	; 0x09
     d6a:	89 2b       	or	r24, r25
     d6c:	8a 2b       	or	r24, r26
     d6e:	8b 2b       	or	r24, r27
     d70:	21 f4       	brne	.+8      	; 0xd7a <xQueueReceive+0x7a>
     d72:	0f 90       	pop	r0
     d74:	0f be       	out	0x3f, r0	; 63
     d76:	80 e0       	ldi	r24, 0x00	; 0
     d78:	43 c0       	rjmp	.+134    	; 0xe00 <xQueueReceive+0x100>
     d7a:	e1 10       	cpse	r14, r1
     d7c:	06 c0       	rjmp	.+12     	; 0xd8a <xQueueReceive+0x8a>
     d7e:	ce 01       	movw	r24, r28
     d80:	01 96       	adiw	r24, 0x01	; 1
     d82:	0e 94 0d 11 	call	0x221a	; 0x221a <vTaskInternalSetTimeOutState>
     d86:	ee 24       	eor	r14, r14
     d88:	e3 94       	inc	r14
     d8a:	0f 90       	pop	r0
     d8c:	0f be       	out	0x3f, r0	; 63
     d8e:	26 d6       	rcall	.+3148   	; 0x19dc <vTaskSuspendAll>
     d90:	0f b6       	in	r0, 0x3f	; 63
     d92:	f8 94       	cli
     d94:	0f 92       	push	r0
     d96:	f8 01       	movw	r30, r16
     d98:	81 a1       	ldd	r24, Z+33	; 0x21
     d9a:	8f 3f       	cpi	r24, 0xFF	; 255
     d9c:	09 f4       	brne	.+2      	; 0xda0 <xQueueReceive+0xa0>
     d9e:	11 a2       	std	Z+33, r1	; 0x21
     da0:	f8 01       	movw	r30, r16
     da2:	82 a1       	ldd	r24, Z+34	; 0x22
     da4:	8f 3f       	cpi	r24, 0xFF	; 255
     da6:	09 f4       	brne	.+2      	; 0xdaa <xQueueReceive+0xaa>
     da8:	12 a2       	std	Z+34, r1	; 0x22
     daa:	0f 90       	pop	r0
     dac:	0f be       	out	0x3f, r0	; 63
     dae:	be 01       	movw	r22, r28
     db0:	6a 5f       	subi	r22, 0xFA	; 250
     db2:	7f 4f       	sbci	r23, 0xFF	; 255
     db4:	ce 01       	movw	r24, r28
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	0e 94 1e 11 	call	0x223c	; 0x223c <xTaskCheckForTimeOut>
     dbc:	81 11       	cpse	r24, r1
     dbe:	17 c0       	rjmp	.+46     	; 0xdee <xQueueReceive+0xee>
     dc0:	c8 01       	movw	r24, r16
     dc2:	93 dd       	rcall	.-1242   	; 0x8ea <prvIsQueueEmpty>
     dc4:	88 23       	and	r24, r24
     dc6:	79 f0       	breq	.+30     	; 0xde6 <xQueueReceive+0xe6>
     dc8:	4e 81       	ldd	r20, Y+6	; 0x06
     dca:	5f 81       	ldd	r21, Y+7	; 0x07
     dcc:	68 85       	ldd	r22, Y+8	; 0x08
     dce:	79 85       	ldd	r23, Y+9	; 0x09
     dd0:	c8 01       	movw	r24, r16
     dd2:	43 96       	adiw	r24, 0x13	; 19
     dd4:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <vTaskPlaceOnEventList>
     dd8:	c8 01       	movw	r24, r16
     dda:	1b de       	rcall	.-970    	; 0xa12 <prvUnlockQueue>
     ddc:	3f d7       	rcall	.+3710   	; 0x1c5c <xTaskResumeAll>
     dde:	81 11       	cpse	r24, r1
     de0:	a6 cf       	rjmp	.-180    	; 0xd2e <xQueueReceive+0x2e>
     de2:	bb dc       	rcall	.-1674   	; 0x75a <vPortYield>
     de4:	a4 cf       	rjmp	.-184    	; 0xd2e <xQueueReceive+0x2e>
     de6:	c8 01       	movw	r24, r16
     de8:	14 de       	rcall	.-984    	; 0xa12 <prvUnlockQueue>
     dea:	38 d7       	rcall	.+3696   	; 0x1c5c <xTaskResumeAll>
     dec:	a0 cf       	rjmp	.-192    	; 0xd2e <xQueueReceive+0x2e>
     dee:	c8 01       	movw	r24, r16
     df0:	10 de       	rcall	.-992    	; 0xa12 <prvUnlockQueue>
     df2:	34 d7       	rcall	.+3688   	; 0x1c5c <xTaskResumeAll>
     df4:	c8 01       	movw	r24, r16
     df6:	79 dd       	rcall	.-1294   	; 0x8ea <prvIsQueueEmpty>
     df8:	88 23       	and	r24, r24
     dfa:	09 f4       	brne	.+2      	; 0xdfe <xQueueReceive+0xfe>
     dfc:	98 cf       	rjmp	.-208    	; 0xd2e <xQueueReceive+0x2e>
     dfe:	80 e0       	ldi	r24, 0x00	; 0
     e00:	29 96       	adiw	r28, 0x09	; 9
     e02:	0f b6       	in	r0, 0x3f	; 63
     e04:	f8 94       	cli
     e06:	de bf       	out	0x3e, r29	; 62
     e08:	0f be       	out	0x3f, r0	; 63
     e0a:	cd bf       	out	0x3d, r28	; 61
     e0c:	df 91       	pop	r29
     e0e:	cf 91       	pop	r28
     e10:	1f 91       	pop	r17
     e12:	0f 91       	pop	r16
     e14:	ff 90       	pop	r15
     e16:	ef 90       	pop	r14
     e18:	df 90       	pop	r13
     e1a:	cf 90       	pop	r12
     e1c:	08 95       	ret

00000e1e <vQueueWaitForMessageRestricted>:
#if ( configUSE_TIMERS == 1 )

    void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
                                         TickType_t xTicksToWait,
                                         const BaseType_t xWaitIndefinitely )
    {
     e1e:	cf 93       	push	r28
     e20:	df 93       	push	r29
     e22:	ec 01       	movw	r28, r24
         *  will not actually cause the task to block, just place it on a blocked
         *  list.  It will not block until the scheduler is unlocked - at which
         *  time a yield will be performed.  If an item is added to the queue while
         *  the queue is locked, and the calling task blocks on the queue, then the
         *  calling task will be immediately unblocked when the queue is unlocked. */
        prvLockQueue( pxQueue );
     e24:	0f b6       	in	r0, 0x3f	; 63
     e26:	f8 94       	cli
     e28:	0f 92       	push	r0
     e2a:	89 a1       	ldd	r24, Y+33	; 0x21
     e2c:	8f 3f       	cpi	r24, 0xFF	; 255
     e2e:	09 f4       	brne	.+2      	; 0xe32 <vQueueWaitForMessageRestricted+0x14>
     e30:	19 a2       	std	Y+33, r1	; 0x21
     e32:	8a a1       	ldd	r24, Y+34	; 0x22
     e34:	8f 3f       	cpi	r24, 0xFF	; 255
     e36:	09 f4       	brne	.+2      	; 0xe3a <vQueueWaitForMessageRestricted+0x1c>
     e38:	1a a2       	std	Y+34, r1	; 0x22
     e3a:	0f 90       	pop	r0
     e3c:	0f be       	out	0x3f, r0	; 63

        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
     e3e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     e40:	81 11       	cpse	r24, r1
     e42:	04 c0       	rjmp	.+8      	; 0xe4c <vQueueWaitForMessageRestricted+0x2e>
        {
            /* There is nothing in the queue, block for the specified period. */
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
     e44:	ce 01       	movw	r24, r28
     e46:	43 96       	adiw	r24, 0x13	; 19
     e48:	0e 94 06 10 	call	0x200c	; 0x200c <vTaskPlaceOnEventListRestricted>
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        prvUnlockQueue( pxQueue );
     e4c:	ce 01       	movw	r24, r28
     e4e:	e1 dd       	rcall	.-1086   	; 0xa12 <prvUnlockQueue>
    }
     e50:	df 91       	pop	r29
     e52:	cf 91       	pop	r28
     e54:	08 95       	ret

00000e56 <prvBytesInBuffer>:

    configASSERT( pxStreamBuffer );

    xReturn = prvBytesInBuffer( pxStreamBuffer );
    return xReturn;
}
     e56:	fc 01       	movw	r30, r24
     e58:	44 81       	ldd	r20, Z+4	; 0x04
     e5a:	55 81       	ldd	r21, Z+5	; 0x05
     e5c:	22 81       	ldd	r18, Z+2	; 0x02
     e5e:	33 81       	ldd	r19, Z+3	; 0x03
     e60:	24 0f       	add	r18, r20
     e62:	35 1f       	adc	r19, r21
     e64:	80 81       	ld	r24, Z
     e66:	91 81       	ldd	r25, Z+1	; 0x01
     e68:	b9 01       	movw	r22, r18
     e6a:	68 1b       	sub	r22, r24
     e6c:	79 0b       	sbc	r23, r25
     e6e:	cb 01       	movw	r24, r22
     e70:	64 17       	cp	r22, r20
     e72:	75 07       	cpc	r23, r21
     e74:	10 f0       	brcs	.+4      	; 0xe7a <prvBytesInBuffer+0x24>
     e76:	84 1b       	sub	r24, r20
     e78:	95 0b       	sbc	r25, r21
     e7a:	08 95       	ret

00000e7c <prvInitialiseNewStreamBuffer>:
     e7c:	0f 93       	push	r16
     e7e:	fc 01       	movw	r30, r24
     e80:	8f e0       	ldi	r24, 0x0F	; 15
     e82:	df 01       	movw	r26, r30
     e84:	1d 92       	st	X+, r1
     e86:	8a 95       	dec	r24
     e88:	e9 f7       	brne	.-6      	; 0xe84 <prvInitialiseNewStreamBuffer+0x8>
     e8a:	75 87       	std	Z+13, r23	; 0x0d
     e8c:	64 87       	std	Z+12, r22	; 0x0c
     e8e:	55 83       	std	Z+5, r21	; 0x05
     e90:	44 83       	std	Z+4, r20	; 0x04
     e92:	37 83       	std	Z+7, r19	; 0x07
     e94:	26 83       	std	Z+6, r18	; 0x06
     e96:	06 87       	std	Z+14, r16	; 0x0e
     e98:	0f 91       	pop	r16
     e9a:	08 95       	ret

00000e9c <prvWriteBytesToBuffer>:
     e9c:	af 92       	push	r10
     e9e:	bf 92       	push	r11
     ea0:	cf 92       	push	r12
     ea2:	df 92       	push	r13
     ea4:	ef 92       	push	r14
     ea6:	ff 92       	push	r15
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	cf 93       	push	r28
     eae:	df 93       	push	r29
     eb0:	6c 01       	movw	r12, r24
     eb2:	5b 01       	movw	r10, r22
     eb4:	7a 01       	movw	r14, r20
     eb6:	fc 01       	movw	r30, r24
     eb8:	c2 81       	ldd	r28, Z+2	; 0x02
     eba:	d3 81       	ldd	r29, Z+3	; 0x03
     ebc:	04 81       	ldd	r16, Z+4	; 0x04
     ebe:	15 81       	ldd	r17, Z+5	; 0x05
     ec0:	0c 1b       	sub	r16, r28
     ec2:	1d 0b       	sbc	r17, r29
     ec4:	40 17       	cp	r20, r16
     ec6:	51 07       	cpc	r21, r17
     ec8:	08 f4       	brcc	.+2      	; 0xecc <prvWriteBytesToBuffer+0x30>
     eca:	8a 01       	movw	r16, r20
     ecc:	f6 01       	movw	r30, r12
     ece:	84 85       	ldd	r24, Z+12	; 0x0c
     ed0:	95 85       	ldd	r25, Z+13	; 0x0d
     ed2:	a8 01       	movw	r20, r16
     ed4:	b5 01       	movw	r22, r10
     ed6:	8c 0f       	add	r24, r28
     ed8:	9d 1f       	adc	r25, r29
     eda:	0e 94 4b 2c 	call	0x5896	; 0x5896 <memcpy>
     ede:	0e 15       	cp	r16, r14
     ee0:	1f 05       	cpc	r17, r15
     ee2:	58 f4       	brcc	.+22     	; 0xefa <prvWriteBytesToBuffer+0x5e>
     ee4:	a7 01       	movw	r20, r14
     ee6:	40 1b       	sub	r20, r16
     ee8:	51 0b       	sbc	r21, r17
     eea:	b5 01       	movw	r22, r10
     eec:	60 0f       	add	r22, r16
     eee:	71 1f       	adc	r23, r17
     ef0:	f6 01       	movw	r30, r12
     ef2:	84 85       	ldd	r24, Z+12	; 0x0c
     ef4:	95 85       	ldd	r25, Z+13	; 0x0d
     ef6:	0e 94 4b 2c 	call	0x5896	; 0x5896 <memcpy>
     efa:	ce 01       	movw	r24, r28
     efc:	8e 0d       	add	r24, r14
     efe:	9f 1d       	adc	r25, r15
     f00:	f6 01       	movw	r30, r12
     f02:	24 81       	ldd	r18, Z+4	; 0x04
     f04:	35 81       	ldd	r19, Z+5	; 0x05
     f06:	82 17       	cp	r24, r18
     f08:	93 07       	cpc	r25, r19
     f0a:	10 f0       	brcs	.+4      	; 0xf10 <prvWriteBytesToBuffer+0x74>
     f0c:	82 1b       	sub	r24, r18
     f0e:	93 0b       	sbc	r25, r19
     f10:	f6 01       	movw	r30, r12
     f12:	93 83       	std	Z+3, r25	; 0x03
     f14:	82 83       	std	Z+2, r24	; 0x02
     f16:	c7 01       	movw	r24, r14
     f18:	df 91       	pop	r29
     f1a:	cf 91       	pop	r28
     f1c:	1f 91       	pop	r17
     f1e:	0f 91       	pop	r16
     f20:	ff 90       	pop	r15
     f22:	ef 90       	pop	r14
     f24:	df 90       	pop	r13
     f26:	cf 90       	pop	r12
     f28:	bf 90       	pop	r11
     f2a:	af 90       	pop	r10
     f2c:	08 95       	ret

00000f2e <prvWriteMessageToBuffer>:
     f2e:	cf 92       	push	r12
     f30:	df 92       	push	r13
     f32:	ef 92       	push	r14
     f34:	ff 92       	push	r15
     f36:	0f 93       	push	r16
     f38:	1f 93       	push	r17
     f3a:	cf 93       	push	r28
     f3c:	df 93       	push	r29
     f3e:	1f 92       	push	r1
     f40:	1f 92       	push	r1
     f42:	cd b7       	in	r28, 0x3d	; 61
     f44:	de b7       	in	r29, 0x3e	; 62
     f46:	7c 01       	movw	r14, r24
     f48:	6b 01       	movw	r12, r22
     f4a:	5a 83       	std	Y+2, r21	; 0x02
     f4c:	49 83       	std	Y+1, r20	; 0x01
     f4e:	21 15       	cp	r18, r1
     f50:	31 05       	cpc	r19, r1
     f52:	c1 f0       	breq	.+48     	; 0xf84 <prvWriteMessageToBuffer+0x56>
     f54:	fc 01       	movw	r30, r24
     f56:	86 85       	ldd	r24, Z+14	; 0x0e
     f58:	80 fd       	sbrc	r24, 0
     f5a:	08 c0       	rjmp	.+16     	; 0xf6c <prvWriteMessageToBuffer+0x3e>
     f5c:	42 17       	cp	r20, r18
     f5e:	53 07       	cpc	r21, r19
     f60:	08 f4       	brcc	.+2      	; 0xf64 <prvWriteMessageToBuffer+0x36>
     f62:	9a 01       	movw	r18, r20
     f64:	3a 83       	std	Y+2, r19	; 0x02
     f66:	29 83       	std	Y+1, r18	; 0x01
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	0f c0       	rjmp	.+30     	; 0xf8a <prvWriteMessageToBuffer+0x5c>
     f6c:	20 17       	cp	r18, r16
     f6e:	31 07       	cpc	r19, r17
     f70:	58 f0       	brcs	.+22     	; 0xf88 <prvWriteMessageToBuffer+0x5a>
     f72:	42 e0       	ldi	r20, 0x02	; 2
     f74:	50 e0       	ldi	r21, 0x00	; 0
     f76:	be 01       	movw	r22, r28
     f78:	6f 5f       	subi	r22, 0xFF	; 255
     f7a:	7f 4f       	sbci	r23, 0xFF	; 255
     f7c:	c7 01       	movw	r24, r14
     f7e:	8e df       	rcall	.-228    	; 0xe9c <prvWriteBytesToBuffer>
     f80:	81 e0       	ldi	r24, 0x01	; 1
     f82:	03 c0       	rjmp	.+6      	; 0xf8a <prvWriteMessageToBuffer+0x5c>
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	01 c0       	rjmp	.+2      	; 0xf8a <prvWriteMessageToBuffer+0x5c>
     f88:	80 e0       	ldi	r24, 0x00	; 0
     f8a:	88 23       	and	r24, r24
     f8c:	31 f0       	breq	.+12     	; 0xf9a <prvWriteMessageToBuffer+0x6c>
     f8e:	49 81       	ldd	r20, Y+1	; 0x01
     f90:	5a 81       	ldd	r21, Y+2	; 0x02
     f92:	b6 01       	movw	r22, r12
     f94:	c7 01       	movw	r24, r14
     f96:	82 df       	rcall	.-252    	; 0xe9c <prvWriteBytesToBuffer>
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <prvWriteMessageToBuffer+0x70>
     f9a:	80 e0       	ldi	r24, 0x00	; 0
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	0f 90       	pop	r0
     fa0:	0f 90       	pop	r0
     fa2:	df 91       	pop	r29
     fa4:	cf 91       	pop	r28
     fa6:	1f 91       	pop	r17
     fa8:	0f 91       	pop	r16
     faa:	ff 90       	pop	r15
     fac:	ef 90       	pop	r14
     fae:	df 90       	pop	r13
     fb0:	cf 90       	pop	r12
     fb2:	08 95       	ret

00000fb4 <prvReadBytesFromBuffer>:
     fb4:	af 92       	push	r10
     fb6:	bf 92       	push	r11
     fb8:	cf 92       	push	r12
     fba:	df 92       	push	r13
     fbc:	ef 92       	push	r14
     fbe:	ff 92       	push	r15
     fc0:	0f 93       	push	r16
     fc2:	1f 93       	push	r17
     fc4:	cf 93       	push	r28
     fc6:	df 93       	push	r29
     fc8:	7c 01       	movw	r14, r24
     fca:	5b 01       	movw	r10, r22
     fcc:	e9 01       	movw	r28, r18
     fce:	42 17       	cp	r20, r18
     fd0:	53 07       	cpc	r21, r19
     fd2:	08 f4       	brcc	.+2      	; 0xfd6 <prvReadBytesFromBuffer+0x22>
     fd4:	ea 01       	movw	r28, r20
     fd6:	20 97       	sbiw	r28, 0x00	; 0
     fd8:	81 f1       	breq	.+96     	; 0x103a <__EEPROM_REGION_LENGTH__+0x3a>
     fda:	f7 01       	movw	r30, r14
     fdc:	00 81       	ld	r16, Z
     fde:	11 81       	ldd	r17, Z+1	; 0x01
     fe0:	84 81       	ldd	r24, Z+4	; 0x04
     fe2:	95 81       	ldd	r25, Z+5	; 0x05
     fe4:	80 1b       	sub	r24, r16
     fe6:	91 0b       	sbc	r25, r17
     fe8:	6e 01       	movw	r12, r28
     fea:	8c 17       	cp	r24, r28
     fec:	9d 07       	cpc	r25, r29
     fee:	08 f4       	brcc	.+2      	; 0xff2 <prvReadBytesFromBuffer+0x3e>
     ff0:	6c 01       	movw	r12, r24
     ff2:	f7 01       	movw	r30, r14
     ff4:	64 85       	ldd	r22, Z+12	; 0x0c
     ff6:	75 85       	ldd	r23, Z+13	; 0x0d
     ff8:	60 0f       	add	r22, r16
     ffa:	71 1f       	adc	r23, r17
     ffc:	a6 01       	movw	r20, r12
     ffe:	c5 01       	movw	r24, r10
    1000:	0e 94 4b 2c 	call	0x5896	; 0x5896 <memcpy>
    1004:	cc 16       	cp	r12, r28
    1006:	dd 06       	cpc	r13, r29
    1008:	58 f4       	brcc	.+22     	; 0x1020 <__EEPROM_REGION_LENGTH__+0x20>
    100a:	ae 01       	movw	r20, r28
    100c:	4c 19       	sub	r20, r12
    100e:	5d 09       	sbc	r21, r13
    1010:	f7 01       	movw	r30, r14
    1012:	64 85       	ldd	r22, Z+12	; 0x0c
    1014:	75 85       	ldd	r23, Z+13	; 0x0d
    1016:	c5 01       	movw	r24, r10
    1018:	8c 0d       	add	r24, r12
    101a:	9d 1d       	adc	r25, r13
    101c:	0e 94 4b 2c 	call	0x5896	; 0x5896 <memcpy>
    1020:	0c 0f       	add	r16, r28
    1022:	1d 1f       	adc	r17, r29
    1024:	f7 01       	movw	r30, r14
    1026:	84 81       	ldd	r24, Z+4	; 0x04
    1028:	95 81       	ldd	r25, Z+5	; 0x05
    102a:	08 17       	cp	r16, r24
    102c:	19 07       	cpc	r17, r25
    102e:	10 f0       	brcs	.+4      	; 0x1034 <__EEPROM_REGION_LENGTH__+0x34>
    1030:	08 1b       	sub	r16, r24
    1032:	19 0b       	sbc	r17, r25
    1034:	f7 01       	movw	r30, r14
    1036:	11 83       	std	Z+1, r17	; 0x01
    1038:	00 83       	st	Z, r16
    103a:	ce 01       	movw	r24, r28
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	1f 91       	pop	r17
    1042:	0f 91       	pop	r16
    1044:	ff 90       	pop	r15
    1046:	ef 90       	pop	r14
    1048:	df 90       	pop	r13
    104a:	cf 90       	pop	r12
    104c:	bf 90       	pop	r11
    104e:	af 90       	pop	r10
    1050:	08 95       	ret

00001052 <prvReadMessageFromBuffer>:
    1052:	6f 92       	push	r6
    1054:	7f 92       	push	r7
    1056:	8f 92       	push	r8
    1058:	9f 92       	push	r9
    105a:	af 92       	push	r10
    105c:	bf 92       	push	r11
    105e:	cf 92       	push	r12
    1060:	df 92       	push	r13
    1062:	ef 92       	push	r14
    1064:	ff 92       	push	r15
    1066:	0f 93       	push	r16
    1068:	1f 93       	push	r17
    106a:	cf 93       	push	r28
    106c:	df 93       	push	r29
    106e:	1f 92       	push	r1
    1070:	1f 92       	push	r1
    1072:	cd b7       	in	r28, 0x3d	; 61
    1074:	de b7       	in	r29, 0x3e	; 62
    1076:	6c 01       	movw	r12, r24
    1078:	4b 01       	movw	r8, r22
    107a:	5a 01       	movw	r10, r20
    107c:	79 01       	movw	r14, r18
    107e:	01 15       	cp	r16, r1
    1080:	11 05       	cpc	r17, r1
    1082:	b1 f0       	breq	.+44     	; 0x10b0 <prvReadMessageFromBuffer+0x5e>
    1084:	fc 01       	movw	r30, r24
    1086:	60 80       	ld	r6, Z
    1088:	71 80       	ldd	r7, Z+1	; 0x01
    108a:	a8 01       	movw	r20, r16
    108c:	be 01       	movw	r22, r28
    108e:	6f 5f       	subi	r22, 0xFF	; 255
    1090:	7f 4f       	sbci	r23, 0xFF	; 255
    1092:	90 df       	rcall	.-224    	; 0xfb4 <prvReadBytesFromBuffer>
    1094:	89 81       	ldd	r24, Y+1	; 0x01
    1096:	9a 81       	ldd	r25, Y+2	; 0x02
    1098:	e0 1a       	sub	r14, r16
    109a:	f1 0a       	sbc	r15, r17
    109c:	a8 16       	cp	r10, r24
    109e:	b9 06       	cpc	r11, r25
    10a0:	30 f4       	brcc	.+12     	; 0x10ae <prvReadMessageFromBuffer+0x5c>
    10a2:	f6 01       	movw	r30, r12
    10a4:	71 82       	std	Z+1, r7	; 0x01
    10a6:	60 82       	st	Z, r6
    10a8:	a1 2c       	mov	r10, r1
    10aa:	b1 2c       	mov	r11, r1
    10ac:	01 c0       	rjmp	.+2      	; 0x10b0 <prvReadMessageFromBuffer+0x5e>
    10ae:	5c 01       	movw	r10, r24
    10b0:	97 01       	movw	r18, r14
    10b2:	a5 01       	movw	r20, r10
    10b4:	b4 01       	movw	r22, r8
    10b6:	c6 01       	movw	r24, r12
    10b8:	7d df       	rcall	.-262    	; 0xfb4 <prvReadBytesFromBuffer>
    10ba:	0f 90       	pop	r0
    10bc:	0f 90       	pop	r0
    10be:	df 91       	pop	r29
    10c0:	cf 91       	pop	r28
    10c2:	1f 91       	pop	r17
    10c4:	0f 91       	pop	r16
    10c6:	ff 90       	pop	r15
    10c8:	ef 90       	pop	r14
    10ca:	df 90       	pop	r13
    10cc:	cf 90       	pop	r12
    10ce:	bf 90       	pop	r11
    10d0:	af 90       	pop	r10
    10d2:	9f 90       	pop	r9
    10d4:	8f 90       	pop	r8
    10d6:	7f 90       	pop	r7
    10d8:	6f 90       	pop	r6
    10da:	08 95       	ret

000010dc <xStreamBufferGenericCreate>:
    10dc:	cf 92       	push	r12
    10de:	df 92       	push	r13
    10e0:	ef 92       	push	r14
    10e2:	ff 92       	push	r15
    10e4:	0f 93       	push	r16
    10e6:	cf 93       	push	r28
    10e8:	df 93       	push	r29
    10ea:	ec 01       	movw	r28, r24
    10ec:	6b 01       	movw	r12, r22
    10ee:	41 30       	cpi	r20, 0x01	; 1
    10f0:	11 f4       	brne	.+4      	; 0x10f6 <xStreamBufferGenericCreate+0x1a>
    10f2:	01 e0       	ldi	r16, 0x01	; 1
    10f4:	01 c0       	rjmp	.+2      	; 0x10f8 <xStreamBufferGenericCreate+0x1c>
    10f6:	00 e0       	ldi	r16, 0x00	; 0
    10f8:	c1 14       	cp	r12, r1
    10fa:	d1 04       	cpc	r13, r1
    10fc:	19 f4       	brne	.+6      	; 0x1104 <xStreamBufferGenericCreate+0x28>
    10fe:	cc 24       	eor	r12, r12
    1100:	c3 94       	inc	r12
    1102:	d1 2c       	mov	r13, r1
    1104:	ce 01       	movw	r24, r28
    1106:	40 96       	adiw	r24, 0x10	; 16
    1108:	c8 17       	cp	r28, r24
    110a:	d9 07       	cpc	r29, r25
    110c:	20 f4       	brcc	.+8      	; 0x1116 <xStreamBufferGenericCreate+0x3a>
    110e:	21 96       	adiw	r28, 0x01	; 1
    1110:	6b d9       	rcall	.-3370   	; 0x3e8 <pvPortMalloc>
    1112:	7c 01       	movw	r14, r24
    1114:	02 c0       	rjmp	.+4      	; 0x111a <xStreamBufferGenericCreate+0x3e>
    1116:	e1 2c       	mov	r14, r1
    1118:	f1 2c       	mov	r15, r1
    111a:	e1 14       	cp	r14, r1
    111c:	f1 04       	cpc	r15, r1
    111e:	39 f0       	breq	.+14     	; 0x112e <xStreamBufferGenericCreate+0x52>
    1120:	96 01       	movw	r18, r12
    1122:	ae 01       	movw	r20, r28
    1124:	b7 01       	movw	r22, r14
    1126:	61 5f       	subi	r22, 0xF1	; 241
    1128:	7f 4f       	sbci	r23, 0xFF	; 255
    112a:	c7 01       	movw	r24, r14
    112c:	a7 de       	rcall	.-690    	; 0xe7c <prvInitialiseNewStreamBuffer>
    112e:	c7 01       	movw	r24, r14
    1130:	df 91       	pop	r29
    1132:	cf 91       	pop	r28
    1134:	0f 91       	pop	r16
    1136:	ff 90       	pop	r15
    1138:	ef 90       	pop	r14
    113a:	df 90       	pop	r13
    113c:	cf 90       	pop	r12
    113e:	08 95       	ret

00001140 <xStreamBufferReset>:
    1140:	0f 93       	push	r16
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	f8 94       	cli
    1146:	0f 92       	push	r0
    1148:	fc 01       	movw	r30, r24
    114a:	20 85       	ldd	r18, Z+8	; 0x08
    114c:	31 85       	ldd	r19, Z+9	; 0x09
    114e:	23 2b       	or	r18, r19
    1150:	71 f4       	brne	.+28     	; 0x116e <xStreamBufferReset+0x2e>
    1152:	22 85       	ldd	r18, Z+10	; 0x0a
    1154:	33 85       	ldd	r19, Z+11	; 0x0b
    1156:	23 2b       	or	r18, r19
    1158:	61 f4       	brne	.+24     	; 0x1172 <xStreamBufferReset+0x32>
    115a:	26 81       	ldd	r18, Z+6	; 0x06
    115c:	37 81       	ldd	r19, Z+7	; 0x07
    115e:	44 81       	ldd	r20, Z+4	; 0x04
    1160:	55 81       	ldd	r21, Z+5	; 0x05
    1162:	64 85       	ldd	r22, Z+12	; 0x0c
    1164:	75 85       	ldd	r23, Z+13	; 0x0d
    1166:	06 85       	ldd	r16, Z+14	; 0x0e
    1168:	89 de       	rcall	.-750    	; 0xe7c <prvInitialiseNewStreamBuffer>
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	03 c0       	rjmp	.+6      	; 0x1174 <xStreamBufferReset+0x34>
    116e:	80 e0       	ldi	r24, 0x00	; 0
    1170:	01 c0       	rjmp	.+2      	; 0x1174 <xStreamBufferReset+0x34>
    1172:	80 e0       	ldi	r24, 0x00	; 0
    1174:	0f 90       	pop	r0
    1176:	0f be       	out	0x3f, r0	; 63
    1178:	0f 91       	pop	r16
    117a:	08 95       	ret

0000117c <xStreamBufferSpacesAvailable>:
    117c:	fc 01       	movw	r30, r24
    117e:	24 81       	ldd	r18, Z+4	; 0x04
    1180:	35 81       	ldd	r19, Z+5	; 0x05
    1182:	80 81       	ld	r24, Z
    1184:	91 81       	ldd	r25, Z+1	; 0x01
    1186:	82 0f       	add	r24, r18
    1188:	93 1f       	adc	r25, r19
    118a:	42 81       	ldd	r20, Z+2	; 0x02
    118c:	53 81       	ldd	r21, Z+3	; 0x03
    118e:	84 1b       	sub	r24, r20
    1190:	95 0b       	sbc	r25, r21
    1192:	01 97       	sbiw	r24, 0x01	; 1
    1194:	82 17       	cp	r24, r18
    1196:	93 07       	cpc	r25, r19
    1198:	10 f0       	brcs	.+4      	; 0x119e <xStreamBufferSpacesAvailable+0x22>
    119a:	82 1b       	sub	r24, r18
    119c:	93 0b       	sbc	r25, r19
    119e:	08 95       	ret

000011a0 <xStreamBufferSend>:

size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,
                          const void * pvTxData,
                          size_t xDataLengthBytes,
                          TickType_t xTicksToWait )
{
    11a0:	2f 92       	push	r2
    11a2:	3f 92       	push	r3
    11a4:	4f 92       	push	r4
    11a6:	5f 92       	push	r5
    11a8:	6f 92       	push	r6
    11aa:	7f 92       	push	r7
    11ac:	8f 92       	push	r8
    11ae:	9f 92       	push	r9
    11b0:	af 92       	push	r10
    11b2:	bf 92       	push	r11
    11b4:	cf 92       	push	r12
    11b6:	df 92       	push	r13
    11b8:	ef 92       	push	r14
    11ba:	ff 92       	push	r15
    11bc:	0f 93       	push	r16
    11be:	1f 93       	push	r17
    11c0:	cf 93       	push	r28
    11c2:	df 93       	push	r29
    11c4:	cd b7       	in	r28, 0x3d	; 61
    11c6:	de b7       	in	r29, 0x3e	; 62
    11c8:	2b 97       	sbiw	r28, 0x0b	; 11
    11ca:	0f b6       	in	r0, 0x3f	; 63
    11cc:	f8 94       	cli
    11ce:	de bf       	out	0x3e, r29	; 62
    11d0:	0f be       	out	0x3f, r0	; 63
    11d2:	cd bf       	out	0x3d, r28	; 61
    11d4:	4c 01       	movw	r8, r24
    11d6:	7b 87       	std	Y+11, r23	; 0x0b
    11d8:	6a 87       	std	Y+10, r22	; 0x0a
    11da:	1a 01       	movw	r2, r20
    11dc:	0e 83       	std	Y+6, r16	; 0x06
    11de:	1f 83       	std	Y+7, r17	; 0x07
    11e0:	28 87       	std	Y+8, r18	; 0x08
    11e2:	39 87       	std	Y+9, r19	; 0x09
    size_t xRequiredSpace = xDataLengthBytes;
    TimeOut_t xTimeOut;

    /* The maximum amount of space a stream buffer will ever report is its length
     * minus 1. */
    const size_t xMaxReportedSpace = pxStreamBuffer->xLength - ( size_t ) 1;
    11e4:	fc 01       	movw	r30, r24
    11e6:	84 81       	ldd	r24, Z+4	; 0x04
    11e8:	95 81       	ldd	r25, Z+5	; 0x05
    11ea:	01 97       	sbiw	r24, 0x01	; 1

    /* This send function is used to write to both message buffers and stream
     * buffers.  If this is a message buffer then the space needed must be
     * increased by the amount of bytes needed to store the length of the
     * message. */
    if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
    11ec:	26 85       	ldd	r18, Z+14	; 0x0e
    11ee:	20 ff       	sbrs	r18, 0
    11f0:	0c c0       	rjmp	.+24     	; 0x120a <xStreamBufferSend+0x6a>
    {
        xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
    11f2:	2a 01       	movw	r4, r20
    11f4:	f2 e0       	ldi	r31, 0x02	; 2
    11f6:	4f 0e       	add	r4, r31
    11f8:	51 1c       	adc	r5, r1
        /* Overflow? */
        configASSERT( xRequiredSpace > xDataLengthBytes );

        /* If this is a message buffer then it must be possible to write the
         * whole message. */
        if( xRequiredSpace > xMaxReportedSpace )
    11fa:	84 15       	cp	r24, r4
    11fc:	95 05       	cpc	r25, r5
    11fe:	58 f4       	brcc	.+22     	; 0x1216 <xStreamBufferSend+0x76>
        {
            /* The message would not fit even if the entire buffer was empty,
             * so don't wait for space. */
            xTicksToWait = ( TickType_t ) 0;
    1200:	1e 82       	std	Y+6, r1	; 0x06
    1202:	1f 82       	std	Y+7, r1	; 0x07
    1204:	18 86       	std	Y+8, r1	; 0x08
    1206:	19 86       	std	Y+9, r1	; 0x09
    1208:	06 c0       	rjmp	.+12     	; 0x1216 <xStreamBufferSend+0x76>
    else
    {
        /* If this is a stream buffer then it is acceptable to write only part
         * of the message to the buffer.  Cap the length to the total length of
         * the buffer. */
        if( xRequiredSpace > xMaxReportedSpace )
    120a:	84 17       	cp	r24, r20
    120c:	95 07       	cpc	r25, r21
    120e:	10 f0       	brcs	.+4      	; 0x1214 <xStreamBufferSend+0x74>
                          size_t xDataLengthBytes,
                          TickType_t xTicksToWait )
{
    StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
    size_t xReturn, xSpace = 0;
    size_t xRequiredSpace = xDataLengthBytes;
    1210:	2a 01       	movw	r4, r20
    1212:	01 c0       	rjmp	.+2      	; 0x1216 <xStreamBufferSend+0x76>
        /* If this is a stream buffer then it is acceptable to write only part
         * of the message to the buffer.  Cap the length to the total length of
         * the buffer. */
        if( xRequiredSpace > xMaxReportedSpace )
        {
            xRequiredSpace = xMaxReportedSpace;
    1214:	2c 01       	movw	r4, r24
        {
            mtCOVERAGE_TEST_MARKER();
        }
    }

    if( xTicksToWait != ( TickType_t ) 0 )
    1216:	8e 81       	ldd	r24, Y+6	; 0x06
    1218:	9f 81       	ldd	r25, Y+7	; 0x07
    121a:	a8 85       	ldd	r26, Y+8	; 0x08
    121c:	b9 85       	ldd	r27, Y+9	; 0x09
    121e:	89 2b       	or	r24, r25
    1220:	8a 2b       	or	r24, r26
    1222:	8b 2b       	or	r24, r27
    1224:	09 f4       	brne	.+2      	; 0x1228 <xStreamBufferSend+0x88>
    1226:	36 c0       	rjmp	.+108    	; 0x1294 <xStreamBufferSend+0xf4>
    {
        vTaskSetTimeOutState( &xTimeOut );
    1228:	ce 01       	movw	r24, r28
    122a:	01 96       	adiw	r24, 0x01	; 1
    122c:	e0 d7       	rcall	.+4032   	; 0x21ee <vTaskSetTimeOutState>

        do
        {
            /* Wait until the required number of bytes are free in the message
             * buffer. */
            taskENTER_CRITICAL();
    122e:	0f b6       	in	r0, 0x3f	; 63
    1230:	f8 94       	cli
    1232:	0f 92       	push	r0
            {
                xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
    1234:	c4 01       	movw	r24, r8
    1236:	a2 df       	rcall	.-188    	; 0x117c <xStreamBufferSpacesAvailable>
    1238:	3c 01       	movw	r6, r24

                if( xSpace < xRequiredSpace )
    123a:	84 15       	cp	r24, r4
    123c:	95 05       	cpc	r25, r5
    123e:	38 f5       	brcc	.+78     	; 0x128e <xStreamBufferSend+0xee>
                {
                    /* Clear notification state as going to wait for space. */
                    ( void ) xTaskNotifyStateClear( NULL );
    1240:	60 e0       	ldi	r22, 0x00	; 0
    1242:	80 e0       	ldi	r24, 0x00	; 0
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	0e 94 b6 14 	call	0x296c	; 0x296c <xTaskGenericNotifyStateClear>

                    /* Should only be one writer. */
                    configASSERT( pxStreamBuffer->xTaskWaitingToSend == NULL );
                    pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
    124a:	0e 94 88 11 	call	0x2310	; 0x2310 <xTaskGetCurrentTaskHandle>
    124e:	f4 01       	movw	r30, r8
    1250:	93 87       	std	Z+11, r25	; 0x0b
    1252:	82 87       	std	Z+10, r24	; 0x0a
                {
                    taskEXIT_CRITICAL();
                    break;
                }
            }
            taskEXIT_CRITICAL();
    1254:	0f 90       	pop	r0
    1256:	0f be       	out	0x3f, r0	; 63

            traceBLOCKING_ON_STREAM_BUFFER_SEND( xStreamBuffer );
            ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
    1258:	ae 80       	ldd	r10, Y+6	; 0x06
    125a:	bf 80       	ldd	r11, Y+7	; 0x07
    125c:	c8 84       	ldd	r12, Y+8	; 0x08
    125e:	d9 84       	ldd	r13, Y+9	; 0x09
    1260:	e1 2c       	mov	r14, r1
    1262:	f1 2c       	mov	r15, r1
    1264:	00 e0       	ldi	r16, 0x00	; 0
    1266:	10 e0       	ldi	r17, 0x00	; 0
    1268:	98 01       	movw	r18, r16
    126a:	40 e0       	ldi	r20, 0x00	; 0
    126c:	50 e0       	ldi	r21, 0x00	; 0
    126e:	ba 01       	movw	r22, r20
    1270:	80 e0       	ldi	r24, 0x00	; 0
    1272:	0e 94 f6 11 	call	0x23ec	; 0x23ec <xTaskGenericNotifyWait>
            pxStreamBuffer->xTaskWaitingToSend = NULL;
    1276:	f4 01       	movw	r30, r8
    1278:	13 86       	std	Z+11, r1	; 0x0b
    127a:	12 86       	std	Z+10, r1	; 0x0a
        } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
    127c:	be 01       	movw	r22, r28
    127e:	6a 5f       	subi	r22, 0xFA	; 250
    1280:	7f 4f       	sbci	r23, 0xFF	; 255
    1282:	ce 01       	movw	r24, r28
    1284:	01 96       	adiw	r24, 0x01	; 1
    1286:	da d7       	rcall	.+4020   	; 0x223c <xTaskCheckForTimeOut>
    1288:	88 23       	and	r24, r24
    128a:	89 f2       	breq	.-94     	; 0x122e <xStreamBufferSend+0x8e>
    128c:	05 c0       	rjmp	.+10     	; 0x1298 <xStreamBufferSend+0xf8>
                    configASSERT( pxStreamBuffer->xTaskWaitingToSend == NULL );
                    pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
                }
                else
                {
                    taskEXIT_CRITICAL();
    128e:	0f 90       	pop	r0
    1290:	0f be       	out	0x3f, r0	; 63
                    break;
    1292:	02 c0       	rjmp	.+4      	; 0x1298 <xStreamBufferSend+0xf8>
                          const void * pvTxData,
                          size_t xDataLengthBytes,
                          TickType_t xTicksToWait )
{
    StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
    size_t xReturn, xSpace = 0;
    1294:	61 2c       	mov	r6, r1
    1296:	71 2c       	mov	r7, r1
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    if( xSpace == ( size_t ) 0 )
    1298:	61 14       	cp	r6, r1
    129a:	71 04       	cpc	r7, r1
    129c:	19 f4       	brne	.+6      	; 0x12a4 <xStreamBufferSend+0x104>
    {
        xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
    129e:	c4 01       	movw	r24, r8
    12a0:	6d df       	rcall	.-294    	; 0x117c <xStreamBufferSpacesAvailable>
    12a2:	3c 01       	movw	r6, r24
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSpace );
    12a4:	82 01       	movw	r16, r4
    12a6:	93 01       	movw	r18, r6
    12a8:	a1 01       	movw	r20, r2
    12aa:	6a 85       	ldd	r22, Y+10	; 0x0a
    12ac:	7b 85       	ldd	r23, Y+11	; 0x0b
    12ae:	c4 01       	movw	r24, r8
    12b0:	3e de       	rcall	.-900    	; 0xf2e <prvWriteMessageToBuffer>
    12b2:	6c 01       	movw	r12, r24

    if( xReturn > ( size_t ) 0 )
    12b4:	89 2b       	or	r24, r25
    {
        traceSTREAM_BUFFER_SEND( xStreamBuffer, xReturn );

        /* Was a task waiting for the data? */
        if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
    12b6:	e9 f0       	breq	.+58     	; 0x12f2 <xStreamBufferSend+0x152>
    12b8:	c4 01       	movw	r24, r8
    12ba:	cd dd       	rcall	.-1126   	; 0xe56 <prvBytesInBuffer>
    12bc:	f4 01       	movw	r30, r8
    12be:	26 81       	ldd	r18, Z+6	; 0x06
    12c0:	37 81       	ldd	r19, Z+7	; 0x07
    12c2:	82 17       	cp	r24, r18
    12c4:	93 07       	cpc	r25, r19
        {
            sbSEND_COMPLETED( pxStreamBuffer );
    12c6:	a8 f0       	brcs	.+42     	; 0x12f2 <xStreamBufferSend+0x152>
    12c8:	89 d3       	rcall	.+1810   	; 0x19dc <vTaskSuspendAll>
    12ca:	f4 01       	movw	r30, r8
    12cc:	80 85       	ldd	r24, Z+8	; 0x08
    12ce:	91 85       	ldd	r25, Z+9	; 0x09
    12d0:	89 2b       	or	r24, r25
    12d2:	71 f0       	breq	.+28     	; 0x12f0 <xStreamBufferSend+0x150>
    12d4:	80 85       	ldd	r24, Z+8	; 0x08
    12d6:	91 85       	ldd	r25, Z+9	; 0x09
    12d8:	e1 2c       	mov	r14, r1
    12da:	f1 2c       	mov	r15, r1
    12dc:	00 e0       	ldi	r16, 0x00	; 0
    12de:	20 e0       	ldi	r18, 0x00	; 0
    12e0:	30 e0       	ldi	r19, 0x00	; 0
    12e2:	a9 01       	movw	r20, r18
    12e4:	60 e0       	ldi	r22, 0x00	; 0
    12e6:	0e 94 9d 12 	call	0x253a	; 0x253a <xTaskGenericNotify>
    12ea:	f4 01       	movw	r30, r8
    12ec:	11 86       	std	Z+9, r1	; 0x09
    12ee:	10 86       	std	Z+8, r1	; 0x08
    12f0:	b5 d4       	rcall	.+2410   	; 0x1c5c <xTaskResumeAll>
        mtCOVERAGE_TEST_MARKER();
        traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
    }

    return xReturn;
}
    12f2:	c6 01       	movw	r24, r12
    12f4:	2b 96       	adiw	r28, 0x0b	; 11
    12f6:	0f b6       	in	r0, 0x3f	; 63
    12f8:	f8 94       	cli
    12fa:	de bf       	out	0x3e, r29	; 62
    12fc:	0f be       	out	0x3f, r0	; 63
    12fe:	cd bf       	out	0x3d, r28	; 61
    1300:	df 91       	pop	r29
    1302:	cf 91       	pop	r28
    1304:	1f 91       	pop	r17
    1306:	0f 91       	pop	r16
    1308:	ff 90       	pop	r15
    130a:	ef 90       	pop	r14
    130c:	df 90       	pop	r13
    130e:	cf 90       	pop	r12
    1310:	bf 90       	pop	r11
    1312:	af 90       	pop	r10
    1314:	9f 90       	pop	r9
    1316:	8f 90       	pop	r8
    1318:	7f 90       	pop	r7
    131a:	6f 90       	pop	r6
    131c:	5f 90       	pop	r5
    131e:	4f 90       	pop	r4
    1320:	3f 90       	pop	r3
    1322:	2f 90       	pop	r2
    1324:	08 95       	ret

00001326 <xStreamBufferSendFromISR>:

size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
                                 const void * pvTxData,
                                 size_t xDataLengthBytes,
                                 BaseType_t * const pxHigherPriorityTaskWoken )
{
    1326:	af 92       	push	r10
    1328:	bf 92       	push	r11
    132a:	cf 92       	push	r12
    132c:	df 92       	push	r13
    132e:	ef 92       	push	r14
    1330:	ff 92       	push	r15
    1332:	0f 93       	push	r16
    1334:	1f 93       	push	r17
    1336:	cf 93       	push	r28
    1338:	df 93       	push	r29
    133a:	ec 01       	movw	r28, r24
    133c:	7b 01       	movw	r14, r22
    133e:	5a 01       	movw	r10, r20
    1340:	69 01       	movw	r12, r18

    /* This send function is used to write to both message buffers and stream
     * buffers.  If this is a message buffer then the space needed must be
     * increased by the amount of bytes needed to store the length of the
     * message. */
    if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
    1342:	8e 85       	ldd	r24, Y+14	; 0x0e
    1344:	80 ff       	sbrs	r24, 0
    1346:	04 c0       	rjmp	.+8      	; 0x1350 <xStreamBufferSendFromISR+0x2a>
    {
        xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
    1348:	8a 01       	movw	r16, r20
    134a:	0e 5f       	subi	r16, 0xFE	; 254
    134c:	1f 4f       	sbci	r17, 0xFF	; 255
    134e:	01 c0       	rjmp	.+2      	; 0x1352 <xStreamBufferSendFromISR+0x2c>
                                 size_t xDataLengthBytes,
                                 BaseType_t * const pxHigherPriorityTaskWoken )
{
    StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
    size_t xReturn, xSpace;
    size_t xRequiredSpace = xDataLengthBytes;
    1350:	8a 01       	movw	r16, r20
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
    1352:	ce 01       	movw	r24, r28
    1354:	13 df       	rcall	.-474    	; 0x117c <xStreamBufferSpacesAvailable>
    xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSpace );
    1356:	9c 01       	movw	r18, r24
    1358:	a5 01       	movw	r20, r10
    135a:	b7 01       	movw	r22, r14
    135c:	ce 01       	movw	r24, r28
    135e:	e7 dd       	rcall	.-1074   	; 0xf2e <prvWriteMessageToBuffer>
    1360:	5c 01       	movw	r10, r24

    if( xReturn > ( size_t ) 0 )
    1362:	89 2b       	or	r24, r25
    {
        /* Was a task waiting for the data? */
        if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
    1364:	c1 f0       	breq	.+48     	; 0x1396 <xStreamBufferSendFromISR+0x70>
    1366:	ce 01       	movw	r24, r28
    1368:	76 dd       	rcall	.-1300   	; 0xe56 <prvBytesInBuffer>
    136a:	2e 81       	ldd	r18, Y+6	; 0x06
    136c:	3f 81       	ldd	r19, Y+7	; 0x07
    136e:	82 17       	cp	r24, r18
    1370:	93 07       	cpc	r25, r19
    1372:	88 f0       	brcs	.+34     	; 0x1396 <xStreamBufferSendFromISR+0x70>
        {
            sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
    1374:	88 85       	ldd	r24, Y+8	; 0x08
    1376:	99 85       	ldd	r25, Y+9	; 0x09
    1378:	89 2b       	or	r24, r25
    137a:	69 f0       	breq	.+26     	; 0x1396 <xStreamBufferSendFromISR+0x70>
    137c:	88 85       	ldd	r24, Y+8	; 0x08
    137e:	99 85       	ldd	r25, Y+9	; 0x09
    1380:	e1 2c       	mov	r14, r1
    1382:	f1 2c       	mov	r15, r1
    1384:	00 e0       	ldi	r16, 0x00	; 0
    1386:	20 e0       	ldi	r18, 0x00	; 0
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	a9 01       	movw	r20, r18
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	0e 94 94 13 	call	0x2728	; 0x2728 <xTaskGenericNotifyFromISR>
    1392:	19 86       	std	Y+9, r1	; 0x09
    1394:	18 86       	std	Y+8, r1	; 0x08
    }

    traceSTREAM_BUFFER_SEND_FROM_ISR( xStreamBuffer, xReturn );

    return xReturn;
}
    1396:	c5 01       	movw	r24, r10
    1398:	df 91       	pop	r29
    139a:	cf 91       	pop	r28
    139c:	1f 91       	pop	r17
    139e:	0f 91       	pop	r16
    13a0:	ff 90       	pop	r15
    13a2:	ef 90       	pop	r14
    13a4:	df 90       	pop	r13
    13a6:	cf 90       	pop	r12
    13a8:	bf 90       	pop	r11
    13aa:	af 90       	pop	r10
    13ac:	08 95       	ret

000013ae <xStreamBufferReceive>:

size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,
                             void * pvRxData,
                             size_t xBufferLengthBytes,
                             TickType_t xTicksToWait )
{
    13ae:	4f 92       	push	r4
    13b0:	5f 92       	push	r5
    13b2:	6f 92       	push	r6
    13b4:	7f 92       	push	r7
    13b6:	8f 92       	push	r8
    13b8:	9f 92       	push	r9
    13ba:	af 92       	push	r10
    13bc:	bf 92       	push	r11
    13be:	cf 92       	push	r12
    13c0:	df 92       	push	r13
    13c2:	ef 92       	push	r14
    13c4:	ff 92       	push	r15
    13c6:	0f 93       	push	r16
    13c8:	1f 93       	push	r17
    13ca:	cf 93       	push	r28
    13cc:	df 93       	push	r29
    13ce:	ec 01       	movw	r28, r24
    13d0:	2b 01       	movw	r4, r22
    13d2:	3a 01       	movw	r6, r20
    13d4:	58 01       	movw	r10, r16
    13d6:	69 01       	movw	r12, r18
    /* This receive function is used by both message buffers, which store
     * discrete messages, and stream buffers, which store a continuous stream of
     * bytes.  Discrete messages include an additional
     * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
     * message. */
    if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
    13d8:	8e 85       	ldd	r24, Y+14	; 0x0e
    13da:	80 ff       	sbrs	r24, 0
    13dc:	05 c0       	rjmp	.+10     	; 0x13e8 <xStreamBufferReceive+0x3a>
    {
        xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
    13de:	68 94       	set
    13e0:	88 24       	eor	r8, r8
    13e2:	81 f8       	bld	r8, 1
    13e4:	91 2c       	mov	r9, r1
    13e6:	02 c0       	rjmp	.+4      	; 0x13ec <xStreamBufferReceive+0x3e>
    }
    else
    {
        xBytesToStoreMessageLength = 0;
    13e8:	81 2c       	mov	r8, r1
    13ea:	91 2c       	mov	r9, r1
    }

    if( xTicksToWait != ( TickType_t ) 0 )
    13ec:	a1 14       	cp	r10, r1
    13ee:	b1 04       	cpc	r11, r1
    13f0:	c1 04       	cpc	r12, r1
    13f2:	d1 04       	cpc	r13, r1
    13f4:	31 f1       	breq	.+76     	; 0x1442 <xStreamBufferReceive+0x94>
    {
        /* Checking if there is data and clearing the notification state must be
         * performed atomically. */
        taskENTER_CRITICAL();
    13f6:	0f b6       	in	r0, 0x3f	; 63
    13f8:	f8 94       	cli
    13fa:	0f 92       	push	r0
        {
            xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
    13fc:	ce 01       	movw	r24, r28
    13fe:	2b dd       	rcall	.-1450   	; 0xe56 <prvBytesInBuffer>
    1400:	7c 01       	movw	r14, r24
            /* If this function was invoked by a message buffer read then
             * xBytesToStoreMessageLength holds the number of bytes used to hold
             * the length of the next discrete message.  If this function was
             * invoked by a stream buffer read then xBytesToStoreMessageLength will
             * be 0. */
            if( xBytesAvailable <= xBytesToStoreMessageLength )
    1402:	88 16       	cp	r8, r24
    1404:	99 06       	cpc	r9, r25
    1406:	40 f0       	brcs	.+16     	; 0x1418 <xStreamBufferReceive+0x6a>
            {
                /* Clear notification state as going to wait for data. */
                ( void ) xTaskNotifyStateClear( NULL );
    1408:	60 e0       	ldi	r22, 0x00	; 0
    140a:	80 e0       	ldi	r24, 0x00	; 0
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	0e 94 b6 14 	call	0x296c	; 0x296c <xTaskGenericNotifyStateClear>

                /* Should only be one reader. */
                configASSERT( pxStreamBuffer->xTaskWaitingToReceive == NULL );
                pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
    1412:	7e d7       	rcall	.+3836   	; 0x2310 <xTaskGetCurrentTaskHandle>
    1414:	99 87       	std	Y+9, r25	; 0x09
    1416:	88 87       	std	Y+8, r24	; 0x08
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
    1418:	0f 90       	pop	r0
    141a:	0f be       	out	0x3f, r0	; 63

        if( xBytesAvailable <= xBytesToStoreMessageLength )
    141c:	8e 14       	cp	r8, r14
    141e:	9f 04       	cpc	r9, r15
    1420:	98 f0       	brcs	.+38     	; 0x1448 <xStreamBufferReceive+0x9a>
        {
            /* Wait for data to be available. */
            traceBLOCKING_ON_STREAM_BUFFER_RECEIVE( xStreamBuffer );
            ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
    1422:	e1 2c       	mov	r14, r1
    1424:	f1 2c       	mov	r15, r1
    1426:	00 e0       	ldi	r16, 0x00	; 0
    1428:	10 e0       	ldi	r17, 0x00	; 0
    142a:	98 01       	movw	r18, r16
    142c:	40 e0       	ldi	r20, 0x00	; 0
    142e:	50 e0       	ldi	r21, 0x00	; 0
    1430:	ba 01       	movw	r22, r20
    1432:	80 e0       	ldi	r24, 0x00	; 0
    1434:	db d7       	rcall	.+4022   	; 0x23ec <xTaskGenericNotifyWait>
            pxStreamBuffer->xTaskWaitingToReceive = NULL;
    1436:	19 86       	std	Y+9, r1	; 0x09

            /* Recheck the data available after blocking. */
            xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
    1438:	18 86       	std	Y+8, r1	; 0x08
    143a:	ce 01       	movw	r24, r28
    143c:	0c dd       	rcall	.-1512   	; 0xe56 <prvBytesInBuffer>
    143e:	7c 01       	movw	r14, r24
            mtCOVERAGE_TEST_MARKER();
        }
    }
    else
    {
        xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
    1440:	03 c0       	rjmp	.+6      	; 0x1448 <xStreamBufferReceive+0x9a>
    1442:	ce 01       	movw	r24, r28
    1444:	08 dd       	rcall	.-1520   	; 0xe56 <prvBytesInBuffer>
    1446:	7c 01       	movw	r14, r24
    /* Whether receiving a discrete message (where xBytesToStoreMessageLength
     * holds the number of bytes used to store the message length) or a stream of
     * bytes (where xBytesToStoreMessageLength is zero), the number of bytes
     * available must be greater than xBytesToStoreMessageLength to be able to
     * read bytes from the buffer. */
    if( xBytesAvailable > xBytesToStoreMessageLength )
    1448:	8e 14       	cp	r8, r14
    144a:	9f 04       	cpc	r9, r15
    144c:	e8 f4       	brcc	.+58     	; 0x1488 <xStreamBufferReceive+0xda>
    {
        xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, xBytesAvailable, xBytesToStoreMessageLength );
    144e:	84 01       	movw	r16, r8
    1450:	97 01       	movw	r18, r14
    1452:	a3 01       	movw	r20, r6
    1454:	b2 01       	movw	r22, r4
    1456:	ce 01       	movw	r24, r28
    1458:	fc dd       	rcall	.-1032   	; 0x1052 <prvReadMessageFromBuffer>

        /* Was a task waiting for space in the buffer? */
        if( xReceivedLength != ( size_t ) 0 )
    145a:	6c 01       	movw	r12, r24
    145c:	89 2b       	or	r24, r25
        {
            traceSTREAM_BUFFER_RECEIVE( xStreamBuffer, xReceivedLength );
            sbRECEIVE_COMPLETED( pxStreamBuffer );
    145e:	b1 f0       	breq	.+44     	; 0x148c <xStreamBufferReceive+0xde>
    1460:	bd d2       	rcall	.+1402   	; 0x19dc <vTaskSuspendAll>
    1462:	8a 85       	ldd	r24, Y+10	; 0x0a
    1464:	9b 85       	ldd	r25, Y+11	; 0x0b
    1466:	89 2b       	or	r24, r25
    1468:	69 f0       	breq	.+26     	; 0x1484 <xStreamBufferReceive+0xd6>
    146a:	8a 85       	ldd	r24, Y+10	; 0x0a
    146c:	9b 85       	ldd	r25, Y+11	; 0x0b
    146e:	e1 2c       	mov	r14, r1
    1470:	f1 2c       	mov	r15, r1
    1472:	00 e0       	ldi	r16, 0x00	; 0
    1474:	20 e0       	ldi	r18, 0x00	; 0
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	a9 01       	movw	r20, r18
    147a:	60 e0       	ldi	r22, 0x00	; 0
    147c:	0e 94 9d 12 	call	0x253a	; 0x253a <xTaskGenericNotify>
    1480:	1b 86       	std	Y+11, r1	; 0x0b
    1482:	1a 86       	std	Y+10, r1	; 0x0a
    1484:	eb d3       	rcall	.+2006   	; 0x1c5c <xTaskResumeAll>
    1486:	02 c0       	rjmp	.+4      	; 0x148c <xStreamBufferReceive+0xde>
                             void * pvRxData,
                             size_t xBufferLengthBytes,
                             TickType_t xTicksToWait )
{
    StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
    size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
    1488:	c1 2c       	mov	r12, r1
    148a:	d1 2c       	mov	r13, r1
        traceSTREAM_BUFFER_RECEIVE_FAILED( xStreamBuffer );
        mtCOVERAGE_TEST_MARKER();
    }

    return xReceivedLength;
}
    148c:	c6 01       	movw	r24, r12
    148e:	df 91       	pop	r29
    1490:	cf 91       	pop	r28
    1492:	1f 91       	pop	r17
    1494:	0f 91       	pop	r16
    1496:	ff 90       	pop	r15
    1498:	ef 90       	pop	r14
    149a:	df 90       	pop	r13
    149c:	cf 90       	pop	r12
    149e:	bf 90       	pop	r11
    14a0:	af 90       	pop	r10
    14a2:	9f 90       	pop	r9
    14a4:	8f 90       	pop	r8
    14a6:	7f 90       	pop	r7
    14a8:	6f 90       	pop	r6
    14aa:	5f 90       	pop	r5
    14ac:	4f 90       	pop	r4
    14ae:	08 95       	ret

000014b0 <prvResetNextTaskUnblockTime>:
    14b0:	e0 91 c7 15 	lds	r30, 0x15C7	; 0x8015c7 <pxDelayedTaskList>
    14b4:	f0 91 c8 15 	lds	r31, 0x15C8	; 0x8015c8 <pxDelayedTaskList+0x1>
    14b8:	80 81       	ld	r24, Z
    14ba:	81 11       	cpse	r24, r1
    14bc:	0c c0       	rjmp	.+24     	; 0x14d6 <prvResetNextTaskUnblockTime+0x26>
    14be:	8f ef       	ldi	r24, 0xFF	; 255
    14c0:	9f ef       	ldi	r25, 0xFF	; 255
    14c2:	dc 01       	movw	r26, r24
    14c4:	80 93 91 15 	sts	0x1591, r24	; 0x801591 <xNextTaskUnblockTime>
    14c8:	90 93 92 15 	sts	0x1592, r25	; 0x801592 <xNextTaskUnblockTime+0x1>
    14cc:	a0 93 93 15 	sts	0x1593, r26	; 0x801593 <xNextTaskUnblockTime+0x2>
    14d0:	b0 93 94 15 	sts	0x1594, r27	; 0x801594 <xNextTaskUnblockTime+0x3>
    14d4:	08 95       	ret
    14d6:	e0 91 c7 15 	lds	r30, 0x15C7	; 0x8015c7 <pxDelayedTaskList>
    14da:	f0 91 c8 15 	lds	r31, 0x15C8	; 0x8015c8 <pxDelayedTaskList+0x1>
    14de:	07 80       	ldd	r0, Z+7	; 0x07
    14e0:	f0 85       	ldd	r31, Z+8	; 0x08
    14e2:	e0 2d       	mov	r30, r0
    14e4:	80 81       	ld	r24, Z
    14e6:	91 81       	ldd	r25, Z+1	; 0x01
    14e8:	a2 81       	ldd	r26, Z+2	; 0x02
    14ea:	b3 81       	ldd	r27, Z+3	; 0x03
    14ec:	80 93 91 15 	sts	0x1591, r24	; 0x801591 <xNextTaskUnblockTime>
    14f0:	90 93 92 15 	sts	0x1592, r25	; 0x801592 <xNextTaskUnblockTime+0x1>
    14f4:	a0 93 93 15 	sts	0x1593, r26	; 0x801593 <xNextTaskUnblockTime+0x2>
    14f8:	b0 93 94 15 	sts	0x1594, r27	; 0x801594 <xNextTaskUnblockTime+0x3>
    14fc:	08 95       	ret

000014fe <prvDeleteTCB>:
    14fe:	cf 93       	push	r28
    1500:	df 93       	push	r29
    1502:	ec 01       	movw	r28, r24
    1504:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1506:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1508:	18 d8       	rcall	.-4048   	; 0x53a <vPortFree>
    150a:	ce 01       	movw	r24, r28
    150c:	16 d8       	rcall	.-4052   	; 0x53a <vPortFree>
    150e:	df 91       	pop	r29
    1510:	cf 91       	pop	r28
    1512:	08 95       	ret

00001514 <prvInitialiseNewTask>:
    1514:	4f 92       	push	r4
    1516:	5f 92       	push	r5
    1518:	6f 92       	push	r6
    151a:	7f 92       	push	r7
    151c:	8f 92       	push	r8
    151e:	9f 92       	push	r9
    1520:	af 92       	push	r10
    1522:	bf 92       	push	r11
    1524:	cf 92       	push	r12
    1526:	df 92       	push	r13
    1528:	ef 92       	push	r14
    152a:	ff 92       	push	r15
    152c:	0f 93       	push	r16
    152e:	cf 93       	push	r28
    1530:	df 93       	push	r29
    1532:	2c 01       	movw	r4, r24
    1534:	5b 01       	movw	r10, r22
    1536:	4a 01       	movw	r8, r20
    1538:	39 01       	movw	r6, r18
    153a:	e6 01       	movw	r28, r12
    153c:	65 ea       	ldi	r22, 0xA5	; 165
    153e:	70 e0       	ldi	r23, 0x00	; 0
    1540:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1542:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1544:	0e 94 54 2c 	call	0x58a8	; 0x58a8 <memset>
    1548:	8b 8d       	ldd	r24, Y+27	; 0x1b
    154a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    154c:	21 e0       	ldi	r18, 0x01	; 1
    154e:	82 1a       	sub	r8, r18
    1550:	91 08       	sbc	r9, r1
    1552:	88 0e       	add	r8, r24
    1554:	99 1e       	adc	r9, r25
    1556:	a1 14       	cp	r10, r1
    1558:	b1 04       	cpc	r11, r1
    155a:	89 f4       	brne	.+34     	; 0x157e <prvInitialiseNewTask+0x6a>
    155c:	15 c0       	rjmp	.+42     	; 0x1588 <prvInitialiseNewTask+0x74>
    155e:	82 2f       	mov	r24, r18
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	f5 01       	movw	r30, r10
    1564:	e8 0f       	add	r30, r24
    1566:	f9 1f       	adc	r31, r25
    1568:	30 81       	ld	r19, Z
    156a:	de 01       	movw	r26, r28
    156c:	a8 0f       	add	r26, r24
    156e:	b9 1f       	adc	r27, r25
    1570:	5d 96       	adiw	r26, 0x1d	; 29
    1572:	3c 93       	st	X, r19
    1574:	80 81       	ld	r24, Z
    1576:	88 23       	and	r24, r24
    1578:	29 f0       	breq	.+10     	; 0x1584 <prvInitialiseNewTask+0x70>
    157a:	2f 5f       	subi	r18, 0xFF	; 255
    157c:	01 c0       	rjmp	.+2      	; 0x1580 <prvInitialiseNewTask+0x6c>
    157e:	20 e0       	ldi	r18, 0x00	; 0
    1580:	20 31       	cpi	r18, 0x10	; 16
    1582:	68 f3       	brcs	.-38     	; 0x155e <prvInitialiseNewTask+0x4a>
    1584:	1c a6       	std	Y+44, r1	; 0x2c
    1586:	01 c0       	rjmp	.+2      	; 0x158a <prvInitialiseNewTask+0x76>
    1588:	1d 8e       	std	Y+29, r1	; 0x1d
    158a:	0a 30       	cpi	r16, 0x0A	; 10
    158c:	08 f0       	brcs	.+2      	; 0x1590 <prvInitialiseNewTask+0x7c>
    158e:	09 e0       	ldi	r16, 0x09	; 9
    1590:	0a 8f       	std	Y+26, r16	; 0x1a
    1592:	0d a7       	std	Y+45, r16	; 0x2d
    1594:	1e a6       	std	Y+46, r1	; 0x2e
    1596:	ce 01       	movw	r24, r28
    1598:	02 96       	adiw	r24, 0x02	; 2
    159a:	22 d8       	rcall	.-4028   	; 0x5e0 <vListInitialiseItem>
    159c:	ce 01       	movw	r24, r28
    159e:	0e 96       	adiw	r24, 0x0e	; 14
    15a0:	1f d8       	rcall	.-4034   	; 0x5e0 <vListInitialiseItem>
    15a2:	db 87       	std	Y+11, r29	; 0x0b
    15a4:	ca 87       	std	Y+10, r28	; 0x0a
    15a6:	8a e0       	ldi	r24, 0x0A	; 10
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	a0 e0       	ldi	r26, 0x00	; 0
    15ac:	b0 e0       	ldi	r27, 0x00	; 0
    15ae:	80 1b       	sub	r24, r16
    15b0:	91 09       	sbc	r25, r1
    15b2:	a1 09       	sbc	r26, r1
    15b4:	b1 09       	sbc	r27, r1
    15b6:	8e 87       	std	Y+14, r24	; 0x0e
    15b8:	9f 87       	std	Y+15, r25	; 0x0f
    15ba:	a8 8b       	std	Y+16, r26	; 0x10
    15bc:	b9 8b       	std	Y+17, r27	; 0x11
    15be:	df 8b       	std	Y+23, r29	; 0x17
    15c0:	ce 8b       	std	Y+22, r28	; 0x16
    15c2:	84 e0       	ldi	r24, 0x04	; 4
    15c4:	fe 01       	movw	r30, r28
    15c6:	bf 96       	adiw	r30, 0x2f	; 47
    15c8:	df 01       	movw	r26, r30
    15ca:	1d 92       	st	X+, r1
    15cc:	8a 95       	dec	r24
    15ce:	e9 f7       	brne	.-6      	; 0x15ca <prvInitialiseNewTask+0xb6>
    15d0:	1b aa       	std	Y+51, r1	; 0x33
    15d2:	a3 01       	movw	r20, r6
    15d4:	b2 01       	movw	r22, r4
    15d6:	c4 01       	movw	r24, r8
    15d8:	77 d8       	rcall	.-3858   	; 0x6c8 <pxPortInitialiseStack>
    15da:	99 83       	std	Y+1, r25	; 0x01
    15dc:	88 83       	st	Y, r24
    15de:	e1 14       	cp	r14, r1
    15e0:	f1 04       	cpc	r15, r1
    15e2:	19 f0       	breq	.+6      	; 0x15ea <prvInitialiseNewTask+0xd6>
    15e4:	f7 01       	movw	r30, r14
    15e6:	d1 83       	std	Z+1, r29	; 0x01
    15e8:	c0 83       	st	Z, r28
    15ea:	df 91       	pop	r29
    15ec:	cf 91       	pop	r28
    15ee:	0f 91       	pop	r16
    15f0:	ff 90       	pop	r15
    15f2:	ef 90       	pop	r14
    15f4:	df 90       	pop	r13
    15f6:	cf 90       	pop	r12
    15f8:	bf 90       	pop	r11
    15fa:	af 90       	pop	r10
    15fc:	9f 90       	pop	r9
    15fe:	8f 90       	pop	r8
    1600:	7f 90       	pop	r7
    1602:	6f 90       	pop	r6
    1604:	5f 90       	pop	r5
    1606:	4f 90       	pop	r4
    1608:	08 95       	ret

0000160a <prvInitialiseTaskLists>:
    160a:	cf 93       	push	r28
    160c:	c0 e0       	ldi	r28, 0x00	; 0
    160e:	09 c0       	rjmp	.+18     	; 0x1622 <prvInitialiseTaskLists+0x18>
    1610:	2b e0       	ldi	r18, 0x0B	; 11
    1612:	c2 9f       	mul	r28, r18
    1614:	c0 01       	movw	r24, r0
    1616:	11 24       	eor	r1, r1
    1618:	81 52       	subi	r24, 0x21	; 33
    161a:	9a 4e       	sbci	r25, 0xEA	; 234
    161c:	0e 94 df 02 	call	0x5be	; 0x5be <vListInitialise>
    1620:	cf 5f       	subi	r28, 0xFF	; 255
    1622:	ca 30       	cpi	r28, 0x0A	; 10
    1624:	a8 f3       	brcs	.-22     	; 0x1610 <prvInitialiseTaskLists+0x6>
    1626:	84 ed       	ldi	r24, 0xD4	; 212
    1628:	95 e1       	ldi	r25, 0x15	; 21
    162a:	0e 94 df 02 	call	0x5be	; 0x5be <vListInitialise>
    162e:	89 ec       	ldi	r24, 0xC9	; 201
    1630:	95 e1       	ldi	r25, 0x15	; 21
    1632:	0e 94 df 02 	call	0x5be	; 0x5be <vListInitialise>
    1636:	8a eb       	ldi	r24, 0xBA	; 186
    1638:	95 e1       	ldi	r25, 0x15	; 21
    163a:	0e 94 df 02 	call	0x5be	; 0x5be <vListInitialise>
    163e:	8f ea       	ldi	r24, 0xAF	; 175
    1640:	95 e1       	ldi	r25, 0x15	; 21
    1642:	0e 94 df 02 	call	0x5be	; 0x5be <vListInitialise>
    1646:	83 ea       	ldi	r24, 0xA3	; 163
    1648:	95 e1       	ldi	r25, 0x15	; 21
    164a:	0e 94 df 02 	call	0x5be	; 0x5be <vListInitialise>
    164e:	84 ed       	ldi	r24, 0xD4	; 212
    1650:	95 e1       	ldi	r25, 0x15	; 21
    1652:	90 93 c8 15 	sts	0x15C8, r25	; 0x8015c8 <pxDelayedTaskList+0x1>
    1656:	80 93 c7 15 	sts	0x15C7, r24	; 0x8015c7 <pxDelayedTaskList>
    165a:	89 ec       	ldi	r24, 0xC9	; 201
    165c:	95 e1       	ldi	r25, 0x15	; 21
    165e:	90 93 c6 15 	sts	0x15C6, r25	; 0x8015c6 <pxOverflowDelayedTaskList+0x1>
    1662:	80 93 c5 15 	sts	0x15C5, r24	; 0x8015c5 <pxOverflowDelayedTaskList>
    1666:	cf 91       	pop	r28
    1668:	08 95       	ret

0000166a <prvAddNewTaskToReadyList>:
    166a:	cf 93       	push	r28
    166c:	df 93       	push	r29
    166e:	ec 01       	movw	r28, r24
    1670:	0f b6       	in	r0, 0x3f	; 63
    1672:	f8 94       	cli
    1674:	0f 92       	push	r0
    1676:	80 91 a2 15 	lds	r24, 0x15A2	; 0x8015a2 <uxCurrentNumberOfTasks>
    167a:	8f 5f       	subi	r24, 0xFF	; 255
    167c:	80 93 a2 15 	sts	0x15A2, r24	; 0x8015a2 <uxCurrentNumberOfTasks>
    1680:	80 91 4d 16 	lds	r24, 0x164D	; 0x80164d <pxCurrentTCB>
    1684:	90 91 4e 16 	lds	r25, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1688:	89 2b       	or	r24, r25
    168a:	51 f4       	brne	.+20     	; 0x16a0 <prvAddNewTaskToReadyList+0x36>
    168c:	d0 93 4e 16 	sts	0x164E, r29	; 0x80164e <pxCurrentTCB+0x1>
    1690:	c0 93 4d 16 	sts	0x164D, r28	; 0x80164d <pxCurrentTCB>
    1694:	80 91 a2 15 	lds	r24, 0x15A2	; 0x8015a2 <uxCurrentNumberOfTasks>
    1698:	81 30       	cpi	r24, 0x01	; 1
    169a:	91 f4       	brne	.+36     	; 0x16c0 <prvAddNewTaskToReadyList+0x56>
    169c:	b6 df       	rcall	.-148    	; 0x160a <prvInitialiseTaskLists>
    169e:	10 c0       	rjmp	.+32     	; 0x16c0 <prvAddNewTaskToReadyList+0x56>
    16a0:	80 91 9c 15 	lds	r24, 0x159C	; 0x80159c <xSchedulerRunning>
    16a4:	81 11       	cpse	r24, r1
    16a6:	0c c0       	rjmp	.+24     	; 0x16c0 <prvAddNewTaskToReadyList+0x56>
    16a8:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    16ac:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    16b0:	92 8d       	ldd	r25, Z+26	; 0x1a
    16b2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    16b4:	89 17       	cp	r24, r25
    16b6:	20 f0       	brcs	.+8      	; 0x16c0 <prvAddNewTaskToReadyList+0x56>
    16b8:	d0 93 4e 16 	sts	0x164E, r29	; 0x80164e <pxCurrentTCB+0x1>
    16bc:	c0 93 4d 16 	sts	0x164D, r28	; 0x80164d <pxCurrentTCB>
    16c0:	80 91 95 15 	lds	r24, 0x1595	; 0x801595 <uxTaskNumber>
>>>>>>> 1413a59f4c1676bf811b30fc6b6b1aaefe980264
    16c4:	8f 5f       	subi	r24, 0xFF	; 255
    16c6:	80 93 95 15 	sts	0x1595, r24	; 0x801595 <uxTaskNumber>
    16ca:	ea 8d       	ldd	r30, Y+26	; 0x1a
    16cc:	80 91 9d 15 	lds	r24, 0x159D	; 0x80159d <uxTopReadyPriority>
    16d0:	8e 17       	cp	r24, r30
    16d2:	10 f4       	brcc	.+4      	; 0x16d8 <prvAddNewTaskToReadyList+0x6e>
    16d4:	e0 93 9d 15 	sts	0x159D, r30	; 0x80159d <uxTopReadyPriority>
    16d8:	8b e0       	ldi	r24, 0x0B	; 11
    16da:	8e 9f       	mul	r24, r30
    16dc:	f0 01       	movw	r30, r0
    16de:	11 24       	eor	r1, r1
    16e0:	e1 52       	subi	r30, 0x21	; 33
    16e2:	fa 4e       	sbci	r31, 0xEA	; 234
    16e4:	01 80       	ldd	r0, Z+1	; 0x01
    16e6:	f2 81       	ldd	r31, Z+2	; 0x02
    16e8:	e0 2d       	mov	r30, r0
    16ea:	ff 83       	std	Y+7, r31	; 0x07
    16ec:	ee 83       	std	Y+6, r30	; 0x06
    16ee:	26 81       	ldd	r18, Z+6	; 0x06
    16f0:	37 81       	ldd	r19, Z+7	; 0x07
    16f2:	39 87       	std	Y+9, r19	; 0x09
    16f4:	28 87       	std	Y+8, r18	; 0x08
    16f6:	a6 81       	ldd	r26, Z+6	; 0x06
    16f8:	b7 81       	ldd	r27, Z+7	; 0x07
    16fa:	9e 01       	movw	r18, r28
    16fc:	2e 5f       	subi	r18, 0xFE	; 254
    16fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1700:	15 96       	adiw	r26, 0x05	; 5
    1702:	3c 93       	st	X, r19
    1704:	2e 93       	st	-X, r18
    1706:	14 97       	sbiw	r26, 0x04	; 4
    1708:	37 83       	std	Z+7, r19	; 0x07
    170a:	26 83       	std	Z+6, r18	; 0x06
    170c:	ea 8d       	ldd	r30, Y+26	; 0x1a
    170e:	8e 9f       	mul	r24, r30
    1710:	f0 01       	movw	r30, r0
    1712:	11 24       	eor	r1, r1
    1714:	e1 52       	subi	r30, 0x21	; 33
    1716:	fa 4e       	sbci	r31, 0xEA	; 234
    1718:	fd 87       	std	Y+13, r31	; 0x0d
    171a:	ec 87       	std	Y+12, r30	; 0x0c
    171c:	80 81       	ld	r24, Z
    171e:	8f 5f       	subi	r24, 0xFF	; 255
    1720:	80 83       	st	Z, r24
    1722:	0f 90       	pop	r0
    1724:	0f be       	out	0x3f, r0	; 63
    1726:	80 91 9c 15 	lds	r24, 0x159C	; 0x80159c <xSchedulerRunning>
    172a:	88 23       	and	r24, r24
    172c:	49 f0       	breq	.+18     	; 0x1740 <prvAddNewTaskToReadyList+0xd6>
    172e:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    1732:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1736:	92 8d       	ldd	r25, Z+26	; 0x1a
    1738:	8a 8d       	ldd	r24, Y+26	; 0x1a
    173a:	98 17       	cp	r25, r24
    173c:	08 f4       	brcc	.+2      	; 0x1740 <prvAddNewTaskToReadyList+0xd6>
    173e:	0d d8       	rcall	.-4070   	; 0x75a <vPortYield>
    1740:	df 91       	pop	r29
    1742:	cf 91       	pop	r28
    1744:	08 95       	ret

00001746 <prvCheckTasksWaitingTermination>:
    1746:	cf 93       	push	r28
    1748:	df 93       	push	r29
    174a:	1b c0       	rjmp	.+54     	; 0x1782 <prvCheckTasksWaitingTermination+0x3c>
    174c:	0f b6       	in	r0, 0x3f	; 63
    174e:	f8 94       	cli
    1750:	0f 92       	push	r0
    1752:	e0 91 b6 15 	lds	r30, 0x15B6	; 0x8015b6 <xTasksWaitingTermination+0x7>
    1756:	f0 91 b7 15 	lds	r31, 0x15B7	; 0x8015b7 <xTasksWaitingTermination+0x8>
    175a:	c0 85       	ldd	r28, Z+8	; 0x08
    175c:	d1 85       	ldd	r29, Z+9	; 0x09
    175e:	ce 01       	movw	r24, r28
    1760:	02 96       	adiw	r24, 0x02	; 2
    1762:	0e 94 31 03 	call	0x662	; 0x662 <uxListRemove>
    1766:	80 91 a2 15 	lds	r24, 0x15A2	; 0x8015a2 <uxCurrentNumberOfTasks>
    176a:	81 50       	subi	r24, 0x01	; 1
    176c:	80 93 a2 15 	sts	0x15A2, r24	; 0x8015a2 <uxCurrentNumberOfTasks>
    1770:	80 91 ae 15 	lds	r24, 0x15AE	; 0x8015ae <uxDeletedTasksWaitingCleanUp>
    1774:	81 50       	subi	r24, 0x01	; 1
    1776:	80 93 ae 15 	sts	0x15AE, r24	; 0x8015ae <uxDeletedTasksWaitingCleanUp>
    177a:	0f 90       	pop	r0
    177c:	0f be       	out	0x3f, r0	; 63
    177e:	ce 01       	movw	r24, r28
    1780:	be de       	rcall	.-644    	; 0x14fe <prvDeleteTCB>
    1782:	80 91 ae 15 	lds	r24, 0x15AE	; 0x8015ae <uxDeletedTasksWaitingCleanUp>
    1786:	81 11       	cpse	r24, r1
    1788:	e1 cf       	rjmp	.-62     	; 0x174c <prvCheckTasksWaitingTermination+0x6>
    178a:	df 91       	pop	r29
    178c:	cf 91       	pop	r28
    178e:	08 95       	ret

00001790 <prvAddCurrentTaskToDelayedList>:
    1790:	8f 92       	push	r8
    1792:	9f 92       	push	r9
    1794:	af 92       	push	r10
    1796:	bf 92       	push	r11
    1798:	cf 92       	push	r12
    179a:	df 92       	push	r13
    179c:	ef 92       	push	r14
    179e:	ff 92       	push	r15
    17a0:	cf 93       	push	r28
    17a2:	df 93       	push	r29
    17a4:	6b 01       	movw	r12, r22
    17a6:	7c 01       	movw	r14, r24
    17a8:	c4 2f       	mov	r28, r20
    17aa:	80 90 9e 15 	lds	r8, 0x159E	; 0x80159e <xTickCount>
    17ae:	90 90 9f 15 	lds	r9, 0x159F	; 0x80159f <xTickCount+0x1>
    17b2:	a0 90 a0 15 	lds	r10, 0x15A0	; 0x8015a0 <xTickCount+0x2>
    17b6:	b0 90 a1 15 	lds	r11, 0x15A1	; 0x8015a1 <xTickCount+0x3>
    17ba:	80 91 4d 16 	lds	r24, 0x164D	; 0x80164d <pxCurrentTCB>
    17be:	90 91 4e 16 	lds	r25, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    17c2:	02 96       	adiw	r24, 0x02	; 2
    17c4:	0e 94 31 03 	call	0x662	; 0x662 <uxListRemove>
    17c8:	8f ef       	ldi	r24, 0xFF	; 255
    17ca:	c8 16       	cp	r12, r24
    17cc:	d8 06       	cpc	r13, r24
    17ce:	e8 06       	cpc	r14, r24
    17d0:	f8 06       	cpc	r15, r24
    17d2:	b1 f5       	brne	.+108    	; 0x1840 <prvAddCurrentTaskToDelayedList+0xb0>
    17d4:	cc 23       	and	r28, r28
    17d6:	a1 f1       	breq	.+104    	; 0x1840 <prvAddCurrentTaskToDelayedList+0xb0>
    17d8:	e3 ea       	ldi	r30, 0xA3	; 163
    17da:	f5 e1       	ldi	r31, 0x15	; 21
    17dc:	a1 81       	ldd	r26, Z+1	; 0x01
    17de:	b2 81       	ldd	r27, Z+2	; 0x02
    17e0:	c0 91 4d 16 	lds	r28, 0x164D	; 0x80164d <pxCurrentTCB>
    17e4:	d0 91 4e 16 	lds	r29, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    17e8:	bf 83       	std	Y+7, r27	; 0x07
    17ea:	ae 83       	std	Y+6, r26	; 0x06
    17ec:	c0 91 4d 16 	lds	r28, 0x164D	; 0x80164d <pxCurrentTCB>
    17f0:	d0 91 4e 16 	lds	r29, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    17f4:	16 96       	adiw	r26, 0x06	; 6
    17f6:	8d 91       	ld	r24, X+
    17f8:	9c 91       	ld	r25, X
    17fa:	17 97       	sbiw	r26, 0x07	; 7
    17fc:	99 87       	std	Y+9, r25	; 0x09
    17fe:	88 87       	std	Y+8, r24	; 0x08
    1800:	16 96       	adiw	r26, 0x06	; 6
    1802:	cd 91       	ld	r28, X+
    1804:	dc 91       	ld	r29, X
    1806:	17 97       	sbiw	r26, 0x07	; 7
    1808:	80 91 4d 16 	lds	r24, 0x164D	; 0x80164d <pxCurrentTCB>
    180c:	90 91 4e 16 	lds	r25, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1810:	02 96       	adiw	r24, 0x02	; 2
    1812:	9d 83       	std	Y+5, r25	; 0x05
    1814:	8c 83       	std	Y+4, r24	; 0x04
    1816:	80 91 4d 16 	lds	r24, 0x164D	; 0x80164d <pxCurrentTCB>
    181a:	90 91 4e 16 	lds	r25, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    181e:	02 96       	adiw	r24, 0x02	; 2
    1820:	17 96       	adiw	r26, 0x07	; 7
    1822:	9c 93       	st	X, r25
    1824:	8e 93       	st	-X, r24
    1826:	16 97       	sbiw	r26, 0x06	; 6
    1828:	a0 91 4d 16 	lds	r26, 0x164D	; 0x80164d <pxCurrentTCB>
    182c:	b0 91 4e 16 	lds	r27, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1830:	1d 96       	adiw	r26, 0x0d	; 13
    1832:	fc 93       	st	X, r31
    1834:	ee 93       	st	-X, r30
    1836:	1c 97       	sbiw	r26, 0x0c	; 12
    1838:	80 81       	ld	r24, Z
    183a:	8f 5f       	subi	r24, 0xFF	; 255
    183c:	80 83       	st	Z, r24
    183e:	3f c0       	rjmp	.+126    	; 0x18be <prvAddCurrentTaskToDelayedList+0x12e>
    1840:	c8 0c       	add	r12, r8
    1842:	d9 1c       	adc	r13, r9
    1844:	ea 1c       	adc	r14, r10
    1846:	fb 1c       	adc	r15, r11
    1848:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    184c:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1850:	c2 82       	std	Z+2, r12	; 0x02
    1852:	d3 82       	std	Z+3, r13	; 0x03
    1854:	e4 82       	std	Z+4, r14	; 0x04
    1856:	f5 82       	std	Z+5, r15	; 0x05
    1858:	c8 14       	cp	r12, r8
    185a:	d9 04       	cpc	r13, r9
    185c:	ea 04       	cpc	r14, r10
    185e:	fb 04       	cpc	r15, r11
    1860:	68 f4       	brcc	.+26     	; 0x187c <prvAddCurrentTaskToDelayedList+0xec>
    1862:	60 91 4d 16 	lds	r22, 0x164D	; 0x80164d <pxCurrentTCB>
    1866:	70 91 4e 16 	lds	r23, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    186a:	80 91 c5 15 	lds	r24, 0x15C5	; 0x8015c5 <pxOverflowDelayedTaskList>
    186e:	90 91 c6 15 	lds	r25, 0x15C6	; 0x8015c6 <pxOverflowDelayedTaskList+0x1>
    1872:	6e 5f       	subi	r22, 0xFE	; 254
    1874:	7f 4f       	sbci	r23, 0xFF	; 255
    1876:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <vListInsert>
    187a:	21 c0       	rjmp	.+66     	; 0x18be <prvAddCurrentTaskToDelayedList+0x12e>
    187c:	60 91 4d 16 	lds	r22, 0x164D	; 0x80164d <pxCurrentTCB>
    1880:	70 91 4e 16 	lds	r23, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1884:	80 91 c7 15 	lds	r24, 0x15C7	; 0x8015c7 <pxDelayedTaskList>
    1888:	90 91 c8 15 	lds	r25, 0x15C8	; 0x8015c8 <pxDelayedTaskList+0x1>
    188c:	6e 5f       	subi	r22, 0xFE	; 254
    188e:	7f 4f       	sbci	r23, 0xFF	; 255
    1890:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <vListInsert>
    1894:	80 91 91 15 	lds	r24, 0x1591	; 0x801591 <xNextTaskUnblockTime>
    1898:	90 91 92 15 	lds	r25, 0x1592	; 0x801592 <xNextTaskUnblockTime+0x1>
    189c:	a0 91 93 15 	lds	r26, 0x1593	; 0x801593 <xNextTaskUnblockTime+0x2>
    18a0:	b0 91 94 15 	lds	r27, 0x1594	; 0x801594 <xNextTaskUnblockTime+0x3>
    18a4:	c8 16       	cp	r12, r24
    18a6:	d9 06       	cpc	r13, r25
    18a8:	ea 06       	cpc	r14, r26
    18aa:	fb 06       	cpc	r15, r27
    18ac:	40 f4       	brcc	.+16     	; 0x18be <prvAddCurrentTaskToDelayedList+0x12e>
    18ae:	c0 92 91 15 	sts	0x1591, r12	; 0x801591 <xNextTaskUnblockTime>
    18b2:	d0 92 92 15 	sts	0x1592, r13	; 0x801592 <xNextTaskUnblockTime+0x1>
    18b6:	e0 92 93 15 	sts	0x1593, r14	; 0x801593 <xNextTaskUnblockTime+0x2>
    18ba:	f0 92 94 15 	sts	0x1594, r15	; 0x801594 <xNextTaskUnblockTime+0x3>
    18be:	df 91       	pop	r29
    18c0:	cf 91       	pop	r28
    18c2:	ff 90       	pop	r15
    18c4:	ef 90       	pop	r14
    18c6:	df 90       	pop	r13
    18c8:	cf 90       	pop	r12
    18ca:	bf 90       	pop	r11
    18cc:	af 90       	pop	r10
    18ce:	9f 90       	pop	r9
    18d0:	8f 90       	pop	r8
    18d2:	08 95       	ret

000018d4 <xTaskCreate>:
    18d4:	2f 92       	push	r2
    18d6:	3f 92       	push	r3
    18d8:	4f 92       	push	r4
    18da:	5f 92       	push	r5
    18dc:	6f 92       	push	r6
    18de:	7f 92       	push	r7
    18e0:	8f 92       	push	r8
    18e2:	9f 92       	push	r9
    18e4:	af 92       	push	r10
    18e6:	bf 92       	push	r11
    18e8:	cf 92       	push	r12
    18ea:	df 92       	push	r13
    18ec:	ef 92       	push	r14
    18ee:	ff 92       	push	r15
    18f0:	0f 93       	push	r16
    18f2:	cf 93       	push	r28
    18f4:	df 93       	push	r29
    18f6:	3c 01       	movw	r6, r24
    18f8:	1b 01       	movw	r2, r22
    18fa:	4a 01       	movw	r8, r20
    18fc:	29 01       	movw	r4, r18
    18fe:	ca 01       	movw	r24, r20
    1900:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <pvPortMalloc>
    1904:	6c 01       	movw	r12, r24
    1906:	89 2b       	or	r24, r25
    1908:	71 f0       	breq	.+28     	; 0x1926 <xTaskCreate+0x52>
    190a:	84 e3       	ldi	r24, 0x34	; 52
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <pvPortMalloc>
    1912:	ec 01       	movw	r28, r24
    1914:	89 2b       	or	r24, r25
    1916:	19 f0       	breq	.+6      	; 0x191e <xTaskCreate+0x4a>
    1918:	dc 8e       	std	Y+28, r13	; 0x1c
    191a:	cb 8e       	std	Y+27, r12	; 0x1b
    191c:	06 c0       	rjmp	.+12     	; 0x192a <xTaskCreate+0x56>
    191e:	c6 01       	movw	r24, r12
    1920:	0e 94 9d 02 	call	0x53a	; 0x53a <vPortFree>
    1924:	02 c0       	rjmp	.+4      	; 0x192a <xTaskCreate+0x56>
    1926:	c0 e0       	ldi	r28, 0x00	; 0
    1928:	d0 e0       	ldi	r29, 0x00	; 0
    192a:	20 97       	sbiw	r28, 0x00	; 0
    192c:	61 f0       	breq	.+24     	; 0x1946 <xTaskCreate+0x72>
    192e:	a1 2c       	mov	r10, r1
    1930:	b1 2c       	mov	r11, r1
    1932:	6e 01       	movw	r12, r28
    1934:	92 01       	movw	r18, r4
    1936:	a4 01       	movw	r20, r8
    1938:	b1 01       	movw	r22, r2
    193a:	c3 01       	movw	r24, r6
    193c:	eb dd       	rcall	.-1066   	; 0x1514 <prvInitialiseNewTask>
    193e:	ce 01       	movw	r24, r28
    1940:	94 de       	rcall	.-728    	; 0x166a <prvAddNewTaskToReadyList>
    1942:	81 e0       	ldi	r24, 0x01	; 1
    1944:	01 c0       	rjmp	.+2      	; 0x1948 <xTaskCreate+0x74>
    1946:	8f ef       	ldi	r24, 0xFF	; 255
    1948:	df 91       	pop	r29
    194a:	cf 91       	pop	r28
    194c:	0f 91       	pop	r16
    194e:	ff 90       	pop	r15
    1950:	ef 90       	pop	r14
    1952:	df 90       	pop	r13
    1954:	cf 90       	pop	r12
    1956:	bf 90       	pop	r11
    1958:	af 90       	pop	r10
    195a:	9f 90       	pop	r9
    195c:	8f 90       	pop	r8
    195e:	7f 90       	pop	r7
    1960:	6f 90       	pop	r6
    1962:	5f 90       	pop	r5
    1964:	4f 90       	pop	r4
    1966:	3f 90       	pop	r3
    1968:	2f 90       	pop	r2
    196a:	08 95       	ret

0000196c <vTaskStartScheduler>:
    196c:	ef 92       	push	r14
    196e:	ff 92       	push	r15
    1970:	0f 93       	push	r16
    1972:	0f 2e       	mov	r0, r31
    1974:	ff e8       	ldi	r31, 0x8F	; 143
    1976:	ef 2e       	mov	r14, r31
    1978:	f5 e1       	ldi	r31, 0x15	; 21
    197a:	ff 2e       	mov	r15, r31
    197c:	f0 2d       	mov	r31, r0
    197e:	00 e0       	ldi	r16, 0x00	; 0
    1980:	20 e0       	ldi	r18, 0x00	; 0
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	40 ec       	ldi	r20, 0xC0	; 192
    1986:	50 e0       	ldi	r21, 0x00	; 0
    1988:	6a e9       	ldi	r22, 0x9A	; 154
    198a:	72 e0       	ldi	r23, 0x02	; 2
    198c:	8d ec       	ldi	r24, 0xCD	; 205
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	a1 df       	rcall	.-190    	; 0x18d4 <xTaskCreate>
    1992:	81 30       	cpi	r24, 0x01	; 1
    1994:	11 f4       	brne	.+4      	; 0x199a <vTaskStartScheduler+0x2e>
    1996:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <xTimerCreateTimerTask>
    199a:	81 30       	cpi	r24, 0x01	; 1
    199c:	c9 f4       	brne	.+50     	; 0x19d0 <vTaskStartScheduler+0x64>
    199e:	f8 94       	cli
    19a0:	8f ef       	ldi	r24, 0xFF	; 255
    19a2:	9f ef       	ldi	r25, 0xFF	; 255
    19a4:	dc 01       	movw	r26, r24
    19a6:	80 93 91 15 	sts	0x1591, r24	; 0x801591 <xNextTaskUnblockTime>
    19aa:	90 93 92 15 	sts	0x1592, r25	; 0x801592 <xNextTaskUnblockTime+0x1>
    19ae:	a0 93 93 15 	sts	0x1593, r26	; 0x801593 <xNextTaskUnblockTime+0x2>
    19b2:	b0 93 94 15 	sts	0x1594, r27	; 0x801594 <xNextTaskUnblockTime+0x3>
    19b6:	81 e0       	ldi	r24, 0x01	; 1
    19b8:	80 93 9c 15 	sts	0x159C, r24	; 0x80159c <xSchedulerRunning>
    19bc:	10 92 9e 15 	sts	0x159E, r1	; 0x80159e <xTickCount>
    19c0:	10 92 9f 15 	sts	0x159F, r1	; 0x80159f <xTickCount+0x1>
    19c4:	10 92 a0 15 	sts	0x15A0, r1	; 0x8015a0 <xTickCount+0x2>
    19c8:	10 92 a1 15 	sts	0x15A1, r1	; 0x8015a1 <xTickCount+0x3>
    19cc:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <xPortStartScheduler>
    19d0:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <uxTopUsedPriority>
    19d4:	0f 91       	pop	r16
    19d6:	ff 90       	pop	r15
    19d8:	ef 90       	pop	r14
    19da:	08 95       	ret

000019dc <vTaskSuspendAll>:
    19dc:	80 91 8e 15 	lds	r24, 0x158E	; 0x80158e <uxSchedulerSuspended>
    19e0:	8f 5f       	subi	r24, 0xFF	; 255
    19e2:	80 93 8e 15 	sts	0x158E, r24	; 0x80158e <uxSchedulerSuspended>
    19e6:	08 95       	ret

000019e8 <xTaskGetTickCount>:
    19e8:	0f b6       	in	r0, 0x3f	; 63
    19ea:	f8 94       	cli
    19ec:	0f 92       	push	r0
    19ee:	60 91 9e 15 	lds	r22, 0x159E	; 0x80159e <xTickCount>
    19f2:	70 91 9f 15 	lds	r23, 0x159F	; 0x80159f <xTickCount+0x1>
    19f6:	80 91 a0 15 	lds	r24, 0x15A0	; 0x8015a0 <xTickCount+0x2>
    19fa:	90 91 a1 15 	lds	r25, 0x15A1	; 0x8015a1 <xTickCount+0x3>
    19fe:	0f 90       	pop	r0
    1a00:	0f be       	out	0x3f, r0	; 63
    1a02:	08 95       	ret

00001a04 <xTaskIncrementTick>:
    1a04:	cf 92       	push	r12
    1a06:	df 92       	push	r13
    1a08:	ef 92       	push	r14
    1a0a:	ff 92       	push	r15
    1a0c:	cf 93       	push	r28
    1a0e:	df 93       	push	r29
    1a10:	80 91 8e 15 	lds	r24, 0x158E	; 0x80158e <uxSchedulerSuspended>
    1a14:	81 11       	cpse	r24, r1
    1a16:	05 c1       	rjmp	.+522    	; 0x1c22 <xTaskIncrementTick+0x21e>
    1a18:	c0 90 9e 15 	lds	r12, 0x159E	; 0x80159e <xTickCount>
    1a1c:	d0 90 9f 15 	lds	r13, 0x159F	; 0x80159f <xTickCount+0x1>
    1a20:	e0 90 a0 15 	lds	r14, 0x15A0	; 0x8015a0 <xTickCount+0x2>
    1a24:	f0 90 a1 15 	lds	r15, 0x15A1	; 0x8015a1 <xTickCount+0x3>
    1a28:	8f ef       	ldi	r24, 0xFF	; 255
    1a2a:	c8 1a       	sub	r12, r24
    1a2c:	d8 0a       	sbc	r13, r24
    1a2e:	e8 0a       	sbc	r14, r24
    1a30:	f8 0a       	sbc	r15, r24
    1a32:	c0 92 9e 15 	sts	0x159E, r12	; 0x80159e <xTickCount>
    1a36:	d0 92 9f 15 	sts	0x159F, r13	; 0x80159f <xTickCount+0x1>
    1a3a:	e0 92 a0 15 	sts	0x15A0, r14	; 0x8015a0 <xTickCount+0x2>
    1a3e:	f0 92 a1 15 	sts	0x15A1, r15	; 0x8015a1 <xTickCount+0x3>
    1a42:	c1 14       	cp	r12, r1
    1a44:	d1 04       	cpc	r13, r1
    1a46:	e1 04       	cpc	r14, r1
    1a48:	f1 04       	cpc	r15, r1
    1a4a:	b1 f4       	brne	.+44     	; 0x1a78 <xTaskIncrementTick+0x74>
    1a4c:	80 91 c7 15 	lds	r24, 0x15C7	; 0x8015c7 <pxDelayedTaskList>
    1a50:	90 91 c8 15 	lds	r25, 0x15C8	; 0x8015c8 <pxDelayedTaskList+0x1>
    1a54:	20 91 c5 15 	lds	r18, 0x15C5	; 0x8015c5 <pxOverflowDelayedTaskList>
    1a58:	30 91 c6 15 	lds	r19, 0x15C6	; 0x8015c6 <pxOverflowDelayedTaskList+0x1>
    1a5c:	30 93 c8 15 	sts	0x15C8, r19	; 0x8015c8 <pxDelayedTaskList+0x1>
    1a60:	20 93 c7 15 	sts	0x15C7, r18	; 0x8015c7 <pxDelayedTaskList>
    1a64:	90 93 c6 15 	sts	0x15C6, r25	; 0x8015c6 <pxOverflowDelayedTaskList+0x1>
    1a68:	80 93 c5 15 	sts	0x15C5, r24	; 0x8015c5 <pxOverflowDelayedTaskList>
    1a6c:	80 91 96 15 	lds	r24, 0x1596	; 0x801596 <xNumOfOverflows>
    1a70:	8f 5f       	subi	r24, 0xFF	; 255
    1a72:	80 93 96 15 	sts	0x1596, r24	; 0x801596 <xNumOfOverflows>
    1a76:	1c dd       	rcall	.-1480   	; 0x14b0 <prvResetNextTaskUnblockTime>
    1a78:	80 91 91 15 	lds	r24, 0x1591	; 0x801591 <xNextTaskUnblockTime>
    1a7c:	90 91 92 15 	lds	r25, 0x1592	; 0x801592 <xNextTaskUnblockTime+0x1>
    1a80:	a0 91 93 15 	lds	r26, 0x1593	; 0x801593 <xNextTaskUnblockTime+0x2>
    1a84:	b0 91 94 15 	lds	r27, 0x1594	; 0x801594 <xNextTaskUnblockTime+0x3>
    1a88:	c8 16       	cp	r12, r24
    1a8a:	d9 06       	cpc	r13, r25
    1a8c:	ea 06       	cpc	r14, r26
    1a8e:	fb 06       	cpc	r15, r27
    1a90:	20 f4       	brcc	.+8      	; 0x1a9a <xTaskIncrementTick+0x96>
    1a92:	80 e0       	ldi	r24, 0x00	; 0
    1a94:	b2 c0       	rjmp	.+356    	; 0x1bfa <xTaskIncrementTick+0x1f6>
    1a96:	81 e0       	ldi	r24, 0x01	; 1
    1a98:	01 c0       	rjmp	.+2      	; 0x1a9c <xTaskIncrementTick+0x98>
    1a9a:	80 e0       	ldi	r24, 0x00	; 0
    1a9c:	e0 91 c7 15 	lds	r30, 0x15C7	; 0x8015c7 <pxDelayedTaskList>
    1aa0:	f0 91 c8 15 	lds	r31, 0x15C8	; 0x8015c8 <pxDelayedTaskList+0x1>
    1aa4:	90 81       	ld	r25, Z
    1aa6:	91 11       	cpse	r25, r1
    1aa8:	0c c0       	rjmp	.+24     	; 0x1ac2 <xTaskIncrementTick+0xbe>
    1aaa:	4f ef       	ldi	r20, 0xFF	; 255
    1aac:	5f ef       	ldi	r21, 0xFF	; 255
    1aae:	ba 01       	movw	r22, r20
    1ab0:	40 93 91 15 	sts	0x1591, r20	; 0x801591 <xNextTaskUnblockTime>
    1ab4:	50 93 92 15 	sts	0x1592, r21	; 0x801592 <xNextTaskUnblockTime+0x1>
    1ab8:	60 93 93 15 	sts	0x1593, r22	; 0x801593 <xNextTaskUnblockTime+0x2>
    1abc:	70 93 94 15 	sts	0x1594, r23	; 0x801594 <xNextTaskUnblockTime+0x3>
    1ac0:	9c c0       	rjmp	.+312    	; 0x1bfa <xTaskIncrementTick+0x1f6>
    1ac2:	e0 91 c7 15 	lds	r30, 0x15C7	; 0x8015c7 <pxDelayedTaskList>
    1ac6:	f0 91 c8 15 	lds	r31, 0x15C8	; 0x8015c8 <pxDelayedTaskList+0x1>
    1aca:	07 80       	ldd	r0, Z+7	; 0x07
    1acc:	f0 85       	ldd	r31, Z+8	; 0x08
    1ace:	e0 2d       	mov	r30, r0
    1ad0:	00 84       	ldd	r0, Z+8	; 0x08
    1ad2:	f1 85       	ldd	r31, Z+9	; 0x09
    1ad4:	e0 2d       	mov	r30, r0
    1ad6:	42 81       	ldd	r20, Z+2	; 0x02
    1ad8:	53 81       	ldd	r21, Z+3	; 0x03
    1ada:	64 81       	ldd	r22, Z+4	; 0x04
    1adc:	75 81       	ldd	r23, Z+5	; 0x05
    1ade:	c4 16       	cp	r12, r20
    1ae0:	d5 06       	cpc	r13, r21
    1ae2:	e6 06       	cpc	r14, r22
    1ae4:	f7 06       	cpc	r15, r23
    1ae6:	48 f4       	brcc	.+18     	; 0x1afa <xTaskIncrementTick+0xf6>
    1ae8:	40 93 91 15 	sts	0x1591, r20	; 0x801591 <xNextTaskUnblockTime>
    1aec:	50 93 92 15 	sts	0x1592, r21	; 0x801592 <xNextTaskUnblockTime+0x1>
    1af0:	60 93 93 15 	sts	0x1593, r22	; 0x801593 <xNextTaskUnblockTime+0x2>
    1af4:	70 93 94 15 	sts	0x1594, r23	; 0x801594 <xNextTaskUnblockTime+0x3>
    1af8:	80 c0       	rjmp	.+256    	; 0x1bfa <xTaskIncrementTick+0x1f6>
    1afa:	a4 85       	ldd	r26, Z+12	; 0x0c
    1afc:	b5 85       	ldd	r27, Z+13	; 0x0d
    1afe:	c6 81       	ldd	r28, Z+6	; 0x06
    1b00:	d7 81       	ldd	r29, Z+7	; 0x07
    1b02:	20 85       	ldd	r18, Z+8	; 0x08
    1b04:	31 85       	ldd	r19, Z+9	; 0x09
    1b06:	3f 83       	std	Y+7, r19	; 0x07
    1b08:	2e 83       	std	Y+6, r18	; 0x06
    1b0a:	c0 85       	ldd	r28, Z+8	; 0x08
    1b0c:	d1 85       	ldd	r29, Z+9	; 0x09
    1b0e:	26 81       	ldd	r18, Z+6	; 0x06
    1b10:	37 81       	ldd	r19, Z+7	; 0x07
    1b12:	3d 83       	std	Y+5, r19	; 0x05
    1b14:	2c 83       	std	Y+4, r18	; 0x04
    1b16:	11 96       	adiw	r26, 0x01	; 1
    1b18:	4d 91       	ld	r20, X+
    1b1a:	5c 91       	ld	r21, X
    1b1c:	12 97       	sbiw	r26, 0x02	; 2
    1b1e:	9f 01       	movw	r18, r30
    1b20:	2e 5f       	subi	r18, 0xFE	; 254
    1b22:	3f 4f       	sbci	r19, 0xFF	; 255
    1b24:	42 17       	cp	r20, r18
    1b26:	53 07       	cpc	r21, r19
    1b28:	31 f4       	brne	.+12     	; 0x1b36 <xTaskIncrementTick+0x132>
    1b2a:	40 85       	ldd	r20, Z+8	; 0x08
    1b2c:	51 85       	ldd	r21, Z+9	; 0x09
    1b2e:	12 96       	adiw	r26, 0x02	; 2
    1b30:	5c 93       	st	X, r21
    1b32:	4e 93       	st	-X, r20
    1b34:	11 97       	sbiw	r26, 0x01	; 1
    1b36:	15 86       	std	Z+13, r1	; 0x0d
    1b38:	14 86       	std	Z+12, r1	; 0x0c
    1b3a:	9c 91       	ld	r25, X
    1b3c:	91 50       	subi	r25, 0x01	; 1
    1b3e:	9c 93       	st	X, r25
    1b40:	a0 8d       	ldd	r26, Z+24	; 0x18
    1b42:	b1 8d       	ldd	r27, Z+25	; 0x19
    1b44:	10 97       	sbiw	r26, 0x00	; 0
    1b46:	09 f1       	breq	.+66     	; 0x1b8a <xTaskIncrementTick+0x186>
    1b48:	c2 89       	ldd	r28, Z+18	; 0x12
    1b4a:	d3 89       	ldd	r29, Z+19	; 0x13
    1b4c:	44 89       	ldd	r20, Z+20	; 0x14
    1b4e:	55 89       	ldd	r21, Z+21	; 0x15
    1b50:	5f 83       	std	Y+7, r21	; 0x07
    1b52:	4e 83       	std	Y+6, r20	; 0x06
    1b54:	c4 89       	ldd	r28, Z+20	; 0x14
    1b56:	d5 89       	ldd	r29, Z+21	; 0x15
    1b58:	42 89       	ldd	r20, Z+18	; 0x12
    1b5a:	53 89       	ldd	r21, Z+19	; 0x13
    1b5c:	5d 83       	std	Y+5, r21	; 0x05
    1b5e:	4c 83       	std	Y+4, r20	; 0x04
    1b60:	11 96       	adiw	r26, 0x01	; 1
    1b62:	6d 91       	ld	r22, X+
    1b64:	7c 91       	ld	r23, X
    1b66:	12 97       	sbiw	r26, 0x02	; 2
    1b68:	af 01       	movw	r20, r30
    1b6a:	42 5f       	subi	r20, 0xF2	; 242
    1b6c:	5f 4f       	sbci	r21, 0xFF	; 255
    1b6e:	64 17       	cp	r22, r20
    1b70:	75 07       	cpc	r23, r21
    1b72:	31 f4       	brne	.+12     	; 0x1b80 <xTaskIncrementTick+0x17c>
    1b74:	44 89       	ldd	r20, Z+20	; 0x14
    1b76:	55 89       	ldd	r21, Z+21	; 0x15
    1b78:	12 96       	adiw	r26, 0x02	; 2
    1b7a:	5c 93       	st	X, r21
    1b7c:	4e 93       	st	-X, r20
    1b7e:	11 97       	sbiw	r26, 0x01	; 1
    1b80:	11 8e       	std	Z+25, r1	; 0x19
    1b82:	10 8e       	std	Z+24, r1	; 0x18
    1b84:	9c 91       	ld	r25, X
    1b86:	91 50       	subi	r25, 0x01	; 1
    1b88:	9c 93       	st	X, r25
    1b8a:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1b8c:	90 91 9d 15 	lds	r25, 0x159D	; 0x80159d <uxTopReadyPriority>
    1b90:	9a 17       	cp	r25, r26
    1b92:	10 f4       	brcc	.+4      	; 0x1b98 <xTaskIncrementTick+0x194>
    1b94:	a0 93 9d 15 	sts	0x159D, r26	; 0x80159d <uxTopReadyPriority>
    1b98:	9b e0       	ldi	r25, 0x0B	; 11
    1b9a:	9a 9f       	mul	r25, r26
    1b9c:	d0 01       	movw	r26, r0
    1b9e:	11 24       	eor	r1, r1
    1ba0:	a1 52       	subi	r26, 0x21	; 33
    1ba2:	ba 4e       	sbci	r27, 0xEA	; 234
    1ba4:	11 96       	adiw	r26, 0x01	; 1
    1ba6:	0d 90       	ld	r0, X+
    1ba8:	bc 91       	ld	r27, X
    1baa:	a0 2d       	mov	r26, r0
    1bac:	b7 83       	std	Z+7, r27	; 0x07
    1bae:	a6 83       	std	Z+6, r26	; 0x06
    1bb0:	16 96       	adiw	r26, 0x06	; 6
    1bb2:	4d 91       	ld	r20, X+
    1bb4:	5c 91       	ld	r21, X
    1bb6:	17 97       	sbiw	r26, 0x07	; 7
    1bb8:	51 87       	std	Z+9, r21	; 0x09
    1bba:	40 87       	std	Z+8, r20	; 0x08
    1bbc:	16 96       	adiw	r26, 0x06	; 6
    1bbe:	cd 91       	ld	r28, X+
    1bc0:	dc 91       	ld	r29, X
    1bc2:	17 97       	sbiw	r26, 0x07	; 7
    1bc4:	3d 83       	std	Y+5, r19	; 0x05
    1bc6:	2c 83       	std	Y+4, r18	; 0x04
    1bc8:	17 96       	adiw	r26, 0x07	; 7
    1bca:	3c 93       	st	X, r19
    1bcc:	2e 93       	st	-X, r18
    1bce:	16 97       	sbiw	r26, 0x06	; 6
    1bd0:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1bd2:	9a 9f       	mul	r25, r26
    1bd4:	d0 01       	movw	r26, r0
    1bd6:	11 24       	eor	r1, r1
    1bd8:	a1 52       	subi	r26, 0x21	; 33
    1bda:	ba 4e       	sbci	r27, 0xEA	; 234
    1bdc:	b5 87       	std	Z+13, r27	; 0x0d
    1bde:	a4 87       	std	Z+12, r26	; 0x0c
    1be0:	9c 91       	ld	r25, X
    1be2:	9f 5f       	subi	r25, 0xFF	; 255
    1be4:	9c 93       	st	X, r25
    1be6:	22 8d       	ldd	r18, Z+26	; 0x1a
    1be8:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    1bec:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1bf0:	92 8d       	ldd	r25, Z+26	; 0x1a
    1bf2:	29 17       	cp	r18, r25
    1bf4:	08 f0       	brcs	.+2      	; 0x1bf8 <xTaskIncrementTick+0x1f4>
    1bf6:	4f cf       	rjmp	.-354    	; 0x1a96 <xTaskIncrementTick+0x92>
    1bf8:	51 cf       	rjmp	.-350    	; 0x1a9c <xTaskIncrementTick+0x98>
    1bfa:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    1bfe:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1c02:	e2 8d       	ldd	r30, Z+26	; 0x1a
    1c04:	9b e0       	ldi	r25, 0x0B	; 11
    1c06:	e9 9f       	mul	r30, r25
    1c08:	f0 01       	movw	r30, r0
    1c0a:	11 24       	eor	r1, r1
    1c0c:	e1 52       	subi	r30, 0x21	; 33
    1c0e:	fa 4e       	sbci	r31, 0xEA	; 234
    1c10:	90 81       	ld	r25, Z
    1c12:	92 30       	cpi	r25, 0x02	; 2
    1c14:	08 f0       	brcs	.+2      	; 0x1c18 <xTaskIncrementTick+0x214>
    1c16:	81 e0       	ldi	r24, 0x01	; 1
    1c18:	90 91 97 15 	lds	r25, 0x1597	; 0x801597 <xYieldPending>
    1c1c:	91 11       	cpse	r25, r1
    1c1e:	16 c0       	rjmp	.+44     	; 0x1c4c <xTaskIncrementTick+0x248>
    1c20:	16 c0       	rjmp	.+44     	; 0x1c4e <xTaskIncrementTick+0x24a>
    1c22:	80 91 98 15 	lds	r24, 0x1598	; 0x801598 <xPendedTicks>
    1c26:	90 91 99 15 	lds	r25, 0x1599	; 0x801599 <xPendedTicks+0x1>
    1c2a:	a0 91 9a 15 	lds	r26, 0x159A	; 0x80159a <xPendedTicks+0x2>
    1c2e:	b0 91 9b 15 	lds	r27, 0x159B	; 0x80159b <xPendedTicks+0x3>
    1c32:	01 96       	adiw	r24, 0x01	; 1
    1c34:	a1 1d       	adc	r26, r1
    1c36:	b1 1d       	adc	r27, r1
    1c38:	80 93 98 15 	sts	0x1598, r24	; 0x801598 <xPendedTicks>
    1c3c:	90 93 99 15 	sts	0x1599, r25	; 0x801599 <xPendedTicks+0x1>
    1c40:	a0 93 9a 15 	sts	0x159A, r26	; 0x80159a <xPendedTicks+0x2>
    1c44:	b0 93 9b 15 	sts	0x159B, r27	; 0x80159b <xPendedTicks+0x3>
    1c48:	80 e0       	ldi	r24, 0x00	; 0
    1c4a:	01 c0       	rjmp	.+2      	; 0x1c4e <xTaskIncrementTick+0x24a>
    1c4c:	81 e0       	ldi	r24, 0x01	; 1
    1c4e:	df 91       	pop	r29
    1c50:	cf 91       	pop	r28
    1c52:	ff 90       	pop	r15
    1c54:	ef 90       	pop	r14
    1c56:	df 90       	pop	r13
    1c58:	cf 90       	pop	r12
    1c5a:	08 95       	ret

00001c5c <xTaskResumeAll>:
    1c5c:	cf 92       	push	r12
    1c5e:	df 92       	push	r13
    1c60:	ef 92       	push	r14
    1c62:	ff 92       	push	r15
    1c64:	cf 93       	push	r28
    1c66:	df 93       	push	r29
    1c68:	0f b6       	in	r0, 0x3f	; 63
    1c6a:	f8 94       	cli
    1c6c:	0f 92       	push	r0
    1c6e:	80 91 8e 15 	lds	r24, 0x158E	; 0x80158e <uxSchedulerSuspended>
    1c72:	81 50       	subi	r24, 0x01	; 1
    1c74:	80 93 8e 15 	sts	0x158E, r24	; 0x80158e <uxSchedulerSuspended>
    1c78:	80 91 8e 15 	lds	r24, 0x158E	; 0x80158e <uxSchedulerSuspended>
    1c7c:	81 11       	cpse	r24, r1
    1c7e:	be c0       	rjmp	.+380    	; 0x1dfc <xTaskResumeAll+0x1a0>
    1c80:	80 91 a2 15 	lds	r24, 0x15A2	; 0x8015a2 <uxCurrentNumberOfTasks>
    1c84:	81 11       	cpse	r24, r1
    1c86:	88 c0       	rjmp	.+272    	; 0x1d98 <xTaskResumeAll+0x13c>
    1c88:	bc c0       	rjmp	.+376    	; 0x1e02 <xTaskResumeAll+0x1a6>
    1c8a:	e0 91 c1 15 	lds	r30, 0x15C1	; 0x8015c1 <xPendingReadyList+0x7>
    1c8e:	f0 91 c2 15 	lds	r31, 0x15C2	; 0x8015c2 <xPendingReadyList+0x8>
    1c92:	00 84       	ldd	r0, Z+8	; 0x08
    1c94:	f1 85       	ldd	r31, Z+9	; 0x09
    1c96:	e0 2d       	mov	r30, r0
    1c98:	a0 8d       	ldd	r26, Z+24	; 0x18
    1c9a:	b1 8d       	ldd	r27, Z+25	; 0x19
    1c9c:	c2 89       	ldd	r28, Z+18	; 0x12
    1c9e:	d3 89       	ldd	r29, Z+19	; 0x13
    1ca0:	84 89       	ldd	r24, Z+20	; 0x14
    1ca2:	95 89       	ldd	r25, Z+21	; 0x15
    1ca4:	9f 83       	std	Y+7, r25	; 0x07
    1ca6:	8e 83       	std	Y+6, r24	; 0x06
    1ca8:	c4 89       	ldd	r28, Z+20	; 0x14
    1caa:	d5 89       	ldd	r29, Z+21	; 0x15
    1cac:	82 89       	ldd	r24, Z+18	; 0x12
    1cae:	93 89       	ldd	r25, Z+19	; 0x13
    1cb0:	9d 83       	std	Y+5, r25	; 0x05
    1cb2:	8c 83       	std	Y+4, r24	; 0x04
    1cb4:	11 96       	adiw	r26, 0x01	; 1
    1cb6:	2d 91       	ld	r18, X+
    1cb8:	3c 91       	ld	r19, X
    1cba:	12 97       	sbiw	r26, 0x02	; 2
    1cbc:	cf 01       	movw	r24, r30
    1cbe:	0e 96       	adiw	r24, 0x0e	; 14
    1cc0:	28 17       	cp	r18, r24
    1cc2:	39 07       	cpc	r19, r25
    1cc4:	31 f4       	brne	.+12     	; 0x1cd2 <xTaskResumeAll+0x76>
    1cc6:	84 89       	ldd	r24, Z+20	; 0x14
    1cc8:	95 89       	ldd	r25, Z+21	; 0x15
    1cca:	12 96       	adiw	r26, 0x02	; 2
    1ccc:	9c 93       	st	X, r25
    1cce:	8e 93       	st	-X, r24
    1cd0:	11 97       	sbiw	r26, 0x01	; 1
    1cd2:	11 8e       	std	Z+25, r1	; 0x19
    1cd4:	10 8e       	std	Z+24, r1	; 0x18
    1cd6:	8c 91       	ld	r24, X
    1cd8:	81 50       	subi	r24, 0x01	; 1
    1cda:	8c 93       	st	X, r24
    1cdc:	a4 85       	ldd	r26, Z+12	; 0x0c
    1cde:	b5 85       	ldd	r27, Z+13	; 0x0d
    1ce0:	c6 81       	ldd	r28, Z+6	; 0x06
    1ce2:	d7 81       	ldd	r29, Z+7	; 0x07
    1ce4:	80 85       	ldd	r24, Z+8	; 0x08
    1ce6:	91 85       	ldd	r25, Z+9	; 0x09
    1ce8:	9f 83       	std	Y+7, r25	; 0x07
    1cea:	8e 83       	std	Y+6, r24	; 0x06
    1cec:	c0 85       	ldd	r28, Z+8	; 0x08
    1cee:	d1 85       	ldd	r29, Z+9	; 0x09
    1cf0:	86 81       	ldd	r24, Z+6	; 0x06
    1cf2:	97 81       	ldd	r25, Z+7	; 0x07
    1cf4:	9d 83       	std	Y+5, r25	; 0x05
    1cf6:	8c 83       	std	Y+4, r24	; 0x04
    1cf8:	11 96       	adiw	r26, 0x01	; 1
    1cfa:	8d 91       	ld	r24, X+
    1cfc:	9c 91       	ld	r25, X
    1cfe:	12 97       	sbiw	r26, 0x02	; 2
    1d00:	9f 01       	movw	r18, r30
    1d02:	2e 5f       	subi	r18, 0xFE	; 254
    1d04:	3f 4f       	sbci	r19, 0xFF	; 255
    1d06:	82 17       	cp	r24, r18
    1d08:	93 07       	cpc	r25, r19
    1d0a:	31 f4       	brne	.+12     	; 0x1d18 <xTaskResumeAll+0xbc>
    1d0c:	80 85       	ldd	r24, Z+8	; 0x08
    1d0e:	91 85       	ldd	r25, Z+9	; 0x09
    1d10:	12 96       	adiw	r26, 0x02	; 2
    1d12:	9c 93       	st	X, r25
    1d14:	8e 93       	st	-X, r24
    1d16:	11 97       	sbiw	r26, 0x01	; 1
    1d18:	15 86       	std	Z+13, r1	; 0x0d
    1d1a:	14 86       	std	Z+12, r1	; 0x0c
    1d1c:	8c 91       	ld	r24, X
    1d1e:	81 50       	subi	r24, 0x01	; 1
    1d20:	8c 93       	st	X, r24
    1d22:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1d24:	80 91 9d 15 	lds	r24, 0x159D	; 0x80159d <uxTopReadyPriority>
    1d28:	8a 17       	cp	r24, r26
    1d2a:	10 f4       	brcc	.+4      	; 0x1d30 <xTaskResumeAll+0xd4>
    1d2c:	a0 93 9d 15 	sts	0x159D, r26	; 0x80159d <uxTopReadyPriority>
    1d30:	8b e0       	ldi	r24, 0x0B	; 11
    1d32:	8a 9f       	mul	r24, r26
    1d34:	d0 01       	movw	r26, r0
    1d36:	11 24       	eor	r1, r1
    1d38:	a1 52       	subi	r26, 0x21	; 33
    1d3a:	ba 4e       	sbci	r27, 0xEA	; 234
    1d3c:	11 96       	adiw	r26, 0x01	; 1
    1d3e:	0d 90       	ld	r0, X+
    1d40:	bc 91       	ld	r27, X
    1d42:	a0 2d       	mov	r26, r0
    1d44:	b7 83       	std	Z+7, r27	; 0x07
    1d46:	a6 83       	std	Z+6, r26	; 0x06
    1d48:	16 96       	adiw	r26, 0x06	; 6
    1d4a:	4d 91       	ld	r20, X+
    1d4c:	5c 91       	ld	r21, X
    1d4e:	17 97       	sbiw	r26, 0x07	; 7
    1d50:	51 87       	std	Z+9, r21	; 0x09
    1d52:	40 87       	std	Z+8, r20	; 0x08
    1d54:	16 96       	adiw	r26, 0x06	; 6
    1d56:	cd 91       	ld	r28, X+
    1d58:	dc 91       	ld	r29, X
    1d5a:	17 97       	sbiw	r26, 0x07	; 7
    1d5c:	3d 83       	std	Y+5, r19	; 0x05
    1d5e:	2c 83       	std	Y+4, r18	; 0x04
    1d60:	17 96       	adiw	r26, 0x07	; 7
    1d62:	3c 93       	st	X, r19
    1d64:	2e 93       	st	-X, r18
    1d66:	16 97       	sbiw	r26, 0x06	; 6
    1d68:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1d6a:	8a 9f       	mul	r24, r26
    1d6c:	d0 01       	movw	r26, r0
    1d6e:	11 24       	eor	r1, r1
    1d70:	a1 52       	subi	r26, 0x21	; 33
    1d72:	ba 4e       	sbci	r27, 0xEA	; 234
    1d74:	b5 87       	std	Z+13, r27	; 0x0d
    1d76:	a4 87       	std	Z+12, r26	; 0x0c
    1d78:	8c 91       	ld	r24, X
    1d7a:	8f 5f       	subi	r24, 0xFF	; 255
    1d7c:	8c 93       	st	X, r24
    1d7e:	92 8d       	ldd	r25, Z+26	; 0x1a
    1d80:	a0 91 4d 16 	lds	r26, 0x164D	; 0x80164d <pxCurrentTCB>
    1d84:	b0 91 4e 16 	lds	r27, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1d88:	5a 96       	adiw	r26, 0x1a	; 26
    1d8a:	8c 91       	ld	r24, X
    1d8c:	98 17       	cp	r25, r24
    1d8e:	30 f0       	brcs	.+12     	; 0x1d9c <xTaskResumeAll+0x140>
    1d90:	81 e0       	ldi	r24, 0x01	; 1
    1d92:	80 93 97 15 	sts	0x1597, r24	; 0x801597 <xYieldPending>
    1d96:	02 c0       	rjmp	.+4      	; 0x1d9c <xTaskResumeAll+0x140>
    1d98:	e0 e0       	ldi	r30, 0x00	; 0
    1d9a:	f0 e0       	ldi	r31, 0x00	; 0
    1d9c:	80 91 ba 15 	lds	r24, 0x15BA	; 0x8015ba <xPendingReadyList>
    1da0:	81 11       	cpse	r24, r1
    1da2:	73 cf       	rjmp	.-282    	; 0x1c8a <xTaskResumeAll+0x2e>
    1da4:	ef 2b       	or	r30, r31
    1da6:	09 f0       	breq	.+2      	; 0x1daa <xTaskResumeAll+0x14e>
    1da8:	83 db       	rcall	.-2298   	; 0x14b0 <prvResetNextTaskUnblockTime>
    1daa:	c0 90 98 15 	lds	r12, 0x1598	; 0x801598 <xPendedTicks>
    1dae:	d0 90 99 15 	lds	r13, 0x1599	; 0x801599 <xPendedTicks+0x1>
    1db2:	e0 90 9a 15 	lds	r14, 0x159A	; 0x80159a <xPendedTicks+0x2>
    1db6:	f0 90 9b 15 	lds	r15, 0x159B	; 0x80159b <xPendedTicks+0x3>
    1dba:	c1 14       	cp	r12, r1
    1dbc:	d1 04       	cpc	r13, r1
    1dbe:	e1 04       	cpc	r14, r1
    1dc0:	f1 04       	cpc	r15, r1
    1dc2:	a1 f0       	breq	.+40     	; 0x1dec <xTaskResumeAll+0x190>
    1dc4:	1f de       	rcall	.-962    	; 0x1a04 <xTaskIncrementTick>
    1dc6:	88 23       	and	r24, r24
    1dc8:	19 f0       	breq	.+6      	; 0x1dd0 <xTaskResumeAll+0x174>
    1dca:	81 e0       	ldi	r24, 0x01	; 1
    1dcc:	80 93 97 15 	sts	0x1597, r24	; 0x801597 <xYieldPending>
    1dd0:	81 e0       	ldi	r24, 0x01	; 1
    1dd2:	c8 1a       	sub	r12, r24
    1dd4:	d1 08       	sbc	r13, r1
    1dd6:	e1 08       	sbc	r14, r1
    1dd8:	f1 08       	sbc	r15, r1
    1dda:	a1 f7       	brne	.-24     	; 0x1dc4 <xTaskResumeAll+0x168>
    1ddc:	10 92 98 15 	sts	0x1598, r1	; 0x801598 <xPendedTicks>
    1de0:	10 92 99 15 	sts	0x1599, r1	; 0x801599 <xPendedTicks+0x1>
    1de4:	10 92 9a 15 	sts	0x159A, r1	; 0x80159a <xPendedTicks+0x2>
    1de8:	10 92 9b 15 	sts	0x159B, r1	; 0x80159b <xPendedTicks+0x3>
    1dec:	80 91 97 15 	lds	r24, 0x1597	; 0x801597 <xYieldPending>
    1df0:	88 23       	and	r24, r24
    1df2:	31 f0       	breq	.+12     	; 0x1e00 <xTaskResumeAll+0x1a4>
    1df4:	0e 94 ad 03 	call	0x75a	; 0x75a <vPortYield>
    1df8:	81 e0       	ldi	r24, 0x01	; 1
    1dfa:	03 c0       	rjmp	.+6      	; 0x1e02 <xTaskResumeAll+0x1a6>
    1dfc:	80 e0       	ldi	r24, 0x00	; 0
    1dfe:	01 c0       	rjmp	.+2      	; 0x1e02 <xTaskResumeAll+0x1a6>
    1e00:	80 e0       	ldi	r24, 0x00	; 0
    1e02:	0f 90       	pop	r0
    1e04:	0f be       	out	0x3f, r0	; 63
    1e06:	df 91       	pop	r29
    1e08:	cf 91       	pop	r28
    1e0a:	ff 90       	pop	r15
    1e0c:	ef 90       	pop	r14
    1e0e:	df 90       	pop	r13
    1e10:	cf 90       	pop	r12
    1e12:	08 95       	ret

00001e14 <xTaskDelayUntil>:
    1e14:	8f 92       	push	r8
    1e16:	9f 92       	push	r9
    1e18:	af 92       	push	r10
    1e1a:	bf 92       	push	r11
    1e1c:	cf 92       	push	r12
    1e1e:	df 92       	push	r13
    1e20:	ef 92       	push	r14
    1e22:	ff 92       	push	r15
    1e24:	1f 93       	push	r17
    1e26:	cf 93       	push	r28
    1e28:	df 93       	push	r29
    1e2a:	ec 01       	movw	r28, r24
    1e2c:	6a 01       	movw	r12, r20
    1e2e:	7b 01       	movw	r14, r22
    1e30:	d5 dd       	rcall	.-1110   	; 0x19dc <vTaskSuspendAll>
    1e32:	80 90 9e 15 	lds	r8, 0x159E	; 0x80159e <xTickCount>
    1e36:	90 90 9f 15 	lds	r9, 0x159F	; 0x80159f <xTickCount+0x1>
    1e3a:	a0 90 a0 15 	lds	r10, 0x15A0	; 0x8015a0 <xTickCount+0x2>
    1e3e:	b0 90 a1 15 	lds	r11, 0x15A1	; 0x8015a1 <xTickCount+0x3>
    1e42:	88 81       	ld	r24, Y
    1e44:	99 81       	ldd	r25, Y+1	; 0x01
    1e46:	aa 81       	ldd	r26, Y+2	; 0x02
    1e48:	bb 81       	ldd	r27, Y+3	; 0x03
    1e4a:	ac 01       	movw	r20, r24
    1e4c:	bd 01       	movw	r22, r26
    1e4e:	4c 0d       	add	r20, r12
    1e50:	5d 1d       	adc	r21, r13
    1e52:	6e 1d       	adc	r22, r14
    1e54:	7f 1d       	adc	r23, r15
    1e56:	88 16       	cp	r8, r24
    1e58:	99 06       	cpc	r9, r25
    1e5a:	aa 06       	cpc	r10, r26
    1e5c:	bb 06       	cpc	r11, r27
    1e5e:	60 f4       	brcc	.+24     	; 0x1e78 <xTaskDelayUntil+0x64>
    1e60:	48 17       	cp	r20, r24
    1e62:	59 07       	cpc	r21, r25
    1e64:	6a 07       	cpc	r22, r26
    1e66:	7b 07       	cpc	r23, r27
    1e68:	98 f4       	brcc	.+38     	; 0x1e90 <xTaskDelayUntil+0x7c>
    1e6a:	84 16       	cp	r8, r20
    1e6c:	95 06       	cpc	r9, r21
    1e6e:	a6 06       	cpc	r10, r22
    1e70:	b7 06       	cpc	r11, r23
    1e72:	80 f0       	brcs	.+32     	; 0x1e94 <xTaskDelayUntil+0x80>
    1e74:	10 e0       	ldi	r17, 0x00	; 0
    1e76:	13 c0       	rjmp	.+38     	; 0x1e9e <xTaskDelayUntil+0x8a>
    1e78:	48 17       	cp	r20, r24
    1e7a:	59 07       	cpc	r21, r25
    1e7c:	6a 07       	cpc	r22, r26
    1e7e:	7b 07       	cpc	r23, r27
    1e80:	58 f0       	brcs	.+22     	; 0x1e98 <xTaskDelayUntil+0x84>
    1e82:	84 16       	cp	r8, r20
    1e84:	95 06       	cpc	r9, r21
    1e86:	a6 06       	cpc	r10, r22
    1e88:	b7 06       	cpc	r11, r23
    1e8a:	40 f0       	brcs	.+16     	; 0x1e9c <xTaskDelayUntil+0x88>
    1e8c:	10 e0       	ldi	r17, 0x00	; 0
    1e8e:	07 c0       	rjmp	.+14     	; 0x1e9e <xTaskDelayUntil+0x8a>
    1e90:	10 e0       	ldi	r17, 0x00	; 0
    1e92:	05 c0       	rjmp	.+10     	; 0x1e9e <xTaskDelayUntil+0x8a>
    1e94:	11 e0       	ldi	r17, 0x01	; 1
    1e96:	03 c0       	rjmp	.+6      	; 0x1e9e <xTaskDelayUntil+0x8a>
    1e98:	11 e0       	ldi	r17, 0x01	; 1
    1e9a:	01 c0       	rjmp	.+2      	; 0x1e9e <xTaskDelayUntil+0x8a>
    1e9c:	11 e0       	ldi	r17, 0x01	; 1
    1e9e:	48 83       	st	Y, r20
    1ea0:	59 83       	std	Y+1, r21	; 0x01
    1ea2:	6a 83       	std	Y+2, r22	; 0x02
    1ea4:	7b 83       	std	Y+3, r23	; 0x03
    1ea6:	11 23       	and	r17, r17
    1ea8:	41 f0       	breq	.+16     	; 0x1eba <xTaskDelayUntil+0xa6>
    1eaa:	cb 01       	movw	r24, r22
    1eac:	ba 01       	movw	r22, r20
    1eae:	68 19       	sub	r22, r8
    1eb0:	79 09       	sbc	r23, r9
    1eb2:	8a 09       	sbc	r24, r10
    1eb4:	9b 09       	sbc	r25, r11
    1eb6:	40 e0       	ldi	r20, 0x00	; 0
    1eb8:	6b dc       	rcall	.-1834   	; 0x1790 <prvAddCurrentTaskToDelayedList>
    1eba:	d0 de       	rcall	.-608    	; 0x1c5c <xTaskResumeAll>
    1ebc:	81 11       	cpse	r24, r1
    1ebe:	02 c0       	rjmp	.+4      	; 0x1ec4 <xTaskDelayUntil+0xb0>
    1ec0:	0e 94 ad 03 	call	0x75a	; 0x75a <vPortYield>
    1ec4:	81 2f       	mov	r24, r17
    1ec6:	df 91       	pop	r29
    1ec8:	cf 91       	pop	r28
    1eca:	1f 91       	pop	r17
    1ecc:	ff 90       	pop	r15
    1ece:	ef 90       	pop	r14
    1ed0:	df 90       	pop	r13
    1ed2:	cf 90       	pop	r12
    1ed4:	bf 90       	pop	r11
    1ed6:	af 90       	pop	r10
    1ed8:	9f 90       	pop	r9
    1eda:	8f 90       	pop	r8
    1edc:	08 95       	ret

00001ede <vTaskDelay>:
    1ede:	cf 92       	push	r12
    1ee0:	df 92       	push	r13
    1ee2:	ef 92       	push	r14
    1ee4:	ff 92       	push	r15
    1ee6:	6b 01       	movw	r12, r22
    1ee8:	7c 01       	movw	r14, r24
    1eea:	67 2b       	or	r22, r23
    1eec:	68 2b       	or	r22, r24
    1eee:	69 2b       	or	r22, r25
    1ef0:	39 f0       	breq	.+14     	; 0x1f00 <vTaskDelay+0x22>
    1ef2:	74 dd       	rcall	.-1304   	; 0x19dc <vTaskSuspendAll>
    1ef4:	40 e0       	ldi	r20, 0x00	; 0
    1ef6:	c7 01       	movw	r24, r14
    1ef8:	b6 01       	movw	r22, r12
    1efa:	4a dc       	rcall	.-1900   	; 0x1790 <prvAddCurrentTaskToDelayedList>
    1efc:	af de       	rcall	.-674    	; 0x1c5c <xTaskResumeAll>
    1efe:	01 c0       	rjmp	.+2      	; 0x1f02 <vTaskDelay+0x24>
    1f00:	80 e0       	ldi	r24, 0x00	; 0
    1f02:	81 11       	cpse	r24, r1
    1f04:	02 c0       	rjmp	.+4      	; 0x1f0a <vTaskDelay+0x2c>
    1f06:	0e 94 ad 03 	call	0x75a	; 0x75a <vPortYield>
    1f0a:	ff 90       	pop	r15
    1f0c:	ef 90       	pop	r14
    1f0e:	df 90       	pop	r13
    1f10:	cf 90       	pop	r12
    1f12:	08 95       	ret

00001f14 <vTaskSwitchContext>:
    1f14:	80 91 8e 15 	lds	r24, 0x158E	; 0x80158e <uxSchedulerSuspended>
    1f18:	88 23       	and	r24, r24
    1f1a:	21 f0       	breq	.+8      	; 0x1f24 <vTaskSwitchContext+0x10>
    1f1c:	81 e0       	ldi	r24, 0x01	; 1
    1f1e:	80 93 97 15 	sts	0x1597, r24	; 0x801597 <xYieldPending>
    1f22:	08 95       	ret
    1f24:	10 92 97 15 	sts	0x1597, r1	; 0x801597 <xYieldPending>
    1f28:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    1f2c:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1f30:	20 81       	ld	r18, Z
    1f32:	31 81       	ldd	r19, Z+1	; 0x01
    1f34:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    1f38:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1f3c:	83 8d       	ldd	r24, Z+27	; 0x1b
    1f3e:	94 8d       	ldd	r25, Z+28	; 0x1c
    1f40:	82 17       	cp	r24, r18
    1f42:	93 07       	cpc	r25, r19
    1f44:	60 f0       	brcs	.+24     	; 0x1f5e <vTaskSwitchContext+0x4a>
    1f46:	60 91 4d 16 	lds	r22, 0x164D	; 0x80164d <pxCurrentTCB>
    1f4a:	70 91 4e 16 	lds	r23, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1f4e:	63 5e       	subi	r22, 0xE3	; 227
    1f50:	7f 4f       	sbci	r23, 0xFF	; 255
    1f52:	80 91 4d 16 	lds	r24, 0x164D	; 0x80164d <pxCurrentTCB>
    1f56:	90 91 4e 16 	lds	r25, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1f5a:	0e 94 e8 17 	call	0x2fd0	; 0x2fd0 <vApplicationStackOverflowHook>
    1f5e:	80 91 9d 15 	lds	r24, 0x159D	; 0x80159d <uxTopReadyPriority>
    1f62:	01 c0       	rjmp	.+2      	; 0x1f66 <vTaskSwitchContext+0x52>
    1f64:	81 50       	subi	r24, 0x01	; 1
    1f66:	28 2f       	mov	r18, r24
    1f68:	30 e0       	ldi	r19, 0x00	; 0
    1f6a:	9b e0       	ldi	r25, 0x0B	; 11
    1f6c:	92 9f       	mul	r25, r18
    1f6e:	f0 01       	movw	r30, r0
    1f70:	93 9f       	mul	r25, r19
    1f72:	f0 0d       	add	r31, r0
    1f74:	11 24       	eor	r1, r1
    1f76:	e1 52       	subi	r30, 0x21	; 33
    1f78:	fa 4e       	sbci	r31, 0xEA	; 234
    1f7a:	90 81       	ld	r25, Z
    1f7c:	99 23       	and	r25, r25
    1f7e:	91 f3       	breq	.-28     	; 0x1f64 <vTaskSwitchContext+0x50>
    1f80:	9b e0       	ldi	r25, 0x0B	; 11
    1f82:	92 9f       	mul	r25, r18
    1f84:	a0 01       	movw	r20, r0
    1f86:	93 9f       	mul	r25, r19
    1f88:	50 0d       	add	r21, r0
    1f8a:	11 24       	eor	r1, r1
    1f8c:	df 01       	movw	r26, r30
    1f8e:	01 80       	ldd	r0, Z+1	; 0x01
    1f90:	f2 81       	ldd	r31, Z+2	; 0x02
    1f92:	e0 2d       	mov	r30, r0
    1f94:	04 80       	ldd	r0, Z+4	; 0x04
    1f96:	f5 81       	ldd	r31, Z+5	; 0x05
    1f98:	e0 2d       	mov	r30, r0
    1f9a:	12 96       	adiw	r26, 0x02	; 2
    1f9c:	fc 93       	st	X, r31
    1f9e:	ee 93       	st	-X, r30
    1fa0:	11 97       	sbiw	r26, 0x01	; 1
    1fa2:	4e 51       	subi	r20, 0x1E	; 30
    1fa4:	5a 4e       	sbci	r21, 0xEA	; 234
    1fa6:	e4 17       	cp	r30, r20
    1fa8:	f5 07       	cpc	r31, r21
    1faa:	29 f4       	brne	.+10     	; 0x1fb6 <vTaskSwitchContext+0xa2>
    1fac:	44 81       	ldd	r20, Z+4	; 0x04
    1fae:	55 81       	ldd	r21, Z+5	; 0x05
    1fb0:	fd 01       	movw	r30, r26
    1fb2:	52 83       	std	Z+2, r21	; 0x02
    1fb4:	41 83       	std	Z+1, r20	; 0x01
    1fb6:	9b e0       	ldi	r25, 0x0B	; 11
    1fb8:	92 9f       	mul	r25, r18
    1fba:	f0 01       	movw	r30, r0
    1fbc:	93 9f       	mul	r25, r19
    1fbe:	f0 0d       	add	r31, r0
    1fc0:	11 24       	eor	r1, r1
    1fc2:	e1 52       	subi	r30, 0x21	; 33
    1fc4:	fa 4e       	sbci	r31, 0xEA	; 234
    1fc6:	01 80       	ldd	r0, Z+1	; 0x01
    1fc8:	f2 81       	ldd	r31, Z+2	; 0x02
    1fca:	e0 2d       	mov	r30, r0
    1fcc:	20 85       	ldd	r18, Z+8	; 0x08
    1fce:	31 85       	ldd	r19, Z+9	; 0x09
    1fd0:	30 93 4e 16 	sts	0x164E, r19	; 0x80164e <pxCurrentTCB+0x1>
    1fd4:	20 93 4d 16 	sts	0x164D, r18	; 0x80164d <pxCurrentTCB>
    1fd8:	80 93 9d 15 	sts	0x159D, r24	; 0x80159d <uxTopReadyPriority>
    1fdc:	08 95       	ret

00001fde <vTaskPlaceOnEventList>:
    1fde:	cf 92       	push	r12
    1fe0:	df 92       	push	r13
    1fe2:	ef 92       	push	r14
    1fe4:	ff 92       	push	r15
    1fe6:	6a 01       	movw	r12, r20
    1fe8:	7b 01       	movw	r14, r22
    1fea:	60 91 4d 16 	lds	r22, 0x164D	; 0x80164d <pxCurrentTCB>
    1fee:	70 91 4e 16 	lds	r23, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    1ff2:	62 5f       	subi	r22, 0xF2	; 242
    1ff4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ff6:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <vListInsert>
    1ffa:	41 e0       	ldi	r20, 0x01	; 1
    1ffc:	c7 01       	movw	r24, r14
    1ffe:	b6 01       	movw	r22, r12
    2000:	c7 db       	rcall	.-2162   	; 0x1790 <prvAddCurrentTaskToDelayedList>
    2002:	ff 90       	pop	r15
    2004:	ef 90       	pop	r14
    2006:	df 90       	pop	r13
    2008:	cf 90       	pop	r12
    200a:	08 95       	ret

0000200c <vTaskPlaceOnEventListRestricted>:
    200c:	cf 93       	push	r28
    200e:	df 93       	push	r29
    2010:	fc 01       	movw	r30, r24
    2012:	cb 01       	movw	r24, r22
    2014:	ba 01       	movw	r22, r20
    2016:	a1 81       	ldd	r26, Z+1	; 0x01
    2018:	b2 81       	ldd	r27, Z+2	; 0x02
    201a:	c0 91 4d 16 	lds	r28, 0x164D	; 0x80164d <pxCurrentTCB>
    201e:	d0 91 4e 16 	lds	r29, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    2022:	bb 8b       	std	Y+19, r27	; 0x13
    2024:	aa 8b       	std	Y+18, r26	; 0x12
    2026:	c0 91 4d 16 	lds	r28, 0x164D	; 0x80164d <pxCurrentTCB>
    202a:	d0 91 4e 16 	lds	r29, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    202e:	16 96       	adiw	r26, 0x06	; 6
    2030:	4d 91       	ld	r20, X+
    2032:	5c 91       	ld	r21, X
    2034:	17 97       	sbiw	r26, 0x07	; 7
    2036:	5d 8b       	std	Y+21, r21	; 0x15
    2038:	4c 8b       	std	Y+20, r20	; 0x14
    203a:	16 96       	adiw	r26, 0x06	; 6
    203c:	cd 91       	ld	r28, X+
    203e:	dc 91       	ld	r29, X
    2040:	17 97       	sbiw	r26, 0x07	; 7
    2042:	40 91 4d 16 	lds	r20, 0x164D	; 0x80164d <pxCurrentTCB>
    2046:	50 91 4e 16 	lds	r21, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    204a:	42 5f       	subi	r20, 0xF2	; 242
    204c:	5f 4f       	sbci	r21, 0xFF	; 255
    204e:	5d 83       	std	Y+5, r21	; 0x05
    2050:	4c 83       	std	Y+4, r20	; 0x04
    2052:	40 91 4d 16 	lds	r20, 0x164D	; 0x80164d <pxCurrentTCB>
    2056:	50 91 4e 16 	lds	r21, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    205a:	42 5f       	subi	r20, 0xF2	; 242
    205c:	5f 4f       	sbci	r21, 0xFF	; 255
    205e:	17 96       	adiw	r26, 0x07	; 7
    2060:	5c 93       	st	X, r21
    2062:	4e 93       	st	-X, r20
    2064:	16 97       	sbiw	r26, 0x06	; 6
    2066:	a0 91 4d 16 	lds	r26, 0x164D	; 0x80164d <pxCurrentTCB>
    206a:	b0 91 4e 16 	lds	r27, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    206e:	59 96       	adiw	r26, 0x19	; 25
    2070:	fc 93       	st	X, r31
    2072:	ee 93       	st	-X, r30
    2074:	58 97       	sbiw	r26, 0x18	; 24
    2076:	30 81       	ld	r19, Z
    2078:	3f 5f       	subi	r19, 0xFF	; 255
    207a:	30 83       	st	Z, r19
    207c:	22 23       	and	r18, r18
    207e:	19 f0       	breq	.+6      	; 0x2086 <vTaskPlaceOnEventListRestricted+0x7a>
    2080:	6f ef       	ldi	r22, 0xFF	; 255
    2082:	7f ef       	ldi	r23, 0xFF	; 255
    2084:	cb 01       	movw	r24, r22
    2086:	42 2f       	mov	r20, r18
    2088:	83 db       	rcall	.-2298   	; 0x1790 <prvAddCurrentTaskToDelayedList>
    208a:	df 91       	pop	r29
    208c:	cf 91       	pop	r28
    208e:	08 95       	ret

00002090 <xTaskRemoveFromEventList>:
    2090:	cf 93       	push	r28
    2092:	df 93       	push	r29
    2094:	dc 01       	movw	r26, r24
    2096:	17 96       	adiw	r26, 0x07	; 7
    2098:	ed 91       	ld	r30, X+
    209a:	fc 91       	ld	r31, X
    209c:	18 97       	sbiw	r26, 0x08	; 8
    209e:	00 84       	ldd	r0, Z+8	; 0x08
    20a0:	f1 85       	ldd	r31, Z+9	; 0x09
    20a2:	e0 2d       	mov	r30, r0
    20a4:	a0 8d       	ldd	r26, Z+24	; 0x18
    20a6:	b1 8d       	ldd	r27, Z+25	; 0x19
    20a8:	c2 89       	ldd	r28, Z+18	; 0x12
    20aa:	d3 89       	ldd	r29, Z+19	; 0x13
    20ac:	84 89       	ldd	r24, Z+20	; 0x14
    20ae:	95 89       	ldd	r25, Z+21	; 0x15
    20b0:	9f 83       	std	Y+7, r25	; 0x07
    20b2:	8e 83       	std	Y+6, r24	; 0x06
    20b4:	c4 89       	ldd	r28, Z+20	; 0x14
    20b6:	d5 89       	ldd	r29, Z+21	; 0x15
    20b8:	82 89       	ldd	r24, Z+18	; 0x12
    20ba:	93 89       	ldd	r25, Z+19	; 0x13
    20bc:	9d 83       	std	Y+5, r25	; 0x05
    20be:	8c 83       	std	Y+4, r24	; 0x04
    20c0:	11 96       	adiw	r26, 0x01	; 1
    20c2:	8d 91       	ld	r24, X+
    20c4:	9c 91       	ld	r25, X
    20c6:	12 97       	sbiw	r26, 0x02	; 2
    20c8:	9f 01       	movw	r18, r30
    20ca:	22 5f       	subi	r18, 0xF2	; 242
    20cc:	3f 4f       	sbci	r19, 0xFF	; 255
    20ce:	82 17       	cp	r24, r18
    20d0:	93 07       	cpc	r25, r19
    20d2:	31 f4       	brne	.+12     	; 0x20e0 <xTaskRemoveFromEventList+0x50>
    20d4:	84 89       	ldd	r24, Z+20	; 0x14
    20d6:	95 89       	ldd	r25, Z+21	; 0x15
    20d8:	12 96       	adiw	r26, 0x02	; 2
    20da:	9c 93       	st	X, r25
    20dc:	8e 93       	st	-X, r24
    20de:	11 97       	sbiw	r26, 0x01	; 1
    20e0:	11 8e       	std	Z+25, r1	; 0x19
    20e2:	10 8e       	std	Z+24, r1	; 0x18
    20e4:	8c 91       	ld	r24, X
    20e6:	81 50       	subi	r24, 0x01	; 1
    20e8:	8c 93       	st	X, r24
    20ea:	80 91 8e 15 	lds	r24, 0x158E	; 0x80158e <uxSchedulerSuspended>
    20ee:	81 11       	cpse	r24, r1
    20f0:	52 c0       	rjmp	.+164    	; 0x2196 <xTaskRemoveFromEventList+0x106>
    20f2:	a4 85       	ldd	r26, Z+12	; 0x0c
    20f4:	b5 85       	ldd	r27, Z+13	; 0x0d
    20f6:	c6 81       	ldd	r28, Z+6	; 0x06
    20f8:	d7 81       	ldd	r29, Z+7	; 0x07
    20fa:	80 85       	ldd	r24, Z+8	; 0x08
    20fc:	91 85       	ldd	r25, Z+9	; 0x09
    20fe:	9f 83       	std	Y+7, r25	; 0x07
    2100:	8e 83       	std	Y+6, r24	; 0x06
    2102:	c0 85       	ldd	r28, Z+8	; 0x08
    2104:	d1 85       	ldd	r29, Z+9	; 0x09
    2106:	86 81       	ldd	r24, Z+6	; 0x06
    2108:	97 81       	ldd	r25, Z+7	; 0x07
    210a:	9d 83       	std	Y+5, r25	; 0x05
    210c:	8c 83       	std	Y+4, r24	; 0x04
    210e:	11 96       	adiw	r26, 0x01	; 1
    2110:	8d 91       	ld	r24, X+
    2112:	9c 91       	ld	r25, X
    2114:	12 97       	sbiw	r26, 0x02	; 2
    2116:	9f 01       	movw	r18, r30
    2118:	2e 5f       	subi	r18, 0xFE	; 254
    211a:	3f 4f       	sbci	r19, 0xFF	; 255
    211c:	82 17       	cp	r24, r18
    211e:	93 07       	cpc	r25, r19
    2120:	31 f4       	brne	.+12     	; 0x212e <xTaskRemoveFromEventList+0x9e>
    2122:	80 85       	ldd	r24, Z+8	; 0x08
    2124:	91 85       	ldd	r25, Z+9	; 0x09
    2126:	12 96       	adiw	r26, 0x02	; 2
    2128:	9c 93       	st	X, r25
    212a:	8e 93       	st	-X, r24
    212c:	11 97       	sbiw	r26, 0x01	; 1
    212e:	15 86       	std	Z+13, r1	; 0x0d
    2130:	14 86       	std	Z+12, r1	; 0x0c
    2132:	8c 91       	ld	r24, X
    2134:	81 50       	subi	r24, 0x01	; 1
    2136:	8c 93       	st	X, r24
    2138:	a2 8d       	ldd	r26, Z+26	; 0x1a
    213a:	80 91 9d 15 	lds	r24, 0x159D	; 0x80159d <uxTopReadyPriority>
    213e:	8a 17       	cp	r24, r26
    2140:	10 f4       	brcc	.+4      	; 0x2146 <xTaskRemoveFromEventList+0xb6>
    2142:	a0 93 9d 15 	sts	0x159D, r26	; 0x80159d <uxTopReadyPriority>
    2146:	8b e0       	ldi	r24, 0x0B	; 11
    2148:	8a 9f       	mul	r24, r26
    214a:	d0 01       	movw	r26, r0
    214c:	11 24       	eor	r1, r1
    214e:	a1 52       	subi	r26, 0x21	; 33
    2150:	ba 4e       	sbci	r27, 0xEA	; 234
    2152:	11 96       	adiw	r26, 0x01	; 1
    2154:	0d 90       	ld	r0, X+
    2156:	bc 91       	ld	r27, X
    2158:	a0 2d       	mov	r26, r0
    215a:	b7 83       	std	Z+7, r27	; 0x07
    215c:	a6 83       	std	Z+6, r26	; 0x06
    215e:	16 96       	adiw	r26, 0x06	; 6
    2160:	4d 91       	ld	r20, X+
    2162:	5c 91       	ld	r21, X
    2164:	17 97       	sbiw	r26, 0x07	; 7
    2166:	51 87       	std	Z+9, r21	; 0x09
    2168:	40 87       	std	Z+8, r20	; 0x08
    216a:	16 96       	adiw	r26, 0x06	; 6
    216c:	cd 91       	ld	r28, X+
    216e:	dc 91       	ld	r29, X
    2170:	17 97       	sbiw	r26, 0x07	; 7
    2172:	3d 83       	std	Y+5, r19	; 0x05
    2174:	2c 83       	std	Y+4, r18	; 0x04
    2176:	17 96       	adiw	r26, 0x07	; 7
    2178:	3c 93       	st	X, r19
    217a:	2e 93       	st	-X, r18
    217c:	16 97       	sbiw	r26, 0x06	; 6
    217e:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2180:	8a 9f       	mul	r24, r26
    2182:	d0 01       	movw	r26, r0
    2184:	11 24       	eor	r1, r1
    2186:	a1 52       	subi	r26, 0x21	; 33
    2188:	ba 4e       	sbci	r27, 0xEA	; 234
    218a:	b5 87       	std	Z+13, r27	; 0x0d
    218c:	a4 87       	std	Z+12, r26	; 0x0c
    218e:	8c 91       	ld	r24, X
    2190:	8f 5f       	subi	r24, 0xFF	; 255
    2192:	8c 93       	st	X, r24
    2194:	1c c0       	rjmp	.+56     	; 0x21ce <xTaskRemoveFromEventList+0x13e>
    2196:	4a eb       	ldi	r20, 0xBA	; 186
    2198:	55 e1       	ldi	r21, 0x15	; 21
    219a:	da 01       	movw	r26, r20
    219c:	11 96       	adiw	r26, 0x01	; 1
    219e:	cd 91       	ld	r28, X+
    21a0:	dc 91       	ld	r29, X
    21a2:	12 97       	sbiw	r26, 0x02	; 2
    21a4:	d3 8b       	std	Z+19, r29	; 0x13
    21a6:	c2 8b       	std	Z+18, r28	; 0x12
    21a8:	8e 81       	ldd	r24, Y+6	; 0x06
    21aa:	9f 81       	ldd	r25, Y+7	; 0x07
    21ac:	95 8b       	std	Z+21, r25	; 0x15
    21ae:	84 8b       	std	Z+20, r24	; 0x14
    21b0:	8e 81       	ldd	r24, Y+6	; 0x06
    21b2:	9f 81       	ldd	r25, Y+7	; 0x07
    21b4:	dc 01       	movw	r26, r24
    21b6:	15 96       	adiw	r26, 0x05	; 5
    21b8:	3c 93       	st	X, r19
    21ba:	2e 93       	st	-X, r18
    21bc:	14 97       	sbiw	r26, 0x04	; 4
    21be:	3f 83       	std	Y+7, r19	; 0x07
    21c0:	2e 83       	std	Y+6, r18	; 0x06
    21c2:	51 8f       	std	Z+25, r21	; 0x19
    21c4:	40 8f       	std	Z+24, r20	; 0x18
    21c6:	da 01       	movw	r26, r20
    21c8:	8c 91       	ld	r24, X
    21ca:	8f 5f       	subi	r24, 0xFF	; 255
    21cc:	8c 93       	st	X, r24
    21ce:	92 8d       	ldd	r25, Z+26	; 0x1a
    21d0:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    21d4:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    21d8:	82 8d       	ldd	r24, Z+26	; 0x1a
    21da:	89 17       	cp	r24, r25
    21dc:	20 f4       	brcc	.+8      	; 0x21e6 <xTaskRemoveFromEventList+0x156>
    21de:	81 e0       	ldi	r24, 0x01	; 1
    21e0:	80 93 97 15 	sts	0x1597, r24	; 0x801597 <xYieldPending>
    21e4:	01 c0       	rjmp	.+2      	; 0x21e8 <xTaskRemoveFromEventList+0x158>
    21e6:	80 e0       	ldi	r24, 0x00	; 0
    21e8:	df 91       	pop	r29
    21ea:	cf 91       	pop	r28
    21ec:	08 95       	ret

000021ee <vTaskSetTimeOutState>:
    21ee:	0f b6       	in	r0, 0x3f	; 63
    21f0:	f8 94       	cli
    21f2:	0f 92       	push	r0
    21f4:	20 91 96 15 	lds	r18, 0x1596	; 0x801596 <xNumOfOverflows>
    21f8:	fc 01       	movw	r30, r24
    21fa:	20 83       	st	Z, r18
    21fc:	40 91 9e 15 	lds	r20, 0x159E	; 0x80159e <xTickCount>
    2200:	50 91 9f 15 	lds	r21, 0x159F	; 0x80159f <xTickCount+0x1>
    2204:	60 91 a0 15 	lds	r22, 0x15A0	; 0x8015a0 <xTickCount+0x2>
    2208:	70 91 a1 15 	lds	r23, 0x15A1	; 0x8015a1 <xTickCount+0x3>
    220c:	41 83       	std	Z+1, r20	; 0x01
    220e:	52 83       	std	Z+2, r21	; 0x02
    2210:	63 83       	std	Z+3, r22	; 0x03
    2212:	74 83       	std	Z+4, r23	; 0x04
    2214:	0f 90       	pop	r0
    2216:	0f be       	out	0x3f, r0	; 63
    2218:	08 95       	ret

0000221a <vTaskInternalSetTimeOutState>:
    221a:	20 91 96 15 	lds	r18, 0x1596	; 0x801596 <xNumOfOverflows>
    221e:	fc 01       	movw	r30, r24
    2220:	20 83       	st	Z, r18
    2222:	40 91 9e 15 	lds	r20, 0x159E	; 0x80159e <xTickCount>
    2226:	50 91 9f 15 	lds	r21, 0x159F	; 0x80159f <xTickCount+0x1>
    222a:	60 91 a0 15 	lds	r22, 0x15A0	; 0x8015a0 <xTickCount+0x2>
    222e:	70 91 a1 15 	lds	r23, 0x15A1	; 0x8015a1 <xTickCount+0x3>
    2232:	41 83       	std	Z+1, r20	; 0x01
    2234:	52 83       	std	Z+2, r21	; 0x02
    2236:	63 83       	std	Z+3, r22	; 0x03
    2238:	74 83       	std	Z+4, r23	; 0x04
    223a:	08 95       	ret

0000223c <xTaskCheckForTimeOut>:
    223c:	8f 92       	push	r8
    223e:	9f 92       	push	r9
    2240:	af 92       	push	r10
    2242:	bf 92       	push	r11
    2244:	cf 92       	push	r12
    2246:	df 92       	push	r13
    2248:	ef 92       	push	r14
    224a:	ff 92       	push	r15
    224c:	0f 93       	push	r16
    224e:	1f 93       	push	r17
    2250:	cf 93       	push	r28
    2252:	df 93       	push	r29
    2254:	fb 01       	movw	r30, r22
    2256:	0f b6       	in	r0, 0x3f	; 63
    2258:	f8 94       	cli
    225a:	0f 92       	push	r0
    225c:	c0 90 9e 15 	lds	r12, 0x159E	; 0x80159e <xTickCount>
    2260:	d0 90 9f 15 	lds	r13, 0x159F	; 0x80159f <xTickCount+0x1>
    2264:	e0 90 a0 15 	lds	r14, 0x15A0	; 0x8015a0 <xTickCount+0x2>
    2268:	f0 90 a1 15 	lds	r15, 0x15A1	; 0x8015a1 <xTickCount+0x3>
    226c:	dc 01       	movw	r26, r24
    226e:	11 96       	adiw	r26, 0x01	; 1
    2270:	0d 91       	ld	r16, X+
    2272:	1d 91       	ld	r17, X+
    2274:	2d 91       	ld	r18, X+
    2276:	3c 91       	ld	r19, X
    2278:	14 97       	sbiw	r26, 0x04	; 4
    227a:	46 01       	movw	r8, r12
    227c:	57 01       	movw	r10, r14
    227e:	80 1a       	sub	r8, r16
    2280:	91 0a       	sbc	r9, r17
    2282:	a2 0a       	sbc	r10, r18
    2284:	b3 0a       	sbc	r11, r19
    2286:	40 81       	ld	r20, Z
    2288:	51 81       	ldd	r21, Z+1	; 0x01
    228a:	62 81       	ldd	r22, Z+2	; 0x02
    228c:	73 81       	ldd	r23, Z+3	; 0x03
    228e:	4f 3f       	cpi	r20, 0xFF	; 255
    2290:	bf ef       	ldi	r27, 0xFF	; 255
    2292:	5b 07       	cpc	r21, r27
    2294:	6b 07       	cpc	r22, r27
    2296:	7b 07       	cpc	r23, r27
    2298:	39 f1       	breq	.+78     	; 0x22e8 <xTaskCheckForTimeOut+0xac>
    229a:	ec 01       	movw	r28, r24
    229c:	b8 81       	ld	r27, Y
    229e:	a0 91 96 15 	lds	r26, 0x1596	; 0x801596 <xNumOfOverflows>
    22a2:	ba 17       	cp	r27, r26
    22a4:	59 f0       	breq	.+22     	; 0x22bc <xTaskCheckForTimeOut+0x80>
    22a6:	c0 16       	cp	r12, r16
    22a8:	d1 06       	cpc	r13, r17
    22aa:	e2 06       	cpc	r14, r18
    22ac:	f3 06       	cpc	r15, r19
    22ae:	30 f0       	brcs	.+12     	; 0x22bc <xTaskCheckForTimeOut+0x80>
    22b0:	10 82       	st	Z, r1
    22b2:	11 82       	std	Z+1, r1	; 0x01
    22b4:	12 82       	std	Z+2, r1	; 0x02
    22b6:	13 82       	std	Z+3, r1	; 0x03
    22b8:	81 e0       	ldi	r24, 0x01	; 1
    22ba:	17 c0       	rjmp	.+46     	; 0x22ea <xTaskCheckForTimeOut+0xae>
    22bc:	84 16       	cp	r8, r20
    22be:	95 06       	cpc	r9, r21
    22c0:	a6 06       	cpc	r10, r22
    22c2:	b7 06       	cpc	r11, r23
    22c4:	58 f4       	brcc	.+22     	; 0x22dc <xTaskCheckForTimeOut+0xa0>
    22c6:	48 19       	sub	r20, r8
    22c8:	59 09       	sbc	r21, r9
    22ca:	6a 09       	sbc	r22, r10
    22cc:	7b 09       	sbc	r23, r11
    22ce:	40 83       	st	Z, r20
    22d0:	51 83       	std	Z+1, r21	; 0x01
    22d2:	62 83       	std	Z+2, r22	; 0x02
    22d4:	73 83       	std	Z+3, r23	; 0x03
    22d6:	a1 df       	rcall	.-190    	; 0x221a <vTaskInternalSetTimeOutState>
    22d8:	80 e0       	ldi	r24, 0x00	; 0
<<<<<<< HEAD
    22da:	08 95       	ret

000022dc <xTaskPriorityDisinherit>:
    22dc:	0f 93       	push	r16
    22de:	1f 93       	push	r17
    22e0:	cf 93       	push	r28
    22e2:	df 93       	push	r29
    22e4:	fc 01       	movw	r30, r24
    22e6:	89 2b       	or	r24, r25
    22e8:	09 f4       	brne	.+2      	; 0x22ec <xTaskPriorityDisinherit+0x10>
    22ea:	49 c0       	rjmp	.+146    	; 0x237e <xTaskPriorityDisinherit+0xa2>
    22ec:	86 a5       	ldd	r24, Z+46	; 0x2e
    22ee:	81 50       	subi	r24, 0x01	; 1
    22f0:	86 a7       	std	Z+46, r24	; 0x2e
    22f2:	22 8d       	ldd	r18, Z+26	; 0x1a
    22f4:	95 a5       	ldd	r25, Z+45	; 0x2d
    22f6:	29 17       	cp	r18, r25
    22f8:	09 f4       	brne	.+2      	; 0x22fc <xTaskPriorityDisinherit+0x20>
    22fa:	43 c0       	rjmp	.+134    	; 0x2382 <xTaskPriorityDisinherit+0xa6>
    22fc:	81 11       	cpse	r24, r1
    22fe:	43 c0       	rjmp	.+134    	; 0x2386 <xTaskPriorityDisinherit+0xaa>
    2300:	ef 01       	movw	r28, r30
    2302:	8f 01       	movw	r16, r30
    2304:	0e 5f       	subi	r16, 0xFE	; 254
    2306:	1f 4f       	sbci	r17, 0xFF	; 255
    2308:	c8 01       	movw	r24, r16
    230a:	0e 94 04 03 	call	0x608	; 0x608 <uxListRemove>
    230e:	ed a5       	ldd	r30, Y+45	; 0x2d
    2310:	ea 8f       	std	Y+26, r30	; 0x1a
    2312:	8a e0       	ldi	r24, 0x0A	; 10
    2314:	90 e0       	ldi	r25, 0x00	; 0
    2316:	a0 e0       	ldi	r26, 0x00	; 0
    2318:	b0 e0       	ldi	r27, 0x00	; 0
    231a:	8e 1b       	sub	r24, r30
    231c:	91 09       	sbc	r25, r1
    231e:	a1 09       	sbc	r26, r1
    2320:	b1 09       	sbc	r27, r1
    2322:	8e 87       	std	Y+14, r24	; 0x0e
    2324:	9f 87       	std	Y+15, r25	; 0x0f
    2326:	a8 8b       	std	Y+16, r26	; 0x10
    2328:	b9 8b       	std	Y+17, r27	; 0x11
    232a:	80 91 5b 11 	lds	r24, 0x115B	; 0x80115b <uxTopReadyPriority>
    232e:	8e 17       	cp	r24, r30
    2330:	10 f4       	brcc	.+4      	; 0x2336 <xTaskPriorityDisinherit+0x5a>
    2332:	e0 93 5b 11 	sts	0x115B, r30	; 0x80115b <uxTopReadyPriority>
    2336:	8b e0       	ldi	r24, 0x0B	; 11
    2338:	8e 9f       	mul	r24, r30
    233a:	f0 01       	movw	r30, r0
    233c:	11 24       	eor	r1, r1
    233e:	e3 56       	subi	r30, 0x63	; 99
    2340:	fe 4e       	sbci	r31, 0xEE	; 238
    2342:	01 80       	ldd	r0, Z+1	; 0x01
    2344:	f2 81       	ldd	r31, Z+2	; 0x02
    2346:	e0 2d       	mov	r30, r0
    2348:	ff 83       	std	Y+7, r31	; 0x07
    234a:	ee 83       	std	Y+6, r30	; 0x06
    234c:	26 81       	ldd	r18, Z+6	; 0x06
    234e:	37 81       	ldd	r19, Z+7	; 0x07
    2350:	39 87       	std	Y+9, r19	; 0x09
    2352:	28 87       	std	Y+8, r18	; 0x08
    2354:	a6 81       	ldd	r26, Z+6	; 0x06
    2356:	b7 81       	ldd	r27, Z+7	; 0x07
    2358:	15 96       	adiw	r26, 0x05	; 5
    235a:	1c 93       	st	X, r17
    235c:	0e 93       	st	-X, r16
    235e:	14 97       	sbiw	r26, 0x04	; 4
    2360:	17 83       	std	Z+7, r17	; 0x07
    2362:	06 83       	std	Z+6, r16	; 0x06
    2364:	ea 8d       	ldd	r30, Y+26	; 0x1a
    2366:	8e 9f       	mul	r24, r30
    2368:	f0 01       	movw	r30, r0
    236a:	11 24       	eor	r1, r1
    236c:	e3 56       	subi	r30, 0x63	; 99
    236e:	fe 4e       	sbci	r31, 0xEE	; 238
    2370:	fd 87       	std	Y+13, r31	; 0x0d
    2372:	ec 87       	std	Y+12, r30	; 0x0c
    2374:	80 81       	ld	r24, Z
    2376:	8f 5f       	subi	r24, 0xFF	; 255
    2378:	80 83       	st	Z, r24
    237a:	81 e0       	ldi	r24, 0x01	; 1
    237c:	05 c0       	rjmp	.+10     	; 0x2388 <xTaskPriorityDisinherit+0xac>
    237e:	80 e0       	ldi	r24, 0x00	; 0
    2380:	03 c0       	rjmp	.+6      	; 0x2388 <xTaskPriorityDisinherit+0xac>
    2382:	80 e0       	ldi	r24, 0x00	; 0
    2384:	01 c0       	rjmp	.+2      	; 0x2388 <xTaskPriorityDisinherit+0xac>
    2386:	80 e0       	ldi	r24, 0x00	; 0
    2388:	df 91       	pop	r29
    238a:	cf 91       	pop	r28
    238c:	1f 91       	pop	r17
    238e:	0f 91       	pop	r16
    2390:	08 95       	ret

00002392 <xTaskGenericNotifyWait>:
    2392:	4f 92       	push	r4
    2394:	5f 92       	push	r5
    2396:	6f 92       	push	r6
    2398:	7f 92       	push	r7
    239a:	af 92       	push	r10
    239c:	bf 92       	push	r11
    239e:	cf 92       	push	r12
    23a0:	df 92       	push	r13
    23a2:	ef 92       	push	r14
    23a4:	ff 92       	push	r15
    23a6:	0f 93       	push	r16
    23a8:	1f 93       	push	r17
    23aa:	cf 93       	push	r28
    23ac:	df 93       	push	r29
    23ae:	28 01       	movw	r4, r16
    23b0:	39 01       	movw	r6, r18
    23b2:	0f b6       	in	r0, 0x3f	; 63
    23b4:	f8 94       	cli
    23b6:	0f 92       	push	r0
    23b8:	e0 91 0b 12 	lds	r30, 0x120B	; 0x80120b <pxCurrentTCB>
    23bc:	f0 91 0c 12 	lds	r31, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    23c0:	c8 2f       	mov	r28, r24
    23c2:	d0 e0       	ldi	r29, 0x00	; 0
    23c4:	ec 0f       	add	r30, r28
    23c6:	fd 1f       	adc	r31, r29
    23c8:	83 a9       	ldd	r24, Z+51	; 0x33
    23ca:	82 30       	cpi	r24, 0x02	; 2
    23cc:	71 f1       	breq	.+92     	; 0x242a <xTaskGenericNotifyWait+0x98>
    23ce:	e0 91 0b 12 	lds	r30, 0x120B	; 0x80120b <pxCurrentTCB>
    23d2:	f0 91 0c 12 	lds	r31, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    23d6:	ce 01       	movw	r24, r28
    23d8:	88 0f       	add	r24, r24
    23da:	99 1f       	adc	r25, r25
    23dc:	88 0f       	add	r24, r24
    23de:	99 1f       	adc	r25, r25
    23e0:	e8 0f       	add	r30, r24
    23e2:	f9 1f       	adc	r31, r25
    23e4:	87 a5       	ldd	r24, Z+47	; 0x2f
    23e6:	90 a9       	ldd	r25, Z+48	; 0x30
    23e8:	a1 a9       	ldd	r26, Z+49	; 0x31
    23ea:	b2 a9       	ldd	r27, Z+50	; 0x32
    23ec:	40 95       	com	r20
    23ee:	50 95       	com	r21
    23f0:	60 95       	com	r22
    23f2:	70 95       	com	r23
    23f4:	48 23       	and	r20, r24
    23f6:	59 23       	and	r21, r25
    23f8:	6a 23       	and	r22, r26
    23fa:	7b 23       	and	r23, r27
    23fc:	47 a7       	std	Z+47, r20	; 0x2f
    23fe:	50 ab       	std	Z+48, r21	; 0x30
    2400:	61 ab       	std	Z+49, r22	; 0x31
    2402:	72 ab       	std	Z+50, r23	; 0x32
    2404:	e0 91 0b 12 	lds	r30, 0x120B	; 0x80120b <pxCurrentTCB>
    2408:	f0 91 0c 12 	lds	r31, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    240c:	ec 0f       	add	r30, r28
    240e:	fd 1f       	adc	r31, r29
    2410:	81 e0       	ldi	r24, 0x01	; 1
    2412:	83 ab       	std	Z+51, r24	; 0x33
    2414:	a1 14       	cp	r10, r1
    2416:	b1 04       	cpc	r11, r1
    2418:	c1 04       	cpc	r12, r1
    241a:	d1 04       	cpc	r13, r1
    241c:	31 f0       	breq	.+12     	; 0x242a <xTaskGenericNotifyWait+0x98>
    241e:	41 e0       	ldi	r20, 0x01	; 1
    2420:	c6 01       	movw	r24, r12
    2422:	b5 01       	movw	r22, r10
    2424:	88 d9       	rcall	.-3312   	; 0x1736 <prvAddCurrentTaskToDelayedList>
    2426:	0e 94 80 03 	call	0x700	; 0x700 <vPortYield>
    242a:	0f 90       	pop	r0
    242c:	0f be       	out	0x3f, r0	; 63
    242e:	0f b6       	in	r0, 0x3f	; 63
    2430:	f8 94       	cli
    2432:	0f 92       	push	r0
    2434:	e1 14       	cp	r14, r1
    2436:	f1 04       	cpc	r15, r1
    2438:	a1 f0       	breq	.+40     	; 0x2462 <xTaskGenericNotifyWait+0xd0>
    243a:	e0 91 0b 12 	lds	r30, 0x120B	; 0x80120b <pxCurrentTCB>
    243e:	f0 91 0c 12 	lds	r31, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    2442:	ce 01       	movw	r24, r28
    2444:	88 0f       	add	r24, r24
    2446:	99 1f       	adc	r25, r25
    2448:	88 0f       	add	r24, r24
    244a:	99 1f       	adc	r25, r25
    244c:	e8 0f       	add	r30, r24
    244e:	f9 1f       	adc	r31, r25
    2450:	87 a5       	ldd	r24, Z+47	; 0x2f
    2452:	90 a9       	ldd	r25, Z+48	; 0x30
    2454:	a1 a9       	ldd	r26, Z+49	; 0x31
    2456:	b2 a9       	ldd	r27, Z+50	; 0x32
    2458:	f7 01       	movw	r30, r14
    245a:	80 83       	st	Z, r24
    245c:	91 83       	std	Z+1, r25	; 0x01
    245e:	a2 83       	std	Z+2, r26	; 0x02
    2460:	b3 83       	std	Z+3, r27	; 0x03
    2462:	e0 91 0b 12 	lds	r30, 0x120B	; 0x80120b <pxCurrentTCB>
    2466:	f0 91 0c 12 	lds	r31, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    246a:	ec 0f       	add	r30, r28
    246c:	fd 1f       	adc	r31, r29
    246e:	83 a9       	ldd	r24, Z+51	; 0x33
    2470:	82 30       	cpi	r24, 0x02	; 2
    2472:	e9 f4       	brne	.+58     	; 0x24ae <xTaskGenericNotifyWait+0x11c>
    2474:	e0 91 0b 12 	lds	r30, 0x120B	; 0x80120b <pxCurrentTCB>
    2478:	f0 91 0c 12 	lds	r31, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    247c:	ce 01       	movw	r24, r28
    247e:	88 0f       	add	r24, r24
    2480:	99 1f       	adc	r25, r25
    2482:	88 0f       	add	r24, r24
    2484:	99 1f       	adc	r25, r25
    2486:	e8 0f       	add	r30, r24
    2488:	f9 1f       	adc	r31, r25
    248a:	87 a5       	ldd	r24, Z+47	; 0x2f
    248c:	90 a9       	ldd	r25, Z+48	; 0x30
    248e:	a1 a9       	ldd	r26, Z+49	; 0x31
    2490:	b2 a9       	ldd	r27, Z+50	; 0x32
    2492:	40 94       	com	r4
    2494:	50 94       	com	r5
    2496:	60 94       	com	r6
    2498:	70 94       	com	r7
    249a:	48 22       	and	r4, r24
    249c:	59 22       	and	r5, r25
    249e:	6a 22       	and	r6, r26
    24a0:	7b 22       	and	r7, r27
    24a2:	47 a6       	std	Z+47, r4	; 0x2f
    24a4:	50 aa       	std	Z+48, r5	; 0x30
    24a6:	61 aa       	std	Z+49, r6	; 0x31
    24a8:	72 aa       	std	Z+50, r7	; 0x32
    24aa:	81 e0       	ldi	r24, 0x01	; 1
    24ac:	01 c0       	rjmp	.+2      	; 0x24b0 <xTaskGenericNotifyWait+0x11e>
    24ae:	80 e0       	ldi	r24, 0x00	; 0
    24b0:	20 91 0b 12 	lds	r18, 0x120B	; 0x80120b <pxCurrentTCB>
    24b4:	30 91 0c 12 	lds	r19, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    24b8:	c2 0f       	add	r28, r18
    24ba:	d3 1f       	adc	r29, r19
    24bc:	1b aa       	std	Y+51, r1	; 0x33
    24be:	0f 90       	pop	r0
    24c0:	0f be       	out	0x3f, r0	; 63
    24c2:	df 91       	pop	r29
    24c4:	cf 91       	pop	r28
    24c6:	1f 91       	pop	r17
    24c8:	0f 91       	pop	r16
    24ca:	ff 90       	pop	r15
    24cc:	ef 90       	pop	r14
    24ce:	df 90       	pop	r13
    24d0:	cf 90       	pop	r12
    24d2:	bf 90       	pop	r11
    24d4:	af 90       	pop	r10
    24d6:	7f 90       	pop	r7
    24d8:	6f 90       	pop	r6
    24da:	5f 90       	pop	r5
    24dc:	4f 90       	pop	r4
    24de:	08 95       	ret

000024e0 <xTaskGenericNotify>:
    24e0:	8f 92       	push	r8
    24e2:	9f 92       	push	r9
    24e4:	af 92       	push	r10
    24e6:	bf 92       	push	r11
    24e8:	ef 92       	push	r14
    24ea:	ff 92       	push	r15
    24ec:	0f 93       	push	r16
    24ee:	cf 93       	push	r28
    24f0:	df 93       	push	r29
    24f2:	dc 01       	movw	r26, r24
    24f4:	0f b6       	in	r0, 0x3f	; 63
    24f6:	f8 94       	cli
    24f8:	0f 92       	push	r0
    24fa:	e1 14       	cp	r14, r1
    24fc:	f1 04       	cpc	r15, r1
    24fe:	89 f0       	breq	.+34     	; 0x2522 <xTaskGenericNotify+0x42>
    2500:	e6 2f       	mov	r30, r22
    2502:	f0 e0       	ldi	r31, 0x00	; 0
    2504:	ee 0f       	add	r30, r30
    2506:	ff 1f       	adc	r31, r31
    2508:	ee 0f       	add	r30, r30
    250a:	ff 1f       	adc	r31, r31
    250c:	e8 0f       	add	r30, r24
    250e:	f9 1f       	adc	r31, r25
    2510:	87 a4       	ldd	r8, Z+47	; 0x2f
    2512:	90 a8       	ldd	r9, Z+48	; 0x30
    2514:	a1 a8       	ldd	r10, Z+49	; 0x31
    2516:	b2 a8       	ldd	r11, Z+50	; 0x32
    2518:	f7 01       	movw	r30, r14
    251a:	80 82       	st	Z, r8
    251c:	91 82       	std	Z+1, r9	; 0x01
    251e:	a2 82       	std	Z+2, r10	; 0x02
    2520:	b3 82       	std	Z+3, r11	; 0x03
    2522:	70 e0       	ldi	r23, 0x00	; 0
    2524:	fd 01       	movw	r30, r26
    2526:	e6 0f       	add	r30, r22
    2528:	f7 1f       	adc	r31, r23
    252a:	83 a9       	ldd	r24, Z+51	; 0x33
    252c:	92 e0       	ldi	r25, 0x02	; 2
    252e:	93 ab       	std	Z+51, r25	; 0x33
    2530:	02 30       	cpi	r16, 0x02	; 2
    2532:	01 f1       	breq	.+64     	; 0x2574 <xTaskGenericNotify+0x94>
    2534:	18 f4       	brcc	.+6      	; 0x253c <xTaskGenericNotify+0x5c>
    2536:	01 30       	cpi	r16, 0x01	; 1
    2538:	31 f0       	breq	.+12     	; 0x2546 <xTaskGenericNotify+0x66>
    253a:	4d c0       	rjmp	.+154    	; 0x25d6 <xTaskGenericNotify+0xf6>
    253c:	03 30       	cpi	r16, 0x03	; 3
    253e:	79 f1       	breq	.+94     	; 0x259e <xTaskGenericNotify+0xbe>
    2540:	04 30       	cpi	r16, 0x04	; 4
    2542:	d1 f1       	breq	.+116    	; 0x25b8 <xTaskGenericNotify+0xd8>
    2544:	48 c0       	rjmp	.+144    	; 0x25d6 <xTaskGenericNotify+0xf6>
    2546:	66 0f       	add	r22, r22
    2548:	77 1f       	adc	r23, r23
    254a:	66 0f       	add	r22, r22
    254c:	77 1f       	adc	r23, r23
    254e:	fd 01       	movw	r30, r26
    2550:	e6 0f       	add	r30, r22
    2552:	f7 1f       	adc	r31, r23
    2554:	87 a4       	ldd	r8, Z+47	; 0x2f
    2556:	90 a8       	ldd	r9, Z+48	; 0x30
    2558:	a1 a8       	ldd	r10, Z+49	; 0x31
    255a:	b2 a8       	ldd	r11, Z+50	; 0x32
    255c:	ba 01       	movw	r22, r20
    255e:	a9 01       	movw	r20, r18
    2560:	48 29       	or	r20, r8
    2562:	59 29       	or	r21, r9
    2564:	6a 29       	or	r22, r10
    2566:	7b 29       	or	r23, r11
    2568:	47 a7       	std	Z+47, r20	; 0x2f
    256a:	50 ab       	std	Z+48, r21	; 0x30
    256c:	61 ab       	std	Z+49, r22	; 0x31
    256e:	72 ab       	std	Z+50, r23	; 0x32
    2570:	01 e0       	ldi	r16, 0x01	; 1
    2572:	34 c0       	rjmp	.+104    	; 0x25dc <xTaskGenericNotify+0xfc>
    2574:	66 0f       	add	r22, r22
    2576:	77 1f       	adc	r23, r23
    2578:	66 0f       	add	r22, r22
    257a:	77 1f       	adc	r23, r23
    257c:	fd 01       	movw	r30, r26
    257e:	e6 0f       	add	r30, r22
    2580:	f7 1f       	adc	r31, r23
    2582:	47 a5       	ldd	r20, Z+47	; 0x2f
    2584:	50 a9       	ldd	r21, Z+48	; 0x30
    2586:	61 a9       	ldd	r22, Z+49	; 0x31
    2588:	72 a9       	ldd	r23, Z+50	; 0x32
    258a:	4f 5f       	subi	r20, 0xFF	; 255
    258c:	5f 4f       	sbci	r21, 0xFF	; 255
    258e:	6f 4f       	sbci	r22, 0xFF	; 255
    2590:	7f 4f       	sbci	r23, 0xFF	; 255
    2592:	47 a7       	std	Z+47, r20	; 0x2f
    2594:	50 ab       	std	Z+48, r21	; 0x30
    2596:	61 ab       	std	Z+49, r22	; 0x31
    2598:	72 ab       	std	Z+50, r23	; 0x32
    259a:	01 e0       	ldi	r16, 0x01	; 1
    259c:	1f c0       	rjmp	.+62     	; 0x25dc <xTaskGenericNotify+0xfc>
    259e:	66 0f       	add	r22, r22
    25a0:	77 1f       	adc	r23, r23
    25a2:	66 0f       	add	r22, r22
    25a4:	77 1f       	adc	r23, r23
    25a6:	fd 01       	movw	r30, r26
    25a8:	e6 0f       	add	r30, r22
    25aa:	f7 1f       	adc	r31, r23
    25ac:	27 a7       	std	Z+47, r18	; 0x2f
    25ae:	30 ab       	std	Z+48, r19	; 0x30
    25b0:	41 ab       	std	Z+49, r20	; 0x31
    25b2:	52 ab       	std	Z+50, r21	; 0x32
    25b4:	01 e0       	ldi	r16, 0x01	; 1
    25b6:	12 c0       	rjmp	.+36     	; 0x25dc <xTaskGenericNotify+0xfc>
    25b8:	82 30       	cpi	r24, 0x02	; 2
    25ba:	79 f0       	breq	.+30     	; 0x25da <xTaskGenericNotify+0xfa>
    25bc:	66 0f       	add	r22, r22
    25be:	77 1f       	adc	r23, r23
    25c0:	66 0f       	add	r22, r22
    25c2:	77 1f       	adc	r23, r23
    25c4:	fd 01       	movw	r30, r26
    25c6:	e6 0f       	add	r30, r22
    25c8:	f7 1f       	adc	r31, r23
    25ca:	27 a7       	std	Z+47, r18	; 0x2f
    25cc:	30 ab       	std	Z+48, r19	; 0x30
    25ce:	41 ab       	std	Z+49, r20	; 0x31
    25d0:	52 ab       	std	Z+50, r21	; 0x32
    25d2:	01 e0       	ldi	r16, 0x01	; 1
    25d4:	03 c0       	rjmp	.+6      	; 0x25dc <xTaskGenericNotify+0xfc>
    25d6:	01 e0       	ldi	r16, 0x01	; 1
    25d8:	01 c0       	rjmp	.+2      	; 0x25dc <xTaskGenericNotify+0xfc>
    25da:	00 e0       	ldi	r16, 0x00	; 0
    25dc:	81 30       	cpi	r24, 0x01	; 1
    25de:	09 f0       	breq	.+2      	; 0x25e2 <xTaskGenericNotify+0x102>
    25e0:	69 c0       	rjmp	.+210    	; 0x26b4 <xTaskGenericNotify+0x1d4>
    25e2:	1c 96       	adiw	r26, 0x0c	; 12
    25e4:	ed 91       	ld	r30, X+
    25e6:	fc 91       	ld	r31, X
    25e8:	1d 97       	sbiw	r26, 0x0d	; 13
    25ea:	16 96       	adiw	r26, 0x06	; 6
    25ec:	cd 91       	ld	r28, X+
    25ee:	dc 91       	ld	r29, X
    25f0:	17 97       	sbiw	r26, 0x07	; 7
    25f2:	18 96       	adiw	r26, 0x08	; 8
    25f4:	8d 91       	ld	r24, X+
    25f6:	9c 91       	ld	r25, X
    25f8:	19 97       	sbiw	r26, 0x09	; 9
    25fa:	9f 83       	std	Y+7, r25	; 0x07
    25fc:	8e 83       	std	Y+6, r24	; 0x06
    25fe:	18 96       	adiw	r26, 0x08	; 8
    2600:	cd 91       	ld	r28, X+
    2602:	dc 91       	ld	r29, X
    2604:	19 97       	sbiw	r26, 0x09	; 9
    2606:	16 96       	adiw	r26, 0x06	; 6
    2608:	8d 91       	ld	r24, X+
    260a:	9c 91       	ld	r25, X
    260c:	17 97       	sbiw	r26, 0x07	; 7
    260e:	9d 83       	std	Y+5, r25	; 0x05
    2610:	8c 83       	std	Y+4, r24	; 0x04
    2612:	81 81       	ldd	r24, Z+1	; 0x01
    2614:	92 81       	ldd	r25, Z+2	; 0x02
    2616:	9d 01       	movw	r18, r26
    2618:	2e 5f       	subi	r18, 0xFE	; 254
    261a:	3f 4f       	sbci	r19, 0xFF	; 255
    261c:	82 17       	cp	r24, r18
    261e:	93 07       	cpc	r25, r19
    2620:	31 f4       	brne	.+12     	; 0x262e <xTaskGenericNotify+0x14e>
    2622:	18 96       	adiw	r26, 0x08	; 8
    2624:	8d 91       	ld	r24, X+
    2626:	9c 91       	ld	r25, X
    2628:	19 97       	sbiw	r26, 0x09	; 9
    262a:	92 83       	std	Z+2, r25	; 0x02
    262c:	81 83       	std	Z+1, r24	; 0x01
    262e:	1d 96       	adiw	r26, 0x0d	; 13
    2630:	1c 92       	st	X, r1
    2632:	1e 92       	st	-X, r1
    2634:	1c 97       	sbiw	r26, 0x0c	; 12
    2636:	80 81       	ld	r24, Z
    2638:	81 50       	subi	r24, 0x01	; 1
    263a:	80 83       	st	Z, r24
    263c:	5a 96       	adiw	r26, 0x1a	; 26
    263e:	ec 91       	ld	r30, X
    2640:	5a 97       	sbiw	r26, 0x1a	; 26
    2642:	80 91 5b 11 	lds	r24, 0x115B	; 0x80115b <uxTopReadyPriority>
    2646:	8e 17       	cp	r24, r30
    2648:	10 f4       	brcc	.+4      	; 0x264e <xTaskGenericNotify+0x16e>
    264a:	e0 93 5b 11 	sts	0x115B, r30	; 0x80115b <uxTopReadyPriority>
    264e:	8b e0       	ldi	r24, 0x0B	; 11
    2650:	8e 9f       	mul	r24, r30
    2652:	f0 01       	movw	r30, r0
    2654:	11 24       	eor	r1, r1
    2656:	e3 56       	subi	r30, 0x63	; 99
    2658:	fe 4e       	sbci	r31, 0xEE	; 238
    265a:	01 80       	ldd	r0, Z+1	; 0x01
    265c:	f2 81       	ldd	r31, Z+2	; 0x02
    265e:	e0 2d       	mov	r30, r0
    2660:	17 96       	adiw	r26, 0x07	; 7
    2662:	fc 93       	st	X, r31
    2664:	ee 93       	st	-X, r30
    2666:	16 97       	sbiw	r26, 0x06	; 6
    2668:	46 81       	ldd	r20, Z+6	; 0x06
    266a:	57 81       	ldd	r21, Z+7	; 0x07
    266c:	19 96       	adiw	r26, 0x09	; 9
    266e:	5c 93       	st	X, r21
    2670:	4e 93       	st	-X, r20
    2672:	18 97       	sbiw	r26, 0x08	; 8
    2674:	c6 81       	ldd	r28, Z+6	; 0x06
    2676:	d7 81       	ldd	r29, Z+7	; 0x07
    2678:	3d 83       	std	Y+5, r19	; 0x05
    267a:	2c 83       	std	Y+4, r18	; 0x04
    267c:	37 83       	std	Z+7, r19	; 0x07
    267e:	26 83       	std	Z+6, r18	; 0x06
    2680:	5a 96       	adiw	r26, 0x1a	; 26
    2682:	ec 91       	ld	r30, X
    2684:	5a 97       	sbiw	r26, 0x1a	; 26
    2686:	8e 9f       	mul	r24, r30
    2688:	f0 01       	movw	r30, r0
    268a:	11 24       	eor	r1, r1
    268c:	e3 56       	subi	r30, 0x63	; 99
    268e:	fe 4e       	sbci	r31, 0xEE	; 238
    2690:	1d 96       	adiw	r26, 0x0d	; 13
    2692:	fc 93       	st	X, r31
    2694:	ee 93       	st	-X, r30
    2696:	1c 97       	sbiw	r26, 0x0c	; 12
    2698:	80 81       	ld	r24, Z
    269a:	8f 5f       	subi	r24, 0xFF	; 255
    269c:	80 83       	st	Z, r24
    269e:	5a 96       	adiw	r26, 0x1a	; 26
    26a0:	9c 91       	ld	r25, X
    26a2:	e0 91 0b 12 	lds	r30, 0x120B	; 0x80120b <pxCurrentTCB>
    26a6:	f0 91 0c 12 	lds	r31, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    26aa:	82 8d       	ldd	r24, Z+26	; 0x1a
    26ac:	89 17       	cp	r24, r25
    26ae:	10 f4       	brcc	.+4      	; 0x26b4 <xTaskGenericNotify+0x1d4>
    26b0:	0e 94 80 03 	call	0x700	; 0x700 <vPortYield>
    26b4:	0f 90       	pop	r0
    26b6:	0f be       	out	0x3f, r0	; 63
    26b8:	80 2f       	mov	r24, r16
    26ba:	df 91       	pop	r29
    26bc:	cf 91       	pop	r28
    26be:	0f 91       	pop	r16
    26c0:	ff 90       	pop	r15
    26c2:	ef 90       	pop	r14
    26c4:	bf 90       	pop	r11
    26c6:	af 90       	pop	r10
    26c8:	9f 90       	pop	r9
    26ca:	8f 90       	pop	r8
    26cc:	08 95       	ret

000026ce <xTaskGenericNotifyFromISR>:
    26ce:	8f 92       	push	r8
    26d0:	9f 92       	push	r9
    26d2:	af 92       	push	r10
    26d4:	bf 92       	push	r11
    26d6:	cf 92       	push	r12
    26d8:	df 92       	push	r13
    26da:	ef 92       	push	r14
    26dc:	ff 92       	push	r15
    26de:	0f 93       	push	r16
    26e0:	cf 93       	push	r28
    26e2:	df 93       	push	r29
    26e4:	dc 01       	movw	r26, r24
    26e6:	e1 14       	cp	r14, r1
    26e8:	f1 04       	cpc	r15, r1
    26ea:	89 f0       	breq	.+34     	; 0x270e <xTaskGenericNotifyFromISR+0x40>
    26ec:	e6 2f       	mov	r30, r22
    26ee:	f0 e0       	ldi	r31, 0x00	; 0
    26f0:	ee 0f       	add	r30, r30
    26f2:	ff 1f       	adc	r31, r31
    26f4:	ee 0f       	add	r30, r30
    26f6:	ff 1f       	adc	r31, r31
    26f8:	e8 0f       	add	r30, r24
    26fa:	f9 1f       	adc	r31, r25
    26fc:	87 a4       	ldd	r8, Z+47	; 0x2f
    26fe:	90 a8       	ldd	r9, Z+48	; 0x30
    2700:	a1 a8       	ldd	r10, Z+49	; 0x31
    2702:	b2 a8       	ldd	r11, Z+50	; 0x32
    2704:	f7 01       	movw	r30, r14
    2706:	80 82       	st	Z, r8
    2708:	91 82       	std	Z+1, r9	; 0x01
    270a:	a2 82       	std	Z+2, r10	; 0x02
    270c:	b3 82       	std	Z+3, r11	; 0x03
    270e:	70 e0       	ldi	r23, 0x00	; 0
    2710:	fd 01       	movw	r30, r26
    2712:	e6 0f       	add	r30, r22
    2714:	f7 1f       	adc	r31, r23
    2716:	93 a9       	ldd	r25, Z+51	; 0x33
    2718:	82 e0       	ldi	r24, 0x02	; 2
    271a:	83 ab       	std	Z+51, r24	; 0x33
    271c:	02 30       	cpi	r16, 0x02	; 2
    271e:	01 f1       	breq	.+64     	; 0x2760 <xTaskGenericNotifyFromISR+0x92>
    2720:	18 f4       	brcc	.+6      	; 0x2728 <xTaskGenericNotifyFromISR+0x5a>
    2722:	01 30       	cpi	r16, 0x01	; 1
    2724:	31 f0       	breq	.+12     	; 0x2732 <xTaskGenericNotifyFromISR+0x64>
    2726:	4d c0       	rjmp	.+154    	; 0x27c2 <xTaskGenericNotifyFromISR+0xf4>
    2728:	03 30       	cpi	r16, 0x03	; 3
    272a:	79 f1       	breq	.+94     	; 0x278a <xTaskGenericNotifyFromISR+0xbc>
    272c:	04 30       	cpi	r16, 0x04	; 4
    272e:	d1 f1       	breq	.+116    	; 0x27a4 <xTaskGenericNotifyFromISR+0xd6>
    2730:	48 c0       	rjmp	.+144    	; 0x27c2 <xTaskGenericNotifyFromISR+0xf4>
    2732:	66 0f       	add	r22, r22
    2734:	77 1f       	adc	r23, r23
    2736:	66 0f       	add	r22, r22
    2738:	77 1f       	adc	r23, r23
    273a:	fd 01       	movw	r30, r26
    273c:	e6 0f       	add	r30, r22
    273e:	f7 1f       	adc	r31, r23
    2740:	87 a4       	ldd	r8, Z+47	; 0x2f
    2742:	90 a8       	ldd	r9, Z+48	; 0x30
    2744:	a1 a8       	ldd	r10, Z+49	; 0x31
    2746:	b2 a8       	ldd	r11, Z+50	; 0x32
    2748:	ba 01       	movw	r22, r20
    274a:	a9 01       	movw	r20, r18
    274c:	48 29       	or	r20, r8
    274e:	59 29       	or	r21, r9
    2750:	6a 29       	or	r22, r10
    2752:	7b 29       	or	r23, r11
    2754:	47 a7       	std	Z+47, r20	; 0x2f
    2756:	50 ab       	std	Z+48, r21	; 0x30
    2758:	61 ab       	std	Z+49, r22	; 0x31
    275a:	72 ab       	std	Z+50, r23	; 0x32
    275c:	81 e0       	ldi	r24, 0x01	; 1
    275e:	34 c0       	rjmp	.+104    	; 0x27c8 <xTaskGenericNotifyFromISR+0xfa>
    2760:	66 0f       	add	r22, r22
    2762:	77 1f       	adc	r23, r23
    2764:	66 0f       	add	r22, r22
    2766:	77 1f       	adc	r23, r23
    2768:	fd 01       	movw	r30, r26
    276a:	e6 0f       	add	r30, r22
    276c:	f7 1f       	adc	r31, r23
    276e:	47 a5       	ldd	r20, Z+47	; 0x2f
    2770:	50 a9       	ldd	r21, Z+48	; 0x30
    2772:	61 a9       	ldd	r22, Z+49	; 0x31
    2774:	72 a9       	ldd	r23, Z+50	; 0x32
    2776:	4f 5f       	subi	r20, 0xFF	; 255
    2778:	5f 4f       	sbci	r21, 0xFF	; 255
    277a:	6f 4f       	sbci	r22, 0xFF	; 255
    277c:	7f 4f       	sbci	r23, 0xFF	; 255
    277e:	47 a7       	std	Z+47, r20	; 0x2f
    2780:	50 ab       	std	Z+48, r21	; 0x30
    2782:	61 ab       	std	Z+49, r22	; 0x31
    2784:	72 ab       	std	Z+50, r23	; 0x32
    2786:	81 e0       	ldi	r24, 0x01	; 1
    2788:	1f c0       	rjmp	.+62     	; 0x27c8 <xTaskGenericNotifyFromISR+0xfa>
    278a:	66 0f       	add	r22, r22
    278c:	77 1f       	adc	r23, r23
    278e:	66 0f       	add	r22, r22
    2790:	77 1f       	adc	r23, r23
    2792:	fd 01       	movw	r30, r26
    2794:	e6 0f       	add	r30, r22
    2796:	f7 1f       	adc	r31, r23
    2798:	27 a7       	std	Z+47, r18	; 0x2f
    279a:	30 ab       	std	Z+48, r19	; 0x30
    279c:	41 ab       	std	Z+49, r20	; 0x31
    279e:	52 ab       	std	Z+50, r21	; 0x32
    27a0:	81 e0       	ldi	r24, 0x01	; 1
    27a2:	12 c0       	rjmp	.+36     	; 0x27c8 <xTaskGenericNotifyFromISR+0xfa>
    27a4:	92 30       	cpi	r25, 0x02	; 2
    27a6:	79 f0       	breq	.+30     	; 0x27c6 <xTaskGenericNotifyFromISR+0xf8>
    27a8:	66 0f       	add	r22, r22
    27aa:	77 1f       	adc	r23, r23
    27ac:	66 0f       	add	r22, r22
    27ae:	77 1f       	adc	r23, r23
    27b0:	fd 01       	movw	r30, r26
    27b2:	e6 0f       	add	r30, r22
    27b4:	f7 1f       	adc	r31, r23
    27b6:	27 a7       	std	Z+47, r18	; 0x2f
    27b8:	30 ab       	std	Z+48, r19	; 0x30
    27ba:	41 ab       	std	Z+49, r20	; 0x31
    27bc:	52 ab       	std	Z+50, r21	; 0x32
    27be:	81 e0       	ldi	r24, 0x01	; 1
    27c0:	03 c0       	rjmp	.+6      	; 0x27c8 <xTaskGenericNotifyFromISR+0xfa>
    27c2:	81 e0       	ldi	r24, 0x01	; 1
    27c4:	01 c0       	rjmp	.+2      	; 0x27c8 <xTaskGenericNotifyFromISR+0xfa>
    27c6:	80 e0       	ldi	r24, 0x00	; 0
    27c8:	91 30       	cpi	r25, 0x01	; 1
    27ca:	09 f0       	breq	.+2      	; 0x27ce <xTaskGenericNotifyFromISR+0x100>
    27cc:	96 c0       	rjmp	.+300    	; 0x28fa <xTaskGenericNotifyFromISR+0x22c>
    27ce:	90 91 4c 11 	lds	r25, 0x114C	; 0x80114c <uxSchedulerSuspended>
    27d2:	91 11       	cpse	r25, r1
    27d4:	5f c0       	rjmp	.+190    	; 0x2894 <xTaskGenericNotifyFromISR+0x1c6>
    27d6:	1c 96       	adiw	r26, 0x0c	; 12
    27d8:	ed 91       	ld	r30, X+
    27da:	fc 91       	ld	r31, X
    27dc:	1d 97       	sbiw	r26, 0x0d	; 13
    27de:	16 96       	adiw	r26, 0x06	; 6
    27e0:	cd 91       	ld	r28, X+
    27e2:	dc 91       	ld	r29, X
    27e4:	17 97       	sbiw	r26, 0x07	; 7
    27e6:	18 96       	adiw	r26, 0x08	; 8
    27e8:	2d 91       	ld	r18, X+
    27ea:	3c 91       	ld	r19, X
    27ec:	19 97       	sbiw	r26, 0x09	; 9
    27ee:	3f 83       	std	Y+7, r19	; 0x07
    27f0:	2e 83       	std	Y+6, r18	; 0x06
    27f2:	18 96       	adiw	r26, 0x08	; 8
    27f4:	cd 91       	ld	r28, X+
    27f6:	dc 91       	ld	r29, X
    27f8:	19 97       	sbiw	r26, 0x09	; 9
    27fa:	16 96       	adiw	r26, 0x06	; 6
    27fc:	2d 91       	ld	r18, X+
    27fe:	3c 91       	ld	r19, X
    2800:	17 97       	sbiw	r26, 0x07	; 7
    2802:	3d 83       	std	Y+5, r19	; 0x05
    2804:	2c 83       	std	Y+4, r18	; 0x04
    2806:	41 81       	ldd	r20, Z+1	; 0x01
    2808:	52 81       	ldd	r21, Z+2	; 0x02
    280a:	9d 01       	movw	r18, r26
    280c:	2e 5f       	subi	r18, 0xFE	; 254
    280e:	3f 4f       	sbci	r19, 0xFF	; 255
    2810:	42 17       	cp	r20, r18
    2812:	53 07       	cpc	r21, r19
    2814:	31 f4       	brne	.+12     	; 0x2822 <xTaskGenericNotifyFromISR+0x154>
    2816:	18 96       	adiw	r26, 0x08	; 8
    2818:	4d 91       	ld	r20, X+
    281a:	5c 91       	ld	r21, X
    281c:	19 97       	sbiw	r26, 0x09	; 9
    281e:	52 83       	std	Z+2, r21	; 0x02
    2820:	41 83       	std	Z+1, r20	; 0x01
    2822:	1d 96       	adiw	r26, 0x0d	; 13
    2824:	1c 92       	st	X, r1
    2826:	1e 92       	st	-X, r1
    2828:	1c 97       	sbiw	r26, 0x0c	; 12
    282a:	90 81       	ld	r25, Z
    282c:	91 50       	subi	r25, 0x01	; 1
    282e:	90 83       	st	Z, r25
    2830:	5a 96       	adiw	r26, 0x1a	; 26
    2832:	ec 91       	ld	r30, X
    2834:	5a 97       	sbiw	r26, 0x1a	; 26
    2836:	90 91 5b 11 	lds	r25, 0x115B	; 0x80115b <uxTopReadyPriority>
    283a:	9e 17       	cp	r25, r30
    283c:	10 f4       	brcc	.+4      	; 0x2842 <xTaskGenericNotifyFromISR+0x174>
    283e:	e0 93 5b 11 	sts	0x115B, r30	; 0x80115b <uxTopReadyPriority>
    2842:	9b e0       	ldi	r25, 0x0B	; 11
    2844:	9e 9f       	mul	r25, r30
    2846:	f0 01       	movw	r30, r0
    2848:	11 24       	eor	r1, r1
    284a:	e3 56       	subi	r30, 0x63	; 99
    284c:	fe 4e       	sbci	r31, 0xEE	; 238
    284e:	01 80       	ldd	r0, Z+1	; 0x01
    2850:	f2 81       	ldd	r31, Z+2	; 0x02
    2852:	e0 2d       	mov	r30, r0
    2854:	17 96       	adiw	r26, 0x07	; 7
    2856:	fc 93       	st	X, r31
    2858:	ee 93       	st	-X, r30
    285a:	16 97       	sbiw	r26, 0x06	; 6
    285c:	46 81       	ldd	r20, Z+6	; 0x06
    285e:	57 81       	ldd	r21, Z+7	; 0x07
    2860:	19 96       	adiw	r26, 0x09	; 9
    2862:	5c 93       	st	X, r21
    2864:	4e 93       	st	-X, r20
    2866:	18 97       	sbiw	r26, 0x08	; 8
    2868:	c6 81       	ldd	r28, Z+6	; 0x06
    286a:	d7 81       	ldd	r29, Z+7	; 0x07
    286c:	3d 83       	std	Y+5, r19	; 0x05
    286e:	2c 83       	std	Y+4, r18	; 0x04
    2870:	37 83       	std	Z+7, r19	; 0x07
    2872:	26 83       	std	Z+6, r18	; 0x06
    2874:	5a 96       	adiw	r26, 0x1a	; 26
    2876:	ec 91       	ld	r30, X
    2878:	5a 97       	sbiw	r26, 0x1a	; 26
    287a:	9e 9f       	mul	r25, r30
    287c:	f0 01       	movw	r30, r0
    287e:	11 24       	eor	r1, r1
    2880:	e3 56       	subi	r30, 0x63	; 99
    2882:	fe 4e       	sbci	r31, 0xEE	; 238
    2884:	1d 96       	adiw	r26, 0x0d	; 13
    2886:	fc 93       	st	X, r31
    2888:	ee 93       	st	-X, r30
    288a:	1c 97       	sbiw	r26, 0x0c	; 12
    288c:	90 81       	ld	r25, Z
    288e:	9f 5f       	subi	r25, 0xFF	; 255
    2890:	90 83       	st	Z, r25
    2892:	21 c0       	rjmp	.+66     	; 0x28d6 <xTaskGenericNotifyFromISR+0x208>
    2894:	68 e7       	ldi	r22, 0x78	; 120
    2896:	71 e1       	ldi	r23, 0x11	; 17
    2898:	fb 01       	movw	r30, r22
    289a:	c1 81       	ldd	r28, Z+1	; 0x01
    289c:	d2 81       	ldd	r29, Z+2	; 0x02
    289e:	53 96       	adiw	r26, 0x13	; 19
    28a0:	dc 93       	st	X, r29
    28a2:	ce 93       	st	-X, r28
    28a4:	52 97       	sbiw	r26, 0x12	; 18
    28a6:	2e 81       	ldd	r18, Y+6	; 0x06
    28a8:	3f 81       	ldd	r19, Y+7	; 0x07
    28aa:	55 96       	adiw	r26, 0x15	; 21
    28ac:	3c 93       	st	X, r19
    28ae:	2e 93       	st	-X, r18
    28b0:	54 97       	sbiw	r26, 0x14	; 20
    28b2:	4e 81       	ldd	r20, Y+6	; 0x06
    28b4:	5f 81       	ldd	r21, Y+7	; 0x07
    28b6:	9d 01       	movw	r18, r26
    28b8:	22 5f       	subi	r18, 0xF2	; 242
    28ba:	3f 4f       	sbci	r19, 0xFF	; 255
    28bc:	fa 01       	movw	r30, r20
    28be:	35 83       	std	Z+5, r19	; 0x05
    28c0:	24 83       	std	Z+4, r18	; 0x04
    28c2:	3f 83       	std	Y+7, r19	; 0x07
    28c4:	2e 83       	std	Y+6, r18	; 0x06
    28c6:	59 96       	adiw	r26, 0x19	; 25
    28c8:	7c 93       	st	X, r23
    28ca:	6e 93       	st	-X, r22
    28cc:	58 97       	sbiw	r26, 0x18	; 24
    28ce:	fb 01       	movw	r30, r22
    28d0:	90 81       	ld	r25, Z
    28d2:	9f 5f       	subi	r25, 0xFF	; 255
    28d4:	90 83       	st	Z, r25
    28d6:	5a 96       	adiw	r26, 0x1a	; 26
    28d8:	2c 91       	ld	r18, X
    28da:	e0 91 0b 12 	lds	r30, 0x120B	; 0x80120b <pxCurrentTCB>
    28de:	f0 91 0c 12 	lds	r31, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    28e2:	92 8d       	ldd	r25, Z+26	; 0x1a
    28e4:	92 17       	cp	r25, r18
    28e6:	48 f4       	brcc	.+18     	; 0x28fa <xTaskGenericNotifyFromISR+0x22c>
    28e8:	c1 14       	cp	r12, r1
    28ea:	d1 04       	cpc	r13, r1
    28ec:	19 f0       	breq	.+6      	; 0x28f4 <xTaskGenericNotifyFromISR+0x226>
    28ee:	91 e0       	ldi	r25, 0x01	; 1
    28f0:	f6 01       	movw	r30, r12
    28f2:	90 83       	st	Z, r25
    28f4:	91 e0       	ldi	r25, 0x01	; 1
    28f6:	90 93 55 11 	sts	0x1155, r25	; 0x801155 <xYieldPending>
    28fa:	df 91       	pop	r29
    28fc:	cf 91       	pop	r28
    28fe:	0f 91       	pop	r16
    2900:	ff 90       	pop	r15
    2902:	ef 90       	pop	r14
    2904:	df 90       	pop	r13
    2906:	cf 90       	pop	r12
    2908:	bf 90       	pop	r11
    290a:	af 90       	pop	r10
    290c:	9f 90       	pop	r9
    290e:	8f 90       	pop	r8
    2910:	08 95       	ret

00002912 <xTaskGenericNotifyStateClear>:
    2912:	00 97       	sbiw	r24, 0x00	; 0
    2914:	21 f4       	brne	.+8      	; 0x291e <xTaskGenericNotifyStateClear+0xc>
    2916:	80 91 0b 12 	lds	r24, 0x120B	; 0x80120b <pxCurrentTCB>
    291a:	90 91 0c 12 	lds	r25, 0x120C	; 0x80120c <pxCurrentTCB+0x1>
    291e:	0f b6       	in	r0, 0x3f	; 63
    2920:	f8 94       	cli
    2922:	0f 92       	push	r0
    2924:	70 e0       	ldi	r23, 0x00	; 0
    2926:	fc 01       	movw	r30, r24
    2928:	e6 0f       	add	r30, r22
    292a:	f7 1f       	adc	r31, r23
    292c:	23 a9       	ldd	r18, Z+51	; 0x33
    292e:	22 30       	cpi	r18, 0x02	; 2
    2930:	31 f4       	brne	.+12     	; 0x293e <xTaskGenericNotifyStateClear+0x2c>
    2932:	fc 01       	movw	r30, r24
    2934:	e6 0f       	add	r30, r22
    2936:	f7 1f       	adc	r31, r23
    2938:	13 aa       	std	Z+51, r1	; 0x33
    293a:	81 e0       	ldi	r24, 0x01	; 1
    293c:	01 c0       	rjmp	.+2      	; 0x2940 <xTaskGenericNotifyStateClear+0x2e>
    293e:	80 e0       	ldi	r24, 0x00	; 0
    2940:	0f 90       	pop	r0
    2942:	0f be       	out	0x3f, r0	; 63
    2944:	08 95       	ret

00002946 <prvGetNextExpireTime>:
    2946:	dc 01       	movw	r26, r24
    2948:	e0 91 17 12 	lds	r30, 0x1217	; 0x801217 <pxCurrentTimerList>
    294c:	f0 91 18 12 	lds	r31, 0x1218	; 0x801218 <pxCurrentTimerList+0x1>
    2950:	80 81       	ld	r24, Z
    2952:	91 e0       	ldi	r25, 0x01	; 1
    2954:	81 11       	cpse	r24, r1
    2956:	90 e0       	ldi	r25, 0x00	; 0
    2958:	9c 93       	st	X, r25
    295a:	91 11       	cpse	r25, r1
    295c:	08 c0       	rjmp	.+16     	; 0x296e <prvGetNextExpireTime+0x28>
    295e:	07 80       	ldd	r0, Z+7	; 0x07
    2960:	f0 85       	ldd	r31, Z+8	; 0x08
    2962:	e0 2d       	mov	r30, r0
    2964:	60 81       	ld	r22, Z
    2966:	71 81       	ldd	r23, Z+1	; 0x01
    2968:	82 81       	ldd	r24, Z+2	; 0x02
    296a:	93 81       	ldd	r25, Z+3	; 0x03
    296c:	08 95       	ret
    296e:	60 e0       	ldi	r22, 0x00	; 0
    2970:	70 e0       	ldi	r23, 0x00	; 0
    2972:	cb 01       	movw	r24, r22
    2974:	08 95       	ret

00002976 <prvInsertTimerInActiveList>:
    2976:	cf 92       	push	r12
    2978:	df 92       	push	r13
    297a:	ef 92       	push	r14
    297c:	ff 92       	push	r15
    297e:	0f 93       	push	r16
    2980:	1f 93       	push	r17
    2982:	fc 01       	movw	r30, r24
    2984:	42 83       	std	Z+2, r20	; 0x02
    2986:	53 83       	std	Z+3, r21	; 0x03
    2988:	64 83       	std	Z+4, r22	; 0x04
    298a:	75 83       	std	Z+5, r23	; 0x05
    298c:	93 87       	std	Z+11, r25	; 0x0b
    298e:	82 87       	std	Z+10, r24	; 0x0a
    2990:	04 17       	cp	r16, r20
    2992:	15 07       	cpc	r17, r21
    2994:	26 07       	cpc	r18, r22
    2996:	37 07       	cpc	r19, r23
    2998:	c0 f0       	brcs	.+48     	; 0x29ca <prvInsertTimerInActiveList+0x54>
    299a:	0c 19       	sub	r16, r12
    299c:	1d 09       	sbc	r17, r13
    299e:	2e 09       	sbc	r18, r14
    29a0:	3f 09       	sbc	r19, r15
    29a2:	86 85       	ldd	r24, Z+14	; 0x0e
    29a4:	97 85       	ldd	r25, Z+15	; 0x0f
    29a6:	a0 89       	ldd	r26, Z+16	; 0x10
    29a8:	b1 89       	ldd	r27, Z+17	; 0x11
    29aa:	08 17       	cp	r16, r24
    29ac:	19 07       	cpc	r17, r25
    29ae:	2a 07       	cpc	r18, r26
    29b0:	3b 07       	cpc	r19, r27
    29b2:	00 f5       	brcc	.+64     	; 0x29f4 <prvInsertTimerInActiveList+0x7e>
    29b4:	bf 01       	movw	r22, r30
    29b6:	6e 5f       	subi	r22, 0xFE	; 254
    29b8:	7f 4f       	sbci	r23, 0xFF	; 255
    29ba:	80 91 15 12 	lds	r24, 0x1215	; 0x801215 <pxOverflowTimerList>
    29be:	90 91 16 12 	lds	r25, 0x1216	; 0x801216 <pxOverflowTimerList+0x1>
    29c2:	0e 94 c7 02 	call	0x58e	; 0x58e <vListInsert>
    29c6:	80 e0       	ldi	r24, 0x00	; 0
    29c8:	18 c0       	rjmp	.+48     	; 0x29fa <prvInsertTimerInActiveList+0x84>
    29ca:	0c 15       	cp	r16, r12
    29cc:	1d 05       	cpc	r17, r13
    29ce:	2e 05       	cpc	r18, r14
    29d0:	3f 05       	cpc	r19, r15
    29d2:	28 f4       	brcc	.+10     	; 0x29de <prvInsertTimerInActiveList+0x68>
    29d4:	4c 15       	cp	r20, r12
    29d6:	5d 05       	cpc	r21, r13
    29d8:	6e 05       	cpc	r22, r14
    29da:	7f 05       	cpc	r23, r15
    29dc:	68 f4       	brcc	.+26     	; 0x29f8 <prvInsertTimerInActiveList+0x82>
    29de:	bf 01       	movw	r22, r30
    29e0:	6e 5f       	subi	r22, 0xFE	; 254
    29e2:	7f 4f       	sbci	r23, 0xFF	; 255
    29e4:	80 91 17 12 	lds	r24, 0x1217	; 0x801217 <pxCurrentTimerList>
    29e8:	90 91 18 12 	lds	r25, 0x1218	; 0x801218 <pxCurrentTimerList+0x1>
    29ec:	0e 94 c7 02 	call	0x58e	; 0x58e <vListInsert>
    29f0:	80 e0       	ldi	r24, 0x00	; 0
    29f2:	03 c0       	rjmp	.+6      	; 0x29fa <prvInsertTimerInActiveList+0x84>
    29f4:	81 e0       	ldi	r24, 0x01	; 1
    29f6:	01 c0       	rjmp	.+2      	; 0x29fa <prvInsertTimerInActiveList+0x84>
    29f8:	81 e0       	ldi	r24, 0x01	; 1
    29fa:	1f 91       	pop	r17
    29fc:	0f 91       	pop	r16
    29fe:	ff 90       	pop	r15
    2a00:	ef 90       	pop	r14
    2a02:	df 90       	pop	r13
    2a04:	cf 90       	pop	r12
    2a06:	08 95       	ret

00002a08 <prvCheckForValidListAndQueue>:
    2a08:	0f b6       	in	r0, 0x3f	; 63
    2a0a:	f8 94       	cli
    2a0c:	0f 92       	push	r0
    2a0e:	80 91 13 12 	lds	r24, 0x1213	; 0x801213 <xTimerQueue>
    2a12:	90 91 14 12 	lds	r25, 0x1214	; 0x801214 <xTimerQueue+0x1>
    2a16:	89 2b       	or	r24, r25
    2a18:	e9 f4       	brne	.+58     	; 0x2a54 <prvCheckForValidListAndQueue+0x4c>
    2a1a:	84 e2       	ldi	r24, 0x24	; 36
    2a1c:	92 e1       	ldi	r25, 0x12	; 18
    2a1e:	0e 94 b2 02 	call	0x564	; 0x564 <vListInitialise>
    2a22:	89 e1       	ldi	r24, 0x19	; 25
    2a24:	92 e1       	ldi	r25, 0x12	; 18
    2a26:	0e 94 b2 02 	call	0x564	; 0x564 <vListInitialise>
    2a2a:	84 e2       	ldi	r24, 0x24	; 36
    2a2c:	92 e1       	ldi	r25, 0x12	; 18
    2a2e:	90 93 18 12 	sts	0x1218, r25	; 0x801218 <pxCurrentTimerList+0x1>
    2a32:	80 93 17 12 	sts	0x1217, r24	; 0x801217 <pxCurrentTimerList>
    2a36:	89 e1       	ldi	r24, 0x19	; 25
    2a38:	92 e1       	ldi	r25, 0x12	; 18
    2a3a:	90 93 16 12 	sts	0x1216, r25	; 0x801216 <pxOverflowTimerList+0x1>
    2a3e:	80 93 15 12 	sts	0x1215, r24	; 0x801215 <pxOverflowTimerList>
    2a42:	40 e0       	ldi	r20, 0x00	; 0
    2a44:	67 e0       	ldi	r22, 0x07	; 7
    2a46:	8a e0       	ldi	r24, 0x0A	; 10
    2a48:	0e 94 65 05 	call	0xaca	; 0xaca <xQueueGenericCreate>
    2a4c:	90 93 14 12 	sts	0x1214, r25	; 0x801214 <xTimerQueue+0x1>
    2a50:	80 93 13 12 	sts	0x1213, r24	; 0x801213 <xTimerQueue>
    2a54:	0f 90       	pop	r0
    2a56:	0f be       	out	0x3f, r0	; 63
    2a58:	08 95       	ret

00002a5a <xTimerCreateTimerTask>:
    2a5a:	ef 92       	push	r14
    2a5c:	ff 92       	push	r15
    2a5e:	0f 93       	push	r16
    2a60:	d3 df       	rcall	.-90     	; 0x2a08 <prvCheckForValidListAndQueue>
    2a62:	80 91 13 12 	lds	r24, 0x1213	; 0x801213 <xTimerQueue>
    2a66:	90 91 14 12 	lds	r25, 0x1214	; 0x801214 <xTimerQueue+0x1>
    2a6a:	89 2b       	or	r24, r25
    2a6c:	91 f0       	breq	.+36     	; 0x2a92 <xTimerCreateTimerTask+0x38>
    2a6e:	0f 2e       	mov	r0, r31
    2a70:	f1 e1       	ldi	r31, 0x11	; 17
    2a72:	ef 2e       	mov	r14, r31
    2a74:	f2 e1       	ldi	r31, 0x12	; 18
    2a76:	ff 2e       	mov	r15, r31
    2a78:	f0 2d       	mov	r31, r0
    2a7a:	03 e0       	ldi	r16, 0x03	; 3
    2a7c:	20 e0       	ldi	r18, 0x00	; 0
    2a7e:	30 e0       	ldi	r19, 0x00	; 0
    2a80:	40 ec       	ldi	r20, 0xC0	; 192
    2a82:	50 e0       	ldi	r21, 0x00	; 0
    2a84:	6f e9       	ldi	r22, 0x9F	; 159
    2a86:	72 e0       	ldi	r23, 0x02	; 2
    2a88:	87 ed       	ldi	r24, 0xD7	; 215
    2a8a:	90 e0       	ldi	r25, 0x00	; 0
    2a8c:	0e 94 3d 0c 	call	0x187a	; 0x187a <xTaskCreate>
    2a90:	01 c0       	rjmp	.+2      	; 0x2a94 <xTimerCreateTimerTask+0x3a>
    2a92:	80 e0       	ldi	r24, 0x00	; 0
    2a94:	0f 91       	pop	r16
    2a96:	ff 90       	pop	r15
    2a98:	ef 90       	pop	r14
    2a9a:	08 95       	ret

00002a9c <xTimerGenericCommand>:
    2a9c:	8f 92       	push	r8
    2a9e:	9f 92       	push	r9
    2aa0:	af 92       	push	r10
    2aa2:	bf 92       	push	r11
    2aa4:	cf 92       	push	r12
    2aa6:	df 92       	push	r13
    2aa8:	ef 92       	push	r14
    2aaa:	ff 92       	push	r15
    2aac:	0f 93       	push	r16
    2aae:	1f 93       	push	r17
    2ab0:	cf 93       	push	r28
    2ab2:	df 93       	push	r29
    2ab4:	cd b7       	in	r28, 0x3d	; 61
    2ab6:	de b7       	in	r29, 0x3e	; 62
    2ab8:	27 97       	sbiw	r28, 0x07	; 7
    2aba:	0f b6       	in	r0, 0x3f	; 63
    2abc:	f8 94       	cli
    2abe:	de bf       	out	0x3e, r29	; 62
    2ac0:	0f be       	out	0x3f, r0	; 63
    2ac2:	cd bf       	out	0x3d, r28	; 61
    2ac4:	e0 91 13 12 	lds	r30, 0x1213	; 0x801213 <xTimerQueue>
    2ac8:	f0 91 14 12 	lds	r31, 0x1214	; 0x801214 <xTimerQueue+0x1>
    2acc:	30 97       	sbiw	r30, 0x00	; 0
    2ace:	81 f1       	breq	.+96     	; 0x2b30 <xTimerGenericCommand+0x94>
    2ad0:	69 83       	std	Y+1, r22	; 0x01
    2ad2:	2a 83       	std	Y+2, r18	; 0x02
    2ad4:	3b 83       	std	Y+3, r19	; 0x03
    2ad6:	4c 83       	std	Y+4, r20	; 0x04
    2ad8:	5d 83       	std	Y+5, r21	; 0x05
    2ada:	9f 83       	std	Y+7, r25	; 0x07
    2adc:	8e 83       	std	Y+6, r24	; 0x06
    2ade:	66 30       	cpi	r22, 0x06	; 6
    2ae0:	f4 f4       	brge	.+60     	; 0x2b1e <xTimerGenericCommand+0x82>
    2ae2:	ee db       	rcall	.-2084   	; 0x22c0 <xTaskGetSchedulerState>
    2ae4:	82 30       	cpi	r24, 0x02	; 2
    2ae6:	69 f4       	brne	.+26     	; 0x2b02 <xTimerGenericCommand+0x66>
    2ae8:	00 e0       	ldi	r16, 0x00	; 0
    2aea:	a7 01       	movw	r20, r14
    2aec:	96 01       	movw	r18, r12
    2aee:	be 01       	movw	r22, r28
    2af0:	6f 5f       	subi	r22, 0xFF	; 255
    2af2:	7f 4f       	sbci	r23, 0xFF	; 255
    2af4:	80 91 13 12 	lds	r24, 0x1213	; 0x801213 <xTimerQueue>
    2af8:	90 91 14 12 	lds	r25, 0x1214	; 0x801214 <xTimerQueue+0x1>
    2afc:	0e 94 88 05 	call	0xb10	; 0xb10 <xQueueGenericSend>
    2b00:	18 c0       	rjmp	.+48     	; 0x2b32 <xTimerGenericCommand+0x96>
    2b02:	00 e0       	ldi	r16, 0x00	; 0
    2b04:	20 e0       	ldi	r18, 0x00	; 0
    2b06:	30 e0       	ldi	r19, 0x00	; 0
    2b08:	a9 01       	movw	r20, r18
    2b0a:	be 01       	movw	r22, r28
    2b0c:	6f 5f       	subi	r22, 0xFF	; 255
    2b0e:	7f 4f       	sbci	r23, 0xFF	; 255
    2b10:	80 91 13 12 	lds	r24, 0x1213	; 0x801213 <xTimerQueue>
    2b14:	90 91 14 12 	lds	r25, 0x1214	; 0x801214 <xTimerQueue+0x1>
    2b18:	0e 94 88 05 	call	0xb10	; 0xb10 <xQueueGenericSend>
    2b1c:	0a c0       	rjmp	.+20     	; 0x2b32 <xTimerGenericCommand+0x96>
    2b1e:	20 e0       	ldi	r18, 0x00	; 0
    2b20:	a8 01       	movw	r20, r16
    2b22:	be 01       	movw	r22, r28
    2b24:	6f 5f       	subi	r22, 0xFF	; 255
    2b26:	7f 4f       	sbci	r23, 0xFF	; 255
    2b28:	cf 01       	movw	r24, r30
    2b2a:	0e 94 18 06 	call	0xc30	; 0xc30 <xQueueGenericSendFromISR>
    2b2e:	01 c0       	rjmp	.+2      	; 0x2b32 <xTimerGenericCommand+0x96>
    2b30:	80 e0       	ldi	r24, 0x00	; 0
    2b32:	27 96       	adiw	r28, 0x07	; 7
    2b34:	0f b6       	in	r0, 0x3f	; 63
    2b36:	f8 94       	cli
    2b38:	de bf       	out	0x3e, r29	; 62
    2b3a:	0f be       	out	0x3f, r0	; 63
    2b3c:	cd bf       	out	0x3d, r28	; 61
    2b3e:	df 91       	pop	r29
    2b40:	cf 91       	pop	r28
    2b42:	1f 91       	pop	r17
    2b44:	0f 91       	pop	r16
    2b46:	ff 90       	pop	r15
    2b48:	ef 90       	pop	r14
    2b4a:	df 90       	pop	r13
    2b4c:	cf 90       	pop	r12
    2b4e:	bf 90       	pop	r11
    2b50:	af 90       	pop	r10
    2b52:	9f 90       	pop	r9
    2b54:	8f 90       	pop	r8
    2b56:	08 95       	ret

00002b58 <prvSwitchTimerLists>:
    2b58:	8f 92       	push	r8
    2b5a:	9f 92       	push	r9
    2b5c:	af 92       	push	r10
    2b5e:	bf 92       	push	r11
    2b60:	cf 92       	push	r12
    2b62:	df 92       	push	r13
    2b64:	ef 92       	push	r14
    2b66:	ff 92       	push	r15
    2b68:	0f 93       	push	r16
    2b6a:	1f 93       	push	r17
    2b6c:	cf 93       	push	r28
    2b6e:	df 93       	push	r29
    2b70:	3b c0       	rjmp	.+118    	; 0x2be8 <prvSwitchTimerLists+0x90>
    2b72:	07 80       	ldd	r0, Z+7	; 0x07
    2b74:	f0 85       	ldd	r31, Z+8	; 0x08
    2b76:	e0 2d       	mov	r30, r0
    2b78:	80 80       	ld	r8, Z
    2b7a:	91 80       	ldd	r9, Z+1	; 0x01
    2b7c:	a2 80       	ldd	r10, Z+2	; 0x02
    2b7e:	b3 80       	ldd	r11, Z+3	; 0x03
    2b80:	c0 85       	ldd	r28, Z+8	; 0x08
    2b82:	d1 85       	ldd	r29, Z+9	; 0x09
    2b84:	8e 01       	movw	r16, r28
    2b86:	0e 5f       	subi	r16, 0xFE	; 254
    2b88:	1f 4f       	sbci	r17, 0xFF	; 255
    2b8a:	c8 01       	movw	r24, r16
    2b8c:	0e 94 04 03 	call	0x608	; 0x608 <uxListRemove>
    2b90:	ec 89       	ldd	r30, Y+20	; 0x14
    2b92:	fd 89       	ldd	r31, Y+21	; 0x15
    2b94:	ce 01       	movw	r24, r28
    2b96:	19 95       	eicall
    2b98:	8e 89       	ldd	r24, Y+22	; 0x16
    2b9a:	82 ff       	sbrs	r24, 2
    2b9c:	25 c0       	rjmp	.+74     	; 0x2be8 <prvSwitchTimerLists+0x90>
    2b9e:	8e 85       	ldd	r24, Y+14	; 0x0e
    2ba0:	9f 85       	ldd	r25, Y+15	; 0x0f
    2ba2:	a8 89       	ldd	r26, Y+16	; 0x10
    2ba4:	b9 89       	ldd	r27, Y+17	; 0x11
    2ba6:	88 0d       	add	r24, r8
    2ba8:	99 1d       	adc	r25, r9
    2baa:	aa 1d       	adc	r26, r10
    2bac:	bb 1d       	adc	r27, r11
    2bae:	88 16       	cp	r8, r24
    2bb0:	99 06       	cpc	r9, r25
    2bb2:	aa 06       	cpc	r10, r26
    2bb4:	bb 06       	cpc	r11, r27
    2bb6:	70 f4       	brcc	.+28     	; 0x2bd4 <prvSwitchTimerLists+0x7c>
    2bb8:	8a 83       	std	Y+2, r24	; 0x02
    2bba:	9b 83       	std	Y+3, r25	; 0x03
    2bbc:	ac 83       	std	Y+4, r26	; 0x04
    2bbe:	bd 83       	std	Y+5, r27	; 0x05
    2bc0:	db 87       	std	Y+11, r29	; 0x0b
    2bc2:	ca 87       	std	Y+10, r28	; 0x0a
    2bc4:	b8 01       	movw	r22, r16
    2bc6:	80 91 17 12 	lds	r24, 0x1217	; 0x801217 <pxCurrentTimerList>
    2bca:	90 91 18 12 	lds	r25, 0x1218	; 0x801218 <pxCurrentTimerList+0x1>
    2bce:	0e 94 c7 02 	call	0x58e	; 0x58e <vListInsert>
    2bd2:	0a c0       	rjmp	.+20     	; 0x2be8 <prvSwitchTimerLists+0x90>
    2bd4:	c1 2c       	mov	r12, r1
    2bd6:	d1 2c       	mov	r13, r1
    2bd8:	76 01       	movw	r14, r12
    2bda:	00 e0       	ldi	r16, 0x00	; 0
    2bdc:	10 e0       	ldi	r17, 0x00	; 0
    2bde:	a5 01       	movw	r20, r10
    2be0:	94 01       	movw	r18, r8
    2be2:	60 e0       	ldi	r22, 0x00	; 0
    2be4:	ce 01       	movw	r24, r28
    2be6:	5a df       	rcall	.-332    	; 0x2a9c <xTimerGenericCommand>
    2be8:	e0 91 17 12 	lds	r30, 0x1217	; 0x801217 <pxCurrentTimerList>
    2bec:	f0 91 18 12 	lds	r31, 0x1218	; 0x801218 <pxCurrentTimerList+0x1>
    2bf0:	80 81       	ld	r24, Z
    2bf2:	81 11       	cpse	r24, r1
    2bf4:	be cf       	rjmp	.-132    	; 0x2b72 <prvSwitchTimerLists+0x1a>
    2bf6:	80 91 15 12 	lds	r24, 0x1215	; 0x801215 <pxOverflowTimerList>
    2bfa:	90 91 16 12 	lds	r25, 0x1216	; 0x801216 <pxOverflowTimerList+0x1>
    2bfe:	90 93 18 12 	sts	0x1218, r25	; 0x801218 <pxCurrentTimerList+0x1>
    2c02:	80 93 17 12 	sts	0x1217, r24	; 0x801217 <pxCurrentTimerList>
    2c06:	f0 93 16 12 	sts	0x1216, r31	; 0x801216 <pxOverflowTimerList+0x1>
    2c0a:	e0 93 15 12 	sts	0x1215, r30	; 0x801215 <pxOverflowTimerList>
    2c0e:	df 91       	pop	r29
    2c10:	cf 91       	pop	r28
    2c12:	1f 91       	pop	r17
    2c14:	0f 91       	pop	r16
    2c16:	ff 90       	pop	r15
    2c18:	ef 90       	pop	r14
    2c1a:	df 90       	pop	r13
    2c1c:	cf 90       	pop	r12
    2c1e:	bf 90       	pop	r11
    2c20:	af 90       	pop	r10
    2c22:	9f 90       	pop	r9
    2c24:	8f 90       	pop	r8
    2c26:	08 95       	ret

00002c28 <prvSampleTimeNow>:
    2c28:	cf 92       	push	r12
    2c2a:	df 92       	push	r13
    2c2c:	ef 92       	push	r14
    2c2e:	ff 92       	push	r15
    2c30:	cf 93       	push	r28
    2c32:	df 93       	push	r29
    2c34:	ec 01       	movw	r28, r24
    2c36:	0e 94 c7 0c 	call	0x198e	; 0x198e <xTaskGetTickCount>
    2c3a:	6b 01       	movw	r12, r22
    2c3c:	7c 01       	movw	r14, r24
    2c3e:	80 91 0d 12 	lds	r24, 0x120D	; 0x80120d <xLastTime.2436>
    2c42:	90 91 0e 12 	lds	r25, 0x120E	; 0x80120e <xLastTime.2436+0x1>
    2c46:	a0 91 0f 12 	lds	r26, 0x120F	; 0x80120f <xLastTime.2436+0x2>
    2c4a:	b0 91 10 12 	lds	r27, 0x1210	; 0x801210 <xLastTime.2436+0x3>
    2c4e:	c8 16       	cp	r12, r24
    2c50:	d9 06       	cpc	r13, r25
    2c52:	ea 06       	cpc	r14, r26
    2c54:	fb 06       	cpc	r15, r27
    2c56:	20 f4       	brcc	.+8      	; 0x2c60 <prvSampleTimeNow+0x38>
    2c58:	7f df       	rcall	.-258    	; 0x2b58 <prvSwitchTimerLists>
    2c5a:	81 e0       	ldi	r24, 0x01	; 1
    2c5c:	88 83       	st	Y, r24
    2c5e:	01 c0       	rjmp	.+2      	; 0x2c62 <prvSampleTimeNow+0x3a>
    2c60:	18 82       	st	Y, r1
    2c62:	c0 92 0d 12 	sts	0x120D, r12	; 0x80120d <xLastTime.2436>
    2c66:	d0 92 0e 12 	sts	0x120E, r13	; 0x80120e <xLastTime.2436+0x1>
    2c6a:	e0 92 0f 12 	sts	0x120F, r14	; 0x80120f <xLastTime.2436+0x2>
    2c6e:	f0 92 10 12 	sts	0x1210, r15	; 0x801210 <xLastTime.2436+0x3>
    2c72:	c7 01       	movw	r24, r14
    2c74:	b6 01       	movw	r22, r12
    2c76:	df 91       	pop	r29
    2c78:	cf 91       	pop	r28
    2c7a:	ff 90       	pop	r15
    2c7c:	ef 90       	pop	r14
    2c7e:	df 90       	pop	r13
    2c80:	cf 90       	pop	r12
    2c82:	08 95       	ret

00002c84 <prvProcessExpiredTimer>:
    2c84:	4f 92       	push	r4
    2c86:	5f 92       	push	r5
    2c88:	6f 92       	push	r6
    2c8a:	7f 92       	push	r7
    2c8c:	8f 92       	push	r8
    2c8e:	9f 92       	push	r9
    2c90:	af 92       	push	r10
    2c92:	bf 92       	push	r11
    2c94:	cf 92       	push	r12
    2c96:	df 92       	push	r13
    2c98:	ef 92       	push	r14
    2c9a:	ff 92       	push	r15
    2c9c:	0f 93       	push	r16
    2c9e:	1f 93       	push	r17
    2ca0:	cf 93       	push	r28
    2ca2:	df 93       	push	r29
    2ca4:	4b 01       	movw	r8, r22
    2ca6:	5c 01       	movw	r10, r24
    2ca8:	29 01       	movw	r4, r18
    2caa:	3a 01       	movw	r6, r20
    2cac:	e0 91 17 12 	lds	r30, 0x1217	; 0x801217 <pxCurrentTimerList>
    2cb0:	f0 91 18 12 	lds	r31, 0x1218	; 0x801218 <pxCurrentTimerList+0x1>
    2cb4:	07 80       	ldd	r0, Z+7	; 0x07
    2cb6:	f0 85       	ldd	r31, Z+8	; 0x08
    2cb8:	e0 2d       	mov	r30, r0
    2cba:	c0 85       	ldd	r28, Z+8	; 0x08
    2cbc:	d1 85       	ldd	r29, Z+9	; 0x09
    2cbe:	ce 01       	movw	r24, r28
    2cc0:	02 96       	adiw	r24, 0x02	; 2
    2cc2:	0e 94 04 03 	call	0x608	; 0x608 <uxListRemove>
    2cc6:	8e 89       	ldd	r24, Y+22	; 0x16
    2cc8:	82 ff       	sbrs	r24, 2
    2cca:	1b c0       	rjmp	.+54     	; 0x2d02 <prvProcessExpiredTimer+0x7e>
    2ccc:	4e 85       	ldd	r20, Y+14	; 0x0e
    2cce:	5f 85       	ldd	r21, Y+15	; 0x0f
    2cd0:	68 89       	ldd	r22, Y+16	; 0x10
    2cd2:	79 89       	ldd	r23, Y+17	; 0x11
    2cd4:	48 0d       	add	r20, r8
    2cd6:	59 1d       	adc	r21, r9
    2cd8:	6a 1d       	adc	r22, r10
    2cda:	7b 1d       	adc	r23, r11
    2cdc:	75 01       	movw	r14, r10
    2cde:	64 01       	movw	r12, r8
    2ce0:	93 01       	movw	r18, r6
    2ce2:	82 01       	movw	r16, r4
    2ce4:	ce 01       	movw	r24, r28
    2ce6:	47 de       	rcall	.-882    	; 0x2976 <prvInsertTimerInActiveList>
    2ce8:	88 23       	and	r24, r24
    2cea:	69 f0       	breq	.+26     	; 0x2d06 <prvProcessExpiredTimer+0x82>
    2cec:	c1 2c       	mov	r12, r1
    2cee:	d1 2c       	mov	r13, r1
    2cf0:	76 01       	movw	r14, r12
    2cf2:	00 e0       	ldi	r16, 0x00	; 0
    2cf4:	10 e0       	ldi	r17, 0x00	; 0
    2cf6:	a5 01       	movw	r20, r10
    2cf8:	94 01       	movw	r18, r8
    2cfa:	60 e0       	ldi	r22, 0x00	; 0
    2cfc:	ce 01       	movw	r24, r28
    2cfe:	ce de       	rcall	.-612    	; 0x2a9c <xTimerGenericCommand>
    2d00:	02 c0       	rjmp	.+4      	; 0x2d06 <prvProcessExpiredTimer+0x82>
    2d02:	8e 7f       	andi	r24, 0xFE	; 254
    2d04:	8e 8b       	std	Y+22, r24	; 0x16
    2d06:	ec 89       	ldd	r30, Y+20	; 0x14
    2d08:	fd 89       	ldd	r31, Y+21	; 0x15
    2d0a:	ce 01       	movw	r24, r28
    2d0c:	19 95       	eicall
    2d0e:	df 91       	pop	r29
    2d10:	cf 91       	pop	r28
    2d12:	1f 91       	pop	r17
    2d14:	0f 91       	pop	r16
    2d16:	ff 90       	pop	r15
    2d18:	ef 90       	pop	r14
    2d1a:	df 90       	pop	r13
    2d1c:	cf 90       	pop	r12
    2d1e:	bf 90       	pop	r11
    2d20:	af 90       	pop	r10
    2d22:	9f 90       	pop	r9
    2d24:	8f 90       	pop	r8
    2d26:	7f 90       	pop	r7
    2d28:	6f 90       	pop	r6
    2d2a:	5f 90       	pop	r5
    2d2c:	4f 90       	pop	r4
    2d2e:	08 95       	ret

00002d30 <prvProcessTimerOrBlockTask>:
    2d30:	8f 92       	push	r8
    2d32:	9f 92       	push	r9
    2d34:	af 92       	push	r10
    2d36:	bf 92       	push	r11
    2d38:	cf 92       	push	r12
    2d3a:	df 92       	push	r13
    2d3c:	ef 92       	push	r14
    2d3e:	ff 92       	push	r15
    2d40:	1f 93       	push	r17
    2d42:	cf 93       	push	r28
    2d44:	df 93       	push	r29
    2d46:	1f 92       	push	r1
    2d48:	cd b7       	in	r28, 0x3d	; 61
    2d4a:	de b7       	in	r29, 0x3e	; 62
    2d4c:	6b 01       	movw	r12, r22
    2d4e:	7c 01       	movw	r14, r24
    2d50:	14 2f       	mov	r17, r20
    2d52:	0e 94 c1 0c 	call	0x1982	; 0x1982 <vTaskSuspendAll>
    2d56:	ce 01       	movw	r24, r28
    2d58:	01 96       	adiw	r24, 0x01	; 1
    2d5a:	66 df       	rcall	.-308    	; 0x2c28 <prvSampleTimeNow>
    2d5c:	4b 01       	movw	r8, r22
    2d5e:	5c 01       	movw	r10, r24
    2d60:	89 81       	ldd	r24, Y+1	; 0x01
    2d62:	81 11       	cpse	r24, r1
    2d64:	2d c0       	rjmp	.+90     	; 0x2dc0 <prvProcessTimerOrBlockTask+0x90>
    2d66:	11 11       	cpse	r17, r1
    2d68:	0d c0       	rjmp	.+26     	; 0x2d84 <prvProcessTimerOrBlockTask+0x54>
    2d6a:	8c 14       	cp	r8, r12
    2d6c:	9d 04       	cpc	r9, r13
    2d6e:	ae 04       	cpc	r10, r14
    2d70:	bf 04       	cpc	r11, r15
    2d72:	40 f0       	brcs	.+16     	; 0x2d84 <prvProcessTimerOrBlockTask+0x54>
    2d74:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <xTaskResumeAll>
    2d78:	a5 01       	movw	r20, r10
    2d7a:	94 01       	movw	r18, r8
    2d7c:	c7 01       	movw	r24, r14
    2d7e:	b6 01       	movw	r22, r12
    2d80:	81 df       	rcall	.-254    	; 0x2c84 <prvProcessExpiredTimer>
    2d82:	20 c0       	rjmp	.+64     	; 0x2dc4 <prvProcessTimerOrBlockTask+0x94>
    2d84:	11 23       	and	r17, r17
    2d86:	41 f0       	breq	.+16     	; 0x2d98 <prvProcessTimerOrBlockTask+0x68>
    2d88:	e0 91 15 12 	lds	r30, 0x1215	; 0x801215 <pxOverflowTimerList>
    2d8c:	f0 91 16 12 	lds	r31, 0x1216	; 0x801216 <pxOverflowTimerList+0x1>
    2d90:	80 81       	ld	r24, Z
    2d92:	11 e0       	ldi	r17, 0x01	; 1
    2d94:	81 11       	cpse	r24, r1
    2d96:	10 e0       	ldi	r17, 0x00	; 0
    2d98:	b7 01       	movw	r22, r14
    2d9a:	a6 01       	movw	r20, r12
    2d9c:	48 19       	sub	r20, r8
    2d9e:	59 09       	sbc	r21, r9
    2da0:	6a 09       	sbc	r22, r10
    2da2:	7b 09       	sbc	r23, r11
    2da4:	21 2f       	mov	r18, r17
    2da6:	80 91 13 12 	lds	r24, 0x1213	; 0x801213 <xTimerQueue>
    2daa:	90 91 14 12 	lds	r25, 0x1214	; 0x801214 <xTimerQueue+0x1>
    2dae:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <vQueueWaitForMessageRestricted>
    2db2:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <xTaskResumeAll>
    2db6:	81 11       	cpse	r24, r1
    2db8:	05 c0       	rjmp	.+10     	; 0x2dc4 <prvProcessTimerOrBlockTask+0x94>
    2dba:	0e 94 80 03 	call	0x700	; 0x700 <vPortYield>
    2dbe:	02 c0       	rjmp	.+4      	; 0x2dc4 <prvProcessTimerOrBlockTask+0x94>
    2dc0:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <xTaskResumeAll>
    2dc4:	0f 90       	pop	r0
    2dc6:	df 91       	pop	r29
    2dc8:	cf 91       	pop	r28
    2dca:	1f 91       	pop	r17
    2dcc:	ff 90       	pop	r15
    2dce:	ef 90       	pop	r14
    2dd0:	df 90       	pop	r13
    2dd2:	cf 90       	pop	r12
    2dd4:	bf 90       	pop	r11
    2dd6:	af 90       	pop	r10
    2dd8:	9f 90       	pop	r9
    2dda:	8f 90       	pop	r8
    2ddc:	08 95       	ret

00002dde <prvProcessReceivedCommands>:
    2dde:	af 92       	push	r10
    2de0:	bf 92       	push	r11
    2de2:	cf 92       	push	r12
    2de4:	df 92       	push	r13
    2de6:	ef 92       	push	r14
    2de8:	ff 92       	push	r15
    2dea:	0f 93       	push	r16
    2dec:	1f 93       	push	r17
    2dee:	cf 93       	push	r28
    2df0:	df 93       	push	r29
    2df2:	cd b7       	in	r28, 0x3d	; 61
    2df4:	de b7       	in	r29, 0x3e	; 62
    2df6:	28 97       	sbiw	r28, 0x08	; 8
    2df8:	0f b6       	in	r0, 0x3f	; 63
    2dfa:	f8 94       	cli
    2dfc:	de bf       	out	0x3e, r29	; 62
    2dfe:	0f be       	out	0x3f, r0	; 63
    2e00:	cd bf       	out	0x3d, r28	; 61
    2e02:	82 c0       	rjmp	.+260    	; 0x2f08 <prvProcessReceivedCommands+0x12a>
    2e04:	89 81       	ldd	r24, Y+1	; 0x01
    2e06:	88 23       	and	r24, r24
    2e08:	0c f4       	brge	.+2      	; 0x2e0c <prvProcessReceivedCommands+0x2e>
    2e0a:	7e c0       	rjmp	.+252    	; 0x2f08 <prvProcessReceivedCommands+0x12a>
    2e0c:	ae 80       	ldd	r10, Y+6	; 0x06
    2e0e:	bf 80       	ldd	r11, Y+7	; 0x07
    2e10:	d5 01       	movw	r26, r10
    2e12:	1c 96       	adiw	r26, 0x0c	; 12
    2e14:	8d 91       	ld	r24, X+
    2e16:	9c 91       	ld	r25, X
    2e18:	1d 97       	sbiw	r26, 0x0d	; 13
    2e1a:	89 2b       	or	r24, r25
    2e1c:	21 f0       	breq	.+8      	; 0x2e26 <prvProcessReceivedCommands+0x48>
    2e1e:	c5 01       	movw	r24, r10
    2e20:	02 96       	adiw	r24, 0x02	; 2
    2e22:	0e 94 04 03 	call	0x608	; 0x608 <uxListRemove>
    2e26:	ce 01       	movw	r24, r28
    2e28:	08 96       	adiw	r24, 0x08	; 8
    2e2a:	fe de       	rcall	.-516    	; 0x2c28 <prvSampleTimeNow>
    2e2c:	8b 01       	movw	r16, r22
    2e2e:	9c 01       	movw	r18, r24
    2e30:	e9 81       	ldd	r30, Y+1	; 0x01
    2e32:	0e 2e       	mov	r0, r30
    2e34:	00 0c       	add	r0, r0
    2e36:	ff 0b       	sbc	r31, r31
    2e38:	ea 30       	cpi	r30, 0x0A	; 10
    2e3a:	f1 05       	cpc	r31, r1
    2e3c:	08 f0       	brcs	.+2      	; 0x2e40 <prvProcessReceivedCommands+0x62>
    2e3e:	64 c0       	rjmp	.+200    	; 0x2f08 <prvProcessReceivedCommands+0x12a>
    2e40:	88 27       	eor	r24, r24
    2e42:	ee 58       	subi	r30, 0x8E	; 142
    2e44:	ff 4f       	sbci	r31, 0xFF	; 255
    2e46:	8f 4f       	sbci	r24, 0xFF	; 255
    2e48:	0c 94 ea 29 	jmp	0x53d4	; 0x53d4 <__tablejump2__>
    2e4c:	f5 01       	movw	r30, r10
    2e4e:	86 89       	ldd	r24, Z+22	; 0x16
    2e50:	81 60       	ori	r24, 0x01	; 1
    2e52:	86 8b       	std	Z+22, r24	; 0x16
    2e54:	ca 80       	ldd	r12, Y+2	; 0x02
    2e56:	db 80       	ldd	r13, Y+3	; 0x03
    2e58:	ec 80       	ldd	r14, Y+4	; 0x04
    2e5a:	fd 80       	ldd	r15, Y+5	; 0x05
    2e5c:	46 85       	ldd	r20, Z+14	; 0x0e
    2e5e:	57 85       	ldd	r21, Z+15	; 0x0f
    2e60:	60 89       	ldd	r22, Z+16	; 0x10
    2e62:	71 89       	ldd	r23, Z+17	; 0x11
    2e64:	4c 0d       	add	r20, r12
    2e66:	5d 1d       	adc	r21, r13
    2e68:	6e 1d       	adc	r22, r14
    2e6a:	7f 1d       	adc	r23, r15
    2e6c:	c5 01       	movw	r24, r10
    2e6e:	83 dd       	rcall	.-1274   	; 0x2976 <prvInsertTimerInActiveList>
    2e70:	88 23       	and	r24, r24
    2e72:	09 f4       	brne	.+2      	; 0x2e76 <prvProcessReceivedCommands+0x98>
    2e74:	49 c0       	rjmp	.+146    	; 0x2f08 <prvProcessReceivedCommands+0x12a>
    2e76:	d5 01       	movw	r26, r10
    2e78:	54 96       	adiw	r26, 0x14	; 20
    2e7a:	ed 91       	ld	r30, X+
    2e7c:	fc 91       	ld	r31, X
    2e7e:	55 97       	sbiw	r26, 0x15	; 21
    2e80:	c5 01       	movw	r24, r10
    2e82:	19 95       	eicall
    2e84:	f5 01       	movw	r30, r10
    2e86:	86 89       	ldd	r24, Z+22	; 0x16
    2e88:	82 ff       	sbrs	r24, 2
    2e8a:	3e c0       	rjmp	.+124    	; 0x2f08 <prvProcessReceivedCommands+0x12a>
    2e8c:	4a 81       	ldd	r20, Y+2	; 0x02
    2e8e:	5b 81       	ldd	r21, Y+3	; 0x03
    2e90:	6c 81       	ldd	r22, Y+4	; 0x04
    2e92:	7d 81       	ldd	r23, Y+5	; 0x05
    2e94:	86 85       	ldd	r24, Z+14	; 0x0e
    2e96:	97 85       	ldd	r25, Z+15	; 0x0f
    2e98:	a0 89       	ldd	r26, Z+16	; 0x10
    2e9a:	b1 89       	ldd	r27, Z+17	; 0x11
    2e9c:	9a 01       	movw	r18, r20
    2e9e:	ab 01       	movw	r20, r22
    2ea0:	28 0f       	add	r18, r24
    2ea2:	39 1f       	adc	r19, r25
    2ea4:	4a 1f       	adc	r20, r26
    2ea6:	5b 1f       	adc	r21, r27
    2ea8:	c1 2c       	mov	r12, r1
    2eaa:	d1 2c       	mov	r13, r1
    2eac:	76 01       	movw	r14, r12
    2eae:	00 e0       	ldi	r16, 0x00	; 0
    2eb0:	10 e0       	ldi	r17, 0x00	; 0
    2eb2:	60 e0       	ldi	r22, 0x00	; 0
    2eb4:	c5 01       	movw	r24, r10
    2eb6:	f2 dd       	rcall	.-1052   	; 0x2a9c <xTimerGenericCommand>
    2eb8:	27 c0       	rjmp	.+78     	; 0x2f08 <prvProcessReceivedCommands+0x12a>
    2eba:	d5 01       	movw	r26, r10
    2ebc:	56 96       	adiw	r26, 0x16	; 22
    2ebe:	8c 91       	ld	r24, X
    2ec0:	56 97       	sbiw	r26, 0x16	; 22
    2ec2:	8e 7f       	andi	r24, 0xFE	; 254
    2ec4:	56 96       	adiw	r26, 0x16	; 22
    2ec6:	8c 93       	st	X, r24
    2ec8:	1f c0       	rjmp	.+62     	; 0x2f08 <prvProcessReceivedCommands+0x12a>
    2eca:	f5 01       	movw	r30, r10
    2ecc:	86 89       	ldd	r24, Z+22	; 0x16
    2ece:	81 60       	ori	r24, 0x01	; 1
    2ed0:	86 8b       	std	Z+22, r24	; 0x16
    2ed2:	4a 81       	ldd	r20, Y+2	; 0x02
    2ed4:	5b 81       	ldd	r21, Y+3	; 0x03
    2ed6:	6c 81       	ldd	r22, Y+4	; 0x04
    2ed8:	7d 81       	ldd	r23, Y+5	; 0x05
    2eda:	46 87       	std	Z+14, r20	; 0x0e
    2edc:	57 87       	std	Z+15, r21	; 0x0f
    2ede:	60 8b       	std	Z+16, r22	; 0x10
    2ee0:	71 8b       	std	Z+17, r23	; 0x11
    2ee2:	40 0f       	add	r20, r16
    2ee4:	51 1f       	adc	r21, r17
    2ee6:	62 1f       	adc	r22, r18
    2ee8:	73 1f       	adc	r23, r19
    2eea:	68 01       	movw	r12, r16
    2eec:	79 01       	movw	r14, r18
    2eee:	c5 01       	movw	r24, r10
    2ef0:	42 dd       	rcall	.-1404   	; 0x2976 <prvInsertTimerInActiveList>
    2ef2:	0a c0       	rjmp	.+20     	; 0x2f08 <prvProcessReceivedCommands+0x12a>
    2ef4:	f5 01       	movw	r30, r10
    2ef6:	86 89       	ldd	r24, Z+22	; 0x16
    2ef8:	81 fd       	sbrc	r24, 1
    2efa:	04 c0       	rjmp	.+8      	; 0x2f04 <prvProcessReceivedCommands+0x126>
    2efc:	c5 01       	movw	r24, r10
    2efe:	0e 94 75 02 	call	0x4ea	; 0x4ea <vPortFree>
    2f02:	02 c0       	rjmp	.+4      	; 0x2f08 <prvProcessReceivedCommands+0x12a>
    2f04:	8e 7f       	andi	r24, 0xFE	; 254
    2f06:	86 8b       	std	Z+22, r24	; 0x16
    2f08:	20 e0       	ldi	r18, 0x00	; 0
    2f0a:	30 e0       	ldi	r19, 0x00	; 0
    2f0c:	a9 01       	movw	r20, r18
    2f0e:	be 01       	movw	r22, r28
    2f10:	6f 5f       	subi	r22, 0xFF	; 255
    2f12:	7f 4f       	sbci	r23, 0xFF	; 255
    2f14:	80 91 13 12 	lds	r24, 0x1213	; 0x801213 <xTimerQueue>
    2f18:	90 91 14 12 	lds	r25, 0x1214	; 0x801214 <xTimerQueue+0x1>
    2f1c:	0e 94 53 06 	call	0xca6	; 0xca6 <xQueueReceive>
    2f20:	81 11       	cpse	r24, r1
    2f22:	70 cf       	rjmp	.-288    	; 0x2e04 <prvProcessReceivedCommands+0x26>
    2f24:	28 96       	adiw	r28, 0x08	; 8
    2f26:	0f b6       	in	r0, 0x3f	; 63
    2f28:	f8 94       	cli
    2f2a:	de bf       	out	0x3e, r29	; 62
    2f2c:	0f be       	out	0x3f, r0	; 63
    2f2e:	cd bf       	out	0x3d, r28	; 61
    2f30:	df 91       	pop	r29
    2f32:	cf 91       	pop	r28
    2f34:	1f 91       	pop	r17
    2f36:	0f 91       	pop	r16
    2f38:	ff 90       	pop	r15
    2f3a:	ef 90       	pop	r14
    2f3c:	df 90       	pop	r13
    2f3e:	cf 90       	pop	r12
    2f40:	bf 90       	pop	r11
    2f42:	af 90       	pop	r10
    2f44:	08 95       	ret

00002f46 <vApplicationIdleHook>:
    2f46:	08 95       	ret

00002f48 <prvSetMainLedOn>:
    2f48:	84 b1       	in	r24, 0x04	; 4
    2f4a:	80 68       	ori	r24, 0x80	; 128
    2f4c:	84 b9       	out	0x04, r24	; 4
    2f4e:	85 b1       	in	r24, 0x05	; 5
    2f50:	80 68       	ori	r24, 0x80	; 128
    2f52:	85 b9       	out	0x05, r24	; 5
    2f54:	08 95       	ret

00002f56 <prvBlinkMainLed>:
    2f56:	83 b1       	in	r24, 0x03	; 3
    2f58:	80 68       	ori	r24, 0x80	; 128
    2f5a:	83 b9       	out	0x03, r24	; 3
    2f5c:	08 95       	ret

00002f5e <vApplicationMallocFailedHook>:
    2f5e:	f4 df       	rcall	.-24     	; 0x2f48 <prvSetMainLedOn>
=======
    22da:	07 c0       	rjmp	.+14     	; 0x22ea <xTaskCheckForTimeOut+0xae>
    22dc:	10 82       	st	Z, r1
    22de:	11 82       	std	Z+1, r1	; 0x01
    22e0:	12 82       	std	Z+2, r1	; 0x02
    22e2:	13 82       	std	Z+3, r1	; 0x03
    22e4:	81 e0       	ldi	r24, 0x01	; 1
    22e6:	01 c0       	rjmp	.+2      	; 0x22ea <xTaskCheckForTimeOut+0xae>
    22e8:	80 e0       	ldi	r24, 0x00	; 0
    22ea:	0f 90       	pop	r0
    22ec:	0f be       	out	0x3f, r0	; 63
    22ee:	df 91       	pop	r29
    22f0:	cf 91       	pop	r28
    22f2:	1f 91       	pop	r17
    22f4:	0f 91       	pop	r16
    22f6:	ff 90       	pop	r15
    22f8:	ef 90       	pop	r14
    22fa:	df 90       	pop	r13
    22fc:	cf 90       	pop	r12
    22fe:	bf 90       	pop	r11
    2300:	af 90       	pop	r10
    2302:	9f 90       	pop	r9
    2304:	8f 90       	pop	r8
    2306:	08 95       	ret

00002308 <vTaskMissedYield>:
    2308:	81 e0       	ldi	r24, 0x01	; 1
    230a:	80 93 97 15 	sts	0x1597, r24	; 0x801597 <xYieldPending>
    230e:	08 95       	ret

00002310 <xTaskGetCurrentTaskHandle>:
    2310:	80 91 4d 16 	lds	r24, 0x164D	; 0x80164d <pxCurrentTCB>
    2314:	90 91 4e 16 	lds	r25, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    2318:	08 95       	ret

0000231a <xTaskGetSchedulerState>:
    231a:	80 91 9c 15 	lds	r24, 0x159C	; 0x80159c <xSchedulerRunning>
    231e:	88 23       	and	r24, r24
    2320:	31 f0       	breq	.+12     	; 0x232e <xTaskGetSchedulerState+0x14>
    2322:	80 91 8e 15 	lds	r24, 0x158E	; 0x80158e <uxSchedulerSuspended>
    2326:	81 11       	cpse	r24, r1
    2328:	04 c0       	rjmp	.+8      	; 0x2332 <xTaskGetSchedulerState+0x18>
    232a:	82 e0       	ldi	r24, 0x02	; 2
    232c:	08 95       	ret
    232e:	81 e0       	ldi	r24, 0x01	; 1
    2330:	08 95       	ret
    2332:	80 e0       	ldi	r24, 0x00	; 0
    2334:	08 95       	ret

00002336 <xTaskPriorityDisinherit>:
    2336:	0f 93       	push	r16
    2338:	1f 93       	push	r17
    233a:	cf 93       	push	r28
    233c:	df 93       	push	r29
    233e:	fc 01       	movw	r30, r24
    2340:	89 2b       	or	r24, r25
    2342:	09 f4       	brne	.+2      	; 0x2346 <xTaskPriorityDisinherit+0x10>
    2344:	49 c0       	rjmp	.+146    	; 0x23d8 <xTaskPriorityDisinherit+0xa2>
    2346:	86 a5       	ldd	r24, Z+46	; 0x2e
    2348:	81 50       	subi	r24, 0x01	; 1
    234a:	86 a7       	std	Z+46, r24	; 0x2e
    234c:	22 8d       	ldd	r18, Z+26	; 0x1a
    234e:	95 a5       	ldd	r25, Z+45	; 0x2d
    2350:	29 17       	cp	r18, r25
    2352:	09 f4       	brne	.+2      	; 0x2356 <xTaskPriorityDisinherit+0x20>
    2354:	43 c0       	rjmp	.+134    	; 0x23dc <xTaskPriorityDisinherit+0xa6>
    2356:	81 11       	cpse	r24, r1
    2358:	43 c0       	rjmp	.+134    	; 0x23e0 <xTaskPriorityDisinherit+0xaa>
    235a:	ef 01       	movw	r28, r30
    235c:	8f 01       	movw	r16, r30
    235e:	0e 5f       	subi	r16, 0xFE	; 254
    2360:	1f 4f       	sbci	r17, 0xFF	; 255
    2362:	c8 01       	movw	r24, r16
    2364:	0e 94 31 03 	call	0x662	; 0x662 <uxListRemove>
    2368:	ed a5       	ldd	r30, Y+45	; 0x2d
    236a:	ea 8f       	std	Y+26, r30	; 0x1a
    236c:	8a e0       	ldi	r24, 0x0A	; 10
    236e:	90 e0       	ldi	r25, 0x00	; 0
    2370:	a0 e0       	ldi	r26, 0x00	; 0
    2372:	b0 e0       	ldi	r27, 0x00	; 0
    2374:	8e 1b       	sub	r24, r30
    2376:	91 09       	sbc	r25, r1
    2378:	a1 09       	sbc	r26, r1
    237a:	b1 09       	sbc	r27, r1
    237c:	8e 87       	std	Y+14, r24	; 0x0e
    237e:	9f 87       	std	Y+15, r25	; 0x0f
    2380:	a8 8b       	std	Y+16, r26	; 0x10
    2382:	b9 8b       	std	Y+17, r27	; 0x11
    2384:	80 91 9d 15 	lds	r24, 0x159D	; 0x80159d <uxTopReadyPriority>
    2388:	8e 17       	cp	r24, r30
    238a:	10 f4       	brcc	.+4      	; 0x2390 <xTaskPriorityDisinherit+0x5a>
    238c:	e0 93 9d 15 	sts	0x159D, r30	; 0x80159d <uxTopReadyPriority>
    2390:	8b e0       	ldi	r24, 0x0B	; 11
    2392:	8e 9f       	mul	r24, r30
    2394:	f0 01       	movw	r30, r0
    2396:	11 24       	eor	r1, r1
    2398:	e1 52       	subi	r30, 0x21	; 33
    239a:	fa 4e       	sbci	r31, 0xEA	; 234
    239c:	01 80       	ldd	r0, Z+1	; 0x01
    239e:	f2 81       	ldd	r31, Z+2	; 0x02
    23a0:	e0 2d       	mov	r30, r0
    23a2:	ff 83       	std	Y+7, r31	; 0x07
    23a4:	ee 83       	std	Y+6, r30	; 0x06
    23a6:	26 81       	ldd	r18, Z+6	; 0x06
    23a8:	37 81       	ldd	r19, Z+7	; 0x07
    23aa:	39 87       	std	Y+9, r19	; 0x09
    23ac:	28 87       	std	Y+8, r18	; 0x08
    23ae:	a6 81       	ldd	r26, Z+6	; 0x06
    23b0:	b7 81       	ldd	r27, Z+7	; 0x07
    23b2:	15 96       	adiw	r26, 0x05	; 5
    23b4:	1c 93       	st	X, r17
    23b6:	0e 93       	st	-X, r16
    23b8:	14 97       	sbiw	r26, 0x04	; 4
    23ba:	17 83       	std	Z+7, r17	; 0x07
    23bc:	06 83       	std	Z+6, r16	; 0x06
    23be:	ea 8d       	ldd	r30, Y+26	; 0x1a
    23c0:	8e 9f       	mul	r24, r30
    23c2:	f0 01       	movw	r30, r0
    23c4:	11 24       	eor	r1, r1
    23c6:	e1 52       	subi	r30, 0x21	; 33
    23c8:	fa 4e       	sbci	r31, 0xEA	; 234
    23ca:	fd 87       	std	Y+13, r31	; 0x0d
    23cc:	ec 87       	std	Y+12, r30	; 0x0c
    23ce:	80 81       	ld	r24, Z
    23d0:	8f 5f       	subi	r24, 0xFF	; 255
    23d2:	80 83       	st	Z, r24
    23d4:	81 e0       	ldi	r24, 0x01	; 1
    23d6:	05 c0       	rjmp	.+10     	; 0x23e2 <xTaskPriorityDisinherit+0xac>
    23d8:	80 e0       	ldi	r24, 0x00	; 0
    23da:	03 c0       	rjmp	.+6      	; 0x23e2 <xTaskPriorityDisinherit+0xac>
    23dc:	80 e0       	ldi	r24, 0x00	; 0
    23de:	01 c0       	rjmp	.+2      	; 0x23e2 <xTaskPriorityDisinherit+0xac>
    23e0:	80 e0       	ldi	r24, 0x00	; 0
    23e2:	df 91       	pop	r29
    23e4:	cf 91       	pop	r28
    23e6:	1f 91       	pop	r17
    23e8:	0f 91       	pop	r16
    23ea:	08 95       	ret

000023ec <xTaskGenericNotifyWait>:
    23ec:	4f 92       	push	r4
    23ee:	5f 92       	push	r5
    23f0:	6f 92       	push	r6
    23f2:	7f 92       	push	r7
    23f4:	af 92       	push	r10
    23f6:	bf 92       	push	r11
    23f8:	cf 92       	push	r12
    23fa:	df 92       	push	r13
    23fc:	ef 92       	push	r14
    23fe:	ff 92       	push	r15
    2400:	0f 93       	push	r16
    2402:	1f 93       	push	r17
    2404:	cf 93       	push	r28
    2406:	df 93       	push	r29
    2408:	28 01       	movw	r4, r16
    240a:	39 01       	movw	r6, r18
    240c:	0f b6       	in	r0, 0x3f	; 63
    240e:	f8 94       	cli
    2410:	0f 92       	push	r0
    2412:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    2416:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    241a:	c8 2f       	mov	r28, r24
    241c:	d0 e0       	ldi	r29, 0x00	; 0
    241e:	ec 0f       	add	r30, r28
    2420:	fd 1f       	adc	r31, r29
    2422:	83 a9       	ldd	r24, Z+51	; 0x33
    2424:	82 30       	cpi	r24, 0x02	; 2
    2426:	71 f1       	breq	.+92     	; 0x2484 <xTaskGenericNotifyWait+0x98>
    2428:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    242c:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    2430:	ce 01       	movw	r24, r28
    2432:	88 0f       	add	r24, r24
    2434:	99 1f       	adc	r25, r25
    2436:	88 0f       	add	r24, r24
    2438:	99 1f       	adc	r25, r25
    243a:	e8 0f       	add	r30, r24
    243c:	f9 1f       	adc	r31, r25
    243e:	87 a5       	ldd	r24, Z+47	; 0x2f
    2440:	90 a9       	ldd	r25, Z+48	; 0x30
    2442:	a1 a9       	ldd	r26, Z+49	; 0x31
    2444:	b2 a9       	ldd	r27, Z+50	; 0x32
    2446:	40 95       	com	r20
    2448:	50 95       	com	r21
    244a:	60 95       	com	r22
    244c:	70 95       	com	r23
    244e:	48 23       	and	r20, r24
    2450:	59 23       	and	r21, r25
    2452:	6a 23       	and	r22, r26
    2454:	7b 23       	and	r23, r27
    2456:	47 a7       	std	Z+47, r20	; 0x2f
    2458:	50 ab       	std	Z+48, r21	; 0x30
    245a:	61 ab       	std	Z+49, r22	; 0x31
    245c:	72 ab       	std	Z+50, r23	; 0x32
    245e:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    2462:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    2466:	ec 0f       	add	r30, r28
    2468:	fd 1f       	adc	r31, r29
    246a:	81 e0       	ldi	r24, 0x01	; 1
    246c:	83 ab       	std	Z+51, r24	; 0x33
    246e:	a1 14       	cp	r10, r1
    2470:	b1 04       	cpc	r11, r1
    2472:	c1 04       	cpc	r12, r1
    2474:	d1 04       	cpc	r13, r1
    2476:	31 f0       	breq	.+12     	; 0x2484 <xTaskGenericNotifyWait+0x98>
    2478:	41 e0       	ldi	r20, 0x01	; 1
    247a:	c6 01       	movw	r24, r12
    247c:	b5 01       	movw	r22, r10
    247e:	88 d9       	rcall	.-3312   	; 0x1790 <prvAddCurrentTaskToDelayedList>
    2480:	0e 94 ad 03 	call	0x75a	; 0x75a <vPortYield>
    2484:	0f 90       	pop	r0
    2486:	0f be       	out	0x3f, r0	; 63
    2488:	0f b6       	in	r0, 0x3f	; 63
    248a:	f8 94       	cli
    248c:	0f 92       	push	r0
    248e:	e1 14       	cp	r14, r1
    2490:	f1 04       	cpc	r15, r1
    2492:	a1 f0       	breq	.+40     	; 0x24bc <xTaskGenericNotifyWait+0xd0>
    2494:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    2498:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    249c:	ce 01       	movw	r24, r28
    249e:	88 0f       	add	r24, r24
    24a0:	99 1f       	adc	r25, r25
    24a2:	88 0f       	add	r24, r24
    24a4:	99 1f       	adc	r25, r25
    24a6:	e8 0f       	add	r30, r24
    24a8:	f9 1f       	adc	r31, r25
    24aa:	87 a5       	ldd	r24, Z+47	; 0x2f
    24ac:	90 a9       	ldd	r25, Z+48	; 0x30
    24ae:	a1 a9       	ldd	r26, Z+49	; 0x31
    24b0:	b2 a9       	ldd	r27, Z+50	; 0x32
    24b2:	f7 01       	movw	r30, r14
    24b4:	80 83       	st	Z, r24
    24b6:	91 83       	std	Z+1, r25	; 0x01
    24b8:	a2 83       	std	Z+2, r26	; 0x02
    24ba:	b3 83       	std	Z+3, r27	; 0x03
    24bc:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    24c0:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    24c4:	ec 0f       	add	r30, r28
    24c6:	fd 1f       	adc	r31, r29
    24c8:	83 a9       	ldd	r24, Z+51	; 0x33
    24ca:	82 30       	cpi	r24, 0x02	; 2
    24cc:	e9 f4       	brne	.+58     	; 0x2508 <xTaskGenericNotifyWait+0x11c>
    24ce:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    24d2:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    24d6:	ce 01       	movw	r24, r28
    24d8:	88 0f       	add	r24, r24
    24da:	99 1f       	adc	r25, r25
    24dc:	88 0f       	add	r24, r24
    24de:	99 1f       	adc	r25, r25
    24e0:	e8 0f       	add	r30, r24
    24e2:	f9 1f       	adc	r31, r25
    24e4:	87 a5       	ldd	r24, Z+47	; 0x2f
    24e6:	90 a9       	ldd	r25, Z+48	; 0x30
    24e8:	a1 a9       	ldd	r26, Z+49	; 0x31
    24ea:	b2 a9       	ldd	r27, Z+50	; 0x32
    24ec:	40 94       	com	r4
    24ee:	50 94       	com	r5
    24f0:	60 94       	com	r6
    24f2:	70 94       	com	r7
    24f4:	48 22       	and	r4, r24
    24f6:	59 22       	and	r5, r25
    24f8:	6a 22       	and	r6, r26
    24fa:	7b 22       	and	r7, r27
    24fc:	47 a6       	std	Z+47, r4	; 0x2f
    24fe:	50 aa       	std	Z+48, r5	; 0x30
    2500:	61 aa       	std	Z+49, r6	; 0x31
    2502:	72 aa       	std	Z+50, r7	; 0x32
    2504:	81 e0       	ldi	r24, 0x01	; 1
    2506:	01 c0       	rjmp	.+2      	; 0x250a <xTaskGenericNotifyWait+0x11e>
    2508:	80 e0       	ldi	r24, 0x00	; 0
    250a:	20 91 4d 16 	lds	r18, 0x164D	; 0x80164d <pxCurrentTCB>
    250e:	30 91 4e 16 	lds	r19, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    2512:	c2 0f       	add	r28, r18
    2514:	d3 1f       	adc	r29, r19
    2516:	1b aa       	std	Y+51, r1	; 0x33
    2518:	0f 90       	pop	r0
    251a:	0f be       	out	0x3f, r0	; 63
    251c:	df 91       	pop	r29
    251e:	cf 91       	pop	r28
    2520:	1f 91       	pop	r17
    2522:	0f 91       	pop	r16
    2524:	ff 90       	pop	r15
    2526:	ef 90       	pop	r14
    2528:	df 90       	pop	r13
    252a:	cf 90       	pop	r12
    252c:	bf 90       	pop	r11
    252e:	af 90       	pop	r10
    2530:	7f 90       	pop	r7
    2532:	6f 90       	pop	r6
    2534:	5f 90       	pop	r5
    2536:	4f 90       	pop	r4
    2538:	08 95       	ret

0000253a <xTaskGenericNotify>:
    253a:	8f 92       	push	r8
    253c:	9f 92       	push	r9
    253e:	af 92       	push	r10
    2540:	bf 92       	push	r11
    2542:	ef 92       	push	r14
    2544:	ff 92       	push	r15
    2546:	0f 93       	push	r16
    2548:	cf 93       	push	r28
    254a:	df 93       	push	r29
    254c:	dc 01       	movw	r26, r24
    254e:	0f b6       	in	r0, 0x3f	; 63
    2550:	f8 94       	cli
    2552:	0f 92       	push	r0
    2554:	e1 14       	cp	r14, r1
    2556:	f1 04       	cpc	r15, r1
    2558:	89 f0       	breq	.+34     	; 0x257c <xTaskGenericNotify+0x42>
    255a:	e6 2f       	mov	r30, r22
    255c:	f0 e0       	ldi	r31, 0x00	; 0
    255e:	ee 0f       	add	r30, r30
    2560:	ff 1f       	adc	r31, r31
    2562:	ee 0f       	add	r30, r30
    2564:	ff 1f       	adc	r31, r31
    2566:	e8 0f       	add	r30, r24
    2568:	f9 1f       	adc	r31, r25
    256a:	87 a4       	ldd	r8, Z+47	; 0x2f
    256c:	90 a8       	ldd	r9, Z+48	; 0x30
    256e:	a1 a8       	ldd	r10, Z+49	; 0x31
    2570:	b2 a8       	ldd	r11, Z+50	; 0x32
    2572:	f7 01       	movw	r30, r14
    2574:	80 82       	st	Z, r8
    2576:	91 82       	std	Z+1, r9	; 0x01
    2578:	a2 82       	std	Z+2, r10	; 0x02
    257a:	b3 82       	std	Z+3, r11	; 0x03
    257c:	70 e0       	ldi	r23, 0x00	; 0
    257e:	fd 01       	movw	r30, r26
    2580:	e6 0f       	add	r30, r22
    2582:	f7 1f       	adc	r31, r23
    2584:	83 a9       	ldd	r24, Z+51	; 0x33
    2586:	92 e0       	ldi	r25, 0x02	; 2
    2588:	93 ab       	std	Z+51, r25	; 0x33
    258a:	02 30       	cpi	r16, 0x02	; 2
    258c:	01 f1       	breq	.+64     	; 0x25ce <xTaskGenericNotify+0x94>
    258e:	18 f4       	brcc	.+6      	; 0x2596 <xTaskGenericNotify+0x5c>
    2590:	01 30       	cpi	r16, 0x01	; 1
    2592:	31 f0       	breq	.+12     	; 0x25a0 <xTaskGenericNotify+0x66>
    2594:	4d c0       	rjmp	.+154    	; 0x2630 <xTaskGenericNotify+0xf6>
    2596:	03 30       	cpi	r16, 0x03	; 3
    2598:	79 f1       	breq	.+94     	; 0x25f8 <xTaskGenericNotify+0xbe>
    259a:	04 30       	cpi	r16, 0x04	; 4
    259c:	d1 f1       	breq	.+116    	; 0x2612 <xTaskGenericNotify+0xd8>
    259e:	48 c0       	rjmp	.+144    	; 0x2630 <xTaskGenericNotify+0xf6>
    25a0:	66 0f       	add	r22, r22
    25a2:	77 1f       	adc	r23, r23
    25a4:	66 0f       	add	r22, r22
    25a6:	77 1f       	adc	r23, r23
    25a8:	fd 01       	movw	r30, r26
    25aa:	e6 0f       	add	r30, r22
    25ac:	f7 1f       	adc	r31, r23
    25ae:	87 a4       	ldd	r8, Z+47	; 0x2f
    25b0:	90 a8       	ldd	r9, Z+48	; 0x30
    25b2:	a1 a8       	ldd	r10, Z+49	; 0x31
    25b4:	b2 a8       	ldd	r11, Z+50	; 0x32
    25b6:	ba 01       	movw	r22, r20
    25b8:	a9 01       	movw	r20, r18
    25ba:	48 29       	or	r20, r8
    25bc:	59 29       	or	r21, r9
    25be:	6a 29       	or	r22, r10
    25c0:	7b 29       	or	r23, r11
    25c2:	47 a7       	std	Z+47, r20	; 0x2f
    25c4:	50 ab       	std	Z+48, r21	; 0x30
    25c6:	61 ab       	std	Z+49, r22	; 0x31
    25c8:	72 ab       	std	Z+50, r23	; 0x32
    25ca:	01 e0       	ldi	r16, 0x01	; 1
    25cc:	34 c0       	rjmp	.+104    	; 0x2636 <xTaskGenericNotify+0xfc>
    25ce:	66 0f       	add	r22, r22
    25d0:	77 1f       	adc	r23, r23
    25d2:	66 0f       	add	r22, r22
    25d4:	77 1f       	adc	r23, r23
    25d6:	fd 01       	movw	r30, r26
    25d8:	e6 0f       	add	r30, r22
    25da:	f7 1f       	adc	r31, r23
    25dc:	47 a5       	ldd	r20, Z+47	; 0x2f
    25de:	50 a9       	ldd	r21, Z+48	; 0x30
    25e0:	61 a9       	ldd	r22, Z+49	; 0x31
    25e2:	72 a9       	ldd	r23, Z+50	; 0x32
    25e4:	4f 5f       	subi	r20, 0xFF	; 255
    25e6:	5f 4f       	sbci	r21, 0xFF	; 255
    25e8:	6f 4f       	sbci	r22, 0xFF	; 255
    25ea:	7f 4f       	sbci	r23, 0xFF	; 255
    25ec:	47 a7       	std	Z+47, r20	; 0x2f
    25ee:	50 ab       	std	Z+48, r21	; 0x30
    25f0:	61 ab       	std	Z+49, r22	; 0x31
    25f2:	72 ab       	std	Z+50, r23	; 0x32
    25f4:	01 e0       	ldi	r16, 0x01	; 1
    25f6:	1f c0       	rjmp	.+62     	; 0x2636 <xTaskGenericNotify+0xfc>
    25f8:	66 0f       	add	r22, r22
    25fa:	77 1f       	adc	r23, r23
    25fc:	66 0f       	add	r22, r22
    25fe:	77 1f       	adc	r23, r23
    2600:	fd 01       	movw	r30, r26
    2602:	e6 0f       	add	r30, r22
    2604:	f7 1f       	adc	r31, r23
    2606:	27 a7       	std	Z+47, r18	; 0x2f
    2608:	30 ab       	std	Z+48, r19	; 0x30
    260a:	41 ab       	std	Z+49, r20	; 0x31
    260c:	52 ab       	std	Z+50, r21	; 0x32
    260e:	01 e0       	ldi	r16, 0x01	; 1
    2610:	12 c0       	rjmp	.+36     	; 0x2636 <xTaskGenericNotify+0xfc>
    2612:	82 30       	cpi	r24, 0x02	; 2
    2614:	79 f0       	breq	.+30     	; 0x2634 <xTaskGenericNotify+0xfa>
    2616:	66 0f       	add	r22, r22
    2618:	77 1f       	adc	r23, r23
    261a:	66 0f       	add	r22, r22
    261c:	77 1f       	adc	r23, r23
    261e:	fd 01       	movw	r30, r26
    2620:	e6 0f       	add	r30, r22
    2622:	f7 1f       	adc	r31, r23
    2624:	27 a7       	std	Z+47, r18	; 0x2f
    2626:	30 ab       	std	Z+48, r19	; 0x30
    2628:	41 ab       	std	Z+49, r20	; 0x31
    262a:	52 ab       	std	Z+50, r21	; 0x32
    262c:	01 e0       	ldi	r16, 0x01	; 1
    262e:	03 c0       	rjmp	.+6      	; 0x2636 <xTaskGenericNotify+0xfc>
    2630:	01 e0       	ldi	r16, 0x01	; 1
    2632:	01 c0       	rjmp	.+2      	; 0x2636 <xTaskGenericNotify+0xfc>
    2634:	00 e0       	ldi	r16, 0x00	; 0
    2636:	81 30       	cpi	r24, 0x01	; 1
    2638:	09 f0       	breq	.+2      	; 0x263c <xTaskGenericNotify+0x102>
    263a:	69 c0       	rjmp	.+210    	; 0x270e <xTaskGenericNotify+0x1d4>
    263c:	1c 96       	adiw	r26, 0x0c	; 12
    263e:	ed 91       	ld	r30, X+
    2640:	fc 91       	ld	r31, X
    2642:	1d 97       	sbiw	r26, 0x0d	; 13
    2644:	16 96       	adiw	r26, 0x06	; 6
    2646:	cd 91       	ld	r28, X+
    2648:	dc 91       	ld	r29, X
    264a:	17 97       	sbiw	r26, 0x07	; 7
    264c:	18 96       	adiw	r26, 0x08	; 8
    264e:	8d 91       	ld	r24, X+
    2650:	9c 91       	ld	r25, X
    2652:	19 97       	sbiw	r26, 0x09	; 9
    2654:	9f 83       	std	Y+7, r25	; 0x07
    2656:	8e 83       	std	Y+6, r24	; 0x06
    2658:	18 96       	adiw	r26, 0x08	; 8
    265a:	cd 91       	ld	r28, X+
    265c:	dc 91       	ld	r29, X
    265e:	19 97       	sbiw	r26, 0x09	; 9
    2660:	16 96       	adiw	r26, 0x06	; 6
    2662:	8d 91       	ld	r24, X+
    2664:	9c 91       	ld	r25, X
    2666:	17 97       	sbiw	r26, 0x07	; 7
    2668:	9d 83       	std	Y+5, r25	; 0x05
    266a:	8c 83       	std	Y+4, r24	; 0x04
    266c:	81 81       	ldd	r24, Z+1	; 0x01
    266e:	92 81       	ldd	r25, Z+2	; 0x02
    2670:	9d 01       	movw	r18, r26
    2672:	2e 5f       	subi	r18, 0xFE	; 254
    2674:	3f 4f       	sbci	r19, 0xFF	; 255
    2676:	82 17       	cp	r24, r18
    2678:	93 07       	cpc	r25, r19
    267a:	31 f4       	brne	.+12     	; 0x2688 <xTaskGenericNotify+0x14e>
    267c:	18 96       	adiw	r26, 0x08	; 8
    267e:	8d 91       	ld	r24, X+
    2680:	9c 91       	ld	r25, X
    2682:	19 97       	sbiw	r26, 0x09	; 9
    2684:	92 83       	std	Z+2, r25	; 0x02
    2686:	81 83       	std	Z+1, r24	; 0x01
    2688:	1d 96       	adiw	r26, 0x0d	; 13
    268a:	1c 92       	st	X, r1
    268c:	1e 92       	st	-X, r1
    268e:	1c 97       	sbiw	r26, 0x0c	; 12
    2690:	80 81       	ld	r24, Z
    2692:	81 50       	subi	r24, 0x01	; 1
    2694:	80 83       	st	Z, r24
    2696:	5a 96       	adiw	r26, 0x1a	; 26
    2698:	ec 91       	ld	r30, X
    269a:	5a 97       	sbiw	r26, 0x1a	; 26
    269c:	80 91 9d 15 	lds	r24, 0x159D	; 0x80159d <uxTopReadyPriority>
    26a0:	8e 17       	cp	r24, r30
    26a2:	10 f4       	brcc	.+4      	; 0x26a8 <xTaskGenericNotify+0x16e>
    26a4:	e0 93 9d 15 	sts	0x159D, r30	; 0x80159d <uxTopReadyPriority>
    26a8:	8b e0       	ldi	r24, 0x0B	; 11
    26aa:	8e 9f       	mul	r24, r30
    26ac:	f0 01       	movw	r30, r0
    26ae:	11 24       	eor	r1, r1
    26b0:	e1 52       	subi	r30, 0x21	; 33
    26b2:	fa 4e       	sbci	r31, 0xEA	; 234
    26b4:	01 80       	ldd	r0, Z+1	; 0x01
    26b6:	f2 81       	ldd	r31, Z+2	; 0x02
    26b8:	e0 2d       	mov	r30, r0
    26ba:	17 96       	adiw	r26, 0x07	; 7
    26bc:	fc 93       	st	X, r31
    26be:	ee 93       	st	-X, r30
    26c0:	16 97       	sbiw	r26, 0x06	; 6
    26c2:	46 81       	ldd	r20, Z+6	; 0x06
    26c4:	57 81       	ldd	r21, Z+7	; 0x07
    26c6:	19 96       	adiw	r26, 0x09	; 9
    26c8:	5c 93       	st	X, r21
    26ca:	4e 93       	st	-X, r20
    26cc:	18 97       	sbiw	r26, 0x08	; 8
    26ce:	c6 81       	ldd	r28, Z+6	; 0x06
    26d0:	d7 81       	ldd	r29, Z+7	; 0x07
    26d2:	3d 83       	std	Y+5, r19	; 0x05
    26d4:	2c 83       	std	Y+4, r18	; 0x04
    26d6:	37 83       	std	Z+7, r19	; 0x07
    26d8:	26 83       	std	Z+6, r18	; 0x06
    26da:	5a 96       	adiw	r26, 0x1a	; 26
    26dc:	ec 91       	ld	r30, X
    26de:	5a 97       	sbiw	r26, 0x1a	; 26
    26e0:	8e 9f       	mul	r24, r30
    26e2:	f0 01       	movw	r30, r0
    26e4:	11 24       	eor	r1, r1
    26e6:	e1 52       	subi	r30, 0x21	; 33
    26e8:	fa 4e       	sbci	r31, 0xEA	; 234
    26ea:	1d 96       	adiw	r26, 0x0d	; 13
    26ec:	fc 93       	st	X, r31
    26ee:	ee 93       	st	-X, r30
    26f0:	1c 97       	sbiw	r26, 0x0c	; 12
    26f2:	80 81       	ld	r24, Z
    26f4:	8f 5f       	subi	r24, 0xFF	; 255
    26f6:	80 83       	st	Z, r24
    26f8:	5a 96       	adiw	r26, 0x1a	; 26
    26fa:	9c 91       	ld	r25, X
    26fc:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    2700:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    2704:	82 8d       	ldd	r24, Z+26	; 0x1a
    2706:	89 17       	cp	r24, r25
    2708:	10 f4       	brcc	.+4      	; 0x270e <xTaskGenericNotify+0x1d4>
    270a:	0e 94 ad 03 	call	0x75a	; 0x75a <vPortYield>
    270e:	0f 90       	pop	r0
    2710:	0f be       	out	0x3f, r0	; 63
    2712:	80 2f       	mov	r24, r16
    2714:	df 91       	pop	r29
    2716:	cf 91       	pop	r28
    2718:	0f 91       	pop	r16
    271a:	ff 90       	pop	r15
    271c:	ef 90       	pop	r14
    271e:	bf 90       	pop	r11
    2720:	af 90       	pop	r10
    2722:	9f 90       	pop	r9
    2724:	8f 90       	pop	r8
    2726:	08 95       	ret

00002728 <xTaskGenericNotifyFromISR>:
    2728:	8f 92       	push	r8
    272a:	9f 92       	push	r9
    272c:	af 92       	push	r10
    272e:	bf 92       	push	r11
    2730:	cf 92       	push	r12
    2732:	df 92       	push	r13
    2734:	ef 92       	push	r14
    2736:	ff 92       	push	r15
    2738:	0f 93       	push	r16
    273a:	cf 93       	push	r28
    273c:	df 93       	push	r29
    273e:	dc 01       	movw	r26, r24
    2740:	e1 14       	cp	r14, r1
    2742:	f1 04       	cpc	r15, r1
    2744:	89 f0       	breq	.+34     	; 0x2768 <xTaskGenericNotifyFromISR+0x40>
    2746:	e6 2f       	mov	r30, r22
    2748:	f0 e0       	ldi	r31, 0x00	; 0
    274a:	ee 0f       	add	r30, r30
    274c:	ff 1f       	adc	r31, r31
    274e:	ee 0f       	add	r30, r30
    2750:	ff 1f       	adc	r31, r31
    2752:	e8 0f       	add	r30, r24
    2754:	f9 1f       	adc	r31, r25
    2756:	87 a4       	ldd	r8, Z+47	; 0x2f
    2758:	90 a8       	ldd	r9, Z+48	; 0x30
    275a:	a1 a8       	ldd	r10, Z+49	; 0x31
    275c:	b2 a8       	ldd	r11, Z+50	; 0x32
    275e:	f7 01       	movw	r30, r14
    2760:	80 82       	st	Z, r8
    2762:	91 82       	std	Z+1, r9	; 0x01
    2764:	a2 82       	std	Z+2, r10	; 0x02
    2766:	b3 82       	std	Z+3, r11	; 0x03
    2768:	70 e0       	ldi	r23, 0x00	; 0
    276a:	fd 01       	movw	r30, r26
    276c:	e6 0f       	add	r30, r22
    276e:	f7 1f       	adc	r31, r23
    2770:	93 a9       	ldd	r25, Z+51	; 0x33
    2772:	82 e0       	ldi	r24, 0x02	; 2
    2774:	83 ab       	std	Z+51, r24	; 0x33
    2776:	02 30       	cpi	r16, 0x02	; 2
    2778:	01 f1       	breq	.+64     	; 0x27ba <xTaskGenericNotifyFromISR+0x92>
    277a:	18 f4       	brcc	.+6      	; 0x2782 <xTaskGenericNotifyFromISR+0x5a>
    277c:	01 30       	cpi	r16, 0x01	; 1
    277e:	31 f0       	breq	.+12     	; 0x278c <xTaskGenericNotifyFromISR+0x64>
    2780:	4d c0       	rjmp	.+154    	; 0x281c <xTaskGenericNotifyFromISR+0xf4>
    2782:	03 30       	cpi	r16, 0x03	; 3
    2784:	79 f1       	breq	.+94     	; 0x27e4 <xTaskGenericNotifyFromISR+0xbc>
    2786:	04 30       	cpi	r16, 0x04	; 4
    2788:	d1 f1       	breq	.+116    	; 0x27fe <xTaskGenericNotifyFromISR+0xd6>
    278a:	48 c0       	rjmp	.+144    	; 0x281c <xTaskGenericNotifyFromISR+0xf4>
    278c:	66 0f       	add	r22, r22
    278e:	77 1f       	adc	r23, r23
    2790:	66 0f       	add	r22, r22
    2792:	77 1f       	adc	r23, r23
    2794:	fd 01       	movw	r30, r26
    2796:	e6 0f       	add	r30, r22
    2798:	f7 1f       	adc	r31, r23
    279a:	87 a4       	ldd	r8, Z+47	; 0x2f
    279c:	90 a8       	ldd	r9, Z+48	; 0x30
    279e:	a1 a8       	ldd	r10, Z+49	; 0x31
    27a0:	b2 a8       	ldd	r11, Z+50	; 0x32
    27a2:	ba 01       	movw	r22, r20
    27a4:	a9 01       	movw	r20, r18
    27a6:	48 29       	or	r20, r8
    27a8:	59 29       	or	r21, r9
    27aa:	6a 29       	or	r22, r10
    27ac:	7b 29       	or	r23, r11
    27ae:	47 a7       	std	Z+47, r20	; 0x2f
    27b0:	50 ab       	std	Z+48, r21	; 0x30
    27b2:	61 ab       	std	Z+49, r22	; 0x31
    27b4:	72 ab       	std	Z+50, r23	; 0x32
    27b6:	81 e0       	ldi	r24, 0x01	; 1
    27b8:	34 c0       	rjmp	.+104    	; 0x2822 <xTaskGenericNotifyFromISR+0xfa>
    27ba:	66 0f       	add	r22, r22
    27bc:	77 1f       	adc	r23, r23
    27be:	66 0f       	add	r22, r22
    27c0:	77 1f       	adc	r23, r23
    27c2:	fd 01       	movw	r30, r26
    27c4:	e6 0f       	add	r30, r22
    27c6:	f7 1f       	adc	r31, r23
    27c8:	47 a5       	ldd	r20, Z+47	; 0x2f
    27ca:	50 a9       	ldd	r21, Z+48	; 0x30
    27cc:	61 a9       	ldd	r22, Z+49	; 0x31
    27ce:	72 a9       	ldd	r23, Z+50	; 0x32
    27d0:	4f 5f       	subi	r20, 0xFF	; 255
    27d2:	5f 4f       	sbci	r21, 0xFF	; 255
    27d4:	6f 4f       	sbci	r22, 0xFF	; 255
    27d6:	7f 4f       	sbci	r23, 0xFF	; 255
    27d8:	47 a7       	std	Z+47, r20	; 0x2f
    27da:	50 ab       	std	Z+48, r21	; 0x30
    27dc:	61 ab       	std	Z+49, r22	; 0x31
    27de:	72 ab       	std	Z+50, r23	; 0x32
    27e0:	81 e0       	ldi	r24, 0x01	; 1
    27e2:	1f c0       	rjmp	.+62     	; 0x2822 <xTaskGenericNotifyFromISR+0xfa>
    27e4:	66 0f       	add	r22, r22
    27e6:	77 1f       	adc	r23, r23
    27e8:	66 0f       	add	r22, r22
    27ea:	77 1f       	adc	r23, r23
    27ec:	fd 01       	movw	r30, r26
    27ee:	e6 0f       	add	r30, r22
    27f0:	f7 1f       	adc	r31, r23
    27f2:	27 a7       	std	Z+47, r18	; 0x2f
    27f4:	30 ab       	std	Z+48, r19	; 0x30
    27f6:	41 ab       	std	Z+49, r20	; 0x31
    27f8:	52 ab       	std	Z+50, r21	; 0x32
    27fa:	81 e0       	ldi	r24, 0x01	; 1
    27fc:	12 c0       	rjmp	.+36     	; 0x2822 <xTaskGenericNotifyFromISR+0xfa>
    27fe:	92 30       	cpi	r25, 0x02	; 2
    2800:	79 f0       	breq	.+30     	; 0x2820 <xTaskGenericNotifyFromISR+0xf8>
    2802:	66 0f       	add	r22, r22
    2804:	77 1f       	adc	r23, r23
    2806:	66 0f       	add	r22, r22
    2808:	77 1f       	adc	r23, r23
    280a:	fd 01       	movw	r30, r26
    280c:	e6 0f       	add	r30, r22
    280e:	f7 1f       	adc	r31, r23
    2810:	27 a7       	std	Z+47, r18	; 0x2f
    2812:	30 ab       	std	Z+48, r19	; 0x30
    2814:	41 ab       	std	Z+49, r20	; 0x31
    2816:	52 ab       	std	Z+50, r21	; 0x32
    2818:	81 e0       	ldi	r24, 0x01	; 1
    281a:	03 c0       	rjmp	.+6      	; 0x2822 <xTaskGenericNotifyFromISR+0xfa>
    281c:	81 e0       	ldi	r24, 0x01	; 1
    281e:	01 c0       	rjmp	.+2      	; 0x2822 <xTaskGenericNotifyFromISR+0xfa>
    2820:	80 e0       	ldi	r24, 0x00	; 0
    2822:	91 30       	cpi	r25, 0x01	; 1
    2824:	09 f0       	breq	.+2      	; 0x2828 <xTaskGenericNotifyFromISR+0x100>
    2826:	96 c0       	rjmp	.+300    	; 0x2954 <xTaskGenericNotifyFromISR+0x22c>
    2828:	90 91 8e 15 	lds	r25, 0x158E	; 0x80158e <uxSchedulerSuspended>
    282c:	91 11       	cpse	r25, r1
    282e:	5f c0       	rjmp	.+190    	; 0x28ee <xTaskGenericNotifyFromISR+0x1c6>
    2830:	1c 96       	adiw	r26, 0x0c	; 12
    2832:	ed 91       	ld	r30, X+
    2834:	fc 91       	ld	r31, X
    2836:	1d 97       	sbiw	r26, 0x0d	; 13
    2838:	16 96       	adiw	r26, 0x06	; 6
    283a:	cd 91       	ld	r28, X+
    283c:	dc 91       	ld	r29, X
    283e:	17 97       	sbiw	r26, 0x07	; 7
    2840:	18 96       	adiw	r26, 0x08	; 8
    2842:	2d 91       	ld	r18, X+
    2844:	3c 91       	ld	r19, X
    2846:	19 97       	sbiw	r26, 0x09	; 9
    2848:	3f 83       	std	Y+7, r19	; 0x07
    284a:	2e 83       	std	Y+6, r18	; 0x06
    284c:	18 96       	adiw	r26, 0x08	; 8
    284e:	cd 91       	ld	r28, X+
    2850:	dc 91       	ld	r29, X
    2852:	19 97       	sbiw	r26, 0x09	; 9
    2854:	16 96       	adiw	r26, 0x06	; 6
    2856:	2d 91       	ld	r18, X+
    2858:	3c 91       	ld	r19, X
    285a:	17 97       	sbiw	r26, 0x07	; 7
    285c:	3d 83       	std	Y+5, r19	; 0x05
    285e:	2c 83       	std	Y+4, r18	; 0x04
    2860:	41 81       	ldd	r20, Z+1	; 0x01
    2862:	52 81       	ldd	r21, Z+2	; 0x02
    2864:	9d 01       	movw	r18, r26
    2866:	2e 5f       	subi	r18, 0xFE	; 254
    2868:	3f 4f       	sbci	r19, 0xFF	; 255
    286a:	42 17       	cp	r20, r18
    286c:	53 07       	cpc	r21, r19
    286e:	31 f4       	brne	.+12     	; 0x287c <xTaskGenericNotifyFromISR+0x154>
    2870:	18 96       	adiw	r26, 0x08	; 8
    2872:	4d 91       	ld	r20, X+
    2874:	5c 91       	ld	r21, X
    2876:	19 97       	sbiw	r26, 0x09	; 9
    2878:	52 83       	std	Z+2, r21	; 0x02
    287a:	41 83       	std	Z+1, r20	; 0x01
    287c:	1d 96       	adiw	r26, 0x0d	; 13
    287e:	1c 92       	st	X, r1
    2880:	1e 92       	st	-X, r1
    2882:	1c 97       	sbiw	r26, 0x0c	; 12
    2884:	90 81       	ld	r25, Z
    2886:	91 50       	subi	r25, 0x01	; 1
    2888:	90 83       	st	Z, r25
    288a:	5a 96       	adiw	r26, 0x1a	; 26
    288c:	ec 91       	ld	r30, X
    288e:	5a 97       	sbiw	r26, 0x1a	; 26
    2890:	90 91 9d 15 	lds	r25, 0x159D	; 0x80159d <uxTopReadyPriority>
    2894:	9e 17       	cp	r25, r30
    2896:	10 f4       	brcc	.+4      	; 0x289c <xTaskGenericNotifyFromISR+0x174>
    2898:	e0 93 9d 15 	sts	0x159D, r30	; 0x80159d <uxTopReadyPriority>
    289c:	9b e0       	ldi	r25, 0x0B	; 11
    289e:	9e 9f       	mul	r25, r30
    28a0:	f0 01       	movw	r30, r0
    28a2:	11 24       	eor	r1, r1
    28a4:	e1 52       	subi	r30, 0x21	; 33
    28a6:	fa 4e       	sbci	r31, 0xEA	; 234
    28a8:	01 80       	ldd	r0, Z+1	; 0x01
    28aa:	f2 81       	ldd	r31, Z+2	; 0x02
    28ac:	e0 2d       	mov	r30, r0
    28ae:	17 96       	adiw	r26, 0x07	; 7
    28b0:	fc 93       	st	X, r31
    28b2:	ee 93       	st	-X, r30
    28b4:	16 97       	sbiw	r26, 0x06	; 6
    28b6:	46 81       	ldd	r20, Z+6	; 0x06
    28b8:	57 81       	ldd	r21, Z+7	; 0x07
    28ba:	19 96       	adiw	r26, 0x09	; 9
    28bc:	5c 93       	st	X, r21
    28be:	4e 93       	st	-X, r20
    28c0:	18 97       	sbiw	r26, 0x08	; 8
    28c2:	c6 81       	ldd	r28, Z+6	; 0x06
    28c4:	d7 81       	ldd	r29, Z+7	; 0x07
    28c6:	3d 83       	std	Y+5, r19	; 0x05
    28c8:	2c 83       	std	Y+4, r18	; 0x04
    28ca:	37 83       	std	Z+7, r19	; 0x07
    28cc:	26 83       	std	Z+6, r18	; 0x06
    28ce:	5a 96       	adiw	r26, 0x1a	; 26
    28d0:	ec 91       	ld	r30, X
    28d2:	5a 97       	sbiw	r26, 0x1a	; 26
    28d4:	9e 9f       	mul	r25, r30
    28d6:	f0 01       	movw	r30, r0
    28d8:	11 24       	eor	r1, r1
    28da:	e1 52       	subi	r30, 0x21	; 33
    28dc:	fa 4e       	sbci	r31, 0xEA	; 234
    28de:	1d 96       	adiw	r26, 0x0d	; 13
    28e0:	fc 93       	st	X, r31
    28e2:	ee 93       	st	-X, r30
    28e4:	1c 97       	sbiw	r26, 0x0c	; 12
    28e6:	90 81       	ld	r25, Z
    28e8:	9f 5f       	subi	r25, 0xFF	; 255
    28ea:	90 83       	st	Z, r25
    28ec:	21 c0       	rjmp	.+66     	; 0x2930 <xTaskGenericNotifyFromISR+0x208>
    28ee:	6a eb       	ldi	r22, 0xBA	; 186
    28f0:	75 e1       	ldi	r23, 0x15	; 21
    28f2:	fb 01       	movw	r30, r22
    28f4:	c1 81       	ldd	r28, Z+1	; 0x01
    28f6:	d2 81       	ldd	r29, Z+2	; 0x02
    28f8:	53 96       	adiw	r26, 0x13	; 19
    28fa:	dc 93       	st	X, r29
    28fc:	ce 93       	st	-X, r28
    28fe:	52 97       	sbiw	r26, 0x12	; 18
    2900:	2e 81       	ldd	r18, Y+6	; 0x06
    2902:	3f 81       	ldd	r19, Y+7	; 0x07
    2904:	55 96       	adiw	r26, 0x15	; 21
    2906:	3c 93       	st	X, r19
    2908:	2e 93       	st	-X, r18
    290a:	54 97       	sbiw	r26, 0x14	; 20
    290c:	4e 81       	ldd	r20, Y+6	; 0x06
    290e:	5f 81       	ldd	r21, Y+7	; 0x07
    2910:	9d 01       	movw	r18, r26
    2912:	22 5f       	subi	r18, 0xF2	; 242
    2914:	3f 4f       	sbci	r19, 0xFF	; 255
    2916:	fa 01       	movw	r30, r20
    2918:	35 83       	std	Z+5, r19	; 0x05
    291a:	24 83       	std	Z+4, r18	; 0x04
    291c:	3f 83       	std	Y+7, r19	; 0x07
    291e:	2e 83       	std	Y+6, r18	; 0x06
    2920:	59 96       	adiw	r26, 0x19	; 25
    2922:	7c 93       	st	X, r23
    2924:	6e 93       	st	-X, r22
    2926:	58 97       	sbiw	r26, 0x18	; 24
    2928:	fb 01       	movw	r30, r22
    292a:	90 81       	ld	r25, Z
    292c:	9f 5f       	subi	r25, 0xFF	; 255
    292e:	90 83       	st	Z, r25
    2930:	5a 96       	adiw	r26, 0x1a	; 26
    2932:	2c 91       	ld	r18, X
    2934:	e0 91 4d 16 	lds	r30, 0x164D	; 0x80164d <pxCurrentTCB>
    2938:	f0 91 4e 16 	lds	r31, 0x164E	; 0x80164e <pxCurrentTCB+0x1>
    293c:	92 8d       	ldd	r25, Z+26	; 0x1a
    293e:	92 17       	cp	r25, r18
    2940:	48 f4       	brcc	.+18     	; 0x2954 <xTaskGenericNotifyFromISR+0x22c>
    2942:	c1 14       	cp	r12, r1
    2944:	d1 04       	cpc	r13, r1
    2946:	19 f0       	breq	.+6      	; 0x294e <xTaskGenericNotifyFromISR+0x226>
    2948:	91 e0       	ldi	r25, 0x01	; 1
    294a:	f6 01       	movw	r30, r12
    294c:	90 83       	st	Z, r25
    294e:	91 e0       	ldi	r25, 0x01	; 1
    2950:	90 93 97 15 	sts	0x1597, r25	; 0x801597 <xYieldPending>
    2954:	df 91       	pop	r29
    2956:	cf 91       	pop	r28
    2958:	0f 91       	pop	r16
    295a:	ff 90       	pop	r15
    295c:	ef 90       	pop	r14
    295e:	df 90       	pop	r13
    2960:	cf 90       	pop	r12
    2962:	bf 90       	pop	r11
    2964:	af 90       	pop	r10
    2966:	9f 90       	pop	r9
    2968:	8f 90       	pop	r8
    296a:	08 95       	ret

0000296c <xTaskGenericNotifyStateClear>:

        configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );

        /* If null is passed in here then it is the calling task that is having
         * its notification state cleared. */
        pxTCB = prvGetTCBFromHandle( xTask );
    296c:	00 97       	sbiw	r24, 0x00	; 0
    296e:	21 f4       	brne	.+8      	; 0x2978 <xTaskGenericNotifyStateClear+0xc>
    2970:	80 91 4d 16 	lds	r24, 0x164D	; 0x80164d <pxCurrentTCB>
    2974:	90 91 4e 16 	lds	r25, 0x164E	; 0x80164e <pxCurrentTCB+0x1>

        taskENTER_CRITICAL();
    2978:	0f b6       	in	r0, 0x3f	; 63
    297a:	f8 94       	cli
    297c:	0f 92       	push	r0
        {
            if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
    297e:	70 e0       	ldi	r23, 0x00	; 0
    2980:	fc 01       	movw	r30, r24
    2982:	e6 0f       	add	r30, r22
    2984:	f7 1f       	adc	r31, r23
    2986:	23 a9       	ldd	r18, Z+51	; 0x33
    2988:	22 30       	cpi	r18, 0x02	; 2
    298a:	31 f4       	brne	.+12     	; 0x2998 <xTaskGenericNotifyStateClear+0x2c>
            {
                pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
    298c:	fc 01       	movw	r30, r24
    298e:	e6 0f       	add	r30, r22
    2990:	f7 1f       	adc	r31, r23
    2992:	13 aa       	std	Z+51, r1	; 0x33
                xReturn = pdPASS;
    2994:	81 e0       	ldi	r24, 0x01	; 1
    2996:	01 c0       	rjmp	.+2      	; 0x299a <xTaskGenericNotifyStateClear+0x2e>
            }
            else
            {
                xReturn = pdFAIL;
    2998:	80 e0       	ldi	r24, 0x00	; 0
            }
        }
        taskEXIT_CRITICAL();
    299a:	0f 90       	pop	r0
    299c:	0f be       	out	0x3f, r0	; 63

        return xReturn;
    }
    299e:	08 95       	ret

000029a0 <prvGetNextExpireTime>:
    29a0:	dc 01       	movw	r26, r24
    29a2:	e0 91 59 16 	lds	r30, 0x1659	; 0x801659 <pxCurrentTimerList>
    29a6:	f0 91 5a 16 	lds	r31, 0x165A	; 0x80165a <pxCurrentTimerList+0x1>
    29aa:	80 81       	ld	r24, Z
    29ac:	91 e0       	ldi	r25, 0x01	; 1
    29ae:	81 11       	cpse	r24, r1
    29b0:	90 e0       	ldi	r25, 0x00	; 0
    29b2:	9c 93       	st	X, r25
    29b4:	91 11       	cpse	r25, r1
    29b6:	08 c0       	rjmp	.+16     	; 0x29c8 <prvGetNextExpireTime+0x28>
    29b8:	07 80       	ldd	r0, Z+7	; 0x07
    29ba:	f0 85       	ldd	r31, Z+8	; 0x08
    29bc:	e0 2d       	mov	r30, r0
    29be:	60 81       	ld	r22, Z
    29c0:	71 81       	ldd	r23, Z+1	; 0x01
    29c2:	82 81       	ldd	r24, Z+2	; 0x02
    29c4:	93 81       	ldd	r25, Z+3	; 0x03
    29c6:	08 95       	ret
    29c8:	60 e0       	ldi	r22, 0x00	; 0
    29ca:	70 e0       	ldi	r23, 0x00	; 0
    29cc:	cb 01       	movw	r24, r22
    29ce:	08 95       	ret

000029d0 <prvInsertTimerInActiveList>:
    29d0:	cf 92       	push	r12
    29d2:	df 92       	push	r13
    29d4:	ef 92       	push	r14
    29d6:	ff 92       	push	r15
    29d8:	0f 93       	push	r16
    29da:	1f 93       	push	r17
    29dc:	fc 01       	movw	r30, r24
    29de:	42 83       	std	Z+2, r20	; 0x02
    29e0:	53 83       	std	Z+3, r21	; 0x03
    29e2:	64 83       	std	Z+4, r22	; 0x04
    29e4:	75 83       	std	Z+5, r23	; 0x05
    29e6:	93 87       	std	Z+11, r25	; 0x0b
    29e8:	82 87       	std	Z+10, r24	; 0x0a
    29ea:	04 17       	cp	r16, r20
    29ec:	15 07       	cpc	r17, r21
    29ee:	26 07       	cpc	r18, r22
    29f0:	37 07       	cpc	r19, r23
    29f2:	c0 f0       	brcs	.+48     	; 0x2a24 <prvInsertTimerInActiveList+0x54>
    29f4:	0c 19       	sub	r16, r12
    29f6:	1d 09       	sbc	r17, r13
    29f8:	2e 09       	sbc	r18, r14
    29fa:	3f 09       	sbc	r19, r15
    29fc:	86 85       	ldd	r24, Z+14	; 0x0e
    29fe:	97 85       	ldd	r25, Z+15	; 0x0f
    2a00:	a0 89       	ldd	r26, Z+16	; 0x10
    2a02:	b1 89       	ldd	r27, Z+17	; 0x11
    2a04:	08 17       	cp	r16, r24
    2a06:	19 07       	cpc	r17, r25
    2a08:	2a 07       	cpc	r18, r26
    2a0a:	3b 07       	cpc	r19, r27
    2a0c:	00 f5       	brcc	.+64     	; 0x2a4e <prvInsertTimerInActiveList+0x7e>
    2a0e:	bf 01       	movw	r22, r30
    2a10:	6e 5f       	subi	r22, 0xFE	; 254
    2a12:	7f 4f       	sbci	r23, 0xFF	; 255
    2a14:	80 91 57 16 	lds	r24, 0x1657	; 0x801657 <pxOverflowTimerList>
    2a18:	90 91 58 16 	lds	r25, 0x1658	; 0x801658 <pxOverflowTimerList+0x1>
    2a1c:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <vListInsert>
    2a20:	80 e0       	ldi	r24, 0x00	; 0
    2a22:	18 c0       	rjmp	.+48     	; 0x2a54 <prvInsertTimerInActiveList+0x84>
    2a24:	0c 15       	cp	r16, r12
    2a26:	1d 05       	cpc	r17, r13
    2a28:	2e 05       	cpc	r18, r14
    2a2a:	3f 05       	cpc	r19, r15
    2a2c:	28 f4       	brcc	.+10     	; 0x2a38 <prvInsertTimerInActiveList+0x68>
    2a2e:	4c 15       	cp	r20, r12
    2a30:	5d 05       	cpc	r21, r13
    2a32:	6e 05       	cpc	r22, r14
    2a34:	7f 05       	cpc	r23, r15
    2a36:	68 f4       	brcc	.+26     	; 0x2a52 <prvInsertTimerInActiveList+0x82>
    2a38:	bf 01       	movw	r22, r30
    2a3a:	6e 5f       	subi	r22, 0xFE	; 254
    2a3c:	7f 4f       	sbci	r23, 0xFF	; 255
    2a3e:	80 91 59 16 	lds	r24, 0x1659	; 0x801659 <pxCurrentTimerList>
    2a42:	90 91 5a 16 	lds	r25, 0x165A	; 0x80165a <pxCurrentTimerList+0x1>
    2a46:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <vListInsert>
    2a4a:	80 e0       	ldi	r24, 0x00	; 0
    2a4c:	03 c0       	rjmp	.+6      	; 0x2a54 <prvInsertTimerInActiveList+0x84>
    2a4e:	81 e0       	ldi	r24, 0x01	; 1
    2a50:	01 c0       	rjmp	.+2      	; 0x2a54 <prvInsertTimerInActiveList+0x84>
    2a52:	81 e0       	ldi	r24, 0x01	; 1
    2a54:	1f 91       	pop	r17
    2a56:	0f 91       	pop	r16
    2a58:	ff 90       	pop	r15
    2a5a:	ef 90       	pop	r14
    2a5c:	df 90       	pop	r13
    2a5e:	cf 90       	pop	r12
    2a60:	08 95       	ret

00002a62 <prvCheckForValidListAndQueue>:
    2a62:	0f b6       	in	r0, 0x3f	; 63
    2a64:	f8 94       	cli
    2a66:	0f 92       	push	r0
    2a68:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <xTimerQueue>
    2a6c:	90 91 56 16 	lds	r25, 0x1656	; 0x801656 <xTimerQueue+0x1>
    2a70:	89 2b       	or	r24, r25
    2a72:	e9 f4       	brne	.+58     	; 0x2aae <prvCheckForValidListAndQueue+0x4c>
    2a74:	86 e6       	ldi	r24, 0x66	; 102
    2a76:	96 e1       	ldi	r25, 0x16	; 22
    2a78:	0e 94 df 02 	call	0x5be	; 0x5be <vListInitialise>
    2a7c:	8b e5       	ldi	r24, 0x5B	; 91
    2a7e:	96 e1       	ldi	r25, 0x16	; 22
    2a80:	0e 94 df 02 	call	0x5be	; 0x5be <vListInitialise>
    2a84:	86 e6       	ldi	r24, 0x66	; 102
    2a86:	96 e1       	ldi	r25, 0x16	; 22
    2a88:	90 93 5a 16 	sts	0x165A, r25	; 0x80165a <pxCurrentTimerList+0x1>
    2a8c:	80 93 59 16 	sts	0x1659, r24	; 0x801659 <pxCurrentTimerList>
    2a90:	8b e5       	ldi	r24, 0x5B	; 91
    2a92:	96 e1       	ldi	r25, 0x16	; 22
    2a94:	90 93 58 16 	sts	0x1658, r25	; 0x801658 <pxOverflowTimerList+0x1>
    2a98:	80 93 57 16 	sts	0x1657, r24	; 0x801657 <pxOverflowTimerList>
    2a9c:	40 e0       	ldi	r20, 0x00	; 0
    2a9e:	67 e0       	ldi	r22, 0x07	; 7
    2aa0:	8a e0       	ldi	r24, 0x0A	; 10
    2aa2:	0e 94 92 05 	call	0xb24	; 0xb24 <xQueueGenericCreate>
    2aa6:	90 93 56 16 	sts	0x1656, r25	; 0x801656 <xTimerQueue+0x1>
    2aaa:	80 93 55 16 	sts	0x1655, r24	; 0x801655 <xTimerQueue>
    2aae:	0f 90       	pop	r0
    2ab0:	0f be       	out	0x3f, r0	; 63
    2ab2:	08 95       	ret

00002ab4 <xTimerCreateTimerTask>:
    2ab4:	ef 92       	push	r14
    2ab6:	ff 92       	push	r15
    2ab8:	0f 93       	push	r16
    2aba:	d3 df       	rcall	.-90     	; 0x2a62 <prvCheckForValidListAndQueue>
    2abc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <xTimerQueue>
    2ac0:	90 91 56 16 	lds	r25, 0x1656	; 0x801656 <xTimerQueue+0x1>
    2ac4:	89 2b       	or	r24, r25
    2ac6:	91 f0       	breq	.+36     	; 0x2aec <xTimerCreateTimerTask+0x38>
    2ac8:	0f 2e       	mov	r0, r31
    2aca:	f3 e5       	ldi	r31, 0x53	; 83
    2acc:	ef 2e       	mov	r14, r31
    2ace:	f6 e1       	ldi	r31, 0x16	; 22
    2ad0:	ff 2e       	mov	r15, r31
    2ad2:	f0 2d       	mov	r31, r0
    2ad4:	03 e0       	ldi	r16, 0x03	; 3
    2ad6:	20 e0       	ldi	r18, 0x00	; 0
    2ad8:	30 e0       	ldi	r19, 0x00	; 0
    2ada:	40 ec       	ldi	r20, 0xC0	; 192
    2adc:	50 e0       	ldi	r21, 0x00	; 0
    2ade:	6f e9       	ldi	r22, 0x9F	; 159
    2ae0:	72 e0       	ldi	r23, 0x02	; 2
    2ae2:	87 ed       	ldi	r24, 0xD7	; 215
    2ae4:	90 e0       	ldi	r25, 0x00	; 0
    2ae6:	0e 94 6a 0c 	call	0x18d4	; 0x18d4 <xTaskCreate>
    2aea:	01 c0       	rjmp	.+2      	; 0x2aee <xTimerCreateTimerTask+0x3a>
    2aec:	80 e0       	ldi	r24, 0x00	; 0
    2aee:	0f 91       	pop	r16
    2af0:	ff 90       	pop	r15
    2af2:	ef 90       	pop	r14
    2af4:	08 95       	ret

00002af6 <xTimerGenericCommand>:
    BaseType_t xTimerGenericCommand( TimerHandle_t xTimer,
                                     const BaseType_t xCommandID,
                                     const TickType_t xOptionalValue,
                                     BaseType_t * const pxHigherPriorityTaskWoken,
                                     const TickType_t xTicksToWait )
    {
    2af6:	8f 92       	push	r8
    2af8:	9f 92       	push	r9
    2afa:	af 92       	push	r10
    2afc:	bf 92       	push	r11
    2afe:	cf 92       	push	r12
    2b00:	df 92       	push	r13
    2b02:	ef 92       	push	r14
    2b04:	ff 92       	push	r15
    2b06:	0f 93       	push	r16
    2b08:	1f 93       	push	r17
    2b0a:	cf 93       	push	r28
    2b0c:	df 93       	push	r29
    2b0e:	cd b7       	in	r28, 0x3d	; 61
    2b10:	de b7       	in	r29, 0x3e	; 62
    2b12:	27 97       	sbiw	r28, 0x07	; 7
    2b14:	0f b6       	in	r0, 0x3f	; 63
    2b16:	f8 94       	cli
    2b18:	de bf       	out	0x3e, r29	; 62
    2b1a:	0f be       	out	0x3f, r0	; 63
    2b1c:	cd bf       	out	0x3d, r28	; 61

        configASSERT( xTimer );

        /* Send a message to the timer service task to perform a particular action
         * on a particular timer definition. */
        if( xTimerQueue != NULL )
    2b1e:	e0 91 55 16 	lds	r30, 0x1655	; 0x801655 <xTimerQueue>
    2b22:	f0 91 56 16 	lds	r31, 0x1656	; 0x801656 <xTimerQueue+0x1>
    2b26:	30 97       	sbiw	r30, 0x00	; 0
    2b28:	81 f1       	breq	.+96     	; 0x2b8a <xTimerGenericCommand+0x94>
        {
            /* Send a command to the timer service task to start the xTimer timer. */
            xMessage.xMessageID = xCommandID;
    2b2a:	69 83       	std	Y+1, r22	; 0x01
            xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
    2b2c:	2a 83       	std	Y+2, r18	; 0x02
    2b2e:	3b 83       	std	Y+3, r19	; 0x03
    2b30:	4c 83       	std	Y+4, r20	; 0x04
    2b32:	5d 83       	std	Y+5, r21	; 0x05
            xMessage.u.xTimerParameters.pxTimer = xTimer;
    2b34:	9f 83       	std	Y+7, r25	; 0x07
    2b36:	8e 83       	std	Y+6, r24	; 0x06

            if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
    2b38:	66 30       	cpi	r22, 0x06	; 6
    2b3a:	f4 f4       	brge	.+60     	; 0x2b78 <xTimerGenericCommand+0x82>
            {
                if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
    2b3c:	ee db       	rcall	.-2084   	; 0x231a <xTaskGetSchedulerState>
    2b3e:	82 30       	cpi	r24, 0x02	; 2
    2b40:	69 f4       	brne	.+26     	; 0x2b5c <xTimerGenericCommand+0x66>
                {
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
    2b42:	00 e0       	ldi	r16, 0x00	; 0
    2b44:	a7 01       	movw	r20, r14
    2b46:	96 01       	movw	r18, r12
    2b48:	be 01       	movw	r22, r28
    2b4a:	6f 5f       	subi	r22, 0xFF	; 255
    2b4c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b4e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <xTimerQueue>
    2b52:	90 91 56 16 	lds	r25, 0x1656	; 0x801656 <xTimerQueue+0x1>
    2b56:	0e 94 b5 05 	call	0xb6a	; 0xb6a <xQueueGenericSend>
    2b5a:	18 c0       	rjmp	.+48     	; 0x2b8c <xTimerGenericCommand+0x96>
                }
                else
                {
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
    2b5c:	00 e0       	ldi	r16, 0x00	; 0
    2b5e:	20 e0       	ldi	r18, 0x00	; 0
    2b60:	30 e0       	ldi	r19, 0x00	; 0
    2b62:	a9 01       	movw	r20, r18
    2b64:	be 01       	movw	r22, r28
    2b66:	6f 5f       	subi	r22, 0xFF	; 255
    2b68:	7f 4f       	sbci	r23, 0xFF	; 255
    2b6a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <xTimerQueue>
    2b6e:	90 91 56 16 	lds	r25, 0x1656	; 0x801656 <xTimerQueue+0x1>
    2b72:	0e 94 b5 05 	call	0xb6a	; 0xb6a <xQueueGenericSend>
    2b76:	0a c0       	rjmp	.+20     	; 0x2b8c <xTimerGenericCommand+0x96>
                }
            }
            else
            {
                xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
    2b78:	20 e0       	ldi	r18, 0x00	; 0
    2b7a:	a8 01       	movw	r20, r16
    2b7c:	be 01       	movw	r22, r28
    2b7e:	6f 5f       	subi	r22, 0xFF	; 255
    2b80:	7f 4f       	sbci	r23, 0xFF	; 255
    2b82:	cf 01       	movw	r24, r30
    2b84:	0e 94 45 06 	call	0xc8a	; 0xc8a <xQueueGenericSendFromISR>
    2b88:	01 c0       	rjmp	.+2      	; 0x2b8c <xTimerGenericCommand+0x96>
                                     const BaseType_t xCommandID,
                                     const TickType_t xOptionalValue,
                                     BaseType_t * const pxHigherPriorityTaskWoken,
                                     const TickType_t xTicksToWait )
    {
        BaseType_t xReturn = pdFAIL;
    2b8a:	80 e0       	ldi	r24, 0x00	; 0
        {
            mtCOVERAGE_TEST_MARKER();
        }

        return xReturn;
    }
    2b8c:	27 96       	adiw	r28, 0x07	; 7
    2b8e:	0f b6       	in	r0, 0x3f	; 63
    2b90:	f8 94       	cli
    2b92:	de bf       	out	0x3e, r29	; 62
    2b94:	0f be       	out	0x3f, r0	; 63
    2b96:	cd bf       	out	0x3d, r28	; 61
    2b98:	df 91       	pop	r29
    2b9a:	cf 91       	pop	r28
    2b9c:	1f 91       	pop	r17
    2b9e:	0f 91       	pop	r16
    2ba0:	ff 90       	pop	r15
    2ba2:	ef 90       	pop	r14
    2ba4:	df 90       	pop	r13
    2ba6:	cf 90       	pop	r12
    2ba8:	bf 90       	pop	r11
    2baa:	af 90       	pop	r10
    2bac:	9f 90       	pop	r9
    2bae:	8f 90       	pop	r8
    2bb0:	08 95       	ret

00002bb2 <prvSwitchTimerLists>:
        }
    }
/*-----------------------------------------------------------*/

    static void prvSwitchTimerLists( void )
    {
    2bb2:	8f 92       	push	r8
    2bb4:	9f 92       	push	r9
    2bb6:	af 92       	push	r10
    2bb8:	bf 92       	push	r11
    2bba:	cf 92       	push	r12
    2bbc:	df 92       	push	r13
    2bbe:	ef 92       	push	r14
    2bc0:	ff 92       	push	r15
    2bc2:	0f 93       	push	r16
    2bc4:	1f 93       	push	r17
    2bc6:	cf 93       	push	r28
    2bc8:	df 93       	push	r29

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
    2bca:	3b c0       	rjmp	.+118    	; 0x2c42 <prvSwitchTimerLists+0x90>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
    2bcc:	07 80       	ldd	r0, Z+7	; 0x07
    2bce:	f0 85       	ldd	r31, Z+8	; 0x08
    2bd0:	e0 2d       	mov	r30, r0
    2bd2:	80 80       	ld	r8, Z
    2bd4:	91 80       	ldd	r9, Z+1	; 0x01
    2bd6:	a2 80       	ldd	r10, Z+2	; 0x02
    2bd8:	b3 80       	ldd	r11, Z+3	; 0x03

            /* Remove the timer from the list. */
            pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    2bda:	c0 85       	ldd	r28, Z+8	; 0x08
    2bdc:	d1 85       	ldd	r29, Z+9	; 0x09
            ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
    2bde:	8e 01       	movw	r16, r28
    2be0:	0e 5f       	subi	r16, 0xFE	; 254
    2be2:	1f 4f       	sbci	r17, 0xFF	; 255
    2be4:	c8 01       	movw	r24, r16
    2be6:	0e 94 31 03 	call	0x662	; 0x662 <uxListRemove>
            traceTIMER_EXPIRED( pxTimer );

            /* Execute its callback, then send a command to restart the timer if
             * it is an auto-reload timer.  It cannot be restarted here as the lists
             * have not yet been switched. */
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
    2bea:	ec 89       	ldd	r30, Y+20	; 0x14
    2bec:	fd 89       	ldd	r31, Y+21	; 0x15
    2bee:	ce 01       	movw	r24, r28
    2bf0:	19 95       	eicall

            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
    2bf2:	8e 89       	ldd	r24, Y+22	; 0x16
    2bf4:	82 ff       	sbrs	r24, 2
    2bf6:	25 c0       	rjmp	.+74     	; 0x2c42 <prvSwitchTimerLists+0x90>
                 * the timer going into the same timer list then it has already expired
                 * and the timer should be re-inserted into the current list so it is
                 * processed again within this loop.  Otherwise a command should be sent
                 * to restart the timer to ensure it is only inserted into a list after
                 * the lists have been swapped. */
                xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
    2bf8:	8e 85       	ldd	r24, Y+14	; 0x0e
    2bfa:	9f 85       	ldd	r25, Y+15	; 0x0f
    2bfc:	a8 89       	ldd	r26, Y+16	; 0x10
    2bfe:	b9 89       	ldd	r27, Y+17	; 0x11
    2c00:	88 0d       	add	r24, r8
    2c02:	99 1d       	adc	r25, r9
    2c04:	aa 1d       	adc	r26, r10
    2c06:	bb 1d       	adc	r27, r11

                if( xReloadTime > xNextExpireTime )
    2c08:	88 16       	cp	r8, r24
    2c0a:	99 06       	cpc	r9, r25
    2c0c:	aa 06       	cpc	r10, r26
    2c0e:	bb 06       	cpc	r11, r27
    2c10:	70 f4       	brcc	.+28     	; 0x2c2e <prvSwitchTimerLists+0x7c>
                {
                    listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
    2c12:	8a 83       	std	Y+2, r24	; 0x02
    2c14:	9b 83       	std	Y+3, r25	; 0x03
    2c16:	ac 83       	std	Y+4, r26	; 0x04
    2c18:	bd 83       	std	Y+5, r27	; 0x05
                    listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
    2c1a:	db 87       	std	Y+11, r29	; 0x0b
    2c1c:	ca 87       	std	Y+10, r28	; 0x0a
                    vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
    2c1e:	b8 01       	movw	r22, r16
    2c20:	80 91 59 16 	lds	r24, 0x1659	; 0x801659 <pxCurrentTimerList>
    2c24:	90 91 5a 16 	lds	r25, 0x165A	; 0x80165a <pxCurrentTimerList+0x1>
    2c28:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <vListInsert>
    2c2c:	0a c0       	rjmp	.+20     	; 0x2c42 <prvSwitchTimerLists+0x90>
                }
                else
                {
                    xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
    2c2e:	c1 2c       	mov	r12, r1
    2c30:	d1 2c       	mov	r13, r1
    2c32:	76 01       	movw	r14, r12
    2c34:	00 e0       	ldi	r16, 0x00	; 0
    2c36:	10 e0       	ldi	r17, 0x00	; 0
    2c38:	a5 01       	movw	r20, r10
    2c3a:	94 01       	movw	r18, r8
    2c3c:	60 e0       	ldi	r22, 0x00	; 0
    2c3e:	ce 01       	movw	r24, r28
    2c40:	5a df       	rcall	.-332    	; 0x2af6 <xTimerGenericCommand>

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
    2c42:	e0 91 59 16 	lds	r30, 0x1659	; 0x801659 <pxCurrentTimerList>
    2c46:	f0 91 5a 16 	lds	r31, 0x165A	; 0x80165a <pxCurrentTimerList+0x1>
    2c4a:	80 81       	ld	r24, Z
    2c4c:	81 11       	cpse	r24, r1
    2c4e:	be cf       	rjmp	.-132    	; 0x2bcc <prvSwitchTimerLists+0x1a>
                mtCOVERAGE_TEST_MARKER();
            }
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
    2c50:	80 91 57 16 	lds	r24, 0x1657	; 0x801657 <pxOverflowTimerList>
    2c54:	90 91 58 16 	lds	r25, 0x1658	; 0x801658 <pxOverflowTimerList+0x1>
    2c58:	90 93 5a 16 	sts	0x165A, r25	; 0x80165a <pxCurrentTimerList+0x1>
    2c5c:	80 93 59 16 	sts	0x1659, r24	; 0x801659 <pxCurrentTimerList>
        pxOverflowTimerList = pxTemp;
    2c60:	f0 93 58 16 	sts	0x1658, r31	; 0x801658 <pxOverflowTimerList+0x1>
    2c64:	e0 93 57 16 	sts	0x1657, r30	; 0x801657 <pxOverflowTimerList>
    }
    2c68:	df 91       	pop	r29
    2c6a:	cf 91       	pop	r28
    2c6c:	1f 91       	pop	r17
    2c6e:	0f 91       	pop	r16
    2c70:	ff 90       	pop	r15
    2c72:	ef 90       	pop	r14
    2c74:	df 90       	pop	r13
    2c76:	cf 90       	pop	r12
    2c78:	bf 90       	pop	r11
    2c7a:	af 90       	pop	r10
    2c7c:	9f 90       	pop	r9
    2c7e:	8f 90       	pop	r8
    2c80:	08 95       	ret

00002c82 <prvSampleTimeNow>:
        return xNextExpireTime;
    }
/*-----------------------------------------------------------*/

    static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
    {
    2c82:	cf 92       	push	r12
    2c84:	df 92       	push	r13
    2c86:	ef 92       	push	r14
    2c88:	ff 92       	push	r15
    2c8a:	cf 93       	push	r28
    2c8c:	df 93       	push	r29
    2c8e:	ec 01       	movw	r28, r24
        TickType_t xTimeNow;
        PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only accessible to one task. */

        xTimeNow = xTaskGetTickCount();
    2c90:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <xTaskGetTickCount>
    2c94:	6b 01       	movw	r12, r22
    2c96:	7c 01       	movw	r14, r24

        if( xTimeNow < xLastTime )
    2c98:	80 91 4f 16 	lds	r24, 0x164F	; 0x80164f <xLastTime.2436>
    2c9c:	90 91 50 16 	lds	r25, 0x1650	; 0x801650 <xLastTime.2436+0x1>
    2ca0:	a0 91 51 16 	lds	r26, 0x1651	; 0x801651 <xLastTime.2436+0x2>
    2ca4:	b0 91 52 16 	lds	r27, 0x1652	; 0x801652 <xLastTime.2436+0x3>
    2ca8:	c8 16       	cp	r12, r24
    2caa:	d9 06       	cpc	r13, r25
    2cac:	ea 06       	cpc	r14, r26
    2cae:	fb 06       	cpc	r15, r27
    2cb0:	20 f4       	brcc	.+8      	; 0x2cba <prvSampleTimeNow+0x38>
        {
            prvSwitchTimerLists();
    2cb2:	7f df       	rcall	.-258    	; 0x2bb2 <prvSwitchTimerLists>
            *pxTimerListsWereSwitched = pdTRUE;
    2cb4:	81 e0       	ldi	r24, 0x01	; 1
    2cb6:	88 83       	st	Y, r24
    2cb8:	01 c0       	rjmp	.+2      	; 0x2cbc <prvSampleTimeNow+0x3a>
        }
        else
        {
            *pxTimerListsWereSwitched = pdFALSE;
    2cba:	18 82       	st	Y, r1
        }

        xLastTime = xTimeNow;
    2cbc:	c0 92 4f 16 	sts	0x164F, r12	; 0x80164f <xLastTime.2436>
    2cc0:	d0 92 50 16 	sts	0x1650, r13	; 0x801650 <xLastTime.2436+0x1>
    2cc4:	e0 92 51 16 	sts	0x1651, r14	; 0x801651 <xLastTime.2436+0x2>
    2cc8:	f0 92 52 16 	sts	0x1652, r15	; 0x801652 <xLastTime.2436+0x3>

        return xTimeNow;
    }
    2ccc:	c7 01       	movw	r24, r14
    2cce:	b6 01       	movw	r22, r12
    2cd0:	df 91       	pop	r29
    2cd2:	cf 91       	pop	r28
    2cd4:	ff 90       	pop	r15
    2cd6:	ef 90       	pop	r14
    2cd8:	df 90       	pop	r13
    2cda:	cf 90       	pop	r12
    2cdc:	08 95       	ret

00002cde <prvProcessExpiredTimer>:
    }
/*-----------------------------------------------------------*/

    static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
                                        const TickType_t xTimeNow )
    {
    2cde:	4f 92       	push	r4
    2ce0:	5f 92       	push	r5
    2ce2:	6f 92       	push	r6
    2ce4:	7f 92       	push	r7
    2ce6:	8f 92       	push	r8
    2ce8:	9f 92       	push	r9
    2cea:	af 92       	push	r10
    2cec:	bf 92       	push	r11
    2cee:	cf 92       	push	r12
    2cf0:	df 92       	push	r13
    2cf2:	ef 92       	push	r14
    2cf4:	ff 92       	push	r15
    2cf6:	0f 93       	push	r16
    2cf8:	1f 93       	push	r17
    2cfa:	cf 93       	push	r28
    2cfc:	df 93       	push	r29
    2cfe:	4b 01       	movw	r8, r22
    2d00:	5c 01       	movw	r10, r24
    2d02:	29 01       	movw	r4, r18
    2d04:	3a 01       	movw	r6, r20
        BaseType_t xResult;
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    2d06:	e0 91 59 16 	lds	r30, 0x1659	; 0x801659 <pxCurrentTimerList>
    2d0a:	f0 91 5a 16 	lds	r31, 0x165A	; 0x80165a <pxCurrentTimerList+0x1>
    2d0e:	07 80       	ldd	r0, Z+7	; 0x07
    2d10:	f0 85       	ldd	r31, Z+8	; 0x08
    2d12:	e0 2d       	mov	r30, r0
    2d14:	c0 85       	ldd	r28, Z+8	; 0x08
    2d16:	d1 85       	ldd	r29, Z+9	; 0x09

        /* Remove the timer from the list of active timers.  A check has already
         * been performed to ensure the list is not empty. */

        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
    2d18:	ce 01       	movw	r24, r28
    2d1a:	02 96       	adiw	r24, 0x02	; 2
    2d1c:	0e 94 31 03 	call	0x662	; 0x662 <uxListRemove>
        traceTIMER_EXPIRED( pxTimer );

        /* If the timer is an auto-reload timer then calculate the next
         * expiry time and re-insert the timer in the list of active timers. */
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
    2d20:	8e 89       	ldd	r24, Y+22	; 0x16
    2d22:	82 ff       	sbrs	r24, 2
    2d24:	1b c0       	rjmp	.+54     	; 0x2d5c <prvProcessExpiredTimer+0x7e>
        {
            /* The timer is inserted into a list using a time relative to anything
             * other than the current time.  It will therefore be inserted into the
             * correct list relative to the time this task thinks it is now. */
            if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
    2d26:	4e 85       	ldd	r20, Y+14	; 0x0e
    2d28:	5f 85       	ldd	r21, Y+15	; 0x0f
    2d2a:	68 89       	ldd	r22, Y+16	; 0x10
    2d2c:	79 89       	ldd	r23, Y+17	; 0x11
    2d2e:	48 0d       	add	r20, r8
    2d30:	59 1d       	adc	r21, r9
    2d32:	6a 1d       	adc	r22, r10
    2d34:	7b 1d       	adc	r23, r11
    2d36:	75 01       	movw	r14, r10
    2d38:	64 01       	movw	r12, r8
    2d3a:	93 01       	movw	r18, r6
    2d3c:	82 01       	movw	r16, r4
    2d3e:	ce 01       	movw	r24, r28
    2d40:	47 de       	rcall	.-882    	; 0x29d0 <prvInsertTimerInActiveList>
    2d42:	88 23       	and	r24, r24
    2d44:	69 f0       	breq	.+26     	; 0x2d60 <prvProcessExpiredTimer+0x82>
            {
                /* The timer expired before it was added to the active timer
                 * list.  Reload it now.  */
                xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
    2d46:	c1 2c       	mov	r12, r1
    2d48:	d1 2c       	mov	r13, r1
    2d4a:	76 01       	movw	r14, r12
    2d4c:	00 e0       	ldi	r16, 0x00	; 0
    2d4e:	10 e0       	ldi	r17, 0x00	; 0
    2d50:	a5 01       	movw	r20, r10
    2d52:	94 01       	movw	r18, r8
    2d54:	60 e0       	ldi	r22, 0x00	; 0
    2d56:	ce 01       	movw	r24, r28
    2d58:	ce de       	rcall	.-612    	; 0x2af6 <xTimerGenericCommand>
    2d5a:	02 c0       	rjmp	.+4      	; 0x2d60 <prvProcessExpiredTimer+0x82>
                mtCOVERAGE_TEST_MARKER();
            }
        }
        else
        {
            pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
    2d5c:	8e 7f       	andi	r24, 0xFE	; 254
    2d5e:	8e 8b       	std	Y+22, r24	; 0x16
            mtCOVERAGE_TEST_MARKER();
        }

        /* Call the timer callback. */
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
    2d60:	ec 89       	ldd	r30, Y+20	; 0x14
    2d62:	fd 89       	ldd	r31, Y+21	; 0x15
    2d64:	ce 01       	movw	r24, r28
    2d66:	19 95       	eicall
    }
    2d68:	df 91       	pop	r29
    2d6a:	cf 91       	pop	r28
    2d6c:	1f 91       	pop	r17
    2d6e:	0f 91       	pop	r16
    2d70:	ff 90       	pop	r15
    2d72:	ef 90       	pop	r14
    2d74:	df 90       	pop	r13
    2d76:	cf 90       	pop	r12
    2d78:	bf 90       	pop	r11
    2d7a:	af 90       	pop	r10
    2d7c:	9f 90       	pop	r9
    2d7e:	8f 90       	pop	r8
    2d80:	7f 90       	pop	r7
    2d82:	6f 90       	pop	r6
    2d84:	5f 90       	pop	r5
    2d86:	4f 90       	pop	r4
    2d88:	08 95       	ret

00002d8a <prvProcessTimerOrBlockTask>:
    }
/*-----------------------------------------------------------*/

    static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
                                            BaseType_t xListWasEmpty )
    {
    2d8a:	8f 92       	push	r8
    2d8c:	9f 92       	push	r9
    2d8e:	af 92       	push	r10
    2d90:	bf 92       	push	r11
    2d92:	cf 92       	push	r12
    2d94:	df 92       	push	r13
    2d96:	ef 92       	push	r14
    2d98:	ff 92       	push	r15
    2d9a:	1f 93       	push	r17
    2d9c:	cf 93       	push	r28
    2d9e:	df 93       	push	r29
    2da0:	1f 92       	push	r1
    2da2:	cd b7       	in	r28, 0x3d	; 61
    2da4:	de b7       	in	r29, 0x3e	; 62
    2da6:	6b 01       	movw	r12, r22
    2da8:	7c 01       	movw	r14, r24
    2daa:	14 2f       	mov	r17, r20
        TickType_t xTimeNow;
        BaseType_t xTimerListsWereSwitched;

        vTaskSuspendAll();
    2dac:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <vTaskSuspendAll>
            /* Obtain the time now to make an assessment as to whether the timer
             * has expired or not.  If obtaining the time causes the lists to switch
             * then don't process this timer as any timers that remained in the list
             * when the lists were switched will have been processed within the
             * prvSampleTimeNow() function. */
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
    2db0:	ce 01       	movw	r24, r28
    2db2:	01 96       	adiw	r24, 0x01	; 1
    2db4:	66 df       	rcall	.-308    	; 0x2c82 <prvSampleTimeNow>
    2db6:	4b 01       	movw	r8, r22
    2db8:	5c 01       	movw	r10, r24

            if( xTimerListsWereSwitched == pdFALSE )
    2dba:	89 81       	ldd	r24, Y+1	; 0x01
    2dbc:	81 11       	cpse	r24, r1
    2dbe:	2d c0       	rjmp	.+90     	; 0x2e1a <prvProcessTimerOrBlockTask+0x90>
            {
                /* The tick count has not overflowed, has the timer expired? */
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
    2dc0:	11 11       	cpse	r17, r1
    2dc2:	0d c0       	rjmp	.+26     	; 0x2dde <prvProcessTimerOrBlockTask+0x54>
    2dc4:	8c 14       	cp	r8, r12
    2dc6:	9d 04       	cpc	r9, r13
    2dc8:	ae 04       	cpc	r10, r14
    2dca:	bf 04       	cpc	r11, r15
    2dcc:	40 f0       	brcs	.+16     	; 0x2dde <prvProcessTimerOrBlockTask+0x54>
                {
                    ( void ) xTaskResumeAll();
    2dce:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
    2dd2:	a5 01       	movw	r20, r10
    2dd4:	94 01       	movw	r18, r8
    2dd6:	c7 01       	movw	r24, r14
    2dd8:	b6 01       	movw	r22, r12
    2dda:	81 df       	rcall	.-254    	; 0x2cde <prvProcessExpiredTimer>
    2ddc:	20 c0       	rjmp	.+64     	; 0x2e1e <prvProcessTimerOrBlockTask+0x94>
                     * time has not been reached yet.  This task should therefore
                     * block to wait for the next expire time or a command to be
                     * received - whichever comes first.  The following line cannot
                     * be reached unless xNextExpireTime > xTimeNow, except in the
                     * case when the current timer list is empty. */
                    if( xListWasEmpty != pdFALSE )
    2dde:	11 23       	and	r17, r17
    2de0:	41 f0       	breq	.+16     	; 0x2df2 <prvProcessTimerOrBlockTask+0x68>
                    {
                        /* The current timer list is empty - is the overflow list
                         * also empty? */
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
    2de2:	e0 91 57 16 	lds	r30, 0x1657	; 0x801657 <pxOverflowTimerList>
    2de6:	f0 91 58 16 	lds	r31, 0x1658	; 0x801658 <pxOverflowTimerList+0x1>
    2dea:	80 81       	ld	r24, Z
    2dec:	11 e0       	ldi	r17, 0x01	; 1
    2dee:	81 11       	cpse	r24, r1
    2df0:	10 e0       	ldi	r17, 0x00	; 0
                    }

                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
    2df2:	b7 01       	movw	r22, r14
    2df4:	a6 01       	movw	r20, r12
    2df6:	48 19       	sub	r20, r8
    2df8:	59 09       	sbc	r21, r9
    2dfa:	6a 09       	sbc	r22, r10
    2dfc:	7b 09       	sbc	r23, r11
    2dfe:	21 2f       	mov	r18, r17
    2e00:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <xTimerQueue>
    2e04:	90 91 56 16 	lds	r25, 0x1656	; 0x801656 <xTimerQueue+0x1>
    2e08:	0e 94 0f 07 	call	0xe1e	; 0xe1e <vQueueWaitForMessageRestricted>

                    if( xTaskResumeAll() == pdFALSE )
    2e0c:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <xTaskResumeAll>
    2e10:	81 11       	cpse	r24, r1
    2e12:	05 c0       	rjmp	.+10     	; 0x2e1e <prvProcessTimerOrBlockTask+0x94>
                    {
                        /* Yield to wait for either a command to arrive, or the
                         * block time to expire.  If a command arrived between the
                         * critical section being exited and this yield then the yield
                         * will not cause the task to block. */
                        portYIELD_WITHIN_API();
    2e14:	0e 94 ad 03 	call	0x75a	; 0x75a <vPortYield>
    2e18:	02 c0       	rjmp	.+4      	; 0x2e1e <prvProcessTimerOrBlockTask+0x94>
                    }
                }
            }
            else
            {
                ( void ) xTaskResumeAll();
    2e1a:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <xTaskResumeAll>
            }
        }
    }
    2e1e:	0f 90       	pop	r0
    2e20:	df 91       	pop	r29
    2e22:	cf 91       	pop	r28
    2e24:	1f 91       	pop	r17
    2e26:	ff 90       	pop	r15
    2e28:	ef 90       	pop	r14
    2e2a:	df 90       	pop	r13
    2e2c:	cf 90       	pop	r12
    2e2e:	bf 90       	pop	r11
    2e30:	af 90       	pop	r10
    2e32:	9f 90       	pop	r9
    2e34:	8f 90       	pop	r8
    2e36:	08 95       	ret

00002e38 <prvProcessReceivedCommands>:
        return xProcessTimerNow;
    }
/*-----------------------------------------------------------*/

    static void prvProcessReceivedCommands( void )
    {
    2e38:	af 92       	push	r10
    2e3a:	bf 92       	push	r11
    2e3c:	cf 92       	push	r12
    2e3e:	df 92       	push	r13
    2e40:	ef 92       	push	r14
    2e42:	ff 92       	push	r15
    2e44:	0f 93       	push	r16
    2e46:	1f 93       	push	r17
    2e48:	cf 93       	push	r28
    2e4a:	df 93       	push	r29
    2e4c:	cd b7       	in	r28, 0x3d	; 61
    2e4e:	de b7       	in	r29, 0x3e	; 62
    2e50:	28 97       	sbiw	r28, 0x08	; 8
    2e52:	0f b6       	in	r0, 0x3f	; 63
    2e54:	f8 94       	cli
    2e56:	de bf       	out	0x3e, r29	; 62
    2e58:	0f be       	out	0x3f, r0	; 63
    2e5a:	cd bf       	out	0x3d, r28	; 61
        DaemonTaskMessage_t xMessage;
        Timer_t * pxTimer;
        BaseType_t xTimerListsWereSwitched, xResult;
        TickType_t xTimeNow;

        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
    2e5c:	82 c0       	rjmp	.+260    	; 0x2f62 <prvProcessReceivedCommands+0x12a>
                }
            #endif /* INCLUDE_xTimerPendFunctionCall */

            /* Commands that are positive are timer commands rather than pended
             * function calls. */
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
    2e5e:	89 81       	ldd	r24, Y+1	; 0x01
    2e60:	88 23       	and	r24, r24
    2e62:	0c f4       	brge	.+2      	; 0x2e66 <prvProcessReceivedCommands+0x2e>
    2e64:	7e c0       	rjmp	.+252    	; 0x2f62 <prvProcessReceivedCommands+0x12a>
            {
                /* The messages uses the xTimerParameters member to work on a
                 * software timer. */
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
    2e66:	ae 80       	ldd	r10, Y+6	; 0x06
    2e68:	bf 80       	ldd	r11, Y+7	; 0x07

                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
    2e6a:	d5 01       	movw	r26, r10
    2e6c:	1c 96       	adiw	r26, 0x0c	; 12
    2e6e:	8d 91       	ld	r24, X+
    2e70:	9c 91       	ld	r25, X
    2e72:	1d 97       	sbiw	r26, 0x0d	; 13
    2e74:	89 2b       	or	r24, r25
    2e76:	21 f0       	breq	.+8      	; 0x2e80 <prvProcessReceivedCommands+0x48>
                {
                    /* The timer is in a list, remove it. */
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
    2e78:	c5 01       	movw	r24, r10
    2e7a:	02 96       	adiw	r24, 0x02	; 2
    2e7c:	0e 94 31 03 	call	0x662	; 0x662 <uxListRemove>
                 *  it must be present in the function call.  prvSampleTimeNow() must be
                 *  called after the message is received from xTimerQueue so there is no
                 *  possibility of a higher priority task adding a message to the message
                 *  queue with a time that is ahead of the timer daemon task (because it
                 *  pre-empted the timer daemon task after the xTimeNow value was set). */
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
    2e80:	ce 01       	movw	r24, r28
    2e82:	08 96       	adiw	r24, 0x08	; 8
    2e84:	fe de       	rcall	.-516    	; 0x2c82 <prvSampleTimeNow>
    2e86:	8b 01       	movw	r16, r22
    2e88:	9c 01       	movw	r18, r24

                switch( xMessage.xMessageID )
    2e8a:	e9 81       	ldd	r30, Y+1	; 0x01
    2e8c:	0e 2e       	mov	r0, r30
    2e8e:	00 0c       	add	r0, r0
    2e90:	ff 0b       	sbc	r31, r31
    2e92:	ea 30       	cpi	r30, 0x0A	; 10
    2e94:	f1 05       	cpc	r31, r1
    2e96:	08 f0       	brcs	.+2      	; 0x2e9a <prvProcessReceivedCommands+0x62>
    2e98:	64 c0       	rjmp	.+200    	; 0x2f62 <prvProcessReceivedCommands+0x12a>
    2e9a:	88 27       	eor	r24, r24
    2e9c:	ee 58       	subi	r30, 0x8E	; 142
    2e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea0:	8f 4f       	sbci	r24, 0xFF	; 255
    2ea2:	0c 94 04 2b 	jmp	0x5608	; 0x5608 <__tablejump2__>
                    case tmrCOMMAND_START_FROM_ISR:
                    case tmrCOMMAND_RESET:
                    case tmrCOMMAND_RESET_FROM_ISR:
                    case tmrCOMMAND_START_DONT_TRACE:
                        /* Start or restart a timer. */
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
    2ea6:	f5 01       	movw	r30, r10
    2ea8:	86 89       	ldd	r24, Z+22	; 0x16
    2eaa:	81 60       	ori	r24, 0x01	; 1
    2eac:	86 8b       	std	Z+22, r24	; 0x16

                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
    2eae:	ca 80       	ldd	r12, Y+2	; 0x02
    2eb0:	db 80       	ldd	r13, Y+3	; 0x03
    2eb2:	ec 80       	ldd	r14, Y+4	; 0x04
    2eb4:	fd 80       	ldd	r15, Y+5	; 0x05
    2eb6:	46 85       	ldd	r20, Z+14	; 0x0e
    2eb8:	57 85       	ldd	r21, Z+15	; 0x0f
    2eba:	60 89       	ldd	r22, Z+16	; 0x10
    2ebc:	71 89       	ldd	r23, Z+17	; 0x11
    2ebe:	4c 0d       	add	r20, r12
    2ec0:	5d 1d       	adc	r21, r13
    2ec2:	6e 1d       	adc	r22, r14
    2ec4:	7f 1d       	adc	r23, r15
    2ec6:	c5 01       	movw	r24, r10
    2ec8:	83 dd       	rcall	.-1274   	; 0x29d0 <prvInsertTimerInActiveList>
    2eca:	88 23       	and	r24, r24
    2ecc:	09 f4       	brne	.+2      	; 0x2ed0 <prvProcessReceivedCommands+0x98>
    2ece:	49 c0       	rjmp	.+146    	; 0x2f62 <prvProcessReceivedCommands+0x12a>
                        {
                            /* The timer expired before it was added to the active
                             * timer list.  Process it now. */
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
    2ed0:	d5 01       	movw	r26, r10
    2ed2:	54 96       	adiw	r26, 0x14	; 20
    2ed4:	ed 91       	ld	r30, X+
    2ed6:	fc 91       	ld	r31, X
    2ed8:	55 97       	sbiw	r26, 0x15	; 21
    2eda:	c5 01       	movw	r24, r10
    2edc:	19 95       	eicall
                            traceTIMER_EXPIRED( pxTimer );

                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
    2ede:	f5 01       	movw	r30, r10
    2ee0:	86 89       	ldd	r24, Z+22	; 0x16
    2ee2:	82 ff       	sbrs	r24, 2
    2ee4:	3e c0       	rjmp	.+124    	; 0x2f62 <prvProcessReceivedCommands+0x12a>
                            {
                                xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
    2ee6:	4a 81       	ldd	r20, Y+2	; 0x02
    2ee8:	5b 81       	ldd	r21, Y+3	; 0x03
    2eea:	6c 81       	ldd	r22, Y+4	; 0x04
    2eec:	7d 81       	ldd	r23, Y+5	; 0x05
    2eee:	86 85       	ldd	r24, Z+14	; 0x0e
    2ef0:	97 85       	ldd	r25, Z+15	; 0x0f
    2ef2:	a0 89       	ldd	r26, Z+16	; 0x10
    2ef4:	b1 89       	ldd	r27, Z+17	; 0x11
    2ef6:	9a 01       	movw	r18, r20
    2ef8:	ab 01       	movw	r20, r22
    2efa:	28 0f       	add	r18, r24
    2efc:	39 1f       	adc	r19, r25
    2efe:	4a 1f       	adc	r20, r26
    2f00:	5b 1f       	adc	r21, r27
    2f02:	c1 2c       	mov	r12, r1
    2f04:	d1 2c       	mov	r13, r1
    2f06:	76 01       	movw	r14, r12
    2f08:	00 e0       	ldi	r16, 0x00	; 0
    2f0a:	10 e0       	ldi	r17, 0x00	; 0
    2f0c:	60 e0       	ldi	r22, 0x00	; 0
    2f0e:	c5 01       	movw	r24, r10
    2f10:	f2 dd       	rcall	.-1052   	; 0x2af6 <xTimerGenericCommand>
    2f12:	27 c0       	rjmp	.+78     	; 0x2f62 <prvProcessReceivedCommands+0x12a>
                        break;

                    case tmrCOMMAND_STOP:
                    case tmrCOMMAND_STOP_FROM_ISR:
                        /* The timer has already been removed from the active list. */
                        pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
    2f14:	d5 01       	movw	r26, r10
    2f16:	56 96       	adiw	r26, 0x16	; 22
    2f18:	8c 91       	ld	r24, X
    2f1a:	56 97       	sbiw	r26, 0x16	; 22
    2f1c:	8e 7f       	andi	r24, 0xFE	; 254
    2f1e:	56 96       	adiw	r26, 0x16	; 22
    2f20:	8c 93       	st	X, r24
                        break;
    2f22:	1f c0       	rjmp	.+62     	; 0x2f62 <prvProcessReceivedCommands+0x12a>

                    case tmrCOMMAND_CHANGE_PERIOD:
                    case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR:
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
    2f24:	f5 01       	movw	r30, r10
    2f26:	86 89       	ldd	r24, Z+22	; 0x16
    2f28:	81 60       	ori	r24, 0x01	; 1
    2f2a:	86 8b       	std	Z+22, r24	; 0x16
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
    2f2c:	4a 81       	ldd	r20, Y+2	; 0x02
    2f2e:	5b 81       	ldd	r21, Y+3	; 0x03
    2f30:	6c 81       	ldd	r22, Y+4	; 0x04
    2f32:	7d 81       	ldd	r23, Y+5	; 0x05
    2f34:	46 87       	std	Z+14, r20	; 0x0e
    2f36:	57 87       	std	Z+15, r21	; 0x0f
    2f38:	60 8b       	std	Z+16, r22	; 0x10
    2f3a:	71 8b       	std	Z+17, r23	; 0x11
                         * be longer or shorter than the old one.  The command time is
                         * therefore set to the current time, and as the period cannot
                         * be zero the next expiry time can only be in the future,
                         * meaning (unlike for the xTimerStart() case above) there is
                         * no fail case that needs to be handled here. */
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
    2f3c:	40 0f       	add	r20, r16
    2f3e:	51 1f       	adc	r21, r17
    2f40:	62 1f       	adc	r22, r18
    2f42:	73 1f       	adc	r23, r19
    2f44:	68 01       	movw	r12, r16
    2f46:	79 01       	movw	r14, r18
    2f48:	c5 01       	movw	r24, r10
    2f4a:	42 dd       	rcall	.-1404   	; 0x29d0 <prvInsertTimerInActiveList>
                        break;
    2f4c:	0a c0       	rjmp	.+20     	; 0x2f62 <prvProcessReceivedCommands+0x12a>
                        #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
                            {
                                /* The timer has already been removed from the active list,
                                 * just free up the memory if the memory was dynamically
                                 * allocated. */
                                if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
    2f4e:	f5 01       	movw	r30, r10
    2f50:	86 89       	ldd	r24, Z+22	; 0x16
    2f52:	81 fd       	sbrc	r24, 1
    2f54:	04 c0       	rjmp	.+8      	; 0x2f5e <prvProcessReceivedCommands+0x126>
                                {
                                    vPortFree( pxTimer );
    2f56:	c5 01       	movw	r24, r10
    2f58:	0e 94 9d 02 	call	0x53a	; 0x53a <vPortFree>
    2f5c:	02 c0       	rjmp	.+4      	; 0x2f62 <prvProcessReceivedCommands+0x12a>
                                }
                                else
                                {
                                    pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
    2f5e:	8e 7f       	andi	r24, 0xFE	; 254
    2f60:	86 8b       	std	Z+22, r24	; 0x16
        DaemonTaskMessage_t xMessage;
        Timer_t * pxTimer;
        BaseType_t xTimerListsWereSwitched, xResult;
        TickType_t xTimeNow;

        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
    2f62:	20 e0       	ldi	r18, 0x00	; 0
    2f64:	30 e0       	ldi	r19, 0x00	; 0
    2f66:	a9 01       	movw	r20, r18
    2f68:	be 01       	movw	r22, r28
    2f6a:	6f 5f       	subi	r22, 0xFF	; 255
    2f6c:	7f 4f       	sbci	r23, 0xFF	; 255
    2f6e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <xTimerQueue>
    2f72:	90 91 56 16 	lds	r25, 0x1656	; 0x801656 <xTimerQueue+0x1>
    2f76:	0e 94 80 06 	call	0xd00	; 0xd00 <xQueueReceive>
    2f7a:	81 11       	cpse	r24, r1
    2f7c:	70 cf       	rjmp	.-288    	; 0x2e5e <prvProcessReceivedCommands+0x26>
                        /* Don't expect to get here. */
                        break;
                }
            }
        }
    }
    2f7e:	28 96       	adiw	r28, 0x08	; 8
    2f80:	0f b6       	in	r0, 0x3f	; 63
    2f82:	f8 94       	cli
    2f84:	de bf       	out	0x3e, r29	; 62
    2f86:	0f be       	out	0x3f, r0	; 63
    2f88:	cd bf       	out	0x3d, r28	; 61
    2f8a:	df 91       	pop	r29
    2f8c:	cf 91       	pop	r28
    2f8e:	1f 91       	pop	r17
    2f90:	0f 91       	pop	r16
    2f92:	ff 90       	pop	r15
    2f94:	ef 90       	pop	r14
    2f96:	df 90       	pop	r13
    2f98:	cf 90       	pop	r12
    2f9a:	bf 90       	pop	r11
    2f9c:	af 90       	pop	r10
    2f9e:	08 95       	ret

00002fa0 <vApplicationIdleHook>:
 *
 */
void vApplicationIdleHook( void ) __attribute__((weak));

void vApplicationIdleHook( void )
{
    2fa0:	08 95       	ret

00002fa2 <prvSetMainLedOn>:
 * Private function to enable board led to use it in application hooks
 */
void prvSetMainLedOn( void ) 
{
#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__) // Arduino Mega with 2560
    DDRB  |= _BV(DDB7);
    2fa2:	84 b1       	in	r24, 0x04	; 4
    2fa4:	80 68       	ori	r24, 0x80	; 128
    2fa6:	84 b9       	out	0x04, r24	; 4
    PORTB |= _BV(PORTB7);       // Main (red PB7) LED on. Main LED on.
    2fa8:	85 b1       	in	r24, 0x05	; 5
    2faa:	80 68       	ori	r24, 0x80	; 128
    2fac:	85 b9       	out	0x05, r24	; 5
    2fae:	08 95       	ret

00002fb0 <prvBlinkMainLed>:
 */
void prvBlinkMainLed( void ) 
{

#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)  // Mega with 2560
        PINB  |= _BV(PINB7);       // Main (red PB7) LED toggle.
    2fb0:	83 b1       	in	r24, 0x03	; 3
    2fb2:	80 68       	ori	r24, 0x80	; 128
    2fb4:	83 b9       	out	0x03, r24	; 3
    2fb6:	08 95       	ret

00002fb8 <vApplicationMallocFailedHook>:
\*---------------------------------------------------------------------------*/
void vApplicationMallocFailedHook( void ) __attribute__((weak));

void vApplicationMallocFailedHook( void )
{
    prvSetMainLedOn(); // Main LED on.
    2fb8:	f4 df       	rcall	.-24     	; 0x2fa2 <prvSetMainLedOn>
>>>>>>> 1413a59f4c1676bf811b30fc6b6b1aaefe980264
>>>>>>> Stashed changes
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
<<<<<<< Updated upstream
    2e3e:	2f ef       	ldi	r18, 0xFF	; 255
    2e40:	80 e7       	ldi	r24, 0x70	; 112
    2e42:	92 e0       	ldi	r25, 0x02	; 2
    2e44:	21 50       	subi	r18, 0x01	; 1
    2e46:	80 40       	sbci	r24, 0x00	; 0
    2e48:	90 40       	sbci	r25, 0x00	; 0
    2e4a:	e1 f7       	brne	.-8      	; 0x2e44 <vApplicationMallocFailedHook+0x8>
    2e4c:	00 c0       	rjmp	.+0      	; 0x2e4e <vApplicationMallocFailedHook+0x12>
    2e4e:	00 00       	nop
    2e50:	f1 df       	rcall	.-30     	; 0x2e34 <prvBlinkMainLed>
    2e52:	f5 cf       	rjmp	.-22     	; 0x2e3e <vApplicationMallocFailedHook+0x2>

00002e54 <vApplicationStackOverflowHook>:
    2e54:	e8 df       	rcall	.-48     	; 0x2e26 <prvSetMainLedOn>
    2e56:	2f ef       	ldi	r18, 0xFF	; 255
    2e58:	87 ea       	ldi	r24, 0xA7	; 167
    2e5a:	91 e6       	ldi	r25, 0x61	; 97
    2e5c:	21 50       	subi	r18, 0x01	; 1
    2e5e:	80 40       	sbci	r24, 0x00	; 0
    2e60:	90 40       	sbci	r25, 0x00	; 0
    2e62:	e1 f7       	brne	.-8      	; 0x2e5c <vApplicationStackOverflowHook+0x8>
    2e64:	00 c0       	rjmp	.+0      	; 0x2e66 <vApplicationStackOverflowHook+0x12>
    2e66:	00 00       	nop
    2e68:	e5 df       	rcall	.-54     	; 0x2e34 <prvBlinkMainLed>
    2e6a:	f5 cf       	rjmp	.-22     	; 0x2e56 <vApplicationStackOverflowHook+0x2>

00002e6c <initializeQueues>:
    2e6c:	40 e0       	ldi	r20, 0x00	; 0
    2e6e:	62 e0       	ldi	r22, 0x02	; 2
    2e70:	8f e0       	ldi	r24, 0x0F	; 15
    2e72:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <xQueueGenericCreate>
    2e76:	90 93 bc 13 	sts	0x13BC, r25	; 0x8013bc <xQueueCO2+0x1>
    2e7a:	80 93 bb 13 	sts	0x13BB, r24	; 0x8013bb <xQueueCO2>
    2e7e:	08 95       	ret

00002e80 <enqueueCO2Measure>:
    2e80:	0f 93       	push	r16
    2e82:	cf 93       	push	r28
    2e84:	df 93       	push	r29
    2e86:	1f 92       	push	r1
    2e88:	1f 92       	push	r1
    2e8a:	cd b7       	in	r28, 0x3d	; 61
    2e8c:	de b7       	in	r29, 0x3e	; 62
    2e8e:	9a 83       	std	Y+2, r25	; 0x02
    2e90:	89 83       	std	Y+1, r24	; 0x01
    2e92:	00 e0       	ldi	r16, 0x00	; 0
    2e94:	2f ef       	ldi	r18, 0xFF	; 255
    2e96:	3f ef       	ldi	r19, 0xFF	; 255
    2e98:	a9 01       	movw	r20, r18
    2e9a:	be 01       	movw	r22, r28
    2e9c:	6f 5f       	subi	r22, 0xFF	; 255
    2e9e:	7f 4f       	sbci	r23, 0xFF	; 255
    2ea0:	80 91 bb 13 	lds	r24, 0x13BB	; 0x8013bb <xQueueCO2>
    2ea4:	90 91 bc 13 	lds	r25, 0x13BC	; 0x8013bc <xQueueCO2+0x1>
    2ea8:	0e 94 f7 04 	call	0x9ee	; 0x9ee <xQueueGenericSend>
    2eac:	0f 90       	pop	r0
    2eae:	0f 90       	pop	r0
    2eb0:	df 91       	pop	r29
    2eb2:	cf 91       	pop	r28
    2eb4:	0f 91       	pop	r16
    2eb6:	08 95       	ret

00002eb8 <dequeueCO2Measure>:
    2eb8:	cf 93       	push	r28
    2eba:	df 93       	push	r29
    2ebc:	1f 92       	push	r1
    2ebe:	1f 92       	push	r1
    2ec0:	cd b7       	in	r28, 0x3d	; 61
    2ec2:	de b7       	in	r29, 0x3e	; 62
    2ec4:	2c ed       	ldi	r18, 0xDC	; 220
    2ec6:	35 e0       	ldi	r19, 0x05	; 5
    2ec8:	40 e0       	ldi	r20, 0x00	; 0
    2eca:	50 e0       	ldi	r21, 0x00	; 0
    2ecc:	be 01       	movw	r22, r28
    2ece:	6f 5f       	subi	r22, 0xFF	; 255
    2ed0:	7f 4f       	sbci	r23, 0xFF	; 255
    2ed2:	80 91 bb 13 	lds	r24, 0x13BB	; 0x8013bb <xQueueCO2>
    2ed6:	90 91 bc 13 	lds	r25, 0x13BC	; 0x8013bc <xQueueCO2+0x1>
    2eda:	0e 94 c2 05 	call	0xb84	; 0xb84 <xQueueReceive>
    2ede:	89 81       	ldd	r24, Y+1	; 0x01
    2ee0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ee2:	0f 90       	pop	r0
    2ee4:	0f 90       	pop	r0
    2ee6:	df 91       	pop	r29
    2ee8:	cf 91       	pop	r28
    2eea:	08 95       	ret

00002eec <initializeSharedDataQueue>:
    2eec:	40 e0       	ldi	r20, 0x00	; 0
    2eee:	62 e0       	ldi	r22, 0x02	; 2
    2ef0:	8f e0       	ldi	r24, 0x0F	; 15
    2ef2:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <xQueueGenericCreate>
    2ef6:	90 93 bf 13 	sts	0x13BF, r25	; 0x8013bf <xQueueShared+0x1>
    2efa:	80 93 be 13 	sts	0x13BE, r24	; 0x8013be <xQueueShared>
    2efe:	08 95       	ret

00002f00 <enqueueSharedData>:
    2f00:	0f 93       	push	r16
    2f02:	1f 93       	push	r17
    2f04:	cf 93       	push	r28
    2f06:	df 93       	push	r29
    2f08:	1f 92       	push	r1
    2f0a:	1f 92       	push	r1
    2f0c:	cd b7       	in	r28, 0x3d	; 61
    2f0e:	de b7       	in	r29, 0x3e	; 62
    2f10:	d3 df       	rcall	.-90     	; 0x2eb8 <dequeueCO2Measure>
    2f12:	08 2f       	mov	r16, r24
    2f14:	19 2f       	mov	r17, r25
    2f16:	9f 93       	push	r25
    2f18:	8f 93       	push	r24
    2f1a:	84 e8       	ldi	r24, 0x84	; 132
    2f1c:	92 e0       	ldi	r25, 0x02	; 2
    2f1e:	9f 93       	push	r25
    2f20:	8f 93       	push	r24
    2f22:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    2f26:	82 e0       	ldi	r24, 0x02	; 2
    2f28:	90 e0       	ldi	r25, 0x00	; 0
    2f2a:	0e 94 3b 01 	call	0x276	; 0x276 <pvPortMalloc>
    2f2e:	9a 83       	std	Y+2, r25	; 0x02
    2f30:	89 83       	std	Y+1, r24	; 0x01
    2f32:	fc 01       	movw	r30, r24
    2f34:	00 83       	st	Z, r16
    2f36:	11 83       	std	Z+1, r17	; 0x01
    2f38:	00 e0       	ldi	r16, 0x00	; 0
    2f3a:	2f ef       	ldi	r18, 0xFF	; 255
    2f3c:	3f ef       	ldi	r19, 0xFF	; 255
    2f3e:	a9 01       	movw	r20, r18
    2f40:	be 01       	movw	r22, r28
    2f42:	6f 5f       	subi	r22, 0xFF	; 255
    2f44:	7f 4f       	sbci	r23, 0xFF	; 255
    2f46:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <xQueueShared>
    2f4a:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <xQueueShared+0x1>
    2f4e:	0e 94 f7 04 	call	0x9ee	; 0x9ee <xQueueGenericSend>
    2f52:	0f 90       	pop	r0
    2f54:	0f 90       	pop	r0
    2f56:	0f 90       	pop	r0
    2f58:	0f 90       	pop	r0
    2f5a:	0f 90       	pop	r0
    2f5c:	0f 90       	pop	r0
    2f5e:	df 91       	pop	r29
    2f60:	cf 91       	pop	r28
    2f62:	1f 91       	pop	r17
    2f64:	0f 91       	pop	r16
    2f66:	08 95       	ret

00002f68 <dequeueSharedData>:
    2f68:	cf 93       	push	r28
    2f6a:	df 93       	push	r29
    2f6c:	1f 92       	push	r1
    2f6e:	1f 92       	push	r1
    2f70:	cd b7       	in	r28, 0x3d	; 61
    2f72:	de b7       	in	r29, 0x3e	; 62
    2f74:	80 ec       	ldi	r24, 0xC0	; 192
    2f76:	93 e1       	ldi	r25, 0x13	; 19
    2f78:	9a 83       	std	Y+2, r25	; 0x02
    2f7a:	89 83       	std	Y+1, r24	; 0x01
    2f7c:	2a e0       	ldi	r18, 0x0A	; 10
    2f7e:	30 e0       	ldi	r19, 0x00	; 0
    2f80:	40 e0       	ldi	r20, 0x00	; 0
    2f82:	50 e0       	ldi	r21, 0x00	; 0
    2f84:	be 01       	movw	r22, r28
    2f86:	6f 5f       	subi	r22, 0xFF	; 255
    2f88:	7f 4f       	sbci	r23, 0xFF	; 255
    2f8a:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <xQueueShared>
    2f8e:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <xQueueShared+0x1>
    2f92:	0e 94 c2 05 	call	0xb84	; 0xb84 <xQueueReceive>
    2f96:	80 93 bd 13 	sts	0x13BD, r24	; 0x8013bd <xStatus>
    2f9a:	81 30       	cpi	r24, 0x01	; 1
    2f9c:	41 f4       	brne	.+16     	; 0x2fae <dequeueSharedData+0x46>
    2f9e:	e2 ec       	ldi	r30, 0xC2	; 194
    2fa0:	f3 e1       	ldi	r31, 0x13	; 19
    2fa2:	10 82       	st	Z, r1
    2fa4:	89 81       	ldd	r24, Y+1	; 0x01
    2fa6:	9a 81       	ldd	r25, Y+2	; 0x02
    2fa8:	92 83       	std	Z+2, r25	; 0x02
    2faa:	81 83       	std	Z+1, r24	; 0x01
    2fac:	03 c0       	rjmp	.+6      	; 0x2fb4 <dequeueSharedData+0x4c>
    2fae:	81 e0       	ldi	r24, 0x01	; 1
    2fb0:	80 93 c2 13 	sts	0x13C2, r24	; 0x8013c2 <sharedDataWithReturnCode>
    2fb4:	89 81       	ldd	r24, Y+1	; 0x01
    2fb6:	9a 81       	ldd	r25, Y+2	; 0x02
    2fb8:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <vPortFree>
    2fbc:	82 ec       	ldi	r24, 0xC2	; 194
    2fbe:	93 e1       	ldi	r25, 0x13	; 19
    2fc0:	0f 90       	pop	r0
    2fc2:	0f 90       	pop	r0
    2fc4:	df 91       	pop	r29
    2fc6:	cf 91       	pop	r28
    2fc8:	08 95       	ret

00002fca <taskMeasureCO2>:
    2fca:	cf 93       	push	r28
    2fcc:	df 93       	push	r29
    2fce:	00 d0       	rcall	.+0      	; 0x2fd0 <taskMeasureCO2+0x6>
    2fd0:	1f 92       	push	r1
    2fd2:	cd b7       	in	r28, 0x3d	; 61
    2fd4:	de b7       	in	r29, 0x3e	; 62
    2fd6:	0e 94 36 0c 	call	0x186c	; 0x186c <xTaskGetTickCount>
    2fda:	69 83       	std	Y+1, r22	; 0x01
    2fdc:	7a 83       	std	Y+2, r23	; 0x02
    2fde:	8b 83       	std	Y+3, r24	; 0x03
    2fe0:	9c 83       	std	Y+4, r25	; 0x04
    2fe2:	4c e9       	ldi	r20, 0x9C	; 156
    2fe4:	50 e0       	ldi	r21, 0x00	; 0
    2fe6:	60 e0       	ldi	r22, 0x00	; 0
    2fe8:	70 e0       	ldi	r23, 0x00	; 0
    2fea:	ce 01       	movw	r24, r28
    2fec:	01 96       	adiw	r24, 0x01	; 1
    2fee:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <xTaskDelayUntil>
    2ff2:	0e 94 ba 00 	call	0x174	; 0x174 <co2Measure>
    2ff6:	f5 cf       	rjmp	.-22     	; 0x2fe2 <taskMeasureCO2+0x18>

00002ff8 <queueCO2>:
    2ff8:	cf 93       	push	r28
    2ffa:	df 93       	push	r29
    2ffc:	00 d0       	rcall	.+0      	; 0x2ffe <queueCO2+0x6>
    2ffe:	1f 92       	push	r1
    3000:	cd b7       	in	r28, 0x3d	; 61
    3002:	de b7       	in	r29, 0x3e	; 62
    3004:	0e 94 36 0c 	call	0x186c	; 0x186c <xTaskGetTickCount>
    3008:	69 83       	std	Y+1, r22	; 0x01
    300a:	7a 83       	std	Y+2, r23	; 0x02
    300c:	8b 83       	std	Y+3, r24	; 0x03
    300e:	9c 83       	std	Y+4, r25	; 0x04
    3010:	4b eb       	ldi	r20, 0xBB	; 187
    3012:	50 e0       	ldi	r21, 0x00	; 0
    3014:	60 e0       	ldi	r22, 0x00	; 0
    3016:	70 e0       	ldi	r23, 0x00	; 0
    3018:	ce 01       	movw	r24, r28
    301a:	01 96       	adiw	r24, 0x01	; 1
    301c:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <xTaskDelayUntil>
    3020:	6f df       	rcall	.-290    	; 0x2f00 <enqueueSharedData>
    3022:	f6 cf       	rjmp	.-20     	; 0x3010 <queueCO2+0x18>

00003024 <dequeueCO2>:
    3024:	cf 93       	push	r28
    3026:	df 93       	push	r29
    3028:	00 d0       	rcall	.+0      	; 0x302a <dequeueCO2+0x6>
    302a:	1f 92       	push	r1
    302c:	cd b7       	in	r28, 0x3d	; 61
    302e:	de b7       	in	r29, 0x3e	; 62
    3030:	0e 94 36 0c 	call	0x186c	; 0x186c <xTaskGetTickCount>
    3034:	69 83       	std	Y+1, r22	; 0x01
    3036:	7a 83       	std	Y+2, r23	; 0x02
    3038:	8b 83       	std	Y+3, r24	; 0x03
    303a:	9c 83       	std	Y+4, r25	; 0x04
    303c:	41 e7       	ldi	r20, 0x71	; 113
    303e:	52 e0       	ldi	r21, 0x02	; 2
    3040:	60 e0       	ldi	r22, 0x00	; 0
    3042:	70 e0       	ldi	r23, 0x00	; 0
    3044:	ce 01       	movw	r24, r28
    3046:	01 96       	adiw	r24, 0x01	; 1
    3048:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <xTaskDelayUntil>
    304c:	11 e0       	ldi	r17, 0x01	; 1
    304e:	18 c0       	rjmp	.+48     	; 0x3080 <dequeueCO2+0x5c>
    3050:	8b df       	rcall	.-234    	; 0x2f68 <dequeueSharedData>
    3052:	fc 01       	movw	r30, r24
    3054:	80 81       	ld	r24, Z
    3056:	81 11       	cpse	r24, r1
    3058:	05 c0       	rjmp	.+10     	; 0x3064 <dequeueCO2+0x40>
    305a:	84 ea       	ldi	r24, 0xA4	; 164
    305c:	92 e0       	ldi	r25, 0x02	; 2
    305e:	0e 94 1b 28 	call	0x5036	; 0x5036 <puts>
    3062:	0e c0       	rjmp	.+28     	; 0x3080 <dequeueCO2+0x5c>
    3064:	81 30       	cpi	r24, 0x01	; 1
    3066:	61 f4       	brne	.+24     	; 0x3080 <dequeueCO2+0x5c>
    3068:	83 eb       	ldi	r24, 0xB3	; 179
    306a:	92 e0       	ldi	r25, 0x02	; 2
    306c:	0e 94 1b 28 	call	0x5036	; 0x5036 <puts>
    3070:	80 e0       	ldi	r24, 0x00	; 0
    3072:	90 e0       	ldi	r25, 0x00	; 0
    3074:	01 c0       	rjmp	.+2      	; 0x3078 <dequeueCO2+0x54>
    3076:	01 96       	adiw	r24, 0x01	; 1
    3078:	8f 30       	cpi	r24, 0x0F	; 15
    307a:	91 05       	cpc	r25, r1
    307c:	e0 f3       	brcs	.-8      	; 0x3076 <dequeueCO2+0x52>
    307e:	10 e0       	ldi	r17, 0x00	; 0
    3080:	11 11       	cpse	r17, r1
    3082:	e6 cf       	rjmp	.-52     	; 0x3050 <dequeueCO2+0x2c>
    3084:	db cf       	rjmp	.-74     	; 0x303c <dequeueCO2+0x18>

00003086 <setupTasks>:
    3086:	ef 92       	push	r14
    3088:	ff 92       	push	r15
    308a:	0f 93       	push	r16
    308c:	e1 2c       	mov	r14, r1
    308e:	f1 2c       	mov	r15, r1
    3090:	02 e0       	ldi	r16, 0x02	; 2
    3092:	20 e0       	ldi	r18, 0x00	; 0
    3094:	30 e0       	ldi	r19, 0x00	; 0
    3096:	40 ec       	ldi	r20, 0xC0	; 192
    3098:	50 e0       	ldi	r21, 0x00	; 0
    309a:	6a ec       	ldi	r22, 0xCA	; 202
    309c:	72 e0       	ldi	r23, 0x02	; 2
    309e:	85 ee       	ldi	r24, 0xE5	; 229
    30a0:	97 e1       	ldi	r25, 0x17	; 23
    30a2:	0e 94 ac 0b 	call	0x1758	; 0x1758 <xTaskCreate>
    30a6:	01 e0       	ldi	r16, 0x01	; 1
    30a8:	20 e0       	ldi	r18, 0x00	; 0
    30aa:	30 e0       	ldi	r19, 0x00	; 0
    30ac:	40 ec       	ldi	r20, 0xC0	; 192
    30ae:	50 e0       	ldi	r21, 0x00	; 0
    30b0:	6b ed       	ldi	r22, 0xDB	; 219
    30b2:	72 e0       	ldi	r23, 0x02	; 2
    30b4:	8c ef       	ldi	r24, 0xFC	; 252
    30b6:	97 e1       	ldi	r25, 0x17	; 23
    30b8:	0e 94 ac 0b 	call	0x1758	; 0x1758 <xTaskCreate>
    30bc:	20 e0       	ldi	r18, 0x00	; 0
    30be:	30 e0       	ldi	r19, 0x00	; 0
    30c0:	40 ec       	ldi	r20, 0xC0	; 192
    30c2:	50 e0       	ldi	r21, 0x00	; 0
    30c4:	69 ed       	ldi	r22, 0xD9	; 217
    30c6:	72 e0       	ldi	r23, 0x02	; 2
    30c8:	82 e1       	ldi	r24, 0x12	; 18
    30ca:	98 e1       	ldi	r25, 0x18	; 24
    30cc:	0e 94 ac 0b 	call	0x1758	; 0x1758 <xTaskCreate>
    30d0:	0f 91       	pop	r16
    30d2:	ff 90       	pop	r15
    30d4:	ef 90       	pop	r14
    30d6:	08 95       	ret

000030d8 <startTasks>:
    30d8:	d6 df       	rcall	.-84     	; 0x3086 <setupTasks>
    30da:	0c 94 f8 0b 	jmp	0x17f0	; 0x17f0 <vTaskStartScheduler>
    30de:	08 95       	ret

000030e0 <_lora_setup>:
=======
<<<<<<< HEAD
    2f60:	2f ef       	ldi	r18, 0xFF	; 255
    2f62:	80 e7       	ldi	r24, 0x70	; 112
    2f64:	92 e0       	ldi	r25, 0x02	; 2
    2f66:	21 50       	subi	r18, 0x01	; 1
    2f68:	80 40       	sbci	r24, 0x00	; 0
    2f6a:	90 40       	sbci	r25, 0x00	; 0
    2f6c:	e1 f7       	brne	.-8      	; 0x2f66 <vApplicationMallocFailedHook+0x8>
    2f6e:	00 c0       	rjmp	.+0      	; 0x2f70 <vApplicationMallocFailedHook+0x12>
    2f70:	00 00       	nop
    2f72:	f1 df       	rcall	.-30     	; 0x2f56 <prvBlinkMainLed>
    2f74:	f5 cf       	rjmp	.-22     	; 0x2f60 <vApplicationMallocFailedHook+0x2>

00002f76 <vApplicationStackOverflowHook>:
    2f76:	e8 df       	rcall	.-48     	; 0x2f48 <prvSetMainLedOn>
    2f78:	2f ef       	ldi	r18, 0xFF	; 255
    2f7a:	87 ea       	ldi	r24, 0xA7	; 167
    2f7c:	91 e6       	ldi	r25, 0x61	; 97
    2f7e:	21 50       	subi	r18, 0x01	; 1
    2f80:	80 40       	sbci	r24, 0x00	; 0
    2f82:	90 40       	sbci	r25, 0x00	; 0
    2f84:	e1 f7       	brne	.-8      	; 0x2f7e <vApplicationStackOverflowHook+0x8>
    2f86:	00 c0       	rjmp	.+0      	; 0x2f88 <vApplicationStackOverflowHook+0x12>
    2f88:	00 00       	nop
    2f8a:	e5 df       	rcall	.-54     	; 0x2f56 <prvBlinkMainLed>
    2f8c:	f5 cf       	rjmp	.-22     	; 0x2f78 <vApplicationStackOverflowHook+0x2>

00002f8e <enqueueCO2Measure>:
    2f8e:	0f 93       	push	r16
    2f90:	cf 93       	push	r28
    2f92:	df 93       	push	r29
    2f94:	1f 92       	push	r1
    2f96:	1f 92       	push	r1
    2f98:	cd b7       	in	r28, 0x3d	; 61
    2f9a:	de b7       	in	r29, 0x3e	; 62
    2f9c:	9a 83       	std	Y+2, r25	; 0x02
    2f9e:	89 83       	std	Y+1, r24	; 0x01
    2fa0:	00 e0       	ldi	r16, 0x00	; 0
    2fa2:	2f ef       	ldi	r18, 0xFF	; 255
    2fa4:	3f ef       	ldi	r19, 0xFF	; 255
    2fa6:	a9 01       	movw	r20, r18
    2fa8:	be 01       	movw	r22, r28
    2faa:	6f 5f       	subi	r22, 0xFF	; 255
    2fac:	7f 4f       	sbci	r23, 0xFF	; 255
    2fae:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <xQueueCO2>
    2fb2:	90 91 b0 13 	lds	r25, 0x13B0	; 0x8013b0 <xQueueCO2+0x1>
    2fb6:	0e 94 88 05 	call	0xb10	; 0xb10 <xQueueGenericSend>
    2fba:	0f 90       	pop	r0
    2fbc:	0f 90       	pop	r0
    2fbe:	df 91       	pop	r29
    2fc0:	cf 91       	pop	r28
    2fc2:	0f 91       	pop	r16
    2fc4:	08 95       	ret

00002fc6 <initializeCO2Queue>:
    2fc6:	40 e0       	ldi	r20, 0x00	; 0
    2fc8:	62 e0       	ldi	r22, 0x02	; 2
    2fca:	8a e0       	ldi	r24, 0x0A	; 10
    2fcc:	0e 94 65 05 	call	0xaca	; 0xaca <xQueueGenericCreate>
    2fd0:	90 93 b0 13 	sts	0x13B0, r25	; 0x8013b0 <xQueueCO2+0x1>
    2fd4:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <xQueueCO2>
    2fd8:	08 95       	ret

00002fda <co2Measure>:
    2fda:	0e 94 ad 20 	call	0x415a	; 0x415a <mh_z19_takeMeassuring>
    2fde:	81 11       	cpse	r24, r1
    2fe0:	05 c0       	rjmp	.+10     	; 0x2fec <co2Measure+0x12>
    2fe2:	87 ec       	ldi	r24, 0xC7	; 199
    2fe4:	97 e1       	ldi	r25, 0x17	; 23
    2fe6:	0c 94 a8 20 	jmp	0x4150	; 0x4150 <mh_z19_injectCallBack>
    2fea:	08 95       	ret
    2fec:	87 ea       	ldi	r24, 0xA7	; 167
    2fee:	92 e0       	ldi	r25, 0x02	; 2
    2ff0:	0c 94 a3 2b 	jmp	0x5746	; 0x5746 <puts>
    2ff4:	08 95       	ret

00002ff6 <dequeueCO2Measure>:
    2ff6:	cf 93       	push	r28
    2ff8:	df 93       	push	r29
    2ffa:	1f 92       	push	r1
    2ffc:	1f 92       	push	r1
    2ffe:	cd b7       	in	r28, 0x3d	; 61
    3000:	de b7       	in	r29, 0x3e	; 62
    3002:	2c ed       	ldi	r18, 0xDC	; 220
    3004:	35 e0       	ldi	r19, 0x05	; 5
    3006:	40 e0       	ldi	r20, 0x00	; 0
    3008:	50 e0       	ldi	r21, 0x00	; 0
    300a:	be 01       	movw	r22, r28
    300c:	6f 5f       	subi	r22, 0xFF	; 255
    300e:	7f 4f       	sbci	r23, 0xFF	; 255
    3010:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <xQueueCO2>
    3014:	90 91 b0 13 	lds	r25, 0x13B0	; 0x8013b0 <xQueueCO2+0x1>
    3018:	0e 94 53 06 	call	0xca6	; 0xca6 <xQueueReceive>
    301c:	89 81       	ldd	r24, Y+1	; 0x01
    301e:	9a 81       	ldd	r25, Y+2	; 0x02
    3020:	0f 90       	pop	r0
    3022:	0f 90       	pop	r0
    3024:	df 91       	pop	r29
    3026:	cf 91       	pop	r28
    3028:	08 95       	ret

0000302a <initializeTempHumQueues>:
    302a:	40 e0       	ldi	r20, 0x00	; 0
    302c:	62 e0       	ldi	r22, 0x02	; 2
    302e:	8a e0       	ldi	r24, 0x0A	; 10
    3030:	0e 94 65 05 	call	0xaca	; 0xaca <xQueueGenericCreate>
    3034:	90 93 b4 13 	sts	0x13B4, r25	; 0x8013b4 <xQueueTemp+0x1>
    3038:	80 93 b3 13 	sts	0x13B3, r24	; 0x8013b3 <xQueueTemp>
    303c:	40 e0       	ldi	r20, 0x00	; 0
    303e:	62 e0       	ldi	r22, 0x02	; 2
    3040:	8a e0       	ldi	r24, 0x0A	; 10
    3042:	0e 94 65 05 	call	0xaca	; 0xaca <xQueueGenericCreate>
    3046:	90 93 b2 13 	sts	0x13B2, r25	; 0x8013b2 <xQueueHum+0x1>
    304a:	80 93 b1 13 	sts	0x13B1, r24	; 0x8013b1 <xQueueHum>
    304e:	08 95       	ret

00003050 <enqueueTemperature>:
    3050:	0f 93       	push	r16
    3052:	cf 93       	push	r28
    3054:	df 93       	push	r29
    3056:	1f 92       	push	r1
    3058:	1f 92       	push	r1
    305a:	cd b7       	in	r28, 0x3d	; 61
    305c:	de b7       	in	r29, 0x3e	; 62
    305e:	9a 83       	std	Y+2, r25	; 0x02
    3060:	89 83       	std	Y+1, r24	; 0x01
    3062:	00 e0       	ldi	r16, 0x00	; 0
    3064:	2f ef       	ldi	r18, 0xFF	; 255
    3066:	3f ef       	ldi	r19, 0xFF	; 255
    3068:	a9 01       	movw	r20, r18
    306a:	be 01       	movw	r22, r28
    306c:	6f 5f       	subi	r22, 0xFF	; 255
    306e:	7f 4f       	sbci	r23, 0xFF	; 255
    3070:	80 91 b3 13 	lds	r24, 0x13B3	; 0x8013b3 <xQueueTemp>
    3074:	90 91 b4 13 	lds	r25, 0x13B4	; 0x8013b4 <xQueueTemp+0x1>
    3078:	0e 94 88 05 	call	0xb10	; 0xb10 <xQueueGenericSend>
    307c:	0f 90       	pop	r0
    307e:	0f 90       	pop	r0
    3080:	df 91       	pop	r29
    3082:	cf 91       	pop	r28
    3084:	0f 91       	pop	r16
    3086:	08 95       	ret

00003088 <enqueueHumidity>:
    3088:	0f 93       	push	r16
    308a:	cf 93       	push	r28
    308c:	df 93       	push	r29
    308e:	1f 92       	push	r1
    3090:	1f 92       	push	r1
    3092:	cd b7       	in	r28, 0x3d	; 61
    3094:	de b7       	in	r29, 0x3e	; 62
    3096:	9a 83       	std	Y+2, r25	; 0x02
    3098:	89 83       	std	Y+1, r24	; 0x01
    309a:	00 e0       	ldi	r16, 0x00	; 0
    309c:	2f ef       	ldi	r18, 0xFF	; 255
    309e:	3f ef       	ldi	r19, 0xFF	; 255
    30a0:	a9 01       	movw	r20, r18
    30a2:	be 01       	movw	r22, r28
    30a4:	6f 5f       	subi	r22, 0xFF	; 255
    30a6:	7f 4f       	sbci	r23, 0xFF	; 255
    30a8:	80 91 b1 13 	lds	r24, 0x13B1	; 0x8013b1 <xQueueHum>
    30ac:	90 91 b2 13 	lds	r25, 0x13B2	; 0x8013b2 <xQueueHum+0x1>
    30b0:	0e 94 88 05 	call	0xb10	; 0xb10 <xQueueGenericSend>
    30b4:	0f 90       	pop	r0
    30b6:	0f 90       	pop	r0
    30b8:	df 91       	pop	r29
    30ba:	cf 91       	pop	r28
    30bc:	0f 91       	pop	r16
    30be:	08 95       	ret

000030c0 <tempHumMeasure>:
    30c0:	ef 92       	push	r14
    30c2:	ff 92       	push	r15
    30c4:	0f 93       	push	r16
    30c6:	1f 93       	push	r17
    30c8:	cf 93       	push	r28
    30ca:	df 93       	push	r29
    30cc:	00 d0       	rcall	.+0      	; 0x30ce <tempHumMeasure+0xe>
    30ce:	1f 92       	push	r1
    30d0:	cd b7       	in	r28, 0x3d	; 61
    30d2:	de b7       	in	r29, 0x3e	; 62
    30d4:	0e 94 c7 0c 	call	0x198e	; 0x198e <xTaskGetTickCount>
    30d8:	69 83       	std	Y+1, r22	; 0x01
    30da:	7a 83       	std	Y+2, r23	; 0x02
    30dc:	8b 83       	std	Y+3, r24	; 0x03
    30de:	9c 83       	std	Y+4, r25	; 0x04
    30e0:	f6 d2       	rcall	.+1516   	; 0x36ce <hih8120_wakeup>
    30e2:	88 23       	and	r24, r24
    30e4:	41 f0       	breq	.+16     	; 0x30f6 <tempHumMeasure+0x36>
    30e6:	84 eb       	ldi	r24, 0xB4	; 180
    30e8:	92 e0       	ldi	r25, 0x02	; 2
    30ea:	9f 93       	push	r25
    30ec:	8f 93       	push	r24
    30ee:	0e 94 90 2b 	call	0x5720	; 0x5720 <printf>
    30f2:	0f 90       	pop	r0
    30f4:	0f 90       	pop	r0
    30f6:	43 e0       	ldi	r20, 0x03	; 3
    30f8:	50 e0       	ldi	r21, 0x00	; 0
    30fa:	60 e0       	ldi	r22, 0x00	; 0
    30fc:	70 e0       	ldi	r23, 0x00	; 0
    30fe:	ce 01       	movw	r24, r28
    3100:	01 96       	adiw	r24, 0x01	; 1
    3102:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <xTaskDelayUntil>
    3106:	f8 d2       	rcall	.+1520   	; 0x36f8 <hih8120_measure>
    3108:	88 23       	and	r24, r24
    310a:	41 f0       	breq	.+16     	; 0x311c <tempHumMeasure+0x5c>
    310c:	84 ec       	ldi	r24, 0xC4	; 196
    310e:	92 e0       	ldi	r25, 0x02	; 2
    3110:	9f 93       	push	r25
    3112:	8f 93       	push	r24
    3114:	0e 94 90 2b 	call	0x5720	; 0x5720 <printf>
    3118:	0f 90       	pop	r0
    311a:	0f 90       	pop	r0
    311c:	40 e0       	ldi	r20, 0x00	; 0
    311e:	50 e0       	ldi	r21, 0x00	; 0
    3120:	ba 01       	movw	r22, r20
    3122:	ce 01       	movw	r24, r28
    3124:	01 96       	adiw	r24, 0x01	; 1
    3126:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <xTaskDelayUntil>
    312a:	f7 d2       	rcall	.+1518   	; 0x371a <hih8120_getHumidity>
    312c:	36 d2       	rcall	.+1132   	; 0x359a <__fixunssfsi>
    312e:	8b 01       	movw	r16, r22
    3130:	09 d3       	rcall	.+1554   	; 0x3744 <hih8120_getTemperature>
    3132:	2e d2       	rcall	.+1116   	; 0x3590 <__fixsfsi>
    3134:	7b 01       	movw	r14, r22
    3136:	00 36       	cpi	r16, 0x60	; 96
    3138:	11 05       	cpc	r17, r1
    313a:	88 f0       	brcs	.+34     	; 0x315e <tempHumMeasure+0x9e>
    313c:	85 e6       	ldi	r24, 0x65	; 101
    313e:	e8 16       	cp	r14, r24
    3140:	f1 04       	cpc	r15, r1
    3142:	6c f0       	brlt	.+26     	; 0x315e <tempHumMeasure+0x9e>
    3144:	40 e0       	ldi	r20, 0x00	; 0
    3146:	50 e0       	ldi	r21, 0x00	; 0
    3148:	ba 01       	movw	r22, r20
    314a:	ce 01       	movw	r24, r28
    314c:	01 96       	adiw	r24, 0x01	; 1
    314e:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <xTaskDelayUntil>
    3152:	e3 d2       	rcall	.+1478   	; 0x371a <hih8120_getHumidity>
    3154:	22 d2       	rcall	.+1092   	; 0x359a <__fixunssfsi>
    3156:	8b 01       	movw	r16, r22
    3158:	f5 d2       	rcall	.+1514   	; 0x3744 <hih8120_getTemperature>
    315a:	1a d2       	rcall	.+1076   	; 0x3590 <__fixsfsi>
    315c:	7b 01       	movw	r14, r22
    315e:	c8 01       	movw	r24, r16
    3160:	93 df       	rcall	.-218    	; 0x3088 <enqueueHumidity>
    3162:	c7 01       	movw	r24, r14
    3164:	75 df       	rcall	.-278    	; 0x3050 <enqueueTemperature>
    3166:	0f 90       	pop	r0
    3168:	0f 90       	pop	r0
    316a:	0f 90       	pop	r0
    316c:	0f 90       	pop	r0
    316e:	df 91       	pop	r29
    3170:	cf 91       	pop	r28
    3172:	1f 91       	pop	r17
    3174:	0f 91       	pop	r16
    3176:	ff 90       	pop	r15
    3178:	ef 90       	pop	r14
    317a:	08 95       	ret

0000317c <dequeueTempMeasure>:
    317c:	cf 93       	push	r28
    317e:	df 93       	push	r29
    3180:	1f 92       	push	r1
    3182:	1f 92       	push	r1
    3184:	cd b7       	in	r28, 0x3d	; 61
    3186:	de b7       	in	r29, 0x3e	; 62
    3188:	2c ed       	ldi	r18, 0xDC	; 220
    318a:	35 e0       	ldi	r19, 0x05	; 5
    318c:	40 e0       	ldi	r20, 0x00	; 0
    318e:	50 e0       	ldi	r21, 0x00	; 0
    3190:	be 01       	movw	r22, r28
    3192:	6f 5f       	subi	r22, 0xFF	; 255
    3194:	7f 4f       	sbci	r23, 0xFF	; 255
    3196:	80 91 b3 13 	lds	r24, 0x13B3	; 0x8013b3 <xQueueTemp>
    319a:	90 91 b4 13 	lds	r25, 0x13B4	; 0x8013b4 <xQueueTemp+0x1>
    319e:	0e 94 53 06 	call	0xca6	; 0xca6 <xQueueReceive>
    31a2:	89 81       	ldd	r24, Y+1	; 0x01
    31a4:	9a 81       	ldd	r25, Y+2	; 0x02
    31a6:	0f 90       	pop	r0
    31a8:	0f 90       	pop	r0
    31aa:	df 91       	pop	r29
    31ac:	cf 91       	pop	r28
    31ae:	08 95       	ret

000031b0 <dequeueHumidityMeasure>:
    31b0:	cf 93       	push	r28
    31b2:	df 93       	push	r29
    31b4:	1f 92       	push	r1
    31b6:	1f 92       	push	r1
    31b8:	cd b7       	in	r28, 0x3d	; 61
    31ba:	de b7       	in	r29, 0x3e	; 62
    31bc:	2c ed       	ldi	r18, 0xDC	; 220
    31be:	35 e0       	ldi	r19, 0x05	; 5
    31c0:	40 e0       	ldi	r20, 0x00	; 0
    31c2:	50 e0       	ldi	r21, 0x00	; 0
    31c4:	be 01       	movw	r22, r28
    31c6:	6f 5f       	subi	r22, 0xFF	; 255
    31c8:	7f 4f       	sbci	r23, 0xFF	; 255
    31ca:	80 91 b1 13 	lds	r24, 0x13B1	; 0x8013b1 <xQueueHum>
    31ce:	90 91 b2 13 	lds	r25, 0x13B2	; 0x8013b2 <xQueueHum+0x1>
    31d2:	0e 94 53 06 	call	0xca6	; 0xca6 <xQueueReceive>
    31d6:	89 81       	ldd	r24, Y+1	; 0x01
    31d8:	9a 81       	ldd	r25, Y+2	; 0x02
    31da:	0f 90       	pop	r0
    31dc:	0f 90       	pop	r0
    31de:	df 91       	pop	r29
    31e0:	cf 91       	pop	r28
    31e2:	08 95       	ret

000031e4 <_lora_setup>:
=======
    2fba:	2f ef       	ldi	r18, 0xFF	; 255
    2fbc:	80 e7       	ldi	r24, 0x70	; 112
    2fbe:	92 e0       	ldi	r25, 0x02	; 2
    2fc0:	21 50       	subi	r18, 0x01	; 1
    2fc2:	80 40       	sbci	r24, 0x00	; 0
    2fc4:	90 40       	sbci	r25, 0x00	; 0
    2fc6:	e1 f7       	brne	.-8      	; 0x2fc0 <vApplicationMallocFailedHook+0x8>
    2fc8:	00 c0       	rjmp	.+0      	; 0x2fca <vApplicationMallocFailedHook+0x12>
    
    for(;;)
    {
        _delay_ms(50);
        prvBlinkMainLed(); // Main LED fast blink.
    2fca:	00 00       	nop
    2fcc:	f1 df       	rcall	.-30     	; 0x2fb0 <prvBlinkMainLed>
    2fce:	f5 cf       	rjmp	.-22     	; 0x2fba <vApplicationMallocFailedHook+0x2>

00002fd0 <vApplicationStackOverflowHook>:

void vApplicationStackOverflowHook( TaskHandle_t xTask __attribute__((unused)),
                                    char * pcTaskName __attribute__((unused)) )
{

    prvSetMainLedOn(); // Main LED on.
    2fd0:	e8 df       	rcall	.-48     	; 0x2fa2 <prvSetMainLedOn>
    2fd2:	2f ef       	ldi	r18, 0xFF	; 255
    2fd4:	87 ea       	ldi	r24, 0xA7	; 167
    2fd6:	91 e6       	ldi	r25, 0x61	; 97
    2fd8:	21 50       	subi	r18, 0x01	; 1
    2fda:	80 40       	sbci	r24, 0x00	; 0
    2fdc:	90 40       	sbci	r25, 0x00	; 0
    2fde:	e1 f7       	brne	.-8      	; 0x2fd8 <vApplicationStackOverflowHook+0x8>
    2fe0:	00 c0       	rjmp	.+0      	; 0x2fe2 <vApplicationStackOverflowHook+0x12>

    for(;;)
    {
        _delay_ms(2000);
        prvBlinkMainLed();  // Main LED slow blink.
    2fe2:	00 00       	nop
    2fe4:	e5 df       	rcall	.-54     	; 0x2fb0 <prvBlinkMainLed>
    2fe6:	f5 cf       	rjmp	.-22     	; 0x2fd2 <vApplicationStackOverflowHook+0x2>

00002fe8 <enqueueCO2Measure>:
void initializeCO2Queue() {
	xQueueCO2 = xQueueCreate(10, sizeof(uint16_t));
}


void enqueueCO2Measure(uint16_t ppm){
    2fe8:	0f 93       	push	r16
    2fea:	cf 93       	push	r28
    2fec:	df 93       	push	r29
    2fee:	1f 92       	push	r1
    2ff0:	1f 92       	push	r1
    2ff2:	cd b7       	in	r28, 0x3d	; 61
    2ff4:	de b7       	in	r29, 0x3e	; 62
    2ff6:	9a 83       	std	Y+2, r25	; 0x02
    2ff8:	89 83       	std	Y+1, r24	; 0x01
	xQueueSend(xQueueCO2, (void*)&ppm, portMAX_DELAY);
    2ffa:	00 e0       	ldi	r16, 0x00	; 0
    2ffc:	2f ef       	ldi	r18, 0xFF	; 255
    2ffe:	3f ef       	ldi	r19, 0xFF	; 255
    3000:	a9 01       	movw	r20, r18
    3002:	be 01       	movw	r22, r28
    3004:	6f 5f       	subi	r22, 0xFF	; 255
    3006:	7f 4f       	sbci	r23, 0xFF	; 255
    3008:	80 91 f1 17 	lds	r24, 0x17F1	; 0x8017f1 <xQueueCO2>
    300c:	90 91 f2 17 	lds	r25, 0x17F2	; 0x8017f2 <xQueueCO2+0x1>
    3010:	0e 94 b5 05 	call	0xb6a	; 0xb6a <xQueueGenericSend>
}
    3014:	0f 90       	pop	r0
    3016:	0f 90       	pop	r0
    3018:	df 91       	pop	r29
    301a:	cf 91       	pop	r28
    301c:	0f 91       	pop	r16
    301e:	08 95       	ret

00003020 <initializeCO2Queue>:
#include "../measuredrivers/header/CO2Handler.h"

QueueHandle_t xQueueCO2;

void initializeCO2Queue() {
	xQueueCO2 = xQueueCreate(10, sizeof(uint16_t));
    3020:	40 e0       	ldi	r20, 0x00	; 0
    3022:	62 e0       	ldi	r22, 0x02	; 2
    3024:	8a e0       	ldi	r24, 0x0A	; 10
    3026:	0e 94 92 05 	call	0xb24	; 0xb24 <xQueueGenericCreate>
    302a:	90 93 f2 17 	sts	0x17F2, r25	; 0x8017f2 <xQueueCO2+0x1>
    302e:	80 93 f1 17 	sts	0x17F1, r24	; 0x8017f1 <xQueueCO2>
    3032:	08 95       	ret

00003034 <co2Measure>:
}

void co2Measure() {
	mh_z19_returnCode_t rc;
	
	rc = mh_z19_takeMeassuring();
    3034:	0e 94 6c 21 	call	0x42d8	; 0x42d8 <mh_z19_takeMeassuring>
	if (rc == MHZ19_OK)
    3038:	81 11       	cpse	r24, r1
    303a:	05 c0       	rjmp	.+10     	; 0x3046 <co2Measure+0x12>
	{
		mh_z19_injectCallBack(enqueueCO2Measure);
    303c:	84 ef       	ldi	r24, 0xF4	; 244
    303e:	97 e1       	ldi	r25, 0x17	; 23
    3040:	0c 94 67 21 	jmp	0x42ce	; 0x42ce <mh_z19_injectCallBack>
    3044:	08 95       	ret
	}
	else
	{
		puts("det gik galt");
    3046:	87 ea       	ldi	r24, 0xA7	; 167
    3048:	92 e0       	ldi	r25, 0x02	; 2
    304a:	0c 94 bd 2c 	jmp	0x597a	; 0x597a <puts>
    304e:	08 95       	ret

00003050 <dequeueCO2Measure>:
	}
}


uint16_t dequeueCO2Measure(){
    3050:	cf 93       	push	r28
    3052:	df 93       	push	r29
    3054:	1f 92       	push	r1
    3056:	1f 92       	push	r1
    3058:	cd b7       	in	r28, 0x3d	; 61
    305a:	de b7       	in	r29, 0x3e	; 62
	uint16_t ppm;
	
	xQueueReceive(xQueueCO2, &ppm, 1500);
    305c:	2c ed       	ldi	r18, 0xDC	; 220
    305e:	35 e0       	ldi	r19, 0x05	; 5
    3060:	40 e0       	ldi	r20, 0x00	; 0
    3062:	50 e0       	ldi	r21, 0x00	; 0
    3064:	be 01       	movw	r22, r28
    3066:	6f 5f       	subi	r22, 0xFF	; 255
    3068:	7f 4f       	sbci	r23, 0xFF	; 255
    306a:	80 91 f1 17 	lds	r24, 0x17F1	; 0x8017f1 <xQueueCO2>
    306e:	90 91 f2 17 	lds	r25, 0x17F2	; 0x8017f2 <xQueueCO2+0x1>
    3072:	0e 94 80 06 	call	0xd00	; 0xd00 <xQueueReceive>
	return ppm;
    3076:	89 81       	ldd	r24, Y+1	; 0x01
    3078:	9a 81       	ldd	r25, Y+2	; 0x02
    307a:	0f 90       	pop	r0
    307c:	0f 90       	pop	r0
    307e:	df 91       	pop	r29
    3080:	cf 91       	pop	r28
    3082:	08 95       	ret

00003084 <initializeTempHumQueues>:
QueueHandle_t xQueueHum;


void initializeTempHumQueues()
{
	xQueueTemp = xQueueCreate(10, sizeof(int16_t));
    3084:	40 e0       	ldi	r20, 0x00	; 0
    3086:	62 e0       	ldi	r22, 0x02	; 2
    3088:	8a e0       	ldi	r24, 0x0A	; 10
    308a:	0e 94 92 05 	call	0xb24	; 0xb24 <xQueueGenericCreate>
    308e:	90 93 f6 17 	sts	0x17F6, r25	; 0x8017f6 <xQueueTemp+0x1>
    3092:	80 93 f5 17 	sts	0x17F5, r24	; 0x8017f5 <xQueueTemp>
	xQueueHum = xQueueCreate(10, sizeof(uint16_t));
    3096:	40 e0       	ldi	r20, 0x00	; 0
    3098:	62 e0       	ldi	r22, 0x02	; 2
    309a:	8a e0       	ldi	r24, 0x0A	; 10
    309c:	0e 94 92 05 	call	0xb24	; 0xb24 <xQueueGenericCreate>
    30a0:	90 93 f4 17 	sts	0x17F4, r25	; 0x8017f4 <xQueueHum+0x1>
    30a4:	80 93 f3 17 	sts	0x17F3, r24	; 0x8017f3 <xQueueHum>
    30a8:	08 95       	ret

000030aa <enqueueTemperature>:
}

void enqueueTemperature(int16_t temp){
    30aa:	0f 93       	push	r16
    30ac:	cf 93       	push	r28
    30ae:	df 93       	push	r29
    30b0:	1f 92       	push	r1
    30b2:	1f 92       	push	r1
    30b4:	cd b7       	in	r28, 0x3d	; 61
    30b6:	de b7       	in	r29, 0x3e	; 62
    30b8:	9a 83       	std	Y+2, r25	; 0x02
    30ba:	89 83       	std	Y+1, r24	; 0x01
	xQueueSend(xQueueTemp, (void*)&temp, portMAX_DELAY);
    30bc:	00 e0       	ldi	r16, 0x00	; 0
    30be:	2f ef       	ldi	r18, 0xFF	; 255
    30c0:	3f ef       	ldi	r19, 0xFF	; 255
    30c2:	a9 01       	movw	r20, r18
    30c4:	be 01       	movw	r22, r28
    30c6:	6f 5f       	subi	r22, 0xFF	; 255
    30c8:	7f 4f       	sbci	r23, 0xFF	; 255
    30ca:	80 91 f5 17 	lds	r24, 0x17F5	; 0x8017f5 <xQueueTemp>
    30ce:	90 91 f6 17 	lds	r25, 0x17F6	; 0x8017f6 <xQueueTemp+0x1>
    30d2:	0e 94 b5 05 	call	0xb6a	; 0xb6a <xQueueGenericSend>
}
    30d6:	0f 90       	pop	r0
    30d8:	0f 90       	pop	r0
    30da:	df 91       	pop	r29
    30dc:	cf 91       	pop	r28
    30de:	0f 91       	pop	r16
    30e0:	08 95       	ret

000030e2 <enqueueHumidity>:

void enqueueHumidity(uint16_t hum){
    30e2:	0f 93       	push	r16
    30e4:	cf 93       	push	r28
    30e6:	df 93       	push	r29
    30e8:	1f 92       	push	r1
    30ea:	1f 92       	push	r1
    30ec:	cd b7       	in	r28, 0x3d	; 61
    30ee:	de b7       	in	r29, 0x3e	; 62
    30f0:	9a 83       	std	Y+2, r25	; 0x02
    30f2:	89 83       	std	Y+1, r24	; 0x01
	xQueueSend(xQueueHum, (void*)&hum, portMAX_DELAY);	
    30f4:	00 e0       	ldi	r16, 0x00	; 0
    30f6:	2f ef       	ldi	r18, 0xFF	; 255
    30f8:	3f ef       	ldi	r19, 0xFF	; 255
    30fa:	a9 01       	movw	r20, r18
    30fc:	be 01       	movw	r22, r28
    30fe:	6f 5f       	subi	r22, 0xFF	; 255
    3100:	7f 4f       	sbci	r23, 0xFF	; 255
    3102:	80 91 f3 17 	lds	r24, 0x17F3	; 0x8017f3 <xQueueHum>
    3106:	90 91 f4 17 	lds	r25, 0x17F4	; 0x8017f4 <xQueueHum+0x1>
    310a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <xQueueGenericSend>
}
    310e:	0f 90       	pop	r0
    3110:	0f 90       	pop	r0
    3112:	df 91       	pop	r29
    3114:	cf 91       	pop	r28
    3116:	0f 91       	pop	r16
    3118:	08 95       	ret

0000311a <tempHumMeasure>:


void tempHumMeasure()
{
    311a:	ef 92       	push	r14
    311c:	ff 92       	push	r15
    311e:	0f 93       	push	r16
    3120:	1f 93       	push	r17
    3122:	cf 93       	push	r28
    3124:	df 93       	push	r29
    3126:	00 d0       	rcall	.+0      	; 0x3128 <tempHumMeasure+0xe>
    3128:	1f 92       	push	r1
    312a:	cd b7       	in	r28, 0x3d	; 61
    312c:	de b7       	in	r29, 0x3e	; 62
	TickType_t xLastWakeTime;
	const TickType_t xFrequency = 5/portTICK_PERIOD_MS; 
	const TickType_t xFrequency2 = 50/portTICK_PERIOD_MS;

	xLastWakeTime = xTaskGetTickCount();
    312e:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <xTaskGetTickCount>
    3132:	69 83       	std	Y+1, r22	; 0x01
    3134:	7a 83       	std	Y+2, r23	; 0x02
    3136:	8b 83       	std	Y+3, r24	; 0x03
    3138:	9c 83       	std	Y+4, r25	; 0x04

	if(HIH8120_OK != hih8120_wakeup())
    313a:	88 d3       	rcall	.+1808   	; 0x384c <hih8120_wakeup>
    313c:	88 23       	and	r24, r24
    313e:	41 f0       	breq	.+16     	; 0x3150 <tempHumMeasure+0x36>
	{
		printf("wakeup gik galt");
    3140:	84 eb       	ldi	r24, 0xB4	; 180
    3142:	92 e0       	ldi	r25, 0x02	; 2
    3144:	9f 93       	push	r25
    3146:	8f 93       	push	r24
    3148:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    314c:	0f 90       	pop	r0
    314e:	0f 90       	pop	r0
	}
	xTaskDelayUntil( &xLastWakeTime, xFrequency2 );
    3150:	43 e0       	ldi	r20, 0x03	; 3
    3152:	50 e0       	ldi	r21, 0x00	; 0
    3154:	60 e0       	ldi	r22, 0x00	; 0
    3156:	70 e0       	ldi	r23, 0x00	; 0
    3158:	ce 01       	movw	r24, r28
    315a:	01 96       	adiw	r24, 0x01	; 1
    315c:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <xTaskDelayUntil>
	if(HIH8120_OK != hih8120_measure())
    3160:	8a d3       	rcall	.+1812   	; 0x3876 <hih8120_measure>
    3162:	88 23       	and	r24, r24
    3164:	41 f0       	breq	.+16     	; 0x3176 <tempHumMeasure+0x5c>
	{
		printf("measure gik galt");
    3166:	84 ec       	ldi	r24, 0xC4	; 196
    3168:	92 e0       	ldi	r25, 0x02	; 2
    316a:	9f 93       	push	r25
    316c:	8f 93       	push	r24
    316e:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    3172:	0f 90       	pop	r0
    3174:	0f 90       	pop	r0
	}
	xTaskDelayUntil( &xLastWakeTime, xFrequency );
    3176:	40 e0       	ldi	r20, 0x00	; 0
    3178:	50 e0       	ldi	r21, 0x00	; 0
    317a:	ba 01       	movw	r22, r20
    317c:	ce 01       	movw	r24, r28
    317e:	01 96       	adiw	r24, 0x01	; 1
    3180:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <xTaskDelayUntil>
	
	uint16_t humidity = hih8120_getHumidity();
    3184:	89 d3       	rcall	.+1810   	; 0x3898 <hih8120_getHumidity>
    3186:	c8 d2       	rcall	.+1424   	; 0x3718 <__fixunssfsi>
	int16_t temp = hih8120_getTemperature();
    3188:	8b 01       	movw	r16, r22
    318a:	9b d3       	rcall	.+1846   	; 0x38c2 <hih8120_getTemperature>
    318c:	c0 d2       	rcall	.+1408   	; 0x370e <__fixsfsi>
    318e:	7b 01       	movw	r14, r22
    3190:	00 36       	cpi	r16, 0x60	; 96
	
	if (humidity > 95 && temp > 100) {
    3192:	11 05       	cpc	r17, r1
    3194:	88 f0       	brcs	.+34     	; 0x31b8 <tempHumMeasure+0x9e>
    3196:	85 e6       	ldi	r24, 0x65	; 101
    3198:	e8 16       	cp	r14, r24
    319a:	f1 04       	cpc	r15, r1
    319c:	6c f0       	brlt	.+26     	; 0x31b8 <tempHumMeasure+0x9e>
    319e:	40 e0       	ldi	r20, 0x00	; 0
		xTaskDelayUntil( &xLastWakeTime, xFrequency );
    31a0:	50 e0       	ldi	r21, 0x00	; 0
    31a2:	ba 01       	movw	r22, r20
    31a4:	ce 01       	movw	r24, r28
    31a6:	01 96       	adiw	r24, 0x01	; 1
			
		humidity = hih8120_getHumidity();
    31a8:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <xTaskDelayUntil>
    31ac:	75 d3       	rcall	.+1770   	; 0x3898 <hih8120_getHumidity>
		temp = hih8120_getTemperature();
    31ae:	b4 d2       	rcall	.+1384   	; 0x3718 <__fixunssfsi>
    31b0:	8b 01       	movw	r16, r22
    31b2:	87 d3       	rcall	.+1806   	; 0x38c2 <hih8120_getTemperature>
    31b4:	ac d2       	rcall	.+1368   	; 0x370e <__fixsfsi>
    31b6:	7b 01       	movw	r14, r22
	}
	
	enqueueHumidity(humidity);
    31b8:	c8 01       	movw	r24, r16
    31ba:	93 df       	rcall	.-218    	; 0x30e2 <enqueueHumidity>
    31bc:	c7 01       	movw	r24, r14
	enqueueTemperature(temp);
    31be:	75 df       	rcall	.-278    	; 0x30aa <enqueueTemperature>
    31c0:	0f 90       	pop	r0
    31c2:	0f 90       	pop	r0
}
    31c4:	0f 90       	pop	r0
    31c6:	0f 90       	pop	r0
    31c8:	df 91       	pop	r29
    31ca:	cf 91       	pop	r28
    31cc:	1f 91       	pop	r17
    31ce:	0f 91       	pop	r16
    31d0:	ff 90       	pop	r15
    31d2:	ef 90       	pop	r14
    31d4:	08 95       	ret

000031d6 <dequeueTempMeasure>:
    31d6:	cf 93       	push	r28
    31d8:	df 93       	push	r29


int16_t dequeueTempMeasure(){
    31da:	1f 92       	push	r1
    31dc:	1f 92       	push	r1
    31de:	cd b7       	in	r28, 0x3d	; 61
    31e0:	de b7       	in	r29, 0x3e	; 62
	int16_t temp;
	
	xQueueReceive(xQueueTemp, &temp, 1500);
    31e2:	2c ed       	ldi	r18, 0xDC	; 220
    31e4:	35 e0       	ldi	r19, 0x05	; 5
    31e6:	40 e0       	ldi	r20, 0x00	; 0
    31e8:	50 e0       	ldi	r21, 0x00	; 0
    31ea:	be 01       	movw	r22, r28
    31ec:	6f 5f       	subi	r22, 0xFF	; 255
    31ee:	7f 4f       	sbci	r23, 0xFF	; 255
    31f0:	80 91 f5 17 	lds	r24, 0x17F5	; 0x8017f5 <xQueueTemp>
    31f4:	90 91 f6 17 	lds	r25, 0x17F6	; 0x8017f6 <xQueueTemp+0x1>
    31f8:	0e 94 80 06 	call	0xd00	; 0xd00 <xQueueReceive>
	return temp;
}
    31fc:	89 81       	ldd	r24, Y+1	; 0x01
    31fe:	9a 81       	ldd	r25, Y+2	; 0x02
    3200:	0f 90       	pop	r0
    3202:	0f 90       	pop	r0
    3204:	df 91       	pop	r29
    3206:	cf 91       	pop	r28
    3208:	08 95       	ret

0000320a <dequeueHumidityMeasure>:

uint16_t dequeueHumidityMeasure(){
    320a:	cf 93       	push	r28
    320c:	df 93       	push	r29
    320e:	1f 92       	push	r1
    3210:	1f 92       	push	r1
    3212:	cd b7       	in	r28, 0x3d	; 61
    3214:	de b7       	in	r29, 0x3e	; 62
	uint16_t hum;
	
	xQueueReceive(xQueueHum, &hum, 1500);
    3216:	2c ed       	ldi	r18, 0xDC	; 220
    3218:	35 e0       	ldi	r19, 0x05	; 5
    321a:	40 e0       	ldi	r20, 0x00	; 0
    321c:	50 e0       	ldi	r21, 0x00	; 0
    321e:	be 01       	movw	r22, r28
    3220:	6f 5f       	subi	r22, 0xFF	; 255
    3222:	7f 4f       	sbci	r23, 0xFF	; 255
    3224:	80 91 f3 17 	lds	r24, 0x17F3	; 0x8017f3 <xQueueHum>
    3228:	90 91 f4 17 	lds	r25, 0x17F4	; 0x8017f4 <xQueueHum+0x1>
    322c:	0e 94 80 06 	call	0xd00	; 0xd00 <xQueueReceive>
	return hum;
    3230:	89 81       	ldd	r24, Y+1	; 0x01
    3232:	9a 81       	ldd	r25, Y+2	; 0x02
    3234:	0f 90       	pop	r0
    3236:	0f 90       	pop	r0
    3238:	df 91       	pop	r29
    323a:	cf 91       	pop	r28
    323c:	08 95       	ret

0000323e <_lora_setup>:
>>>>>>> 1413a59f4c1676bf811b30fc6b6b1aaefe980264
>>>>>>> Stashed changes
	,  lora_handler_task_priority  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );
}

static void _lora_setup(void)
{
<<<<<<< Updated upstream
    30e0:	cf 93       	push	r28
    30e2:	df 93       	push	r29
	lora_driver_returnCode_t rc;
	status_leds_slowBlink(led_ST2); // OPTIONAL: Led the green led blink slowly while we are setting up LoRa
    30e4:	81 e0       	ldi	r24, 0x01	; 1
    30e6:	0e 94 d4 23 	call	0x47a8	; 0x47a8 <status_leds_slowBlink>

	// Factory reset the transceiver
	printf("FactoryReset >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_rn2483FactoryReset()));
    30ea:	a5 d2       	rcall	.+1354   	; 0x3636 <lora_driver_rn2483FactoryReset>
    30ec:	21 d5       	rcall	.+2626   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    30ee:	9f 93       	push	r25
    30f0:	8f 93       	push	r24
    30f2:	84 ee       	ldi	r24, 0xE4	; 228
    30f4:	92 e0       	ldi	r25, 0x02	; 2
    30f6:	9f 93       	push	r25
    30f8:	8f 93       	push	r24
    30fa:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
	
	// Configure to EU868 LoRaWAN standards
	printf("Configure to EU868 >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_configureToEu868()));
    30fe:	19 d4       	rcall	.+2098   	; 0x3932 <lora_driver_configureToEu868>
    3100:	17 d5       	rcall	.+2606   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    3102:	9f 93       	push	r25
    3104:	8f 93       	push	r24
    3106:	87 ef       	ldi	r24, 0xF7	; 247
    3108:	92 e0       	ldi	r25, 0x02	; 2
    310a:	9f 93       	push	r25
    310c:	8f 93       	push	r24
    310e:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    3112:	8d e0       	ldi	r24, 0x0D	; 13

	// Get the transceivers HW EUI
	rc = lora_driver_getRn2483Hweui(_out_buf);
    3114:	92 e1       	ldi	r25, 0x12	; 18
    3116:	a1 d2       	rcall	.+1346   	; 0x365a <lora_driver_getRn2483Hweui>
    3118:	0b d5       	rcall	.+2582   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    311a:	cd e0       	ldi	r28, 0x0D	; 13
	printf("Get HWEUI >%s<: %s\n",lora_driver_mapReturnCodeToText(rc), _out_buf);
    311c:	d2 e1       	ldi	r29, 0x12	; 18
    311e:	df 93       	push	r29
    3120:	cf 93       	push	r28
    3122:	9f 93       	push	r25
    3124:	8f 93       	push	r24
    3126:	80 e1       	ldi	r24, 0x10	; 16
    3128:	93 e0       	ldi	r25, 0x03	; 3
    312a:	9f 93       	push	r25
    312c:	8f 93       	push	r24
    312e:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    3132:	ce 01       	movw	r24, r28

	// Set the HWEUI as DevEUI in the LoRaWAN software stack in the transceiver
	printf("Set DevEUI: %s >%s<\n", _out_buf, lora_driver_mapReturnCodeToText(lora_driver_setDeviceIdentifier(_out_buf)));
    3134:	ae d2       	rcall	.+1372   	; 0x3692 <lora_driver_setDeviceIdentifier>
    3136:	fc d4       	rcall	.+2552   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    3138:	9f 93       	push	r25
    313a:	8f 93       	push	r24
    313c:	df 93       	push	r29
    313e:	cf 93       	push	r28
    3140:	84 e2       	ldi	r24, 0x24	; 36
    3142:	93 e0       	ldi	r25, 0x03	; 3
    3144:	9f 93       	push	r25
    3146:	8f 93       	push	r24
    3148:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    314c:	ae 01       	movw	r20, r28

	// Set Over The Air Activation parameters to be ready to join the LoRaWAN
	printf("Set OTAA Identity appEUI:%s appKEY:%s devEUI:%s >%s<\n", LORA_appEUI, LORA_appKEY, _out_buf, lora_driver_mapReturnCodeToText(lora_driver_setOtaaIdentity(LORA_appEUI,LORA_appKEY,_out_buf)));
    314e:	69 e3       	ldi	r22, 0x39	; 57
    3150:	73 e0       	ldi	r23, 0x03	; 3
    3152:	8a e5       	ldi	r24, 0x5A	; 90
    3154:	93 e0       	ldi	r25, 0x03	; 3
    3156:	cb d4       	rcall	.+2454   	; 0x3aee <lora_driver_setOtaaIdentity>
    3158:	eb d4       	rcall	.+2518   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    315a:	9f 93       	push	r25
    315c:	8f 93       	push	r24
    315e:	df 93       	push	r29
    3160:	cf 93       	push	r28
    3162:	89 e3       	ldi	r24, 0x39	; 57
    3164:	93 e0       	ldi	r25, 0x03	; 3
    3166:	9f 93       	push	r25
    3168:	8f 93       	push	r24
    316a:	8a e5       	ldi	r24, 0x5A	; 90
    316c:	93 e0       	ldi	r25, 0x03	; 3
    316e:	9f 93       	push	r25
    3170:	8f 93       	push	r24
    3172:	8b e6       	ldi	r24, 0x6B	; 107
    3174:	93 e0       	ldi	r25, 0x03	; 3
    3176:	9f 93       	push	r25
    3178:	8f 93       	push	r24
    317a:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    317e:	bc d2       	rcall	.+1400   	; 0x36f8 <lora_driver_saveMac>

	// Save all the MAC settings in the transceiver
	printf("Save mac >%s<\n",lora_driver_mapReturnCodeToText(lora_driver_saveMac()));
    3180:	d7 d4       	rcall	.+2478   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    3182:	9f 93       	push	r25
    3184:	8f 93       	push	r24
    3186:	81 ea       	ldi	r24, 0xA1	; 161
    3188:	93 e0       	ldi	r25, 0x03	; 3
    318a:	9f 93       	push	r25
    318c:	8f 93       	push	r24
    318e:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    3192:	8d b7       	in	r24, 0x3d	; 61

	// Enable Adaptive Data Rate
	printf("Set Adaptive Data Rate: ON >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_setAdaptiveDataRate(LORA_ON)));
    3194:	9e b7       	in	r25, 0x3e	; 62
    3196:	82 96       	adiw	r24, 0x22	; 34
    3198:	0f b6       	in	r0, 0x3f	; 63
    319a:	f8 94       	cli
    319c:	9e bf       	out	0x3e, r25	; 62
    319e:	0f be       	out	0x3f, r0	; 63
    31a0:	8d bf       	out	0x3d, r24	; 61
    31a2:	81 e0       	ldi	r24, 0x01	; 1
    31a4:	a3 d3       	rcall	.+1862   	; 0x38ec <lora_driver_setAdaptiveDataRate>
    31a6:	c4 d4       	rcall	.+2440   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    31a8:	9f 93       	push	r25
    31aa:	8f 93       	push	r24
    31ac:	80 eb       	ldi	r24, 0xB0	; 176
    31ae:	93 e0       	ldi	r25, 0x03	; 3
    31b0:	9f 93       	push	r25
    31b2:	8f 93       	push	r24
    31b4:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    31b8:	84 ef       	ldi	r24, 0xF4	; 244

	// Set receiver window1 delay to 500 ms - this is needed if down-link messages will be used
	printf("Set Receiver Delay: %d ms >%s<\n", 500, lora_driver_mapReturnCodeToText(lora_driver_setReceiveDelay(500)));
    31ba:	91 e0       	ldi	r25, 0x01	; 1
    31bc:	a2 d3       	rcall	.+1860   	; 0x3902 <lora_driver_setReceiveDelay>
    31be:	b8 d4       	rcall	.+2416   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    31c0:	9f 93       	push	r25
    31c2:	8f 93       	push	r24
    31c4:	81 e0       	ldi	r24, 0x01	; 1
    31c6:	8f 93       	push	r24
    31c8:	84 ef       	ldi	r24, 0xF4	; 244
    31ca:	8f 93       	push	r24
    31cc:	81 ed       	ldi	r24, 0xD1	; 209
    31ce:	93 e0       	ldi	r25, 0x03	; 3
    31d0:	9f 93       	push	r25
    31d2:	8f 93       	push	r24
    31d4:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    31d8:	8d b7       	in	r24, 0x3d	; 61
    31da:	9e b7       	in	r25, 0x3e	; 62
    31dc:	0a 96       	adiw	r24, 0x0a	; 10
    31de:	0f b6       	in	r0, 0x3f	; 63
    31e0:	f8 94       	cli
    31e2:	9e bf       	out	0x3e, r25	; 62
    31e4:	0f be       	out	0x3f, r0	; 63
    31e6:	8d bf       	out	0x3d, r24	; 61
    31e8:	ca e0       	ldi	r28, 0x0A	; 10

	// Join the LoRaWAN
	uint8_t maxJoinTriesLeft = 10;
    31ea:	80 e0       	ldi	r24, 0x00	; 0
	
	do {
		rc = lora_driver_join(LORA_OTAA);
    31ec:	8b d2       	rcall	.+1302   	; 0x3704 <lora_driver_join>
    31ee:	d8 2f       	mov	r29, r24
    31f0:	9f d4       	rcall	.+2366   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    31f2:	9f 93       	push	r25
		printf("Join Network TriesLeft:%d >%s<\n", maxJoinTriesLeft, lora_driver_mapReturnCodeToText(rc));
    31f4:	8f 93       	push	r24
    31f6:	1f 92       	push	r1
    31f8:	cf 93       	push	r28
    31fa:	81 ef       	ldi	r24, 0xF1	; 241
    31fc:	93 e0       	ldi	r25, 0x03	; 3
    31fe:	9f 93       	push	r25
    3200:	8f 93       	push	r24
    3202:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    3206:	0f 90       	pop	r0
    3208:	0f 90       	pop	r0
    320a:	0f 90       	pop	r0

		if ( rc != LORA_ACCEPTED)
    320c:	0f 90       	pop	r0
    320e:	0f 90       	pop	r0
    3210:	0f 90       	pop	r0
    3212:	d8 30       	cpi	r29, 0x08	; 8
    3214:	59 f0       	breq	.+22     	; 0x322c <_lora_setup+0x14c>
    3216:	80 e0       	ldi	r24, 0x00	; 0
    3218:	0e 94 38 24 	call	0x4870	; 0x4870 <status_leds_longPuls>
		{
			// Make the red led pulse to tell something went wrong
			status_leds_longPuls(led_ST1); // OPTIONAL
    321c:	66 e3       	ldi	r22, 0x36	; 54
    321e:	71 e0       	ldi	r23, 0x01	; 1
    3220:	80 e0       	ldi	r24, 0x00	; 0
			// Wait 5 sec and lets try again
			vTaskDelay(pdMS_TO_TICKS(5000UL));
    3222:	90 e0       	ldi	r25, 0x00	; 0
    3224:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <vTaskDelay>
    3228:	c1 50       	subi	r28, 0x01	; 1
    322a:	f9 f6       	brne	.-66     	; 0x31ea <_lora_setup+0x10a>
    322c:	d8 30       	cpi	r29, 0x08	; 8
=======
    323e:	0f 93       	push	r16
    3240:	1f 93       	push	r17
    3242:	cf 93       	push	r28
    3244:	df 93       	push	r29
    3246:	cd b7       	in	r28, 0x3d	; 61
    3248:	de b7       	in	r29, 0x3e	; 62
    324a:	64 97       	sbiw	r28, 0x14	; 20
    324c:	0f b6       	in	r0, 0x3f	; 63
    324e:	f8 94       	cli
    3250:	de bf       	out	0x3e, r29	; 62
    3252:	0f be       	out	0x3f, r0	; 63
    3254:	cd bf       	out	0x3d, r28	; 61

	char _out_buf[20];
	lora_driver_returnCode_t rc;
	status_leds_slowBlink(led_ST2); // OPTIONAL: Led the green led blink slowly while we are setting up LoRa
    3256:	81 e0       	ldi	r24, 0x01	; 1
    3258:	0e 94 dc 26 	call	0x4db8	; 0x4db8 <status_leds_slowBlink>

	// Factory reset the transceiver
	printf("FactoryReset >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_rn2483FactoryReset()));
    325c:	ba d4       	rcall	.+2420   	; 0x3bd2 <lora_driver_rn2483FactoryReset>
    325e:	36 d7       	rcall	.+3692   	; 0x40cc <lora_driver_mapReturnCodeToText>
    3260:	9f 93       	push	r25
    3262:	8f 93       	push	r24
    3264:	85 ed       	ldi	r24, 0xD5	; 213
    3266:	92 e0       	ldi	r25, 0x02	; 2
    3268:	9f 93       	push	r25
    326a:	8f 93       	push	r24
    326c:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
	
	// Configure to EU868 LoRaWAN standards
	printf("Configure to EU868 >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_configureToEu868()));
    3270:	2e d6       	rcall	.+3164   	; 0x3ece <lora_driver_configureToEu868>
    3272:	2c d7       	rcall	.+3672   	; 0x40cc <lora_driver_mapReturnCodeToText>
    3274:	9f 93       	push	r25
    3276:	8f 93       	push	r24
    3278:	88 ee       	ldi	r24, 0xE8	; 232
    327a:	92 e0       	ldi	r25, 0x02	; 2
    327c:	9f 93       	push	r25
    327e:	8f 93       	push	r24
    3280:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    3284:	8e 01       	movw	r16, r28
    3286:	0f 5f       	subi	r16, 0xFF	; 255

	// Get the transceivers HW EUI
	rc = lora_driver_getRn2483Hweui(_out_buf);
    3288:	1f 4f       	sbci	r17, 0xFF	; 255
    328a:	c8 01       	movw	r24, r16
    328c:	b4 d4       	rcall	.+2408   	; 0x3bf6 <lora_driver_getRn2483Hweui>
    328e:	1e d7       	rcall	.+3644   	; 0x40cc <lora_driver_mapReturnCodeToText>
	printf("Get HWEUI >%s<: %s\n",lora_driver_mapReturnCodeToText(rc), _out_buf);
    3290:	1f 93       	push	r17
    3292:	0f 93       	push	r16
    3294:	9f 93       	push	r25
    3296:	8f 93       	push	r24
    3298:	81 e0       	ldi	r24, 0x01	; 1
    329a:	93 e0       	ldi	r25, 0x03	; 3
    329c:	9f 93       	push	r25
    329e:	8f 93       	push	r24
    32a0:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>

	// Set the HWEUI as DevEUI in the LoRaWAN software stack in the transceiver
	printf("Set DevEUI: %s >%s<\n", _out_buf, lora_driver_mapReturnCodeToText(lora_driver_setDeviceIdentifier(_out_buf)));
    32a4:	c8 01       	movw	r24, r16
    32a6:	c3 d4       	rcall	.+2438   	; 0x3c2e <lora_driver_setDeviceIdentifier>
    32a8:	11 d7       	rcall	.+3618   	; 0x40cc <lora_driver_mapReturnCodeToText>
    32aa:	9f 93       	push	r25
    32ac:	8f 93       	push	r24
    32ae:	1f 93       	push	r17
    32b0:	0f 93       	push	r16
    32b2:	85 e1       	ldi	r24, 0x15	; 21
    32b4:	93 e0       	ldi	r25, 0x03	; 3
    32b6:	9f 93       	push	r25
    32b8:	8f 93       	push	r24
    32ba:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>

	// Set Over The Air Activation parameters to be ready to join the LoRaWAN
	printf("Set OTAA Identity appEUI:%s appKEY:%s devEUI:%s >%s<\n", LORA_appEUI, LORA_appKEY, _out_buf, lora_driver_mapReturnCodeToText(lora_driver_setOtaaIdentity(LORA_appEUI,LORA_appKEY,_out_buf)));
    32be:	a8 01       	movw	r20, r16
    32c0:	6a e2       	ldi	r22, 0x2A	; 42
    32c2:	73 e0       	ldi	r23, 0x03	; 3
    32c4:	8b e4       	ldi	r24, 0x4B	; 75
    32c6:	93 e0       	ldi	r25, 0x03	; 3
    32c8:	e0 d6       	rcall	.+3520   	; 0x408a <lora_driver_setOtaaIdentity>
    32ca:	00 d7       	rcall	.+3584   	; 0x40cc <lora_driver_mapReturnCodeToText>
    32cc:	9f 93       	push	r25
    32ce:	8f 93       	push	r24
    32d0:	1f 93       	push	r17
    32d2:	0f 93       	push	r16
    32d4:	8a e2       	ldi	r24, 0x2A	; 42
    32d6:	93 e0       	ldi	r25, 0x03	; 3
    32d8:	9f 93       	push	r25
    32da:	8f 93       	push	r24
    32dc:	8b e4       	ldi	r24, 0x4B	; 75
    32de:	93 e0       	ldi	r25, 0x03	; 3
    32e0:	9f 93       	push	r25
    32e2:	8f 93       	push	r24
    32e4:	8c e5       	ldi	r24, 0x5C	; 92
    32e6:	93 e0       	ldi	r25, 0x03	; 3
    32e8:	9f 93       	push	r25
    32ea:	8f 93       	push	r24
    32ec:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>

	// Save all the MAC settings in the transceiver
	printf("Save mac >%s<\n",lora_driver_mapReturnCodeToText(lora_driver_saveMac()));
    32f0:	d1 d4       	rcall	.+2466   	; 0x3c94 <lora_driver_saveMac>
    32f2:	ec d6       	rcall	.+3544   	; 0x40cc <lora_driver_mapReturnCodeToText>
    32f4:	9f 93       	push	r25
    32f6:	8f 93       	push	r24
    32f8:	82 e9       	ldi	r24, 0x92	; 146
    32fa:	93 e0       	ldi	r25, 0x03	; 3
    32fc:	9f 93       	push	r25
    32fe:	8f 93       	push	r24
    3300:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>

	// Enable Adaptive Data Rate
	printf("Set Adaptive Data Rate: ON >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_setAdaptiveDataRate(LORA_ON)));
    3304:	0f b6       	in	r0, 0x3f	; 63
    3306:	f8 94       	cli
    3308:	de bf       	out	0x3e, r29	; 62
    330a:	0f be       	out	0x3f, r0	; 63
    330c:	cd bf       	out	0x3d, r28	; 61
    330e:	81 e0       	ldi	r24, 0x01	; 1
    3310:	bb d5       	rcall	.+2934   	; 0x3e88 <lora_driver_setAdaptiveDataRate>
    3312:	dc d6       	rcall	.+3512   	; 0x40cc <lora_driver_mapReturnCodeToText>
    3314:	9f 93       	push	r25
    3316:	8f 93       	push	r24
    3318:	81 ea       	ldi	r24, 0xA1	; 161
    331a:	93 e0       	ldi	r25, 0x03	; 3
    331c:	9f 93       	push	r25
    331e:	8f 93       	push	r24
    3320:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>

	// Set receiver window1 delay to 500 ms - this is needed if down-link messages will be used
	printf("Set Receiver Delay: %d ms >%s<\n", 500, lora_driver_mapReturnCodeToText(lora_driver_setReceiveDelay(500)));
    3324:	84 ef       	ldi	r24, 0xF4	; 244
    3326:	91 e0       	ldi	r25, 0x01	; 1
    3328:	ba d5       	rcall	.+2932   	; 0x3e9e <lora_driver_setReceiveDelay>
    332a:	d0 d6       	rcall	.+3488   	; 0x40cc <lora_driver_mapReturnCodeToText>
    332c:	9f 93       	push	r25
    332e:	8f 93       	push	r24
    3330:	81 e0       	ldi	r24, 0x01	; 1
    3332:	8f 93       	push	r24
    3334:	84 ef       	ldi	r24, 0xF4	; 244
    3336:	8f 93       	push	r24
    3338:	82 ec       	ldi	r24, 0xC2	; 194
    333a:	93 e0       	ldi	r25, 0x03	; 3
    333c:	9f 93       	push	r25
    333e:	8f 93       	push	r24
    3340:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    3344:	0f b6       	in	r0, 0x3f	; 63
    3346:	f8 94       	cli
    3348:	de bf       	out	0x3e, r29	; 62
    334a:	0f be       	out	0x3f, r0	; 63
    334c:	cd bf       	out	0x3d, r28	; 61

	// Join the LoRaWAN
	uint8_t maxJoinTriesLeft = 10;
    334e:	1a e0       	ldi	r17, 0x0A	; 10
	
	do {
		rc = lora_driver_join(LORA_OTAA);
    3350:	80 e0       	ldi	r24, 0x00	; 0
    3352:	a6 d4       	rcall	.+2380   	; 0x3ca0 <lora_driver_join>
    3354:	08 2f       	mov	r16, r24
    3356:	ba d6       	rcall	.+3444   	; 0x40cc <lora_driver_mapReturnCodeToText>
		printf("Join Network TriesLeft:%d >%s<\n", maxJoinTriesLeft, lora_driver_mapReturnCodeToText(rc));
    3358:	9f 93       	push	r25
    335a:	8f 93       	push	r24
    335c:	1f 92       	push	r1
    335e:	1f 93       	push	r17
    3360:	82 ee       	ldi	r24, 0xE2	; 226
    3362:	93 e0       	ldi	r25, 0x03	; 3
    3364:	9f 93       	push	r25
    3366:	8f 93       	push	r24
    3368:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    336c:	0f 90       	pop	r0
    336e:	0f 90       	pop	r0

		if ( rc != LORA_ACCEPTED)
    3370:	0f 90       	pop	r0
    3372:	0f 90       	pop	r0
    3374:	0f 90       	pop	r0
    3376:	0f 90       	pop	r0
    3378:	08 30       	cpi	r16, 0x08	; 8
    337a:	59 f0       	breq	.+22     	; 0x3392 <_lora_setup+0x154>
    337c:	80 e0       	ldi	r24, 0x00	; 0
    337e:	0e 94 40 27 	call	0x4e80	; 0x4e80 <status_leds_longPuls>
		{
			// Make the red led pulse to tell something went wrong
			status_leds_longPuls(led_ST1); // OPTIONAL
    3382:	66 e3       	ldi	r22, 0x36	; 54
    3384:	71 e0       	ldi	r23, 0x01	; 1
			// Wait 5 sec and lets try again
			vTaskDelay(pdMS_TO_TICKS(5000UL));
    3386:	80 e0       	ldi	r24, 0x00	; 0
    3388:	90 e0       	ldi	r25, 0x00	; 0
    338a:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <vTaskDelay>
    338e:	11 50       	subi	r17, 0x01	; 1
    3390:	f9 f6       	brne	.-66     	; 0x3350 <_lora_setup+0x112>
>>>>>>> Stashed changes
		}
		else
		{
			break;
		}
	} while (--maxJoinTriesLeft);
<<<<<<< Updated upstream
    322e:	41 f4       	brne	.+16     	; 0x3240 <_lora_setup+0x160>
    3230:	81 e1       	ldi	r24, 0x11	; 17

	if (rc == LORA_ACCEPTED)
    3232:	94 e0       	ldi	r25, 0x04	; 4
    3234:	0e 94 1b 28 	call	0x5036	; 0x5036 <puts>
=======
    3392:	08 30       	cpi	r16, 0x08	; 8
    3394:	41 f4       	brne	.+16     	; 0x33a6 <_lora_setup+0x168>

	if (rc == LORA_ACCEPTED)
    3396:	82 e0       	ldi	r24, 0x02	; 2
    3398:	94 e0       	ldi	r25, 0x04	; 4
>>>>>>> Stashed changes
	{
		// Connected to LoRaWAN :-)
		// Make the green led steady
		printf("\t We have been accepted \n");
<<<<<<< Updated upstream
    3238:	81 e0       	ldi	r24, 0x01	; 1
    323a:	0e 94 1a 24 	call	0x4834	; 0x4834 <status_leds_ledOn>
		status_leds_ledOn(led_ST2); // OPTIONAL
    323e:	09 c0       	rjmp	.+18     	; 0x3252 <_lora_setup+0x172>
    3240:	81 e0       	ldi	r24, 0x01	; 1
    3242:	0e 94 29 24 	call	0x4852	; 0x4852 <status_leds_ledOff>
=======
    339a:	0e 94 bd 2c 	call	0x597a	; 0x597a <puts>
    339e:	81 e0       	ldi	r24, 0x01	; 1
    33a0:	0e 94 22 27 	call	0x4e44	; 0x4e44 <status_leds_ledOn>
		status_leds_ledOn(led_ST2); // OPTIONAL
    33a4:	09 c0       	rjmp	.+18     	; 0x33b8 <_lora_setup+0x17a>
    33a6:	81 e0       	ldi	r24, 0x01	; 1
		while (1)
		{
			taskYIELD();
		}
	}
}
    33a8:	0e 94 31 27 	call	0x4e62	; 0x4e62 <status_leds_ledOff>
>>>>>>> Stashed changes
	}
	else
	{
		// Something went wrong
		// Turn off the green led
		status_leds_ledOff(led_ST2); // OPTIONAL
<<<<<<< Updated upstream
    3246:	80 e0       	ldi	r24, 0x00	; 0
    3248:	0e 94 f7 23 	call	0x47ee	; 0x47ee <status_leds_fastBlink>
		// Make the red led blink fast to tell something went wrong
		status_leds_fastBlink(led_ST1); // OPTIONAL
    324c:	0e 94 ef 02 	call	0x5de	; 0x5de <vPortYield>
    3250:	fd cf       	rjmp	.-6      	; 0x324c <_lora_setup+0x16c>
=======
    33ac:	80 e0       	ldi	r24, 0x00	; 0
    33ae:	0e 94 ff 26 	call	0x4dfe	; 0x4dfe <status_leds_fastBlink>
		// Make the red led blink fast to tell something went wrong
		status_leds_fastBlink(led_ST1); // OPTIONAL
    33b2:	0e 94 ad 03 	call	0x75a	; 0x75a <vPortYield>
>>>>>>> Stashed changes

		// Lets stay here
		while (1)
		{
			taskYIELD();
<<<<<<< Updated upstream
    3252:	df 91       	pop	r29
    3254:	cf 91       	pop	r28
    3256:	08 95       	ret

00003258 <lora_handler_task>:
		}
	}
}
    3258:	cf 93       	push	r28
    325a:	df 93       	push	r29
    325c:	00 d0       	rcall	.+0      	; 0x325e <lora_handler_task+0x6>
=======
    33b6:	fd cf       	rjmp	.-6      	; 0x33b2 <_lora_setup+0x174>
    33b8:	64 96       	adiw	r28, 0x14	; 20
    33ba:	0f b6       	in	r0, 0x3f	; 63
		}
	}
}
    33bc:	f8 94       	cli
    33be:	de bf       	out	0x3e, r29	; 62
    33c0:	0f be       	out	0x3f, r0	; 63
    33c2:	cd bf       	out	0x3d, r28	; 61
    33c4:	df 91       	pop	r29
    33c6:	cf 91       	pop	r28
    33c8:	1f 91       	pop	r17
    33ca:	0f 91       	pop	r16
    33cc:	08 95       	ret

000033ce <lora_handler_task>:
    33ce:	cf 93       	push	r28
    33d0:	df 93       	push	r29
>>>>>>> Stashed changes

/*-----------------------------------------------------------*/
void lora_handler_task( void *pvParameters )
{
<<<<<<< Updated upstream
    325e:	1f 92       	push	r1
    3260:	cd b7       	in	r28, 0x3d	; 61
    3262:	de b7       	in	r29, 0x3e	; 62
	
	// Hardware reset of LoRaWAN transceiver
	lora_driver_resetRn2483(1);
    3264:	81 e0       	ldi	r24, 0x01	; 1
    3266:	d9 d1       	rcall	.+946    	; 0x361a <lora_driver_resetRn2483>
	vTaskDelay(2);
    3268:	62 e0       	ldi	r22, 0x02	; 2
    326a:	70 e0       	ldi	r23, 0x00	; 0
    326c:	80 e0       	ldi	r24, 0x00	; 0
    326e:	90 e0       	ldi	r25, 0x00	; 0
    3270:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <vTaskDelay>
	lora_driver_resetRn2483(0);
    3274:	80 e0       	ldi	r24, 0x00	; 0
    3276:	d1 d1       	rcall	.+930    	; 0x361a <lora_driver_resetRn2483>
	// Give it a chance to wakeup
	vTaskDelay(150);
    3278:	66 e9       	ldi	r22, 0x96	; 150
    327a:	70 e0       	ldi	r23, 0x00	; 0
    327c:	80 e0       	ldi	r24, 0x00	; 0
    327e:	90 e0       	ldi	r25, 0x00	; 0
    3280:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <vTaskDelay>

	lora_driver_flushBuffers(); // get rid of first version string from module after reset!
    3284:	83 d1       	rcall	.+774    	; 0x358c <lora_driver_flushBuffers>

	_lora_setup();
    3286:	2c df       	rcall	.-424    	; 0x30e0 <_lora_setup>
    3288:	8a e2       	ldi	r24, 0x2A	; 42

	printf("\t Do we get here? \n");
    328a:	94 e0       	ldi	r25, 0x04	; 4
    328c:	0e 94 1b 28 	call	0x5036	; 0x5036 <puts>
    3290:	e7 ef       	ldi	r30, 0xF7	; 247

	_uplink_payload.len = 6;
    3292:	f1 e1       	ldi	r31, 0x11	; 17
    3294:	86 e0       	ldi	r24, 0x06	; 6
    3296:	81 83       	std	Z+1, r24	; 0x01
    3298:	82 e0       	ldi	r24, 0x02	; 2
	_uplink_payload.portNo = 2;
    329a:	80 83       	st	Z, r24
    329c:	0e 94 36 0c 	call	0x186c	; 0x186c <xTaskGetTickCount>

	TickType_t xLastWakeTime;
	const TickType_t xFrequency = pdMS_TO_TICKS(300000UL); // Upload message every 5 minutes (300000 ms)
	xLastWakeTime = xTaskGetTickCount();
    32a0:	69 83       	std	Y+1, r22	; 0x01
    32a2:	7a 83       	std	Y+2, r23	; 0x02
    32a4:	8b 83       	std	Y+3, r24	; 0x03
    32a6:	9c 83       	std	Y+4, r25	; 0x04
    32a8:	48 ea       	ldi	r20, 0xA8	; 168
	
	for(;;)
	{
		xTaskDelayUntil( &xLastWakeTime, xFrequency );
    32aa:	58 e4       	ldi	r21, 0x48	; 72
    32ac:	60 e0       	ldi	r22, 0x00	; 0
    32ae:	70 e0       	ldi	r23, 0x00	; 0
    32b0:	ce 01       	movw	r24, r28
    32b2:	01 96       	adiw	r24, 0x01	; 1
    32b4:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <xTaskDelayUntil>
    32b8:	e7 ef       	ldi	r30, 0xF7	; 247
		uint16_t hum = 12345; // Dummy humidity
		int16_t temp = 675; // Dummy temp
		uint16_t co2_ppm = 1050; // Dummy CO2
		// Make own payload consisting of struct

		_uplink_payload.bytes[0] = hum >> 8;
    32ba:	f1 e1       	ldi	r31, 0x11	; 17
    32bc:	80 e3       	ldi	r24, 0x30	; 48
    32be:	82 83       	std	Z+2, r24	; 0x02
    32c0:	89 e3       	ldi	r24, 0x39	; 57
		_uplink_payload.bytes[1] = hum & 0xFF;
    32c2:	83 83       	std	Z+3, r24	; 0x03
    32c4:	82 e0       	ldi	r24, 0x02	; 2
		_uplink_payload.bytes[2] = temp >> 8;
    32c6:	84 83       	std	Z+4, r24	; 0x04
    32c8:	83 ea       	ldi	r24, 0xA3	; 163
		_uplink_payload.bytes[3] = temp & 0xFF;
    32ca:	85 83       	std	Z+5, r24	; 0x05
    32cc:	84 e0       	ldi	r24, 0x04	; 4
		_uplink_payload.bytes[4] = co2_ppm >> 8;
    32ce:	86 83       	std	Z+6, r24	; 0x06
    32d0:	8a e1       	ldi	r24, 0x1A	; 26
		_uplink_payload.bytes[5] = co2_ppm & 0xFF;
    32d2:	87 83       	std	Z+7, r24	; 0x07
    32d4:	83 e0       	ldi	r24, 0x03	; 3

		status_leds_shortPuls(led_ST4);  // OPTIONAL
    32d6:	0e 94 4a 24 	call	0x4894	; 0x4894 <status_leds_shortPuls>
		printf("Upload Message >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_sendUploadMessage(false, &_uplink_payload)));
    32da:	67 ef       	ldi	r22, 0xF7	; 247
    32dc:	71 e1       	ldi	r23, 0x11	; 17
    32de:	80 e0       	ldi	r24, 0x00	; 0
    32e0:	3a d2       	rcall	.+1140   	; 0x3756 <lora_driver_sendUploadMessage>
    32e2:	26 d4       	rcall	.+2124   	; 0x3b30 <lora_driver_mapReturnCodeToText>
    32e4:	9f 93       	push	r25
    32e6:	8f 93       	push	r24
    32e8:	8d e3       	ldi	r24, 0x3D	; 61
    32ea:	94 e0       	ldi	r25, 0x04	; 4
    32ec:	9f 93       	push	r25
    32ee:	8f 93       	push	r24
    32f0:	0e 94 08 28 	call	0x5010	; 0x5010 <printf>
    32f4:	0f 90       	pop	r0
    32f6:	0f 90       	pop	r0
    32f8:	0f 90       	pop	r0
    32fa:	0f 90       	pop	r0
    32fc:	d5 cf       	rjmp	.-86     	; 0x32a8 <lora_handler_task+0x50>

000032fe <lora_handler_initialise>:
    32fe:	ef 92       	push	r14
void lora_handler_task( void *pvParameters );
=======
    33d2:	cd b7       	in	r28, 0x3d	; 61
    33d4:	de b7       	in	r29, 0x3e	; 62
    33d6:	6a 97       	sbiw	r28, 0x1a	; 26
    33d8:	0f b6       	in	r0, 0x3f	; 63
    33da:	f8 94       	cli
    33dc:	de bf       	out	0x3e, r29	; 62
    33de:	0f be       	out	0x3f, r0	; 63
    33e0:	cd bf       	out	0x3d, r28	; 61

	// Hardware reset of LoRaWAN transceiver
	lora_driver_resetRn2483(1);
    33e2:	81 e0       	ldi	r24, 0x01	; 1
    33e4:	e8 d3       	rcall	.+2000   	; 0x3bb6 <lora_driver_resetRn2483>
	vTaskDelay(2);
    33e6:	62 e0       	ldi	r22, 0x02	; 2
    33e8:	70 e0       	ldi	r23, 0x00	; 0
    33ea:	80 e0       	ldi	r24, 0x00	; 0
    33ec:	90 e0       	ldi	r25, 0x00	; 0
    33ee:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <vTaskDelay>
	lora_driver_resetRn2483(0);
    33f2:	80 e0       	ldi	r24, 0x00	; 0
    33f4:	e0 d3       	rcall	.+1984   	; 0x3bb6 <lora_driver_resetRn2483>
	// Give it a chance to wakeup
	vTaskDelay(150);
    33f6:	66 e9       	ldi	r22, 0x96	; 150
    33f8:	70 e0       	ldi	r23, 0x00	; 0
    33fa:	80 e0       	ldi	r24, 0x00	; 0
    33fc:	90 e0       	ldi	r25, 0x00	; 0
    33fe:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <vTaskDelay>

	lora_driver_flushBuffers(); // get rid of first version string from module after reset!
    3402:	92 d3       	rcall	.+1828   	; 0x3b28 <lora_driver_flushBuffers>

	_lora_setup();
    3404:	1c df       	rcall	.-456    	; 0x323e <_lora_setup>
    3406:	e1 e7       	ldi	r30, 0x71	; 113

	// DEFINING SIZE OF PAYLOAD
	_uplink_payload.len = 8;
    3408:	f6 e1       	ldi	r31, 0x16	; 22
    340a:	88 e0       	ldi	r24, 0x08	; 8
    340c:	81 83       	std	Z+1, r24	; 0x01
    340e:	82 e0       	ldi	r24, 0x02	; 2
	_uplink_payload.portNo = 2;
    3410:	80 83       	st	Z, r24
    3412:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <xTaskGetTickCount>

	TickType_t xLastWakeTime;
<<<<<<< HEAD
	const TickType_t xFrequency = pdMS_TO_TICKS(400000UL); // UNDER TESTING 30000 (30 sec) Upload message every 5 minutes (300000 ms)
=======
	const TickType_t xFrequency = pdMS_TO_TICKS(300000UL); // UNDER TESTING 30000 (30 sec) Upload message every 5 minutes (300000 ms)
>>>>>>> 1413a59f4c1676bf811b30fc6b6b1aaefe980264
	xLastWakeTime = xTaskGetTickCount();
    3416:	69 83       	std	Y+1, r22	; 0x01
    3418:	7a 83       	std	Y+2, r23	; 0x02
    341a:	8b 83       	std	Y+3, r24	; 0x03
    341c:	9c 83       	std	Y+4, r25	; 0x04
    341e:	8b e1       	ldi	r24, 0x1B	; 27
	for(;;)
	{
		uint16_t growbroId = 1;
<<<<<<< HEAD
		
		printf("\t going into delay \n");
    33be:	94 e0       	ldi	r25, 0x04	; 4
    33c0:	0e 94 a3 2b 	call	0x5746	; 0x5746 <puts>
    33c4:	40 ee       	ldi	r20, 0xE0	; 224
		xTaskDelayUntil( &xLastWakeTime, xFrequency );
    33c6:	50 e6       	ldi	r21, 0x60	; 96
    33c8:	60 e0       	ldi	r22, 0x00	; 0
    33ca:	70 e0       	ldi	r23, 0x00	; 0
    33cc:	ce 01       	movw	r24, r28
    33ce:	01 96       	adiw	r24, 0x01	; 1
    33d0:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <xTaskDelayUntil>
    33d4:	0e 94 4b 01 	call	0x296	; 0x296 <dequeueSharedData>
=======
					
			
		printf("\t going into delay \n");
    3420:	94 e0       	ldi	r25, 0x04	; 4
    3422:	0e 94 bd 2c 	call	0x597a	; 0x597a <puts>
    3426:	48 ea       	ldi	r20, 0xA8	; 168
		xTaskDelayUntil( &xLastWakeTime, xFrequency );
    3428:	58 e4       	ldi	r21, 0x48	; 72
    342a:	60 e0       	ldi	r22, 0x00	; 0
    342c:	70 e0       	ldi	r23, 0x00	; 0
    342e:	ce 01       	movw	r24, r28
    3430:	01 96       	adiw	r24, 0x01	; 1
    3432:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <xTaskDelayUntil>
    3436:	0e 94 73 01 	call	0x2e6	; 0x2e6 <dequeueSharedData>
>>>>>>> 1413a59f4c1676bf811b30fc6b6b1aaefe980264
		
		// Creating struct and dequeueing data
		SharedData_t sharedData;
		sharedData = dequeueSharedData();
    343a:	8c 01       	movw	r16, r24
    343c:	dc 01       	movw	r26, r24
		
		printf("DEQUEUE: humidity: %d, co2: %d, Temp: %d \n", sharedData->humidity, sharedData->co2, sharedData->temperature);
    343e:	13 96       	adiw	r26, 0x03	; 3
    3440:	8c 91       	ld	r24, X
    3442:	13 97       	sbiw	r26, 0x03	; 3
    3444:	8f 93       	push	r24
    3446:	12 96       	adiw	r26, 0x02	; 2
    3448:	8c 91       	ld	r24, X
    344a:	12 97       	sbiw	r26, 0x02	; 2
    344c:	8f 93       	push	r24
    344e:	11 96       	adiw	r26, 0x01	; 1
    3450:	8c 91       	ld	r24, X
    3452:	11 97       	sbiw	r26, 0x01	; 1
    3454:	8f 93       	push	r24
    3456:	8c 91       	ld	r24, X
    3458:	8f 93       	push	r24
    345a:	15 96       	adiw	r26, 0x05	; 5
    345c:	8c 91       	ld	r24, X
    345e:	15 97       	sbiw	r26, 0x05	; 5
    3460:	8f 93       	push	r24
    3462:	14 96       	adiw	r26, 0x04	; 4
    3464:	8c 91       	ld	r24, X
    3466:	8f 93       	push	r24
    3468:	8f e2       	ldi	r24, 0x2F	; 47
    346a:	94 e0       	ldi	r25, 0x04	; 4
    346c:	9f 93       	push	r25
    346e:	8f 93       	push	r24
    3470:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    3474:	e1 e7       	ldi	r30, 0x71	; 113
		
		// CREATING OUR OWN PAYLOAD
		_uplink_payload.bytes[0] = growbroId >> 8;
<<<<<<< HEAD
    3414:	f2 e1       	ldi	r31, 0x12	; 18
    3416:	12 82       	std	Z+2, r1	; 0x02
    3418:	81 e0       	ldi	r24, 0x01	; 1
=======
    3476:	f6 e1       	ldi	r31, 0x16	; 22
    3478:	12 82       	std	Z+2, r1	; 0x02
    347a:	81 e0       	ldi	r24, 0x01	; 1
>>>>>>> 1413a59f4c1676bf811b30fc6b6b1aaefe980264
		_uplink_payload.bytes[1] = growbroId & 0xFF;
    347c:	83 83       	std	Z+3, r24	; 0x03
    347e:	d8 01       	movw	r26, r16
		_uplink_payload.bytes[2] = sharedData->co2 >> 8;
    3480:	11 96       	adiw	r26, 0x01	; 1
    3482:	8c 91       	ld	r24, X
    3484:	11 97       	sbiw	r26, 0x01	; 1
    3486:	84 83       	std	Z+4, r24	; 0x04
    3488:	8c 91       	ld	r24, X
		_uplink_payload.bytes[3] = sharedData->co2 & 0xFF;
    348a:	85 83       	std	Z+5, r24	; 0x05
    348c:	15 96       	adiw	r26, 0x05	; 5
		_uplink_payload.bytes[4] = sharedData->humidity >> 8;
    348e:	8c 91       	ld	r24, X
    3490:	15 97       	sbiw	r26, 0x05	; 5
    3492:	86 83       	std	Z+6, r24	; 0x06
    3494:	14 96       	adiw	r26, 0x04	; 4
		_uplink_payload.bytes[5] = sharedData->humidity & 0xFF;
    3496:	8c 91       	ld	r24, X
    3498:	14 97       	sbiw	r26, 0x04	; 4
    349a:	87 83       	std	Z+7, r24	; 0x07
    349c:	13 96       	adiw	r26, 0x03	; 3
		_uplink_payload.bytes[6] = sharedData->temperature >> 8;
    349e:	8c 91       	ld	r24, X
    34a0:	13 97       	sbiw	r26, 0x03	; 3
    34a2:	80 87       	std	Z+8, r24	; 0x08
    34a4:	12 96       	adiw	r26, 0x02	; 2
		_uplink_payload.bytes[7] = sharedData->temperature & 0xFF;
    34a6:	8c 91       	ld	r24, X
    34a8:	81 87       	std	Z+9, r24	; 0x09
    34aa:	83 e0       	ldi	r24, 0x03	; 3

		status_leds_shortPuls(led_ST4);  // OPTIONAL
    34ac:	0e 94 52 27 	call	0x4ea4	; 0x4ea4 <status_leds_shortPuls>
		
		// SENDING PAYLOAD
		printf("Upload Message >%s<\n", lora_driver_mapReturnCodeToText(lora_driver_sendUploadMessage(false, &_uplink_payload)));
    34b0:	61 e7       	ldi	r22, 0x71	; 113
    34b2:	76 e1       	ldi	r23, 0x16	; 22
    34b4:	80 e0       	ldi	r24, 0x00	; 0
    34b6:	1d d4       	rcall	.+2106   	; 0x3cf2 <lora_driver_sendUploadMessage>
    34b8:	09 d6       	rcall	.+3090   	; 0x40cc <lora_driver_mapReturnCodeToText>
    34ba:	9f 93       	push	r25
    34bc:	8f 93       	push	r24
    34be:	8a e5       	ldi	r24, 0x5A	; 90
    34c0:	94 e0       	ldi	r25, 0x04	; 4
    34c2:	9f 93       	push	r25
    34c4:	8f 93       	push	r24
    34c6:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    34ca:	0f ef       	ldi	r16, 0xFF	; 255
		
		
		lora_driver_payload_t downlinkPayload;
		
		xMessageBufferReceive(downlinkMessageBufferHandle, &downlinkPayload, sizeof(lora_driver_payload_t), portMAX_DELAY);
    34cc:	1f ef       	ldi	r17, 0xFF	; 255
    34ce:	98 01       	movw	r18, r16
    34d0:	46 e1       	ldi	r20, 0x16	; 22
    34d2:	50 e0       	ldi	r21, 0x00	; 0
    34d4:	be 01       	movw	r22, r28
    34d6:	6b 5f       	subi	r22, 0xFB	; 251
    34d8:	7f 4f       	sbci	r23, 0xFF	; 255
    34da:	80 91 f7 17 	lds	r24, 0x17F7	; 0x8017f7 <downlinkMessageBufferHandle>
    34de:	90 91 f8 17 	lds	r25, 0x17F8	; 0x8017f8 <downlinkMessageBufferHandle+0x1>
    34e2:	0e 94 d7 09 	call	0x13ae	; 0x13ae <xStreamBufferReceive>
    34e6:	9e 81       	ldd	r25, Y+6	; 0x06
		printf("DOWN LINK: from port: %d with %d bytes received!", downlinkPayload.portNo, downlinkPayload.len); // Just for Debug
    34e8:	8d 81       	ldd	r24, Y+5	; 0x05
    34ea:	1f 92       	push	r1
    34ec:	9f 93       	push	r25
    34ee:	1f 92       	push	r1
    34f0:	8f 93       	push	r24
    34f2:	8f e6       	ldi	r24, 0x6F	; 111
    34f4:	94 e0       	ldi	r25, 0x04	; 4
    34f6:	9f 93       	push	r25
    34f8:	8f 93       	push	r24
    34fa:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    34fe:	8e 81       	ldd	r24, Y+6	; 0x06

		
		if (4 == downlinkPayload.len) // Check that we have got the expected 4 bytes
    3500:	0f b6       	in	r0, 0x3f	; 63
    3502:	f8 94       	cli
    3504:	de bf       	out	0x3e, r29	; 62
    3506:	0f be       	out	0x3f, r0	; 63
    3508:	cd bf       	out	0x3d, r28	; 61
    350a:	84 30       	cpi	r24, 0x04	; 4
    350c:	09 f0       	breq	.+2      	; 0x3510 <lora_handler_task+0x142>
    350e:	87 cf       	rjmp	.-242    	; 0x341e <lora_handler_task+0x50>
    3510:	8f 81       	ldd	r24, Y+7	; 0x07
		{
		
		recieve = (downlinkPayload.bytes[0] << 8) + downlinkPayload.bytes[1];
    3512:	90 e0       	ldi	r25, 0x00	; 0
    3514:	98 2f       	mov	r25, r24
    3516:	88 27       	eor	r24, r24
    3518:	28 85       	ldd	r18, Y+8	; 0x08
    351a:	82 0f       	add	r24, r18
    351c:	91 1d       	adc	r25, r1
    351e:	9f 93       	push	r25
		printf("recieved: %d \n", recieve);
    3520:	8f 93       	push	r24
    3522:	80 ea       	ldi	r24, 0xA0	; 160
    3524:	94 e0       	ldi	r25, 0x04	; 4
    3526:	9f 93       	push	r25
    3528:	8f 93       	push	r24
    352a:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    352e:	0f 90       	pop	r0
    3530:	0f 90       	pop	r0
    3532:	0f 90       	pop	r0
    3534:	0f 90       	pop	r0
    3536:	73 cf       	rjmp	.-282    	; 0x341e <lora_handler_task+0x50>

00003538 <task_download>:
		}
	}
    3538:	cf 93       	push	r28

}

void task_download( void *pvParameters )
{
    353a:	df 93       	push	r29
    353c:	cd b7       	in	r28, 0x3d	; 61
    353e:	de b7       	in	r29, 0x3e	; 62
    3540:	66 97       	sbiw	r28, 0x16	; 22
    3542:	0f b6       	in	r0, 0x3f	; 63
    3544:	f8 94       	cli
    3546:	de bf       	out	0x3e, r29	; 62
    3548:	0f be       	out	0x3f, r0	; 63
    354a:	cd bf       	out	0x3d, r28	; 61

	// Hardware reset of LoRaWAN transceiver
	lora_driver_resetRn2483(1);
    354c:	81 e0       	ldi	r24, 0x01	; 1
    354e:	33 d3       	rcall	.+1638   	; 0x3bb6 <lora_driver_resetRn2483>
	vTaskDelay(2);
    3550:	62 e0       	ldi	r22, 0x02	; 2
    3552:	70 e0       	ldi	r23, 0x00	; 0
    3554:	80 e0       	ldi	r24, 0x00	; 0
    3556:	90 e0       	ldi	r25, 0x00	; 0
    3558:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <vTaskDelay>
	lora_driver_resetRn2483(0);
    355c:	80 e0       	ldi	r24, 0x00	; 0
    355e:	2b d3       	rcall	.+1622   	; 0x3bb6 <lora_driver_resetRn2483>
	// Give it a chance to wakeup
	vTaskDelay(150);
    3560:	66 e9       	ldi	r22, 0x96	; 150
    3562:	70 e0       	ldi	r23, 0x00	; 0
    3564:	80 e0       	ldi	r24, 0x00	; 0
    3566:	90 e0       	ldi	r25, 0x00	; 0
    3568:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <vTaskDelay>

	lora_driver_flushBuffers(); // get rid of first version string from module after reset!
    356c:	dd d2       	rcall	.+1466   	; 0x3b28 <lora_driver_flushBuffers>
	
	// JUST FOR SERVO
	rc_servo_initialise();
    356e:	fb d6       	rcall	.+3574   	; 0x4366 <rc_servo_initialise>
	uint8_t servoNo = 1;
	int8_t percent = 100;
	rc_servo_setPosition(servoNo, percent);
    3570:	64 e6       	ldi	r22, 0x64	; 100
    3572:	81 e0       	ldi	r24, 0x01	; 1
    3574:	e0 d6       	rcall	.+3520   	; 0x4336 <rc_servo_setPosition>
    3576:	0f ef       	ldi	r16, 0xFF	; 255
	uint16_t recieve;
	for(;;)
	{	
		lora_driver_payload_t downlinkPayload;
		
		xMessageBufferReceive(downlinkMessageBufferHandle, &downlinkPayload, sizeof(lora_driver_payload_t), portMAX_DELAY);
    3578:	1f ef       	ldi	r17, 0xFF	; 255
    357a:	98 01       	movw	r18, r16
    357c:	46 e1       	ldi	r20, 0x16	; 22
    357e:	50 e0       	ldi	r21, 0x00	; 0
    3580:	be 01       	movw	r22, r28
    3582:	6f 5f       	subi	r22, 0xFF	; 255
    3584:	7f 4f       	sbci	r23, 0xFF	; 255
    3586:	80 91 f7 17 	lds	r24, 0x17F7	; 0x8017f7 <downlinkMessageBufferHandle>
    358a:	90 91 f8 17 	lds	r25, 0x17F8	; 0x8017f8 <downlinkMessageBufferHandle+0x1>
    358e:	0e 94 d7 09 	call	0x13ae	; 0x13ae <xStreamBufferReceive>
    3592:	9a 81       	ldd	r25, Y+2	; 0x02
		printf("DOWN LINK: from port: %d with %d bytes received!", downlinkPayload.portNo, downlinkPayload.len); // Just for Debug
    3594:	89 81       	ldd	r24, Y+1	; 0x01
    3596:	1f 92       	push	r1
    3598:	9f 93       	push	r25
    359a:	1f 92       	push	r1
    359c:	8f 93       	push	r24
    359e:	8f e6       	ldi	r24, 0x6F	; 111
    35a0:	94 e0       	ldi	r25, 0x04	; 4
    35a2:	9f 93       	push	r25
    35a4:	8f 93       	push	r24
    35a6:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
    35aa:	0f 90       	pop	r0
    35ac:	0f 90       	pop	r0
    35ae:	0f 90       	pop	r0
    35b0:	0f 90       	pop	r0
    35b2:	0f 90       	pop	r0
    35b4:	0f 90       	pop	r0
    35b6:	df cf       	rjmp	.-66     	; 0x3576 <task_download+0x3e>

000035b8 <lora_handler_initialise>:
    35b8:	ef 92       	push	r14
void task_download( void *pvParameters );
>>>>>>> Stashed changes

static lora_driver_payload_t _uplink_payload;

void lora_handler_initialise(UBaseType_t lora_handler_task_priority)
{
<<<<<<< Updated upstream
    3300:	ff 92       	push	r15
    3302:	0f 93       	push	r16
	xTaskCreate(
    3304:	e1 2c       	mov	r14, r1
    3306:	f1 2c       	mov	r15, r1
    3308:	08 2f       	mov	r16, r24
    330a:	20 e0       	ldi	r18, 0x00	; 0
    330c:	30 e0       	ldi	r19, 0x00	; 0
    330e:	48 e8       	ldi	r20, 0x88	; 136
    3310:	51 e0       	ldi	r21, 0x01	; 1
    3312:	62 e5       	ldi	r22, 0x52	; 82
    3314:	74 e0       	ldi	r23, 0x04	; 4
    3316:	8c e2       	ldi	r24, 0x2C	; 44
    3318:	99 e1       	ldi	r25, 0x19	; 25
    331a:	0e 94 ac 0b 	call	0x1758	; 0x1758 <xTaskCreate>
=======
    35ba:	ff 92       	push	r15
    35bc:	0f 93       	push	r16
    35be:	cf 93       	push	r28
	xTaskCreate(
    35c0:	e1 2c       	mov	r14, r1
    35c2:	f1 2c       	mov	r15, r1
    35c4:	08 2f       	mov	r16, r24
    35c6:	20 e0       	ldi	r18, 0x00	; 0
    35c8:	30 e0       	ldi	r19, 0x00	; 0
    35ca:	48 e8       	ldi	r20, 0x88	; 136
    35cc:	51 e0       	ldi	r21, 0x01	; 1
    35ce:	6f ea       	ldi	r22, 0xAF	; 175
    35d0:	74 e0       	ldi	r23, 0x04	; 4
    35d2:	87 ee       	ldi	r24, 0xE7	; 231
    35d4:	99 e1       	ldi	r25, 0x19	; 25
    35d6:	0e 94 6a 0c 	call	0x18d4	; 0x18d4 <xTaskCreate>
>>>>>>> Stashed changes
	,  "LRHand"  // A name just for humans
	,  configMINIMAL_STACK_SIZE+200  // This stack size can be checked & adjusted by reading the Stack Highwater
	,  NULL
	,  lora_handler_task_priority  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );
		xTaskCreate(
    35da:	20 e0       	ldi	r18, 0x00	; 0
    35dc:	30 e0       	ldi	r19, 0x00	; 0
    35de:	48 e8       	ldi	r20, 0x88	; 136
    35e0:	51 e0       	ldi	r21, 0x01	; 1
    35e2:	66 eb       	ldi	r22, 0xB6	; 182
    35e4:	74 e0       	ldi	r23, 0x04	; 4
    35e6:	8c e9       	ldi	r24, 0x9C	; 156
    35e8:	9a e1       	ldi	r25, 0x1A	; 26
    35ea:	0e 94 6a 0c 	call	0x18d4	; 0x18d4 <xTaskCreate>
	,  "LRHanddown"  // A name just for humans
	,  configMINIMAL_STACK_SIZE+200  // This stack size can be checked & adjusted by reading the Stack Highwater
	,  NULL
	,  lora_handler_task_priority  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );
}
<<<<<<< Updated upstream
    331e:	0f 91       	pop	r16
    3320:	ff 90       	pop	r15
    3322:	ef 90       	pop	r14
    3324:	08 95       	ret

00003326 <initialiseSystem>:
    3326:	81 b1       	in	r24, 0x01	; 1
    3328:	81 68       	ori	r24, 0x81	; 129
    332a:	81 b9       	out	0x01, r24	; 1
    332c:	80 e0       	ldi	r24, 0x00	; 0
    332e:	0e 94 7f 22 	call	0x44fe	; 0x44fe <stdio_initialise>
    3332:	85 e0       	ldi	r24, 0x05	; 5
    3334:	0e 94 86 23 	call	0x470c	; 0x470c <status_leds_initialise>
    3338:	60 e0       	ldi	r22, 0x00	; 0
    333a:	70 e0       	ldi	r23, 0x00	; 0
    333c:	81 e0       	ldi	r24, 0x01	; 1
    333e:	2d d1       	rcall	.+602    	; 0x359a <lora_driver_initialise>
    3340:	83 e0       	ldi	r24, 0x03	; 3
    3342:	dd df       	rcall	.-70     	; 0x32fe <lora_handler_initialise>
    3344:	83 e0       	ldi	r24, 0x03	; 3
    3346:	d0 d4       	rcall	.+2464   	; 0x3ce8 <mh_z19_initialise>
    3348:	91 dd       	rcall	.-1246   	; 0x2e6c <initializeQueues>
    334a:	d0 cd       	rjmp	.-1120   	; 0x2eec <initializeSharedDataQueue>
    334c:	08 95       	ret

0000334e <main>:
    334e:	eb df       	rcall	.-42     	; 0x3326 <initialiseSystem>
    3350:	89 e5       	ldi	r24, 0x59	; 89
    3352:	94 e0       	ldi	r25, 0x04	; 4
    3354:	0e 94 1b 28 	call	0x5036	; 0x5036 <puts>
    3358:	bf de       	rcall	.-642    	; 0x30d8 <startTasks>
    335a:	ff cf       	rjmp	.-2      	; 0x335a <main+0xc>

0000335c <_serialCallBack>:
    335c:	0f 93       	push	r16
    335e:	1f 93       	push	r17
    3360:	cf 93       	push	r28
    3362:	df 93       	push	r29
    3364:	1f 92       	push	r1
    3366:	1f 92       	push	r1
    3368:	cd b7       	in	r28, 0x3d	; 61
    336a:	de b7       	in	r29, 0x3e	; 62
    336c:	8c 01       	movw	r16, r24
    336e:	19 82       	std	Y+1, r1	; 0x01
    3370:	2d c0       	rjmp	.+90     	; 0x33cc <_serialCallBack+0x70>
    3372:	e0 91 d5 12 	lds	r30, 0x12D5	; 0x8012d5 <rec_buf_inp.2878>
    3376:	ec 32       	cpi	r30, 0x2C	; 44
    3378:	50 f4       	brcc	.+20     	; 0x338e <_serialCallBack+0x32>
    337a:	81 e0       	ldi	r24, 0x01	; 1
    337c:	8e 0f       	add	r24, r30
    337e:	80 93 d5 12 	sts	0x12D5, r24	; 0x8012d5 <rec_buf_inp.2878>
    3382:	f0 e0       	ldi	r31, 0x00	; 0
    3384:	e9 5f       	subi	r30, 0xF9	; 249
    3386:	fc 4e       	sbci	r31, 0xEC	; 236
    3388:	8a 81       	ldd	r24, Y+2	; 0x02
    338a:	80 83       	st	Z, r24
    338c:	02 c0       	rjmp	.+4      	; 0x3392 <_serialCallBack+0x36>
    338e:	10 92 d5 12 	sts	0x12D5, r1	; 0x8012d5 <rec_buf_inp.2878>
    3392:	8a 81       	ldd	r24, Y+2	; 0x02
    3394:	8a 30       	cpi	r24, 0x0A	; 10
    3396:	d1 f4       	brne	.+52     	; 0x33cc <_serialCallBack+0x70>
    3398:	40 91 d5 12 	lds	r20, 0x12D5	; 0x8012d5 <rec_buf_inp.2878>
    339c:	50 e0       	ldi	r21, 0x00	; 0
    339e:	fa 01       	movw	r30, r20
    33a0:	eb 5f       	subi	r30, 0xFB	; 251
    33a2:	fc 4e       	sbci	r31, 0xEC	; 236
    33a4:	10 82       	st	Z, r1
    33a6:	41 50       	subi	r20, 0x01	; 1
    33a8:	51 09       	sbc	r21, r1
    33aa:	9e 01       	movw	r18, r28
    33ac:	2f 5f       	subi	r18, 0xFF	; 255
    33ae:	3f 4f       	sbci	r19, 0xFF	; 255
    33b0:	67 e0       	ldi	r22, 0x07	; 7
    33b2:	73 e1       	ldi	r23, 0x13	; 19
    33b4:	80 91 d8 12 	lds	r24, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle>
    33b8:	90 91 d9 12 	lds	r25, 0x12D9	; 0x8012d9 <_serialReplyBufferHandle+0x1>
    33bc:	0e 94 d5 08 	call	0x11aa	; 0x11aa <xStreamBufferSendFromISR>
    33c0:	89 81       	ldd	r24, Y+1	; 0x01
    33c2:	81 11       	cpse	r24, r1
    33c4:	0e 94 ef 02 	call	0x5de	; 0x5de <vPortYield>
    33c8:	10 92 d5 12 	sts	0x12D5, r1	; 0x8012d5 <rec_buf_inp.2878>
    33cc:	be 01       	movw	r22, r28
    33ce:	6e 5f       	subi	r22, 0xFE	; 254
    33d0:	7f 4f       	sbci	r23, 0xFF	; 255
    33d2:	c8 01       	movw	r24, r16
    33d4:	fe d5       	rcall	.+3068   	; 0x3fd2 <serial_getByte>
    33d6:	88 23       	and	r24, r24
    33d8:	61 f2       	breq	.-104    	; 0x3372 <_serialCallBack+0x16>
    33da:	0f 90       	pop	r0
    33dc:	0f 90       	pop	r0
    33de:	df 91       	pop	r29
    33e0:	cf 91       	pop	r28
    33e2:	1f 91       	pop	r17
    33e4:	0f 91       	pop	r16
    33e6:	08 95       	ret

000033e8 <_uploadMessage>:
    33e8:	0f 93       	push	r16
    33ea:	1f 93       	push	r17
    33ec:	cf 93       	push	r28
    33ee:	df 93       	push	r29
    33f0:	8c 01       	movw	r16, r24
    33f2:	eb 01       	movw	r28, r22
    33f4:	80 91 d8 12 	lds	r24, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle>
    33f8:	90 91 d9 12 	lds	r25, 0x12D9	; 0x8012d9 <_serialReplyBufferHandle+0x1>
    33fc:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <xStreamBufferReset>
    3400:	b8 01       	movw	r22, r16
    3402:	81 e7       	ldi	r24, 0x71	; 113
    3404:	92 e1       	ldi	r25, 0x12	; 18
    3406:	0e 94 e9 27 	call	0x4fd2	; 0x4fd2 <strcpy>
    340a:	20 97       	sbiw	r28, 0x00	; 0
    340c:	79 f0       	breq	.+30     	; 0x342c <_uploadMessage+0x44>
    340e:	e1 e7       	ldi	r30, 0x71	; 113
    3410:	f2 e1       	ldi	r31, 0x12	; 18
    3412:	01 90       	ld	r0, Z+
    3414:	00 20       	and	r0, r0
    3416:	e9 f7       	brne	.-6      	; 0x3412 <_uploadMessage+0x2a>
    3418:	31 97       	sbiw	r30, 0x01	; 1
    341a:	80 e2       	ldi	r24, 0x20	; 32
    341c:	90 e0       	ldi	r25, 0x00	; 0
    341e:	91 83       	std	Z+1, r25	; 0x01
    3420:	80 83       	st	Z, r24
    3422:	be 01       	movw	r22, r28
    3424:	81 e7       	ldi	r24, 0x71	; 113
    3426:	92 e1       	ldi	r25, 0x12	; 18
    3428:	0e 94 de 27 	call	0x4fbc	; 0x4fbc <strcat>
    342c:	e1 e7       	ldi	r30, 0x71	; 113
    342e:	f2 e1       	ldi	r31, 0x12	; 18
    3430:	df 01       	movw	r26, r30
    3432:	0d 90       	ld	r0, X+
    3434:	00 20       	and	r0, r0
    3436:	e9 f7       	brne	.-6      	; 0x3432 <_uploadMessage+0x4a>
    3438:	11 97       	sbiw	r26, 0x01	; 1
    343a:	8d e0       	ldi	r24, 0x0D	; 13
    343c:	9a e0       	ldi	r25, 0x0A	; 10
    343e:	11 96       	adiw	r26, 0x01	; 1
    3440:	9c 93       	st	X, r25
    3442:	8e 93       	st	-X, r24
    3444:	12 96       	adiw	r26, 0x02	; 2
    3446:	1c 92       	st	X, r1
    3448:	01 90       	ld	r0, Z+
    344a:	00 20       	and	r0, r0
    344c:	e9 f7       	brne	.-6      	; 0x3448 <_uploadMessage+0x60>
    344e:	31 97       	sbiw	r30, 0x01	; 1
    3450:	e1 57       	subi	r30, 0x71	; 113
    3452:	f2 41       	sbci	r31, 0x12	; 18
    3454:	ae 2f       	mov	r26, r30
    3456:	81 e7       	ldi	r24, 0x71	; 113
    3458:	92 e1       	ldi	r25, 0x12	; 18
    345a:	ac 01       	movw	r20, r24
    345c:	6a 2f       	mov	r22, r26
    345e:	80 91 da 12 	lds	r24, 0x12DA	; 0x8012da <_rn2483_serial>
    3462:	90 91 db 12 	lds	r25, 0x12DB	; 0x8012db <_rn2483_serial+0x1>
    3466:	60 d5       	rcall	.+2752   	; 0x3f28 <serial_sendBytes>
    3468:	81 11       	cpse	r24, r1
    346a:	11 c0       	rjmp	.+34     	; 0x348e <_uploadMessage+0xa6>
    346c:	08 e2       	ldi	r16, 0x28	; 40
    346e:	15 e0       	ldi	r17, 0x05	; 5
    3470:	20 e0       	ldi	r18, 0x00	; 0
    3472:	30 e0       	ldi	r19, 0x00	; 0
    3474:	4d e2       	ldi	r20, 0x2D	; 45
    3476:	50 e0       	ldi	r21, 0x00	; 0
    3478:	61 e6       	ldi	r22, 0x61	; 97
    347a:	73 e1       	ldi	r23, 0x13	; 19
    347c:	80 91 d8 12 	lds	r24, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle>
    3480:	90 91 d9 12 	lds	r25, 0x12D9	; 0x8012d9 <_serialReplyBufferHandle+0x1>
    3484:	0e 94 19 09 	call	0x1232	; 0x1232 <xStreamBufferReceive>
    3488:	81 e6       	ldi	r24, 0x61	; 97
    348a:	93 e1       	ldi	r25, 0x13	; 19
    348c:	02 c0       	rjmp	.+4      	; 0x3492 <_uploadMessage+0xaa>
    348e:	80 e0       	ldi	r24, 0x00	; 0
    3490:	90 e0       	ldi	r25, 0x00	; 0
    3492:	df 91       	pop	r29
    3494:	cf 91       	pop	r28
    3496:	1f 91       	pop	r17
    3498:	0f 91       	pop	r16
    349a:	08 95       	ret

0000349c <_reply2ReturnCode>:
    349c:	2f 92       	push	r2
    349e:	3f 92       	push	r3
    34a0:	4f 92       	push	r4
    34a2:	5f 92       	push	r5
    34a4:	6f 92       	push	r6
    34a6:	7f 92       	push	r7
    34a8:	8f 92       	push	r8
    34aa:	9f 92       	push	r9
    34ac:	af 92       	push	r10
    34ae:	bf 92       	push	r11
    34b0:	cf 92       	push	r12
    34b2:	df 92       	push	r13
    34b4:	ef 92       	push	r14
    34b6:	ff 92       	push	r15
    34b8:	0f 93       	push	r16
    34ba:	1f 93       	push	r17
    34bc:	cf 93       	push	r28
    34be:	df 93       	push	r29
    34c0:	5c 01       	movw	r10, r24
    34c2:	fc 01       	movw	r30, r24
    34c4:	01 90       	ld	r0, Z+
    34c6:	00 20       	and	r0, r0
    34c8:	e9 f7       	brne	.-6      	; 0x34c4 <_reply2ReturnCode+0x28>
    34ca:	31 97       	sbiw	r30, 0x01	; 1
    34cc:	6f 01       	movw	r12, r30
    34ce:	c8 1a       	sub	r12, r24
    34d0:	d9 0a       	sbc	r13, r25
    34d2:	5c 2c       	mov	r5, r12
    34d4:	0f 2e       	mov	r0, r31
    34d6:	f4 e0       	ldi	r31, 0x04	; 4
    34d8:	8f 2e       	mov	r8, r31
    34da:	f7 e0       	ldi	r31, 0x07	; 7
    34dc:	9f 2e       	mov	r9, r31
    34de:	f0 2d       	mov	r31, r0
    34e0:	e1 2c       	mov	r14, r1
    34e2:	f1 2c       	mov	r15, r1
    34e4:	4c 2c       	mov	r4, r12
    34e6:	37 01       	movw	r6, r14
    34e8:	f4 01       	movw	r30, r8
    34ea:	01 81       	ldd	r16, Z+1	; 0x01
    34ec:	12 81       	ldd	r17, Z+2	; 0x02
    34ee:	e8 01       	movw	r28, r16
    34f0:	09 90       	ld	r0, Y+
    34f2:	00 20       	and	r0, r0
    34f4:	e9 f7       	brne	.-6      	; 0x34f0 <_reply2ReturnCode+0x54>
    34f6:	21 97       	sbiw	r28, 0x01	; 1
    34f8:	c0 1b       	sub	r28, r16
    34fa:	d1 0b       	sbc	r29, r17
    34fc:	3c 2e       	mov	r3, r28
    34fe:	f9 e0       	ldi	r31, 0x09	; 9
    3500:	cf 16       	cp	r12, r31
    3502:	d1 04       	cpc	r13, r1
    3504:	58 f0       	brcs	.+22     	; 0x351c <_reply2ReturnCode+0x80>
    3506:	f4 01       	movw	r30, r8
    3508:	20 80       	ld	r2, Z
    350a:	fe e0       	ldi	r31, 0x0E	; 14
    350c:	2f 12       	cpse	r2, r31
    350e:	06 c0       	rjmp	.+12     	; 0x351c <_reply2ReturnCode+0x80>
    3510:	b8 01       	movw	r22, r16
    3512:	c5 01       	movw	r24, r10
    3514:	0e 94 b9 27 	call	0x4f72	; 0x4f72 <strcasestr>
    3518:	89 2b       	or	r24, r25
    351a:	09 f5       	brne	.+66     	; 0x355e <_reply2ReturnCode+0xc2>
    351c:	44 2d       	mov	r20, r4
    351e:	35 14       	cp	r3, r5
    3520:	08 f4       	brcc	.+2      	; 0x3524 <_reply2ReturnCode+0x88>
    3522:	4c 2f       	mov	r20, r28
    3524:	50 e0       	ldi	r21, 0x00	; 0
    3526:	b8 01       	movw	r22, r16
    3528:	c5 01       	movw	r24, r10
    352a:	0e 94 f0 27 	call	0x4fe0	; 0x4fe0 <strncasecmp>
    352e:	89 2b       	or	r24, r25
    3530:	49 f4       	brne	.+18     	; 0x3544 <_reply2ReturnCode+0xa8>
    3532:	f3 01       	movw	r30, r6
    3534:	ee 0f       	add	r30, r30
    3536:	ff 1f       	adc	r31, r31
    3538:	e6 0d       	add	r30, r6
    353a:	f7 1d       	adc	r31, r7
    353c:	ec 5f       	subi	r30, 0xFC	; 252
    353e:	f8 4f       	sbci	r31, 0xF8	; 248
    3540:	20 80       	ld	r2, Z
    3542:	0d c0       	rjmp	.+26     	; 0x355e <_reply2ReturnCode+0xc2>
    3544:	8f ef       	ldi	r24, 0xFF	; 255
    3546:	e8 1a       	sub	r14, r24
    3548:	f8 0a       	sbc	r15, r24
    354a:	e3 e0       	ldi	r30, 0x03	; 3
    354c:	8e 0e       	add	r8, r30
    354e:	91 1c       	adc	r9, r1
    3550:	f1 e1       	ldi	r31, 0x11	; 17
    3552:	ef 16       	cp	r14, r31
    3554:	f1 04       	cpc	r15, r1
    3556:	39 f6       	brne	.-114    	; 0x34e6 <_reply2ReturnCode+0x4a>
    3558:	68 94       	set
    355a:	22 24       	eor	r2, r2
    355c:	24 f8       	bld	r2, 4
    355e:	82 2d       	mov	r24, r2
    3560:	df 91       	pop	r29
    3562:	cf 91       	pop	r28
    3564:	1f 91       	pop	r17
    3566:	0f 91       	pop	r16
    3568:	ff 90       	pop	r15
    356a:	ef 90       	pop	r14
    356c:	df 90       	pop	r13
    356e:	cf 90       	pop	r12
    3570:	bf 90       	pop	r11
    3572:	af 90       	pop	r10
    3574:	9f 90       	pop	r9
    3576:	8f 90       	pop	r8
    3578:	7f 90       	pop	r7
    357a:	6f 90       	pop	r6
    357c:	5f 90       	pop	r5
    357e:	4f 90       	pop	r4
    3580:	3f 90       	pop	r3
    3582:	2f 90       	pop	r2
    3584:	08 95       	ret

00003586 <_uploadMessageRc>:
    3586:	30 df       	rcall	.-416    	; 0x33e8 <_uploadMessage>
    3588:	89 cf       	rjmp	.-238    	; 0x349c <_reply2ReturnCode>
    358a:	08 95       	ret

0000358c <lora_driver_flushBuffers>:
    358c:	80 91 d8 12 	lds	r24, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle>
    3590:	90 91 d9 12 	lds	r25, 0x12D9	; 0x8012d9 <_serialReplyBufferHandle+0x1>
    3594:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <xStreamBufferReset>
=======
    35ee:	cf 91       	pop	r28
    35f0:	0f 91       	pop	r16
    35f2:	ff 90       	pop	r15
    35f4:	ef 90       	pop	r14
    35f6:	08 95       	ret

<<<<<<< HEAD
0000349c <takeMeasure>:
    349c:	cf 93       	push	r28
    349e:	df 93       	push	r29
    34a0:	00 d0       	rcall	.+0      	; 0x34a2 <takeMeasure+0x6>
    34a2:	1f 92       	push	r1
    34a4:	cd b7       	in	r28, 0x3d	; 61
    34a6:	de b7       	in	r29, 0x3e	; 62
    34a8:	0e 94 c7 0c 	call	0x198e	; 0x198e <xTaskGetTickCount>
    34ac:	69 83       	std	Y+1, r22	; 0x01
    34ae:	7a 83       	std	Y+2, r23	; 0x02
    34b0:	8b 83       	std	Y+3, r24	; 0x03
    34b2:	9c 83       	std	Y+4, r25	; 0x04
    34b4:	48 e3       	ldi	r20, 0x38	; 56
    34b6:	51 e0       	ldi	r21, 0x01	; 1
    34b8:	60 e0       	ldi	r22, 0x00	; 0
    34ba:	70 e0       	ldi	r23, 0x00	; 0
    34bc:	ce 01       	movw	r24, r28
    34be:	01 96       	adiw	r24, 0x01	; 1
    34c0:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <xTaskDelayUntil>
    34c4:	fd dd       	rcall	.-1030   	; 0x30c0 <tempHumMeasure>
    34c6:	89 dd       	rcall	.-1262   	; 0x2fda <co2Measure>
    34c8:	f5 cf       	rjmp	.-22     	; 0x34b4 <takeMeasure+0x18>

000034ca <enqueueMeasures>:
    34ca:	cf 93       	push	r28
    34cc:	df 93       	push	r29
    34ce:	00 d0       	rcall	.+0      	; 0x34d0 <enqueueMeasures+0x6>
    34d0:	1f 92       	push	r1
    34d2:	cd b7       	in	r28, 0x3d	; 61
    34d4:	de b7       	in	r29, 0x3e	; 62
    34d6:	0e 94 c7 0c 	call	0x198e	; 0x198e <xTaskGetTickCount>
    34da:	69 83       	std	Y+1, r22	; 0x01
    34dc:	7a 83       	std	Y+2, r23	; 0x02
    34de:	8b 83       	std	Y+3, r24	; 0x03
    34e0:	9c 83       	std	Y+4, r25	; 0x04
    34e2:	4d e6       	ldi	r20, 0x6D	; 109
    34e4:	5d e0       	ldi	r21, 0x0D	; 13
    34e6:	60 e0       	ldi	r22, 0x00	; 0
    34e8:	70 e0       	ldi	r23, 0x00	; 0
    34ea:	ce 01       	movw	r24, r28
    34ec:	01 96       	adiw	r24, 0x01	; 1
    34ee:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <xTaskDelayUntil>
    34f2:	0e 94 11 01 	call	0x222	; 0x222 <enqueueSharedData>
    34f6:	f5 cf       	rjmp	.-22     	; 0x34e2 <enqueueMeasures+0x18>

000034f8 <setupTasks>:
    34f8:	ef 92       	push	r14
    34fa:	ff 92       	push	r15
    34fc:	0f 93       	push	r16
    34fe:	e1 2c       	mov	r14, r1
    3500:	f1 2c       	mov	r15, r1
    3502:	00 e0       	ldi	r16, 0x00	; 0
    3504:	20 e0       	ldi	r18, 0x00	; 0
    3506:	30 e0       	ldi	r19, 0x00	; 0
    3508:	40 ec       	ldi	r20, 0xC0	; 192
    350a:	50 e0       	ldi	r21, 0x00	; 0
    350c:	66 e7       	ldi	r22, 0x76	; 118
    350e:	74 e0       	ldi	r23, 0x04	; 4
    3510:	8e e4       	ldi	r24, 0x4E	; 78
    3512:	9a e1       	ldi	r25, 0x1A	; 26
    3514:	0e 94 3d 0c 	call	0x187a	; 0x187a <xTaskCreate>
    3518:	20 e0       	ldi	r18, 0x00	; 0
    351a:	30 e0       	ldi	r19, 0x00	; 0
    351c:	40 ec       	ldi	r20, 0xC0	; 192
    351e:	50 e0       	ldi	r21, 0x00	; 0
    3520:	62 e8       	ldi	r22, 0x82	; 130
    3522:	74 e0       	ldi	r23, 0x04	; 4
    3524:	85 e6       	ldi	r24, 0x65	; 101
    3526:	9a e1       	ldi	r25, 0x1A	; 26
    3528:	0e 94 3d 0c 	call	0x187a	; 0x187a <xTaskCreate>
    352c:	0f 91       	pop	r16
    352e:	ff 90       	pop	r15
    3530:	ef 90       	pop	r14
    3532:	08 95       	ret

00003534 <startTasks>:
    3534:	e1 df       	rcall	.-62     	; 0x34f8 <setupTasks>
    3536:	0c 94 89 0c 	jmp	0x1912	; 0x1912 <vTaskStartScheduler>
    353a:	08 95       	ret

0000353c <initialiseSystem>:
    353c:	82 e9       	ldi	r24, 0x92	; 146
    353e:	94 e0       	ldi	r25, 0x04	; 4
    3540:	0e 94 a3 2b 	call	0x5746	; 0x5746 <puts>
    3544:	81 b1       	in	r24, 0x01	; 1
    3546:	81 68       	ori	r24, 0x81	; 129
    3548:	81 b9       	out	0x01, r24	; 1
    354a:	80 e0       	ldi	r24, 0x00	; 0
    354c:	90 e0       	ldi	r25, 0x00	; 0
    354e:	0e 94 94 24 	call	0x4928	; 0x4928 <stdio_initialise>
    3552:	39 dd       	rcall	.-1422   	; 0x2fc6 <initializeCO2Queue>
    3554:	6a dd       	rcall	.-1324   	; 0x302a <initializeTempHumQueues>
    3556:	0e 94 08 01 	call	0x210	; 0x210 <initializeSharedDataQueue>
    355a:	83 e0       	ldi	r24, 0x03	; 3
    355c:	d4 d5       	rcall	.+2984   	; 0x4106 <mh_z19_initialise>
    355e:	9f d0       	rcall	.+318    	; 0x369e <hih8120_initialise>
    3560:	85 e0       	ldi	r24, 0x05	; 5
    3562:	0e 94 9b 25 	call	0x4b36	; 0x4b36 <status_leds_initialise>
    3566:	41 e0       	ldi	r20, 0x01	; 1
    3568:	60 e0       	ldi	r22, 0x00	; 0
    356a:	70 e0       	ldi	r23, 0x00	; 0
    356c:	8c e2       	ldi	r24, 0x2C	; 44
    356e:	90 e0       	ldi	r25, 0x00	; 0
    3570:	0e 94 41 08 	call	0x1082	; 0x1082 <xStreamBufferGenericCreate>
    3574:	60 e0       	ldi	r22, 0x00	; 0
    3576:	70 e0       	ldi	r23, 0x00	; 0
    3578:	81 e0       	ldi	r24, 0x01	; 1
    357a:	1e d2       	rcall	.+1084   	; 0x39b8 <lora_driver_initialise>
    357c:	83 e0       	ldi	r24, 0x03	; 3
    357e:	7a cf       	rjmp	.-268    	; 0x3474 <lora_handler_initialise>
    3580:	08 95       	ret

00003582 <main>:
    3582:	dc df       	rcall	.-72     	; 0x353c <initialiseSystem>
    3584:	82 e9       	ldi	r24, 0x92	; 146
    3586:	94 e0       	ldi	r25, 0x04	; 4
    3588:	0e 94 a3 2b 	call	0x5746	; 0x5746 <puts>
    358c:	d3 df       	rcall	.-90     	; 0x3534 <startTasks>
    358e:	ff cf       	rjmp	.-2      	; 0x358e <main+0xc>

00003590 <__fixsfsi>:
    3590:	04 d0       	rcall	.+8      	; 0x359a <__fixunssfsi>
    3592:	68 94       	set
    3594:	b1 11       	cpse	r27, r1
    3596:	50 c0       	rjmp	.+160    	; 0x3638 <__fp_szero>
>>>>>>> Stashed changes
    3598:	08 95       	ret

0000359a <lora_driver_initialise>:
    359a:	8f 92       	push	r8
    359c:	9f 92       	push	r9
    359e:	af 92       	push	r10
    35a0:	cf 92       	push	r12
    35a2:	ef 92       	push	r14
    35a4:	0f 93       	push	r16
    35a6:	1f 93       	push	r17
    35a8:	cf 93       	push	r28
    35aa:	c8 2f       	mov	r28, r24
    35ac:	8b 01       	movw	r16, r22
    35ae:	41 e0       	ldi	r20, 0x01	; 1
    35b0:	60 e0       	ldi	r22, 0x00	; 0
    35b2:	70 e0       	ldi	r23, 0x00	; 0
    35b4:	88 ec       	ldi	r24, 0xC8	; 200
    35b6:	90 e0       	ldi	r25, 0x00	; 0
    35b8:	0e 94 b0 07 	call	0xf60	; 0xf60 <xStreamBufferGenericCreate>
    35bc:	90 93 d9 12 	sts	0x12D9, r25	; 0x8012d9 <_serialReplyBufferHandle+0x1>
    35c0:	80 93 d8 12 	sts	0x12D8, r24	; 0x8012d8 <_serialReplyBufferHandle>
    35c4:	10 93 d7 12 	sts	0x12D7, r17	; 0x8012d7 <_downlinkMessageBuffer+0x1>
    35c8:	00 93 d6 12 	sts	0x12D6, r16	; 0x8012d6 <_downlinkMessageBuffer>
    35cc:	0f 2e       	mov	r0, r31
    35ce:	fe ea       	ldi	r31, 0xAE	; 174
    35d0:	8f 2e       	mov	r8, r31
    35d2:	f9 e1       	ldi	r31, 0x19	; 25
    35d4:	9f 2e       	mov	r9, r31
    35d6:	f0 2d       	mov	r31, r0
    35d8:	68 94       	set
    35da:	aa 24       	eor	r10, r10
    35dc:	a6 f8       	bld	r10, 6
    35de:	68 94       	set
    35e0:	cc 24       	eor	r12, r12
    35e2:	c6 f8       	bld	r12, 6
    35e4:	e1 2c       	mov	r14, r1
    35e6:	00 e0       	ldi	r16, 0x00	; 0
    35e8:	23 e0       	ldi	r18, 0x03	; 3
    35ea:	40 e0       	ldi	r20, 0x00	; 0
    35ec:	51 ee       	ldi	r21, 0xE1	; 225
    35ee:	60 e0       	ldi	r22, 0x00	; 0
    35f0:	70 e0       	ldi	r23, 0x00	; 0
    35f2:	8c 2f       	mov	r24, r28
    35f4:	d2 d3       	rcall	.+1956   	; 0x3d9a <serial_create>
    35f6:	90 93 db 12 	sts	0x12DB, r25	; 0x8012db <_rn2483_serial+0x1>
    35fa:	80 93 da 12 	sts	0x12DA, r24	; 0x8012da <_rn2483_serial>
    35fe:	e7 e0       	ldi	r30, 0x07	; 7
    3600:	f1 e0       	ldi	r31, 0x01	; 1
    3602:	80 81       	ld	r24, Z
    3604:	80 61       	ori	r24, 0x10	; 16
    3606:	80 83       	st	Z, r24
    3608:	cf 91       	pop	r28
    360a:	1f 91       	pop	r17
    360c:	0f 91       	pop	r16
    360e:	ef 90       	pop	r14
    3610:	cf 90       	pop	r12
    3612:	af 90       	pop	r10
    3614:	9f 90       	pop	r9
    3616:	8f 90       	pop	r8
    3618:	08 95       	ret

0000361a <lora_driver_resetRn2483>:
    361a:	88 23       	and	r24, r24
    361c:	31 f0       	breq	.+12     	; 0x362a <lora_driver_resetRn2483+0x10>
    361e:	e8 e0       	ldi	r30, 0x08	; 8
    3620:	f1 e0       	ldi	r31, 0x01	; 1
    3622:	80 81       	ld	r24, Z
    3624:	8f 7e       	andi	r24, 0xEF	; 239
    3626:	80 83       	st	Z, r24
    3628:	08 95       	ret
    362a:	e8 e0       	ldi	r30, 0x08	; 8
    362c:	f1 e0       	ldi	r31, 0x01	; 1
    362e:	80 81       	ld	r24, Z
    3630:	80 61       	ori	r24, 0x10	; 16
    3632:	80 83       	st	Z, r24
    3634:	08 95       	ret

00003636 <lora_driver_rn2483FactoryReset>:
    3636:	60 e0       	ldi	r22, 0x00	; 0
    3638:	70 e0       	ldi	r23, 0x00	; 0
    363a:	8a e8       	ldi	r24, 0x8A	; 138
    363c:	94 e0       	ldi	r25, 0x04	; 4
    363e:	d4 de       	rcall	.-600    	; 0x33e8 <_uploadMessage>
    3640:	e1 e6       	ldi	r30, 0x61	; 97
    3642:	f3 e1       	ldi	r31, 0x13	; 19
    3644:	01 90       	ld	r0, Z+
    3646:	00 20       	and	r0, r0
    3648:	e9 f7       	brne	.-6      	; 0x3644 <lora_driver_rn2483FactoryReset+0xe>
    364a:	31 97       	sbiw	r30, 0x01	; 1
    364c:	e1 56       	subi	r30, 0x61	; 97
    364e:	f3 41       	sbci	r31, 0x13	; 19
    3650:	81 e0       	ldi	r24, 0x01	; 1
    3652:	75 97       	sbiw	r30, 0x15	; 21
    3654:	08 f0       	brcs	.+2      	; 0x3658 <lora_driver_rn2483FactoryReset+0x22>
    3656:	80 e0       	ldi	r24, 0x00	; 0
    3658:	08 95       	ret

0000365a <lora_driver_getRn2483Hweui>:
    365a:	cf 93       	push	r28
    365c:	df 93       	push	r29
    365e:	ec 01       	movw	r28, r24
    3660:	60 e0       	ldi	r22, 0x00	; 0
    3662:	70 e0       	ldi	r23, 0x00	; 0
    3664:	8b e9       	ldi	r24, 0x9B	; 155
    3666:	94 e0       	ldi	r25, 0x04	; 4
    3668:	bf de       	rcall	.-642    	; 0x33e8 <_uploadMessage>
    366a:	e1 e6       	ldi	r30, 0x61	; 97
    366c:	f3 e1       	ldi	r31, 0x13	; 19
    366e:	01 90       	ld	r0, Z+
    3670:	00 20       	and	r0, r0
    3672:	e9 f7       	brne	.-6      	; 0x366e <lora_driver_getRn2483Hweui+0x14>
    3674:	e2 57       	subi	r30, 0x72	; 114
    3676:	f3 41       	sbci	r31, 0x13	; 19
    3678:	39 f4       	brne	.+14     	; 0x3688 <lora_driver_getRn2483Hweui+0x2e>
    367a:	61 e6       	ldi	r22, 0x61	; 97
    367c:	73 e1       	ldi	r23, 0x13	; 19
    367e:	ce 01       	movw	r24, r28
    3680:	0e 94 e9 27 	call	0x4fd2	; 0x4fd2 <strcpy>
    3684:	80 e0       	ldi	r24, 0x00	; 0
    3686:	02 c0       	rjmp	.+4      	; 0x368c <lora_driver_getRn2483Hweui+0x32>
    3688:	18 82       	st	Y, r1
    368a:	81 e0       	ldi	r24, 0x01	; 1
    368c:	df 91       	pop	r29
    368e:	cf 91       	pop	r28
    3690:	08 95       	ret

00003692 <lora_driver_setDeviceIdentifier>:
    3692:	fc 01       	movw	r30, r24
    3694:	01 90       	ld	r0, Z+
    3696:	00 20       	and	r0, r0
    3698:	e9 f7       	brne	.-6      	; 0x3694 <lora_driver_setDeviceIdentifier+0x2>
    369a:	9f 01       	movw	r18, r30
    369c:	21 51       	subi	r18, 0x11	; 17
    369e:	31 09       	sbc	r19, r1
    36a0:	28 17       	cp	r18, r24
    36a2:	39 07       	cpc	r19, r25
    36a4:	29 f4       	brne	.+10     	; 0x36b0 <lora_driver_setDeviceIdentifier+0x1e>
    36a6:	bc 01       	movw	r22, r24
    36a8:	89 ec       	ldi	r24, 0xC9	; 201
    36aa:	94 e0       	ldi	r25, 0x04	; 4
    36ac:	6c cf       	rjmp	.-296    	; 0x3586 <_uploadMessageRc>
    36ae:	08 95       	ret
    36b0:	89 e0       	ldi	r24, 0x09	; 9
    36b2:	08 95       	ret

000036b4 <lora_driver_setApplicationIdentifier>:
    36b4:	fc 01       	movw	r30, r24
    36b6:	01 90       	ld	r0, Z+
    36b8:	00 20       	and	r0, r0
    36ba:	e9 f7       	brne	.-6      	; 0x36b6 <lora_driver_setApplicationIdentifier+0x2>
    36bc:	9f 01       	movw	r18, r30
    36be:	21 51       	subi	r18, 0x11	; 17
    36c0:	31 09       	sbc	r19, r1
    36c2:	28 17       	cp	r18, r24
    36c4:	39 07       	cpc	r19, r25
    36c6:	29 f4       	brne	.+10     	; 0x36d2 <lora_driver_setApplicationIdentifier+0x1e>
    36c8:	bc 01       	movw	r22, r24
    36ca:	88 ed       	ldi	r24, 0xD8	; 216
    36cc:	94 e0       	ldi	r25, 0x04	; 4
    36ce:	5b cf       	rjmp	.-330    	; 0x3586 <_uploadMessageRc>
    36d0:	08 95       	ret
    36d2:	89 e0       	ldi	r24, 0x09	; 9
    36d4:	08 95       	ret

000036d6 <lora_driver_setApplicationKey>:
    36d6:	fc 01       	movw	r30, r24
    36d8:	01 90       	ld	r0, Z+
    36da:	00 20       	and	r0, r0
    36dc:	e9 f7       	brne	.-6      	; 0x36d8 <lora_driver_setApplicationKey+0x2>
    36de:	9f 01       	movw	r18, r30
    36e0:	21 52       	subi	r18, 0x21	; 33
    36e2:	31 09       	sbc	r19, r1
    36e4:	28 17       	cp	r18, r24
    36e6:	39 07       	cpc	r19, r25
    36e8:	29 f4       	brne	.+10     	; 0x36f4 <lora_driver_setApplicationKey+0x1e>
    36ea:	bc 01       	movw	r22, r24
    36ec:	87 ee       	ldi	r24, 0xE7	; 231
    36ee:	94 e0       	ldi	r25, 0x04	; 4
    36f0:	4a cf       	rjmp	.-364    	; 0x3586 <_uploadMessageRc>
    36f2:	08 95       	ret
    36f4:	89 e0       	ldi	r24, 0x09	; 9
    36f6:	08 95       	ret

<<<<<<< Updated upstream
000036f8 <lora_driver_saveMac>:
    36f8:	60 e0       	ldi	r22, 0x00	; 0
    36fa:	70 e0       	ldi	r23, 0x00	; 0
    36fc:	86 e2       	ldi	r24, 0x26	; 38
    36fe:	95 e0       	ldi	r25, 0x05	; 5
    3700:	42 cf       	rjmp	.-380    	; 0x3586 <_uploadMessageRc>
    3702:	08 95       	ret

00003704 <lora_driver_join>:
    3704:	0f 93       	push	r16
    3706:	1f 93       	push	r17
    3708:	e8 2f       	mov	r30, r24
    370a:	f0 e0       	ldi	r31, 0x00	; 0
    370c:	ee 0f       	add	r30, r30
    370e:	ff 1f       	adc	r31, r31
    3710:	e0 50       	subi	r30, 0x00	; 0
    3712:	f9 4f       	sbci	r31, 0xF9	; 249
    3714:	60 81       	ld	r22, Z
    3716:	71 81       	ldd	r23, Z+1	; 0x01
    3718:	8f e2       	ldi	r24, 0x2F	; 47
    371a:	95 e0       	ldi	r25, 0x05	; 5
    371c:	34 df       	rcall	.-408    	; 0x3586 <_uploadMessageRc>
    371e:	81 11       	cpse	r24, r1
    3720:	14 c0       	rjmp	.+40     	; 0x374a <lora_driver_join+0x46>
    3722:	08 e2       	ldi	r16, 0x28	; 40
    3724:	15 e0       	ldi	r17, 0x05	; 5
    3726:	20 e0       	ldi	r18, 0x00	; 0
    3728:	30 e0       	ldi	r19, 0x00	; 0
    372a:	4d e2       	ldi	r20, 0x2D	; 45
    372c:	50 e0       	ldi	r21, 0x00	; 0
    372e:	61 e6       	ldi	r22, 0x61	; 97
    3730:	73 e1       	ldi	r23, 0x13	; 19
    3732:	80 91 d8 12 	lds	r24, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle>
    3736:	90 91 d9 12 	lds	r25, 0x12D9	; 0x8012d9 <_serialReplyBufferHandle+0x1>
    373a:	0e 94 19 09 	call	0x1232	; 0x1232 <xStreamBufferReceive>
    373e:	88 23       	and	r24, r24
    3740:	21 f0       	breq	.+8      	; 0x374a <lora_driver_join+0x46>
    3742:	81 e6       	ldi	r24, 0x61	; 97
    3744:	93 e1       	ldi	r25, 0x13	; 19
    3746:	aa de       	rcall	.-684    	; 0x349c <_reply2ReturnCode>
    3748:	03 c0       	rjmp	.+6      	; 0x3750 <lora_driver_join+0x4c>
    374a:	81 e6       	ldi	r24, 0x61	; 97
    374c:	93 e1       	ldi	r25, 0x13	; 19
    374e:	a6 de       	rcall	.-692    	; 0x349c <_reply2ReturnCode>
    3750:	1f 91       	pop	r17
    3752:	0f 91       	pop	r16
    3754:	08 95       	ret

00003756 <lora_driver_sendUploadMessage>:
    3756:	0f 93       	push	r16
    3758:	1f 93       	push	r17
    375a:	cf 93       	push	r28
    375c:	df 93       	push	r29
    375e:	1f 92       	push	r1
    3760:	cd b7       	in	r28, 0x3d	; 61
    3762:	de b7       	in	r29, 0x3e	; 62
    3764:	db 01       	movw	r26, r22
    3766:	11 96       	adiw	r26, 0x01	; 1
    3768:	9c 91       	ld	r25, X
    376a:	11 97       	sbiw	r26, 0x01	; 1
    376c:	95 31       	cpi	r25, 0x15	; 21
    376e:	08 f0       	brcs	.+2      	; 0x3772 <lora_driver_sendUploadMessage+0x1c>
    3770:	b4 c0       	rjmp	.+360    	; 0x38da <lora_driver_sendUploadMessage+0x184>
    3772:	99 23       	and	r25, r25
    3774:	81 f1       	breq	.+96     	; 0x37d6 <lora_driver_sendUploadMessage+0x80>
    3776:	60 e0       	ldi	r22, 0x00	; 0
    3778:	70 e0       	ldi	r23, 0x00	; 0
    377a:	27 2f       	mov	r18, r23
    377c:	30 e0       	ldi	r19, 0x00	; 0
    377e:	46 2f       	mov	r20, r22
    3780:	50 e0       	ldi	r21, 0x00	; 0
    3782:	fd 01       	movw	r30, r26
    3784:	e4 0f       	add	r30, r20
    3786:	f5 1f       	adc	r31, r21
    3788:	92 81       	ldd	r25, Z+2	; 0x02
    378a:	92 95       	swap	r25
    378c:	9f 70       	andi	r25, 0x0F	; 15
    378e:	9a 30       	cpi	r25, 0x0A	; 10
    3790:	10 f0       	brcs	.+4      	; 0x3796 <lora_driver_sendUploadMessage+0x40>
    3792:	99 5c       	subi	r25, 0xC9	; 201
    3794:	01 c0       	rjmp	.+2      	; 0x3798 <lora_driver_sendUploadMessage+0x42>
    3796:	90 5d       	subi	r25, 0xD0	; 208
    3798:	f9 01       	movw	r30, r18
    379a:	ee 50       	subi	r30, 0x0E	; 14
    379c:	fd 4e       	sbci	r31, 0xED	; 237
    379e:	90 83       	st	Z, r25
    37a0:	2f 5f       	subi	r18, 0xFF	; 255
    37a2:	3f 4f       	sbci	r19, 0xFF	; 255
    37a4:	fd 01       	movw	r30, r26
    37a6:	e4 0f       	add	r30, r20
    37a8:	f5 1f       	adc	r31, r21
    37aa:	92 81       	ldd	r25, Z+2	; 0x02
    37ac:	9f 70       	andi	r25, 0x0F	; 15
    37ae:	49 2f       	mov	r20, r25
    37b0:	50 e0       	ldi	r21, 0x00	; 0
    37b2:	4a 30       	cpi	r20, 0x0A	; 10
    37b4:	51 05       	cpc	r21, r1
    37b6:	14 f0       	brlt	.+4      	; 0x37bc <lora_driver_sendUploadMessage+0x66>
    37b8:	99 5c       	subi	r25, 0xC9	; 201
    37ba:	01 c0       	rjmp	.+2      	; 0x37be <lora_driver_sendUploadMessage+0x68>
    37bc:	90 5d       	subi	r25, 0xD0	; 208
    37be:	f9 01       	movw	r30, r18
    37c0:	ee 50       	subi	r30, 0x0E	; 14
    37c2:	fd 4e       	sbci	r31, 0xED	; 237
    37c4:	90 83       	st	Z, r25
    37c6:	7e 5f       	subi	r23, 0xFE	; 254
    37c8:	6f 5f       	subi	r22, 0xFF	; 255
    37ca:	11 96       	adiw	r26, 0x01	; 1
    37cc:	9c 91       	ld	r25, X
    37ce:	11 97       	sbiw	r26, 0x01	; 1
    37d0:	69 17       	cp	r22, r25
    37d2:	98 f2       	brcs	.-90     	; 0x377a <lora_driver_sendUploadMessage+0x24>
    37d4:	01 c0       	rjmp	.+2      	; 0x37d8 <lora_driver_sendUploadMessage+0x82>
    37d6:	70 e0       	ldi	r23, 0x00	; 0
    37d8:	e7 2f       	mov	r30, r23
    37da:	f0 e0       	ldi	r31, 0x00	; 0
    37dc:	ee 50       	subi	r30, 0x0E	; 14
    37de:	fd 4e       	sbci	r31, 0xED	; 237
    37e0:	10 82       	st	Z, r1
    37e2:	4c 91       	ld	r20, X
    37e4:	81 11       	cpse	r24, r1
    37e6:	03 c0       	rjmp	.+6      	; 0x37ee <lora_driver_sendUploadMessage+0x98>
    37e8:	88 e3       	ldi	r24, 0x38	; 56
    37ea:	95 e0       	ldi	r25, 0x05	; 5
    37ec:	02 c0       	rjmp	.+4      	; 0x37f2 <lora_driver_sendUploadMessage+0x9c>
    37ee:	8a e3       	ldi	r24, 0x3A	; 58
    37f0:	95 e0       	ldi	r25, 0x05	; 5
    37f2:	22 ef       	ldi	r18, 0xF2	; 242
    37f4:	32 e1       	ldi	r19, 0x12	; 18
    37f6:	3f 93       	push	r19
    37f8:	2f 93       	push	r18
    37fa:	1f 92       	push	r1
    37fc:	4f 93       	push	r20
    37fe:	9f 93       	push	r25
    3800:	8f 93       	push	r24
    3802:	8e e3       	ldi	r24, 0x3E	; 62
    3804:	95 e0       	ldi	r25, 0x05	; 5
    3806:	9f 93       	push	r25
    3808:	8f 93       	push	r24
    380a:	84 e3       	ldi	r24, 0x34	; 52
    380c:	93 e1       	ldi	r25, 0x13	; 19
    380e:	9f 93       	push	r25
    3810:	8f 93       	push	r24
    3812:	0e 94 4b 28 	call	0x5096	; 0x5096 <sprintf>
    3816:	60 e0       	ldi	r22, 0x00	; 0
    3818:	70 e0       	ldi	r23, 0x00	; 0
    381a:	84 e3       	ldi	r24, 0x34	; 52
    381c:	93 e1       	ldi	r25, 0x13	; 19
    381e:	b3 de       	rcall	.-666    	; 0x3586 <_uploadMessageRc>
    3820:	0f b6       	in	r0, 0x3f	; 63
    3822:	f8 94       	cli
    3824:	de bf       	out	0x3e, r29	; 62
    3826:	0f be       	out	0x3f, r0	; 63
    3828:	cd bf       	out	0x3d, r28	; 61
    382a:	81 11       	cpse	r24, r1
    382c:	59 c0       	rjmp	.+178    	; 0x38e0 <lora_driver_sendUploadMessage+0x18a>
    382e:	08 e2       	ldi	r16, 0x28	; 40
    3830:	15 e0       	ldi	r17, 0x05	; 5
    3832:	20 e0       	ldi	r18, 0x00	; 0
    3834:	30 e0       	ldi	r19, 0x00	; 0
    3836:	4d e2       	ldi	r20, 0x2D	; 45
    3838:	50 e0       	ldi	r21, 0x00	; 0
    383a:	61 e6       	ldi	r22, 0x61	; 97
    383c:	73 e1       	ldi	r23, 0x13	; 19
    383e:	80 91 d8 12 	lds	r24, 0x12D8	; 0x8012d8 <_serialReplyBufferHandle>
    3842:	90 91 d9 12 	lds	r25, 0x12D9	; 0x8012d9 <_serialReplyBufferHandle+0x1>
    3846:	0e 94 19 09 	call	0x1232	; 0x1232 <xStreamBufferReceive>
    384a:	88 23       	and	r24, r24
    384c:	09 f4       	brne	.+2      	; 0x3850 <lora_driver_sendUploadMessage+0xfa>
    384e:	47 c0       	rjmp	.+142    	; 0x38de <lora_driver_sendUploadMessage+0x188>
    3850:	81 e6       	ldi	r24, 0x61	; 97
    3852:	93 e1       	ldi	r25, 0x13	; 19
    3854:	23 de       	rcall	.-954    	; 0x349c <_reply2ReturnCode>
    3856:	8e 30       	cpi	r24, 0x0E	; 14
    3858:	09 f0       	breq	.+2      	; 0x385c <lora_driver_sendUploadMessage+0x106>
    385a:	42 c0       	rjmp	.+132    	; 0x38e0 <lora_driver_sendUploadMessage+0x18a>
    385c:	87 e0       	ldi	r24, 0x07	; 7
    385e:	89 83       	std	Y+1, r24	; 0x01
    3860:	80 91 d6 12 	lds	r24, 0x12D6	; 0x8012d6 <_downlinkMessageBuffer>
    3864:	90 91 d7 12 	lds	r25, 0x12D7	; 0x8012d7 <_downlinkMessageBuffer+0x1>
    3868:	89 2b       	or	r24, r25
    386a:	a9 f1       	breq	.+106    	; 0x38d6 <lora_driver_sendUploadMessage+0x180>
    386c:	be 01       	movw	r22, r28
    386e:	6f 5f       	subi	r22, 0xFF	; 255
    3870:	7f 4f       	sbci	r23, 0xFF	; 255
    3872:	81 e6       	ldi	r24, 0x61	; 97
    3874:	93 e1       	ldi	r25, 0x13	; 19
    3876:	68 d1       	rcall	.+720    	; 0x3b48 <decode_port_no>
    3878:	80 93 dc 12 	sts	0x12DC, r24	; 0x8012dc <_downlinkPayload>
    387c:	e9 81       	ldd	r30, Y+1	; 0x01
    387e:	f0 e0       	ldi	r31, 0x00	; 0
    3880:	ef 59       	subi	r30, 0x9F	; 159
    3882:	fc 4e       	sbci	r31, 0xEC	; 236
    3884:	df 01       	movw	r26, r30
    3886:	0d 90       	ld	r0, X+
    3888:	00 20       	and	r0, r0
    388a:	e9 f7       	brne	.-6      	; 0x3886 <lora_driver_sendUploadMessage+0x130>
    388c:	11 97       	sbiw	r26, 0x01	; 1
    388e:	ae 1b       	sub	r26, r30
    3890:	bf 0b       	sbc	r27, r31
    3892:	aa 23       	and	r26, r26
    3894:	91 f0       	breq	.+36     	; 0x38ba <lora_driver_sendUploadMessage+0x164>
    3896:	bb 27       	eor	r27, r27
    3898:	cd 01       	movw	r24, r26
    389a:	01 97       	sbiw	r24, 0x01	; 1
    389c:	9c 01       	movw	r18, r24
    389e:	12 f4       	brpl	.+4      	; 0x38a4 <lora_driver_sendUploadMessage+0x14e>
    38a0:	2f 5f       	subi	r18, 0xFF	; 255
    38a2:	3f 4f       	sbci	r19, 0xFF	; 255
    38a4:	35 95       	asr	r19
    38a6:	27 95       	ror	r18
    38a8:	20 93 dd 12 	sts	0x12DD, r18	; 0x8012dd <_downlinkPayload+0x1>
    38ac:	af 01       	movw	r20, r30
    38ae:	4f 5f       	subi	r20, 0xFF	; 255
    38b0:	5f 4f       	sbci	r21, 0xFF	; 255
    38b2:	64 e1       	ldi	r22, 0x14	; 20
    38b4:	8e ed       	ldi	r24, 0xDE	; 222
    38b6:	92 e1       	ldi	r25, 0x12	; 18
    38b8:	73 d1       	rcall	.+742    	; 0x3ba0 <decode_hexadecimal_string_bytes>
    38ba:	01 e0       	ldi	r16, 0x01	; 1
    38bc:	10 e0       	ldi	r17, 0x00	; 0
    38be:	20 e0       	ldi	r18, 0x00	; 0
    38c0:	30 e0       	ldi	r19, 0x00	; 0
    38c2:	46 e1       	ldi	r20, 0x16	; 22
    38c4:	50 e0       	ldi	r21, 0x00	; 0
    38c6:	6c ed       	ldi	r22, 0xDC	; 220
    38c8:	72 e1       	ldi	r23, 0x12	; 18
    38ca:	80 91 d6 12 	lds	r24, 0x12D6	; 0x8012d6 <_downlinkMessageBuffer>
    38ce:	90 91 d7 12 	lds	r25, 0x12D7	; 0x8012d7 <_downlinkMessageBuffer+0x1>
    38d2:	0e 94 12 08 	call	0x1024	; 0x1024 <xStreamBufferSend>
    38d6:	8e e0       	ldi	r24, 0x0E	; 14
    38d8:	03 c0       	rjmp	.+6      	; 0x38e0 <lora_driver_sendUploadMessage+0x18a>
    38da:	84 e1       	ldi	r24, 0x14	; 20
    38dc:	01 c0       	rjmp	.+2      	; 0x38e0 <lora_driver_sendUploadMessage+0x18a>
    38de:	80 e0       	ldi	r24, 0x00	; 0
    38e0:	0f 90       	pop	r0
    38e2:	df 91       	pop	r29
    38e4:	cf 91       	pop	r28
    38e6:	1f 91       	pop	r17
    38e8:	0f 91       	pop	r16
    38ea:	08 95       	ret

000038ec <lora_driver_setAdaptiveDataRate>:
    38ec:	81 30       	cpi	r24, 0x01	; 1
    38ee:	19 f0       	breq	.+6      	; 0x38f6 <lora_driver_setAdaptiveDataRate+0xa>
    38f0:	6e e4       	ldi	r22, 0x4E	; 78
    38f2:	75 e0       	ldi	r23, 0x05	; 5
    38f4:	02 c0       	rjmp	.+4      	; 0x38fa <lora_driver_setAdaptiveDataRate+0xe>
    38f6:	67 e2       	ldi	r22, 0x27	; 39
    38f8:	76 e0       	ldi	r23, 0x06	; 6
    38fa:	82 e5       	ldi	r24, 0x52	; 82
    38fc:	95 e0       	ldi	r25, 0x05	; 5
    38fe:	43 ce       	rjmp	.-890    	; 0x3586 <_uploadMessageRc>
    3900:	08 95       	ret

00003902 <lora_driver_setReceiveDelay>:
    3902:	9f 93       	push	r25
    3904:	8f 93       	push	r24
    3906:	83 e8       	ldi	r24, 0x83	; 131
    3908:	95 e0       	ldi	r25, 0x05	; 5
    390a:	9f 93       	push	r25
    390c:	8f 93       	push	r24
    390e:	84 e3       	ldi	r24, 0x34	; 52
    3910:	93 e1       	ldi	r25, 0x13	; 19
    3912:	9f 93       	push	r25
    3914:	8f 93       	push	r24
    3916:	0e 94 4b 28 	call	0x5096	; 0x5096 <sprintf>
    391a:	60 e0       	ldi	r22, 0x00	; 0
    391c:	70 e0       	ldi	r23, 0x00	; 0
    391e:	84 e3       	ldi	r24, 0x34	; 52
    3920:	93 e1       	ldi	r25, 0x13	; 19
    3922:	31 de       	rcall	.-926    	; 0x3586 <_uploadMessageRc>
    3924:	0f 90       	pop	r0
    3926:	0f 90       	pop	r0
    3928:	0f 90       	pop	r0
    392a:	0f 90       	pop	r0
    392c:	0f 90       	pop	r0
    392e:	0f 90       	pop	r0
    3930:	08 95       	ret

00003932 <lora_driver_configureToEu868>:
    3932:	2f 92       	push	r2
    3934:	3f 92       	push	r3
    3936:	4f 92       	push	r4
    3938:	5f 92       	push	r5
    393a:	6f 92       	push	r6
    393c:	7f 92       	push	r7
    393e:	8f 92       	push	r8
    3940:	9f 92       	push	r9
    3942:	af 92       	push	r10
    3944:	bf 92       	push	r11
    3946:	cf 92       	push	r12
    3948:	df 92       	push	r13
    394a:	ef 92       	push	r14
    394c:	ff 92       	push	r15
    394e:	0f 93       	push	r16
    3950:	1f 93       	push	r17
    3952:	cf 93       	push	r28
    3954:	df 93       	push	r29
    3956:	cd b7       	in	r28, 0x3d	; 61
    3958:	de b7       	in	r29, 0x3e	; 62
    395a:	a0 97       	sbiw	r28, 0x20	; 32
    395c:	0f b6       	in	r0, 0x3f	; 63
    395e:	f8 94       	cli
    3960:	de bf       	out	0x3e, r29	; 62
    3962:	0f be       	out	0x3f, r0	; 63
    3964:	cd bf       	out	0x3d, r28	; 61
    3966:	60 eb       	ldi	r22, 0xB0	; 176
    3968:	75 e0       	ldi	r23, 0x05	; 5
    396a:	8c eb       	ldi	r24, 0xBC	; 188
    396c:	95 e0       	ldi	r25, 0x05	; 5
    396e:	3c dd       	rcall	.-1416   	; 0x33e8 <_uploadMessage>
    3970:	95 dd       	rcall	.-1238   	; 0x349c <_reply2ReturnCode>
    3972:	81 11       	cpse	r24, r1
    3974:	a3 c0       	rjmp	.+326    	; 0x3abc <lora_driver_configureToEu868+0x18a>
    3976:	80 e2       	ldi	r24, 0x20	; 32
    3978:	ed e1       	ldi	r30, 0x1D	; 29
    397a:	f2 e0       	ldi	r31, 0x02	; 2
    397c:	de 01       	movw	r26, r28
    397e:	11 96       	adiw	r26, 0x01	; 1
    3980:	01 90       	ld	r0, Z+
    3982:	0d 92       	st	X+, r0
    3984:	8a 95       	dec	r24
    3986:	e1 f7       	brne	.-8      	; 0x3980 <lora_driver_configureToEu868+0x4e>
    3988:	9e 01       	movw	r18, r28
    398a:	2f 5f       	subi	r18, 0xFF	; 255
    398c:	3f 4f       	sbci	r19, 0xFF	; 255
    398e:	69 01       	movw	r12, r18
    3990:	e1 2c       	mov	r14, r1
    3992:	f1 2c       	mov	r15, r1
    3994:	0f 2e       	mov	r0, r31
    3996:	f8 ec       	ldi	r31, 0xC8	; 200
    3998:	af 2e       	mov	r10, r31
    399a:	f5 e0       	ldi	r31, 0x05	; 5
    399c:	bf 2e       	mov	r11, r31
    399e:	f0 2d       	mov	r31, r0
    39a0:	04 e3       	ldi	r16, 0x34	; 52
    39a2:	13 e1       	ldi	r17, 0x13	; 19
    39a4:	0f 2e       	mov	r0, r31
    39a6:	f1 ee       	ldi	r31, 0xE1	; 225
    39a8:	4f 2e       	mov	r4, r31
    39aa:	f5 e0       	ldi	r31, 0x05	; 5
    39ac:	5f 2e       	mov	r5, r31
    39ae:	f0 2d       	mov	r31, r0
    39b0:	0f 2e       	mov	r0, r31
    39b2:	f8 ef       	ldi	r31, 0xF8	; 248
    39b4:	8f 2e       	mov	r8, r31
    39b6:	f5 e0       	ldi	r31, 0x05	; 5
    39b8:	9f 2e       	mov	r9, r31
    39ba:	f0 2d       	mov	r31, r0
    39bc:	0f 2e       	mov	r0, r31
    39be:	f2 e1       	ldi	r31, 0x12	; 18
    39c0:	6f 2e       	mov	r6, r31
    39c2:	f6 e0       	ldi	r31, 0x06	; 6
    39c4:	7f 2e       	mov	r7, r31
    39c6:	f0 2d       	mov	r31, r0
    39c8:	3e 2c       	mov	r3, r14
    39ca:	2f 2c       	mov	r2, r15
    39cc:	ff 92       	push	r15
    39ce:	ef 92       	push	r14
    39d0:	bf 92       	push	r11
    39d2:	af 92       	push	r10
    39d4:	1f 93       	push	r17
    39d6:	0f 93       	push	r16
    39d8:	0e 94 4b 28 	call	0x5096	; 0x5096 <sprintf>
    39dc:	60 e0       	ldi	r22, 0x00	; 0
    39de:	70 e0       	ldi	r23, 0x00	; 0
    39e0:	c8 01       	movw	r24, r16
    39e2:	02 dd       	rcall	.-1532   	; 0x33e8 <_uploadMessage>
    39e4:	5b dd       	rcall	.-1354   	; 0x349c <_reply2ReturnCode>
    39e6:	0f 90       	pop	r0
    39e8:	0f 90       	pop	r0
    39ea:	0f 90       	pop	r0
    39ec:	0f 90       	pop	r0
    39ee:	0f 90       	pop	r0
    39f0:	0f 90       	pop	r0
    39f2:	81 11       	cpse	r24, r1
    39f4:	63 c0       	rjmp	.+198    	; 0x3abc <lora_driver_configureToEu868+0x18a>
    39f6:	32 e0       	ldi	r19, 0x02	; 2
    39f8:	3e 15       	cp	r19, r14
    39fa:	e8 f4       	brcc	.+58     	; 0x3a36 <lora_driver_configureToEu868+0x104>
    39fc:	f6 01       	movw	r30, r12
    39fe:	83 81       	ldd	r24, Z+3	; 0x03
    3a00:	8f 93       	push	r24
    3a02:	82 81       	ldd	r24, Z+2	; 0x02
    3a04:	8f 93       	push	r24
    3a06:	81 81       	ldd	r24, Z+1	; 0x01
    3a08:	8f 93       	push	r24
    3a0a:	80 81       	ld	r24, Z
    3a0c:	8f 93       	push	r24
    3a0e:	ff 92       	push	r15
    3a10:	ef 92       	push	r14
    3a12:	5f 92       	push	r5
    3a14:	4f 92       	push	r4
    3a16:	1f 93       	push	r17
    3a18:	0f 93       	push	r16
    3a1a:	0e 94 4b 28 	call	0x5096	; 0x5096 <sprintf>
    3a1e:	60 e0       	ldi	r22, 0x00	; 0
    3a20:	70 e0       	ldi	r23, 0x00	; 0
    3a22:	c8 01       	movw	r24, r16
    3a24:	e1 dc       	rcall	.-1598   	; 0x33e8 <_uploadMessage>
    3a26:	3a dd       	rcall	.-1420   	; 0x349c <_reply2ReturnCode>
    3a28:	0f b6       	in	r0, 0x3f	; 63
    3a2a:	f8 94       	cli
    3a2c:	de bf       	out	0x3e, r29	; 62
    3a2e:	0f be       	out	0x3f, r0	; 63
    3a30:	cd bf       	out	0x3d, r28	; 61
    3a32:	81 11       	cpse	r24, r1
    3a34:	43 c0       	rjmp	.+134    	; 0x3abc <lora_driver_configureToEu868+0x18a>
    3a36:	2f 92       	push	r2
    3a38:	3f 92       	push	r3
    3a3a:	9f 92       	push	r9
    3a3c:	8f 92       	push	r8
    3a3e:	1f 93       	push	r17
    3a40:	0f 93       	push	r16
    3a42:	0e 94 4b 28 	call	0x5096	; 0x5096 <sprintf>
    3a46:	60 e0       	ldi	r22, 0x00	; 0
    3a48:	70 e0       	ldi	r23, 0x00	; 0
    3a4a:	c8 01       	movw	r24, r16
    3a4c:	cd dc       	rcall	.-1638   	; 0x33e8 <_uploadMessage>
    3a4e:	26 dd       	rcall	.-1460   	; 0x349c <_reply2ReturnCode>
    3a50:	0f 90       	pop	r0
    3a52:	0f 90       	pop	r0
    3a54:	0f 90       	pop	r0
    3a56:	0f 90       	pop	r0
    3a58:	0f 90       	pop	r0
    3a5a:	0f 90       	pop	r0
    3a5c:	81 11       	cpse	r24, r1
    3a5e:	2e c0       	rjmp	.+92     	; 0x3abc <lora_driver_configureToEu868+0x18a>
    3a60:	2f 92       	push	r2
    3a62:	3f 92       	push	r3
    3a64:	7f 92       	push	r7
    3a66:	6f 92       	push	r6
    3a68:	1f 93       	push	r17
    3a6a:	0f 93       	push	r16
    3a6c:	0e 94 4b 28 	call	0x5096	; 0x5096 <sprintf>
    3a70:	60 e0       	ldi	r22, 0x00	; 0
    3a72:	70 e0       	ldi	r23, 0x00	; 0
    3a74:	c8 01       	movw	r24, r16
    3a76:	b8 dc       	rcall	.-1680   	; 0x33e8 <_uploadMessage>
    3a78:	11 dd       	rcall	.-1502   	; 0x349c <_reply2ReturnCode>
    3a7a:	0f 90       	pop	r0
    3a7c:	0f 90       	pop	r0
    3a7e:	0f 90       	pop	r0
    3a80:	0f 90       	pop	r0
    3a82:	0f 90       	pop	r0
    3a84:	0f 90       	pop	r0
    3a86:	81 11       	cpse	r24, r1
    3a88:	19 c0       	rjmp	.+50     	; 0x3abc <lora_driver_configureToEu868+0x18a>
    3a8a:	3f ef       	ldi	r19, 0xFF	; 255
    3a8c:	e3 1a       	sub	r14, r19
    3a8e:	f3 0a       	sbc	r15, r19
    3a90:	84 e0       	ldi	r24, 0x04	; 4
    3a92:	c8 0e       	add	r12, r24
    3a94:	d1 1c       	adc	r13, r1
    3a96:	98 e0       	ldi	r25, 0x08	; 8
    3a98:	e9 16       	cp	r14, r25
    3a9a:	f1 04       	cpc	r15, r1
    3a9c:	09 f0       	breq	.+2      	; 0x3aa0 <lora_driver_configureToEu868+0x16e>
    3a9e:	94 cf       	rjmp	.-216    	; 0x39c8 <lora_driver_configureToEu868+0x96>
    3aa0:	60 e0       	ldi	r22, 0x00	; 0
    3aa2:	70 e0       	ldi	r23, 0x00	; 0
    3aa4:	8a e2       	ldi	r24, 0x2A	; 42
    3aa6:	96 e0       	ldi	r25, 0x06	; 6
    3aa8:	9f dc       	rcall	.-1730   	; 0x33e8 <_uploadMessage>
    3aaa:	f8 dc       	rcall	.-1552   	; 0x349c <_reply2ReturnCode>
    3aac:	81 11       	cpse	r24, r1
    3aae:	06 c0       	rjmp	.+12     	; 0x3abc <lora_driver_configureToEu868+0x18a>
    3ab0:	60 e0       	ldi	r22, 0x00	; 0
    3ab2:	70 e0       	ldi	r23, 0x00	; 0
    3ab4:	8b e3       	ldi	r24, 0x3B	; 59
    3ab6:	96 e0       	ldi	r25, 0x06	; 6
    3ab8:	97 dc       	rcall	.-1746   	; 0x33e8 <_uploadMessage>
    3aba:	f0 dc       	rcall	.-1568   	; 0x349c <_reply2ReturnCode>
    3abc:	a0 96       	adiw	r28, 0x20	; 32
    3abe:	0f b6       	in	r0, 0x3f	; 63
    3ac0:	f8 94       	cli
    3ac2:	de bf       	out	0x3e, r29	; 62
    3ac4:	0f be       	out	0x3f, r0	; 63
    3ac6:	cd bf       	out	0x3d, r28	; 61
    3ac8:	df 91       	pop	r29
    3aca:	cf 91       	pop	r28
    3acc:	1f 91       	pop	r17
    3ace:	0f 91       	pop	r16
    3ad0:	ff 90       	pop	r15
    3ad2:	ef 90       	pop	r14
    3ad4:	df 90       	pop	r13
    3ad6:	cf 90       	pop	r12
    3ad8:	bf 90       	pop	r11
    3ada:	af 90       	pop	r10
    3adc:	9f 90       	pop	r9
    3ade:	8f 90       	pop	r8
    3ae0:	7f 90       	pop	r7
    3ae2:	6f 90       	pop	r6
    3ae4:	5f 90       	pop	r5
    3ae6:	4f 90       	pop	r4
    3ae8:	3f 90       	pop	r3
    3aea:	2f 90       	pop	r2
    3aec:	08 95       	ret

00003aee <lora_driver_setOtaaIdentity>:
    3aee:	ef 92       	push	r14
    3af0:	ff 92       	push	r15
    3af2:	0f 93       	push	r16
    3af4:	1f 93       	push	r17
    3af6:	cf 93       	push	r28
    3af8:	df 93       	push	r29
    3afa:	ec 01       	movw	r28, r24
    3afc:	8b 01       	movw	r16, r22
    3afe:	7a 01       	movw	r14, r20
    3b00:	81 e0       	ldi	r24, 0x01	; 1
    3b02:	f4 de       	rcall	.-536    	; 0x38ec <lora_driver_setAdaptiveDataRate>
    3b04:	81 11       	cpse	r24, r1
    3b06:	0d c0       	rjmp	.+26     	; 0x3b22 <lora_driver_setOtaaIdentity+0x34>
    3b08:	ce 01       	movw	r24, r28
    3b0a:	d4 dd       	rcall	.-1112   	; 0x36b4 <lora_driver_setApplicationIdentifier>
    3b0c:	81 11       	cpse	r24, r1
    3b0e:	09 c0       	rjmp	.+18     	; 0x3b22 <lora_driver_setOtaaIdentity+0x34>
    3b10:	c8 01       	movw	r24, r16
    3b12:	e1 dd       	rcall	.-1086   	; 0x36d6 <lora_driver_setApplicationKey>
    3b14:	81 11       	cpse	r24, r1
    3b16:	05 c0       	rjmp	.+10     	; 0x3b22 <lora_driver_setOtaaIdentity+0x34>
    3b18:	c7 01       	movw	r24, r14
    3b1a:	bb dd       	rcall	.-1162   	; 0x3692 <lora_driver_setDeviceIdentifier>
    3b1c:	81 11       	cpse	r24, r1
    3b1e:	01 c0       	rjmp	.+2      	; 0x3b22 <lora_driver_setOtaaIdentity+0x34>
    3b20:	eb dd       	rcall	.-1066   	; 0x36f8 <lora_driver_saveMac>
    3b22:	df 91       	pop	r29
    3b24:	cf 91       	pop	r28
    3b26:	1f 91       	pop	r17
    3b28:	0f 91       	pop	r16
    3b2a:	ff 90       	pop	r15
    3b2c:	ef 90       	pop	r14
    3b2e:	08 95       	ret

00003b30 <lora_driver_mapReturnCodeToText>:
    3b30:	90 e0       	ldi	r25, 0x00	; 0
    3b32:	fc 01       	movw	r30, r24
    3b34:	ee 0f       	add	r30, r30
    3b36:	ff 1f       	adc	r31, r31
    3b38:	8e 0f       	add	r24, r30
    3b3a:	9f 1f       	adc	r25, r31
    3b3c:	fc 01       	movw	r30, r24
    3b3e:	ec 5f       	subi	r30, 0xFC	; 252
    3b40:	f8 4f       	sbci	r31, 0xF8	; 248
    3b42:	81 81       	ldd	r24, Z+1	; 0x01
    3b44:	92 81       	ldd	r25, Z+2	; 0x02
    3b46:	08 95       	ret

00003b48 <decode_port_no>:
    3b48:	dc 01       	movw	r26, r24
    3b4a:	00 97       	sbiw	r24, 0x00	; 0
    3b4c:	29 f1       	breq	.+74     	; 0x3b98 <decode_port_no+0x50>
    3b4e:	fb 01       	movw	r30, r22
    3b50:	20 81       	ld	r18, Z
    3b52:	fc 01       	movw	r30, r24
    3b54:	01 90       	ld	r0, Z+
    3b56:	00 20       	and	r0, r0
    3b58:	e9 f7       	brne	.-6      	; 0x3b54 <decode_port_no+0xc>
    3b5a:	31 97       	sbiw	r30, 0x01	; 1
    3b5c:	e8 1b       	sub	r30, r24
    3b5e:	f9 0b       	sbc	r31, r25
    3b60:	82 2f       	mov	r24, r18
    3b62:	90 e0       	ldi	r25, 0x00	; 0
    3b64:	e8 17       	cp	r30, r24
    3b66:	f9 07       	cpc	r31, r25
    3b68:	c8 f0       	brcs	.+50     	; 0x3b9c <decode_port_no+0x54>
    3b6a:	80 e0       	ldi	r24, 0x00	; 0
    3b6c:	08 c0       	rjmp	.+16     	; 0x3b7e <decode_port_no+0x36>
    3b6e:	88 0f       	add	r24, r24
    3b70:	38 2f       	mov	r19, r24
    3b72:	33 0f       	add	r19, r19
    3b74:	33 0f       	add	r19, r19
    3b76:	83 0f       	add	r24, r19
    3b78:	80 53       	subi	r24, 0x30	; 48
    3b7a:	89 0f       	add	r24, r25
    3b7c:	2f 5f       	subi	r18, 0xFF	; 255
    3b7e:	fd 01       	movw	r30, r26
    3b80:	e2 0f       	add	r30, r18
    3b82:	f1 1d       	adc	r31, r1
    3b84:	90 81       	ld	r25, Z
    3b86:	30 ed       	ldi	r19, 0xD0	; 208
    3b88:	39 0f       	add	r19, r25
    3b8a:	3a 30       	cpi	r19, 0x0A	; 10
    3b8c:	10 f4       	brcc	.+4      	; 0x3b92 <decode_port_no+0x4a>
    3b8e:	91 11       	cpse	r25, r1
    3b90:	ee cf       	rjmp	.-36     	; 0x3b6e <decode_port_no+0x26>
    3b92:	fb 01       	movw	r30, r22
    3b94:	20 83       	st	Z, r18
    3b96:	08 95       	ret
    3b98:	80 e0       	ldi	r24, 0x00	; 0
    3b9a:	08 95       	ret
    3b9c:	80 e0       	ldi	r24, 0x00	; 0
    3b9e:	08 95       	ret

00003ba0 <decode_hexadecimal_string_bytes>:
    3ba0:	0f 93       	push	r16
    3ba2:	1f 93       	push	r17
    3ba4:	cf 93       	push	r28
    3ba6:	df 93       	push	r29
    3ba8:	dc 01       	movw	r26, r24
    3baa:	ea 01       	movw	r28, r20
    3bac:	20 97       	sbiw	r28, 0x00	; 0
    3bae:	e1 f1       	breq	.+120    	; 0x3c28 <decode_hexadecimal_string_bytes+0x88>
    3bb0:	fa 01       	movw	r30, r20
    3bb2:	01 90       	ld	r0, Z+
    3bb4:	00 20       	and	r0, r0
    3bb6:	e9 f7       	brne	.-6      	; 0x3bb2 <decode_hexadecimal_string_bytes+0x12>
    3bb8:	31 97       	sbiw	r30, 0x01	; 1
    3bba:	e4 1b       	sub	r30, r20
    3bbc:	f5 0b       	sbc	r31, r21
    3bbe:	32 97       	sbiw	r30, 0x02	; 2
    3bc0:	10 f5       	brcc	.+68     	; 0x3c06 <decode_hexadecimal_string_bytes+0x66>
    3bc2:	32 c0       	rjmp	.+100    	; 0x3c28 <decode_hexadecimal_string_bytes+0x88>
    3bc4:	8d 01       	movw	r16, r26
    3bc6:	04 0f       	add	r16, r20
    3bc8:	15 1f       	adc	r17, r21
    3bca:	30 e0       	ldi	r19, 0x00	; 0
    3bcc:	ae 01       	movw	r20, r28
    3bce:	42 0f       	add	r20, r18
    3bd0:	53 1f       	adc	r21, r19
    3bd2:	fa 01       	movw	r30, r20
    3bd4:	90 81       	ld	r25, Z
    3bd6:	91 34       	cpi	r25, 0x41	; 65
    3bd8:	28 f0       	brcs	.+10     	; 0x3be4 <decode_hexadecimal_string_bytes+0x44>
    3bda:	97 53       	subi	r25, 0x37	; 55
    3bdc:	59 2f       	mov	r21, r25
    3bde:	52 95       	swap	r21
    3be0:	50 7f       	andi	r21, 0xF0	; 240
    3be2:	03 c0       	rjmp	.+6      	; 0x3bea <decode_hexadecimal_string_bytes+0x4a>
    3be4:	59 2f       	mov	r21, r25
    3be6:	52 95       	swap	r21
    3be8:	50 7f       	andi	r21, 0xF0	; 240
    3bea:	2c 0f       	add	r18, r28
    3bec:	3d 1f       	adc	r19, r29
    3bee:	f9 01       	movw	r30, r18
    3bf0:	91 81       	ldd	r25, Z+1	; 0x01
    3bf2:	91 34       	cpi	r25, 0x41	; 65
    3bf4:	10 f0       	brcs	.+4      	; 0x3bfa <decode_hexadecimal_string_bytes+0x5a>
    3bf6:	97 53       	subi	r25, 0x37	; 55
    3bf8:	01 c0       	rjmp	.+2      	; 0x3bfc <decode_hexadecimal_string_bytes+0x5c>
    3bfa:	90 53       	subi	r25, 0x30	; 48
    3bfc:	95 0f       	add	r25, r21
    3bfe:	f8 01       	movw	r30, r16
    3c00:	90 83       	st	Z, r25
    3c02:	8f 5f       	subi	r24, 0xFF	; 255
    3c04:	01 c0       	rjmp	.+2      	; 0x3c08 <decode_hexadecimal_string_bytes+0x68>
    3c06:	80 e0       	ldi	r24, 0x00	; 0
    3c08:	28 2f       	mov	r18, r24
    3c0a:	22 0f       	add	r18, r18
    3c0c:	48 2f       	mov	r20, r24
    3c0e:	50 e0       	ldi	r21, 0x00	; 0
    3c10:	fe 01       	movw	r30, r28
    3c12:	01 90       	ld	r0, Z+
    3c14:	00 20       	and	r0, r0
    3c16:	e9 f7       	brne	.-6      	; 0x3c12 <decode_hexadecimal_string_bytes+0x72>
    3c18:	31 97       	sbiw	r30, 0x01	; 1
    3c1a:	ec 1b       	sub	r30, r28
    3c1c:	fd 0b       	sbc	r31, r29
    3c1e:	4e 17       	cp	r20, r30
    3c20:	5f 07       	cpc	r21, r31
    3c22:	10 f4       	brcc	.+4      	; 0x3c28 <decode_hexadecimal_string_bytes+0x88>
    3c24:	86 13       	cpse	r24, r22
    3c26:	ce cf       	rjmp	.-100    	; 0x3bc4 <decode_hexadecimal_string_bytes+0x24>
    3c28:	df 91       	pop	r29
    3c2a:	cf 91       	pop	r28
    3c2c:	1f 91       	pop	r17
    3c2e:	0f 91       	pop	r16
    3c30:	08 95       	ret

00003c32 <_serialCallBack>:
    3c32:	80 91 91 13 	lds	r24, 0x1391	; 0x801391 <crc_sum.1945>
    3c36:	86 0f       	add	r24, r22
    3c38:	80 93 91 13 	sts	0x1391, r24	; 0x801391 <crc_sum.1945>
    3c3c:	90 91 94 13 	lds	r25, 0x1394	; 0x801394 <_mh_state>
    3c40:	91 30       	cpi	r25, 0x01	; 1
    3c42:	79 f0       	breq	.+30     	; 0x3c62 <_serialCallBack+0x30>
    3c44:	28 f0       	brcs	.+10     	; 0x3c50 <_serialCallBack+0x1e>
    3c46:	92 30       	cpi	r25, 0x02	; 2
    3c48:	a9 f0       	breq	.+42     	; 0x3c74 <_serialCallBack+0x42>
    3c4a:	93 30       	cpi	r25, 0x03	; 3
    3c4c:	19 f1       	breq	.+70     	; 0x3c94 <_serialCallBack+0x62>
    3c4e:	08 95       	ret
    3c50:	6f 3f       	cpi	r22, 0xFF	; 255
    3c52:	09 f0       	breq	.+2      	; 0x3c56 <_serialCallBack+0x24>
    3c54:	48 c0       	rjmp	.+144    	; 0x3ce6 <_serialCallBack+0xb4>
    3c56:	10 92 91 13 	sts	0x1391, r1	; 0x801391 <crc_sum.1945>
    3c5a:	81 e0       	ldi	r24, 0x01	; 1
    3c5c:	80 93 94 13 	sts	0x1394, r24	; 0x801394 <_mh_state>
    3c60:	08 95       	ret
    3c62:	66 38       	cpi	r22, 0x86	; 134
    3c64:	09 f0       	breq	.+2      	; 0x3c68 <_serialCallBack+0x36>
    3c66:	3f c0       	rjmp	.+126    	; 0x3ce6 <_serialCallBack+0xb4>
    3c68:	10 92 90 13 	sts	0x1390, r1	; 0x801390 <inDex.1943>
    3c6c:	82 e0       	ldi	r24, 0x02	; 2
    3c6e:	80 93 94 13 	sts	0x1394, r24	; 0x801394 <_mh_state>
    3c72:	08 95       	ret
    3c74:	e0 91 90 13 	lds	r30, 0x1390	; 0x801390 <inDex.1943>
    3c78:	81 e0       	ldi	r24, 0x01	; 1
    3c7a:	8e 0f       	add	r24, r30
    3c7c:	80 93 90 13 	sts	0x1390, r24	; 0x801390 <inDex.1943>
    3c80:	f0 e0       	ldi	r31, 0x00	; 0
    3c82:	e2 57       	subi	r30, 0x72	; 114
    3c84:	fc 4e       	sbci	r31, 0xEC	; 236
    3c86:	60 83       	st	Z, r22
    3c88:	82 30       	cpi	r24, 0x02	; 2
    3c8a:	69 f5       	brne	.+90     	; 0x3ce6 <_serialCallBack+0xb4>
    3c8c:	83 e0       	ldi	r24, 0x03	; 3
    3c8e:	80 93 94 13 	sts	0x1394, r24	; 0x801394 <_mh_state>
    3c92:	08 95       	ret
    3c94:	90 91 90 13 	lds	r25, 0x1390	; 0x801390 <inDex.1943>
    3c98:	21 e0       	ldi	r18, 0x01	; 1
    3c9a:	29 0f       	add	r18, r25
    3c9c:	20 93 90 13 	sts	0x1390, r18	; 0x801390 <inDex.1943>
    3ca0:	96 30       	cpi	r25, 0x06	; 6
    3ca2:	09 f5       	brne	.+66     	; 0x3ce6 <_serialCallBack+0xb4>
    3ca4:	81 11       	cpse	r24, r1
    3ca6:	0e c0       	rjmp	.+28     	; 0x3cc4 <_serialCallBack+0x92>
    3ca8:	ee e8       	ldi	r30, 0x8E	; 142
    3caa:	f3 e1       	ldi	r31, 0x13	; 19
    3cac:	80 81       	ld	r24, Z
    3cae:	90 e0       	ldi	r25, 0x00	; 0
    3cb0:	98 2f       	mov	r25, r24
    3cb2:	88 27       	eor	r24, r24
    3cb4:	21 81       	ldd	r18, Z+1	; 0x01
    3cb6:	82 0f       	add	r24, r18
    3cb8:	91 1d       	adc	r25, r1
    3cba:	90 93 96 13 	sts	0x1396, r25	; 0x801396 <_ppm+0x1>
    3cbe:	80 93 95 13 	sts	0x1395, r24	; 0x801395 <_ppm>
    3cc2:	04 c0       	rjmp	.+8      	; 0x3ccc <_serialCallBack+0x9a>
    3cc4:	10 92 96 13 	sts	0x1396, r1	; 0x801396 <_ppm+0x1>
    3cc8:	10 92 95 13 	sts	0x1395, r1	; 0x801395 <_ppm>
    3ccc:	10 92 94 13 	sts	0x1394, r1	; 0x801394 <_mh_state>
    3cd0:	e0 91 92 13 	lds	r30, 0x1392	; 0x801392 <_appCallBack>
    3cd4:	f0 91 93 13 	lds	r31, 0x1393	; 0x801393 <_appCallBack+0x1>
    3cd8:	30 97       	sbiw	r30, 0x00	; 0
    3cda:	29 f0       	breq	.+10     	; 0x3ce6 <_serialCallBack+0xb4>
    3cdc:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_ppm>
    3ce0:	90 91 96 13 	lds	r25, 0x1396	; 0x801396 <_ppm+0x1>
    3ce4:	19 95       	eicall
    3ce6:	08 95       	ret

00003ce8 <mh_z19_initialise>:
    3ce8:	8f 92       	push	r8
    3cea:	9f 92       	push	r9
    3cec:	af 92       	push	r10
    3cee:	cf 92       	push	r12
    3cf0:	ef 92       	push	r14
    3cf2:	0f 93       	push	r16
    3cf4:	0f 2e       	mov	r0, r31
    3cf6:	f9 e1       	ldi	r31, 0x19	; 25
    3cf8:	8f 2e       	mov	r8, r31
    3cfa:	fe e1       	ldi	r31, 0x1E	; 30
    3cfc:	9f 2e       	mov	r9, r31
    3cfe:	f0 2d       	mov	r31, r0
    3d00:	68 94       	set
    3d02:	aa 24       	eor	r10, r10
    3d04:	a4 f8       	bld	r10, 4
    3d06:	68 94       	set
    3d08:	cc 24       	eor	r12, r12
    3d0a:	c4 f8       	bld	r12, 4
    3d0c:	e1 2c       	mov	r14, r1
    3d0e:	00 e0       	ldi	r16, 0x00	; 0
    3d10:	23 e0       	ldi	r18, 0x03	; 3
    3d12:	40 e8       	ldi	r20, 0x80	; 128
    3d14:	55 e2       	ldi	r21, 0x25	; 37
    3d16:	60 e0       	ldi	r22, 0x00	; 0
    3d18:	70 e0       	ldi	r23, 0x00	; 0
    3d1a:	3f d0       	rcall	.+126    	; 0x3d9a <serial_create>
    3d1c:	90 93 98 13 	sts	0x1398, r25	; 0x801398 <_serial+0x1>
    3d20:	80 93 97 13 	sts	0x1397, r24	; 0x801397 <_serial>
    3d24:	0f 91       	pop	r16
    3d26:	ef 90       	pop	r14
    3d28:	cf 90       	pop	r12
    3d2a:	af 90       	pop	r10
    3d2c:	9f 90       	pop	r9
    3d2e:	8f 90       	pop	r8
    3d30:	08 95       	ret

00003d32 <mh_z19_injectCallBack>:
    3d32:	90 93 93 13 	sts	0x1393, r25	; 0x801393 <_appCallBack+0x1>
    3d36:	80 93 92 13 	sts	0x1392, r24	; 0x801392 <_appCallBack>
    3d3a:	08 95       	ret

00003d3c <mh_z19_takeMeassuring>:
    3d3c:	cf 93       	push	r28
    3d3e:	df 93       	push	r29
    3d40:	cd b7       	in	r28, 0x3d	; 61
    3d42:	de b7       	in	r29, 0x3e	; 62
    3d44:	29 97       	sbiw	r28, 0x09	; 9
    3d46:	0f b6       	in	r0, 0x3f	; 63
    3d48:	f8 94       	cli
    3d4a:	de bf       	out	0x3e, r29	; 62
    3d4c:	0f be       	out	0x3f, r0	; 63
    3d4e:	cd bf       	out	0x3d, r28	; 61
    3d50:	89 e0       	ldi	r24, 0x09	; 9
    3d52:	ed e3       	ldi	r30, 0x3D	; 61
    3d54:	f2 e0       	ldi	r31, 0x02	; 2
    3d56:	9e 01       	movw	r18, r28
    3d58:	2f 5f       	subi	r18, 0xFF	; 255
    3d5a:	3f 4f       	sbci	r19, 0xFF	; 255
    3d5c:	d9 01       	movw	r26, r18
    3d5e:	01 90       	ld	r0, Z+
    3d60:	0d 92       	st	X+, r0
    3d62:	8a 95       	dec	r24
    3d64:	e1 f7       	brne	.-8      	; 0x3d5e <mh_z19_takeMeassuring+0x22>
    3d66:	10 92 96 13 	sts	0x1396, r1	; 0x801396 <_ppm+0x1>
    3d6a:	10 92 95 13 	sts	0x1395, r1	; 0x801395 <_ppm>
    3d6e:	80 91 97 13 	lds	r24, 0x1397	; 0x801397 <_serial>
    3d72:	90 91 98 13 	lds	r25, 0x1398	; 0x801398 <_serial+0x1>
    3d76:	00 97       	sbiw	r24, 0x00	; 0
    3d78:	31 f0       	breq	.+12     	; 0x3d86 <mh_z19_takeMeassuring+0x4a>
    3d7a:	42 2f       	mov	r20, r18
    3d7c:	53 2f       	mov	r21, r19
    3d7e:	69 e0       	ldi	r22, 0x09	; 9
    3d80:	d3 d0       	rcall	.+422    	; 0x3f28 <serial_sendBytes>
    3d82:	80 e0       	ldi	r24, 0x00	; 0
    3d84:	01 c0       	rjmp	.+2      	; 0x3d88 <mh_z19_takeMeassuring+0x4c>
    3d86:	82 e0       	ldi	r24, 0x02	; 2
    3d88:	29 96       	adiw	r28, 0x09	; 9
    3d8a:	0f b6       	in	r0, 0x3f	; 63
    3d8c:	f8 94       	cli
    3d8e:	de bf       	out	0x3e, r29	; 62
    3d90:	0f be       	out	0x3f, r0	; 63
    3d92:	cd bf       	out	0x3d, r28	; 61
    3d94:	df 91       	pop	r29
    3d96:	cf 91       	pop	r28
    3d98:	08 95       	ret

00003d9a <serial_create>:
    3d9a:	2f 92       	push	r2
    3d9c:	3f 92       	push	r3
    3d9e:	4f 92       	push	r4
    3da0:	5f 92       	push	r5
    3da2:	6f 92       	push	r6
    3da4:	7f 92       	push	r7
    3da6:	8f 92       	push	r8
    3da8:	9f 92       	push	r9
    3daa:	af 92       	push	r10
    3dac:	cf 92       	push	r12
    3dae:	ef 92       	push	r14
    3db0:	ff 92       	push	r15
    3db2:	0f 93       	push	r16
    3db4:	1f 93       	push	r17
    3db6:	cf 93       	push	r28
    3db8:	df 93       	push	r29
    3dba:	cd b7       	in	r28, 0x3d	; 61
    3dbc:	de b7       	in	r29, 0x3e	; 62
    3dbe:	f8 2e       	mov	r15, r24
    3dc0:	2a 01       	movw	r4, r20
    3dc2:	3b 01       	movw	r6, r22
    3dc4:	88 e0       	ldi	r24, 0x08	; 8
    3dc6:	90 e0       	ldi	r25, 0x00	; 0
    3dc8:	9f d7       	rcall	.+3902   	; 0x4d08 <malloc>
    3dca:	8c 01       	movw	r16, r24
    3dcc:	8f 2d       	mov	r24, r15
    3dce:	90 e0       	ldi	r25, 0x00	; 0
    3dd0:	fc 01       	movw	r30, r24
    3dd2:	ee 0f       	add	r30, r30
    3dd4:	ff 1f       	adc	r31, r31
    3dd6:	e7 56       	subi	r30, 0x67	; 103
    3dd8:	fc 4e       	sbci	r31, 0xEC	; 236
    3dda:	11 83       	std	Z+1, r17	; 0x01
    3ddc:	00 83       	st	Z, r16
    3dde:	01 15       	cp	r16, r1
    3de0:	11 05       	cpc	r17, r1
    3de2:	09 f4       	brne	.+2      	; 0x3de6 <serial_create+0x4c>
    3de4:	64 c0       	rjmp	.+200    	; 0x3eae <serial_create+0x114>
    3de6:	88 0f       	add	r24, r24
    3de8:	99 1f       	adc	r25, r25
    3dea:	fc 01       	movw	r30, r24
    3dec:	e9 5f       	subi	r30, 0xF9	; 249
    3dee:	fd 4f       	sbci	r31, 0xFD	; 253
    3df0:	80 81       	ld	r24, Z
    3df2:	91 81       	ldd	r25, Z+1	; 0x01
    3df4:	d8 01       	movw	r26, r16
    3df6:	8d 93       	st	X+, r24
    3df8:	9c 93       	st	X, r25
    3dfa:	6c 2d       	mov	r22, r12
    3dfc:	70 e0       	ldi	r23, 0x00	; 0
    3dfe:	84 e0       	ldi	r24, 0x04	; 4
    3e00:	90 e0       	ldi	r25, 0x00	; 0
    3e02:	68 d7       	rcall	.+3792   	; 0x4cd4 <calloc>
    3e04:	1c 01       	movw	r2, r24
    3e06:	61 e0       	ldi	r22, 0x01	; 1
    3e08:	70 e0       	ldi	r23, 0x00	; 0
    3e0a:	86 e0       	ldi	r24, 0x06	; 6
    3e0c:	90 e0       	ldi	r25, 0x00	; 0
    3e0e:	62 d7       	rcall	.+3780   	; 0x4cd4 <calloc>
    3e10:	7c 01       	movw	r14, r24
    3e12:	4c 2d       	mov	r20, r12
    3e14:	b1 01       	movw	r22, r2
    3e16:	50 d5       	rcall	.+2720   	; 0x48b8 <fifo_init>
    3e18:	f8 01       	movw	r30, r16
    3e1a:	f5 82       	std	Z+5, r15	; 0x05
    3e1c:	e4 82       	std	Z+4, r14	; 0x04
    3e1e:	6a 2d       	mov	r22, r10
    3e20:	70 e0       	ldi	r23, 0x00	; 0
    3e22:	84 e0       	ldi	r24, 0x04	; 4
    3e24:	90 e0       	ldi	r25, 0x00	; 0
    3e26:	56 d7       	rcall	.+3756   	; 0x4cd4 <calloc>
    3e28:	1c 01       	movw	r2, r24
    3e2a:	61 e0       	ldi	r22, 0x01	; 1
    3e2c:	70 e0       	ldi	r23, 0x00	; 0
    3e2e:	86 e0       	ldi	r24, 0x06	; 6
    3e30:	90 e0       	ldi	r25, 0x00	; 0
    3e32:	50 d7       	rcall	.+3744   	; 0x4cd4 <calloc>
    3e34:	7c 01       	movw	r14, r24
    3e36:	4a 2d       	mov	r20, r10
    3e38:	b1 01       	movw	r22, r2
    3e3a:	3e d5       	rcall	.+2684   	; 0x48b8 <fifo_init>
    3e3c:	d8 01       	movw	r26, r16
    3e3e:	13 96       	adiw	r26, 0x03	; 3
    3e40:	fc 92       	st	X, r15
    3e42:	ee 92       	st	-X, r14
    3e44:	12 97       	sbiw	r26, 0x02	; 2
    3e46:	17 96       	adiw	r26, 0x07	; 7
    3e48:	9c 92       	st	X, r9
    3e4a:	8e 92       	st	-X, r8
    3e4c:	16 97       	sbiw	r26, 0x06	; 6
    3e4e:	ff b6       	in	r15, 0x3f	; 63
    3e50:	f8 94       	cli
    3e52:	ed 91       	ld	r30, X+
    3e54:	fc 91       	ld	r31, X
    3e56:	11 97       	sbiw	r26, 0x01	; 1
    3e58:	36 97       	sbiw	r30, 0x06	; 6
    3e5a:	80 81       	ld	r24, Z
    3e5c:	82 60       	ori	r24, 0x02	; 2
    3e5e:	80 83       	st	Z, r24
    3e60:	8d 90       	ld	r8, X+
    3e62:	9c 90       	ld	r9, X
    3e64:	c3 01       	movw	r24, r6
    3e66:	b2 01       	movw	r22, r4
    3e68:	3c d6       	rcall	.+3192   	; 0x4ae2 <__floatunsisf>
    3e6a:	20 e0       	ldi	r18, 0x00	; 0
    3e6c:	30 e0       	ldi	r19, 0x00	; 0
    3e6e:	40 e0       	ldi	r20, 0x00	; 0
    3e70:	51 e4       	ldi	r21, 0x41	; 65
    3e72:	c5 d6       	rcall	.+3466   	; 0x4bfe <__mulsf3>
    3e74:	9b 01       	movw	r18, r22
    3e76:	ac 01       	movw	r20, r24
    3e78:	60 e0       	ldi	r22, 0x00	; 0
    3e7a:	74 e2       	ldi	r23, 0x24	; 36
    3e7c:	84 e7       	ldi	r24, 0x74	; 116
    3e7e:	9b e4       	ldi	r25, 0x4B	; 75
    3e80:	9c d5       	rcall	.+2872   	; 0x49ba <__divsf3>
    3e82:	20 e0       	ldi	r18, 0x00	; 0
    3e84:	30 e0       	ldi	r19, 0x00	; 0
    3e86:	40 e8       	ldi	r20, 0x80	; 128
    3e88:	5f e3       	ldi	r21, 0x3F	; 63
    3e8a:	32 d5       	rcall	.+2660   	; 0x48f0 <__subsf3>
    3e8c:	fe d5       	rcall	.+3068   	; 0x4a8a <__fixunssfsi>
    3e8e:	f4 01       	movw	r30, r8
    3e90:	32 97       	sbiw	r30, 0x02	; 2
    3e92:	60 83       	st	Z, r22
    3e94:	d8 01       	movw	r26, r16
    3e96:	ed 91       	ld	r30, X+
    3e98:	fc 91       	ld	r31, X
    3e9a:	11 97       	sbiw	r26, 0x01	; 1
    3e9c:	35 97       	sbiw	r30, 0x05	; 5
    3e9e:	88 e9       	ldi	r24, 0x98	; 152
    3ea0:	80 83       	st	Z, r24
    3ea2:	ed 91       	ld	r30, X+
    3ea4:	fc 91       	ld	r31, X
    3ea6:	34 97       	sbiw	r30, 0x04	; 4
    3ea8:	86 e0       	ldi	r24, 0x06	; 6
    3eaa:	80 83       	st	Z, r24
    3eac:	ff be       	out	0x3f, r15	; 63
    3eae:	c8 01       	movw	r24, r16
    3eb0:	df 91       	pop	r29
    3eb2:	cf 91       	pop	r28
    3eb4:	1f 91       	pop	r17
    3eb6:	0f 91       	pop	r16
    3eb8:	ff 90       	pop	r15
    3eba:	ef 90       	pop	r14
    3ebc:	cf 90       	pop	r12
    3ebe:	af 90       	pop	r10
    3ec0:	9f 90       	pop	r9
    3ec2:	8f 90       	pop	r8
    3ec4:	7f 90       	pop	r7
    3ec6:	6f 90       	pop	r6
    3ec8:	5f 90       	pop	r5
    3eca:	4f 90       	pop	r4
    3ecc:	3f 90       	pop	r3
    3ece:	2f 90       	pop	r2
    3ed0:	08 95       	ret

00003ed2 <serial_sendByte>:
    3ed2:	cf 93       	push	r28
    3ed4:	df 93       	push	r29
    3ed6:	dc 01       	movw	r26, r24
    3ed8:	89 2b       	or	r24, r25
    3eda:	01 f1       	breq	.+64     	; 0x3f1c <serial_sendByte+0x4a>
    3edc:	12 96       	adiw	r26, 0x02	; 2
    3ede:	ed 91       	ld	r30, X+
    3ee0:	fc 91       	ld	r31, X
    3ee2:	13 97       	sbiw	r26, 0x03	; 3
    3ee4:	93 81       	ldd	r25, Z+3	; 0x03
    3ee6:	82 81       	ldd	r24, Z+2	; 0x02
    3ee8:	25 81       	ldd	r18, Z+5	; 0x05
    3eea:	98 1b       	sub	r25, r24
    3eec:	92 23       	and	r25, r18
    3eee:	84 81       	ldd	r24, Z+4	; 0x04
    3ef0:	98 17       	cp	r25, r24
    3ef2:	b1 f0       	breq	.+44     	; 0x3f20 <serial_sendByte+0x4e>
    3ef4:	83 81       	ldd	r24, Z+3	; 0x03
    3ef6:	26 95       	lsr	r18
    3ef8:	28 23       	and	r18, r24
    3efa:	c0 81       	ld	r28, Z
    3efc:	d1 81       	ldd	r29, Z+1	; 0x01
    3efe:	c2 0f       	add	r28, r18
    3f00:	d1 1d       	adc	r29, r1
    3f02:	68 83       	st	Y, r22
    3f04:	8f 5f       	subi	r24, 0xFF	; 255
    3f06:	95 81       	ldd	r25, Z+5	; 0x05
    3f08:	89 23       	and	r24, r25
    3f0a:	83 83       	std	Z+3, r24	; 0x03
    3f0c:	ed 91       	ld	r30, X+
    3f0e:	fc 91       	ld	r31, X
    3f10:	35 97       	sbiw	r30, 0x05	; 5
    3f12:	80 81       	ld	r24, Z
    3f14:	80 62       	ori	r24, 0x20	; 32
    3f16:	80 83       	st	Z, r24
    3f18:	80 e0       	ldi	r24, 0x00	; 0
    3f1a:	03 c0       	rjmp	.+6      	; 0x3f22 <serial_sendByte+0x50>
    3f1c:	81 e0       	ldi	r24, 0x01	; 1
    3f1e:	01 c0       	rjmp	.+2      	; 0x3f22 <serial_sendByte+0x50>
    3f20:	82 e0       	ldi	r24, 0x02	; 2
    3f22:	df 91       	pop	r29
    3f24:	cf 91       	pop	r28
    3f26:	08 95       	ret

00003f28 <serial_sendBytes>:
    3f28:	ef 92       	push	r14
    3f2a:	ff 92       	push	r15
    3f2c:	0f 93       	push	r16
    3f2e:	1f 93       	push	r17
    3f30:	cf 93       	push	r28
    3f32:	df 93       	push	r29
    3f34:	7c 01       	movw	r14, r24
    3f36:	00 97       	sbiw	r24, 0x00	; 0
    3f38:	09 f4       	brne	.+2      	; 0x3f3c <serial_sendBytes+0x14>
    3f3a:	41 c0       	rjmp	.+130    	; 0x3fbe <serial_sendBytes+0x96>
    3f3c:	dc 01       	movw	r26, r24
    3f3e:	12 96       	adiw	r26, 0x02	; 2
    3f40:	ed 91       	ld	r30, X+
    3f42:	fc 91       	ld	r31, X
    3f44:	13 97       	sbiw	r26, 0x03	; 3
    3f46:	93 81       	ldd	r25, Z+3	; 0x03
    3f48:	82 81       	ldd	r24, Z+2	; 0x02
    3f4a:	98 1b       	sub	r25, r24
    3f4c:	85 81       	ldd	r24, Z+5	; 0x05
    3f4e:	98 23       	and	r25, r24
    3f50:	84 81       	ldd	r24, Z+4	; 0x04
    3f52:	89 1b       	sub	r24, r25
    3f54:	86 17       	cp	r24, r22
    3f56:	a8 f1       	brcs	.+106    	; 0x3fc2 <serial_sendBytes+0x9a>
    3f58:	66 23       	and	r22, r22
    3f5a:	41 f1       	breq	.+80     	; 0x3fac <serial_sendBytes+0x84>
    3f5c:	84 2f       	mov	r24, r20
    3f5e:	95 2f       	mov	r25, r21
    3f60:	dc 01       	movw	r26, r24
    3f62:	61 50       	subi	r22, 0x01	; 1
    3f64:	46 2f       	mov	r20, r22
    3f66:	50 e0       	ldi	r21, 0x00	; 0
    3f68:	4f 5f       	subi	r20, 0xFF	; 255
    3f6a:	5f 4f       	sbci	r21, 0xFF	; 255
    3f6c:	48 0f       	add	r20, r24
    3f6e:	59 1f       	adc	r21, r25
    3f70:	e7 01       	movw	r28, r14
    3f72:	ea 81       	ldd	r30, Y+2	; 0x02
    3f74:	fb 81       	ldd	r31, Y+3	; 0x03
    3f76:	93 81       	ldd	r25, Z+3	; 0x03
    3f78:	82 81       	ldd	r24, Z+2	; 0x02
    3f7a:	25 81       	ldd	r18, Z+5	; 0x05
    3f7c:	98 1b       	sub	r25, r24
    3f7e:	92 23       	and	r25, r18
    3f80:	84 81       	ldd	r24, Z+4	; 0x04
    3f82:	98 17       	cp	r25, r24
    3f84:	79 f0       	breq	.+30     	; 0x3fa4 <serial_sendBytes+0x7c>
    3f86:	8c 91       	ld	r24, X
    3f88:	93 81       	ldd	r25, Z+3	; 0x03
    3f8a:	26 95       	lsr	r18
    3f8c:	29 23       	and	r18, r25
    3f8e:	60 81       	ld	r22, Z
    3f90:	71 81       	ldd	r23, Z+1	; 0x01
    3f92:	8b 01       	movw	r16, r22
    3f94:	02 0f       	add	r16, r18
    3f96:	11 1d       	adc	r17, r1
    3f98:	e8 01       	movw	r28, r16
    3f9a:	88 83       	st	Y, r24
    3f9c:	9f 5f       	subi	r25, 0xFF	; 255
    3f9e:	85 81       	ldd	r24, Z+5	; 0x05
    3fa0:	98 23       	and	r25, r24
    3fa2:	93 83       	std	Z+3, r25	; 0x03
    3fa4:	11 96       	adiw	r26, 0x01	; 1
    3fa6:	a4 17       	cp	r26, r20
    3fa8:	b5 07       	cpc	r27, r21
    3faa:	11 f7       	brne	.-60     	; 0x3f70 <serial_sendBytes+0x48>
    3fac:	d7 01       	movw	r26, r14
    3fae:	ed 91       	ld	r30, X+
    3fb0:	fc 91       	ld	r31, X
    3fb2:	35 97       	sbiw	r30, 0x05	; 5
    3fb4:	80 81       	ld	r24, Z
    3fb6:	80 62       	ori	r24, 0x20	; 32
    3fb8:	80 83       	st	Z, r24
    3fba:	80 e0       	ldi	r24, 0x00	; 0
    3fbc:	03 c0       	rjmp	.+6      	; 0x3fc4 <serial_sendBytes+0x9c>
    3fbe:	81 e0       	ldi	r24, 0x01	; 1
    3fc0:	01 c0       	rjmp	.+2      	; 0x3fc4 <serial_sendBytes+0x9c>
    3fc2:	82 e0       	ldi	r24, 0x02	; 2
    3fc4:	df 91       	pop	r29
    3fc6:	cf 91       	pop	r28
    3fc8:	1f 91       	pop	r17
    3fca:	0f 91       	pop	r16
    3fcc:	ff 90       	pop	r15
    3fce:	ef 90       	pop	r14
    3fd0:	08 95       	ret

00003fd2 <serial_getByte>:
    3fd2:	00 97       	sbiw	r24, 0x00	; 0
    3fd4:	d1 f0       	breq	.+52     	; 0x400a <serial_getByte+0x38>
    3fd6:	dc 01       	movw	r26, r24
    3fd8:	14 96       	adiw	r26, 0x04	; 4
    3fda:	ed 91       	ld	r30, X+
    3fdc:	fc 91       	ld	r31, X
    3fde:	15 97       	sbiw	r26, 0x05	; 5
    3fe0:	93 81       	ldd	r25, Z+3	; 0x03
    3fe2:	82 81       	ldd	r24, Z+2	; 0x02
    3fe4:	98 17       	cp	r25, r24
    3fe6:	99 f0       	breq	.+38     	; 0x400e <serial_getByte+0x3c>
    3fe8:	92 81       	ldd	r25, Z+2	; 0x02
    3fea:	85 81       	ldd	r24, Z+5	; 0x05
    3fec:	86 95       	lsr	r24
    3fee:	89 23       	and	r24, r25
    3ff0:	a0 81       	ld	r26, Z
    3ff2:	b1 81       	ldd	r27, Z+1	; 0x01
    3ff4:	a8 0f       	add	r26, r24
    3ff6:	b1 1d       	adc	r27, r1
    3ff8:	8c 91       	ld	r24, X
    3ffa:	db 01       	movw	r26, r22
    3ffc:	8c 93       	st	X, r24
    3ffe:	9f 5f       	subi	r25, 0xFF	; 255
    4000:	85 81       	ldd	r24, Z+5	; 0x05
    4002:	98 23       	and	r25, r24
    4004:	92 83       	std	Z+2, r25	; 0x02
    4006:	80 e0       	ldi	r24, 0x00	; 0
    4008:	08 95       	ret
    400a:	81 e0       	ldi	r24, 0x01	; 1
    400c:	08 95       	ret
    400e:	83 e0       	ldi	r24, 0x03	; 3
    4010:	08 95       	ret

00004012 <__vector_25>:
    4012:	1f 92       	push	r1
    4014:	0f 92       	push	r0
    4016:	0f b6       	in	r0, 0x3f	; 63
    4018:	0f 92       	push	r0
    401a:	11 24       	eor	r1, r1
    401c:	0b b6       	in	r0, 0x3b	; 59
    401e:	0f 92       	push	r0
    4020:	2f 93       	push	r18
    4022:	3f 93       	push	r19
    4024:	4f 93       	push	r20
    4026:	5f 93       	push	r21
    4028:	6f 93       	push	r22
    402a:	7f 93       	push	r23
    402c:	8f 93       	push	r24
    402e:	9f 93       	push	r25
    4030:	af 93       	push	r26
    4032:	bf 93       	push	r27
    4034:	cf 93       	push	r28
    4036:	df 93       	push	r29
    4038:	ef 93       	push	r30
    403a:	ff 93       	push	r31
    403c:	a0 91 99 13 	lds	r26, 0x1399	; 0x801399 <_ser_handle>
    4040:	b0 91 9a 13 	lds	r27, 0x139A	; 0x80139a <_ser_handle+0x1>
    4044:	10 97       	sbiw	r26, 0x00	; 0
    4046:	11 f1       	breq	.+68     	; 0x408c <__vector_25+0x7a>
    4048:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    404c:	14 96       	adiw	r26, 0x04	; 4
    404e:	ed 91       	ld	r30, X+
    4050:	fc 91       	ld	r31, X
    4052:	15 97       	sbiw	r26, 0x05	; 5
    4054:	93 81       	ldd	r25, Z+3	; 0x03
    4056:	82 81       	ldd	r24, Z+2	; 0x02
    4058:	25 81       	ldd	r18, Z+5	; 0x05
    405a:	98 1b       	sub	r25, r24
    405c:	92 23       	and	r25, r18
    405e:	84 81       	ldd	r24, Z+4	; 0x04
    4060:	98 17       	cp	r25, r24
    4062:	61 f0       	breq	.+24     	; 0x407c <__vector_25+0x6a>
    4064:	83 81       	ldd	r24, Z+3	; 0x03
    4066:	26 95       	lsr	r18
    4068:	28 23       	and	r18, r24
    406a:	c0 81       	ld	r28, Z
    406c:	d1 81       	ldd	r29, Z+1	; 0x01
    406e:	c2 0f       	add	r28, r18
    4070:	d1 1d       	adc	r29, r1
    4072:	68 83       	st	Y, r22
    4074:	8f 5f       	subi	r24, 0xFF	; 255
    4076:	95 81       	ldd	r25, Z+5	; 0x05
    4078:	89 23       	and	r24, r25
    407a:	83 83       	std	Z+3, r24	; 0x03
    407c:	16 96       	adiw	r26, 0x06	; 6
    407e:	ed 91       	ld	r30, X+
    4080:	fc 91       	ld	r31, X
    4082:	17 97       	sbiw	r26, 0x07	; 7
    4084:	30 97       	sbiw	r30, 0x00	; 0
    4086:	11 f0       	breq	.+4      	; 0x408c <__vector_25+0x7a>
    4088:	cd 01       	movw	r24, r26
    408a:	19 95       	eicall
    408c:	ff 91       	pop	r31
    408e:	ef 91       	pop	r30
    4090:	df 91       	pop	r29
    4092:	cf 91       	pop	r28
    4094:	bf 91       	pop	r27
    4096:	af 91       	pop	r26
    4098:	9f 91       	pop	r25
    409a:	8f 91       	pop	r24
    409c:	7f 91       	pop	r23
    409e:	6f 91       	pop	r22
    40a0:	5f 91       	pop	r21
    40a2:	4f 91       	pop	r20
    40a4:	3f 91       	pop	r19
    40a6:	2f 91       	pop	r18
    40a8:	0f 90       	pop	r0
    40aa:	0b be       	out	0x3b, r0	; 59
    40ac:	0f 90       	pop	r0
    40ae:	0f be       	out	0x3f, r0	; 63
    40b0:	0f 90       	pop	r0
    40b2:	1f 90       	pop	r1
    40b4:	18 95       	reti

000040b6 <__vector_26>:
    40b6:	1f 92       	push	r1
    40b8:	0f 92       	push	r0
    40ba:	0f b6       	in	r0, 0x3f	; 63
    40bc:	0f 92       	push	r0
    40be:	11 24       	eor	r1, r1
    40c0:	0b b6       	in	r0, 0x3b	; 59
    40c2:	0f 92       	push	r0
    40c4:	2f 93       	push	r18
    40c6:	8f 93       	push	r24
    40c8:	9f 93       	push	r25
    40ca:	af 93       	push	r26
    40cc:	bf 93       	push	r27
    40ce:	ef 93       	push	r30
    40d0:	ff 93       	push	r31
    40d2:	e0 91 99 13 	lds	r30, 0x1399	; 0x801399 <_ser_handle>
    40d6:	f0 91 9a 13 	lds	r31, 0x139A	; 0x80139a <_ser_handle+0x1>
    40da:	30 97       	sbiw	r30, 0x00	; 0
    40dc:	b9 f0       	breq	.+46     	; 0x410c <__vector_26+0x56>
    40de:	02 80       	ldd	r0, Z+2	; 0x02
    40e0:	f3 81       	ldd	r31, Z+3	; 0x03
    40e2:	e0 2d       	mov	r30, r0
    40e4:	93 81       	ldd	r25, Z+3	; 0x03
    40e6:	82 81       	ldd	r24, Z+2	; 0x02
    40e8:	98 17       	cp	r25, r24
    40ea:	b1 f0       	breq	.+44     	; 0x4118 <__vector_26+0x62>
    40ec:	92 81       	ldd	r25, Z+2	; 0x02
    40ee:	85 81       	ldd	r24, Z+5	; 0x05
    40f0:	28 2f       	mov	r18, r24
    40f2:	26 95       	lsr	r18
    40f4:	29 23       	and	r18, r25
    40f6:	a0 81       	ld	r26, Z
    40f8:	b1 81       	ldd	r27, Z+1	; 0x01
    40fa:	a2 0f       	add	r26, r18
    40fc:	b1 1d       	adc	r27, r1
    40fe:	2c 91       	ld	r18, X
    4100:	9f 5f       	subi	r25, 0xFF	; 255
    4102:	89 23       	and	r24, r25
    4104:	82 83       	std	Z+2, r24	; 0x02
    4106:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    410a:	0b c0       	rjmp	.+22     	; 0x4122 <__vector_26+0x6c>
    410c:	e1 ec       	ldi	r30, 0xC1	; 193
    410e:	f0 e0       	ldi	r31, 0x00	; 0
    4110:	80 81       	ld	r24, Z
    4112:	8f 7d       	andi	r24, 0xDF	; 223
    4114:	80 83       	st	Z, r24
    4116:	05 c0       	rjmp	.+10     	; 0x4122 <__vector_26+0x6c>
    4118:	e1 ec       	ldi	r30, 0xC1	; 193
    411a:	f0 e0       	ldi	r31, 0x00	; 0
    411c:	80 81       	ld	r24, Z
    411e:	8f 7d       	andi	r24, 0xDF	; 223
    4120:	80 83       	st	Z, r24
    4122:	ff 91       	pop	r31
    4124:	ef 91       	pop	r30
    4126:	bf 91       	pop	r27
    4128:	af 91       	pop	r26
    412a:	9f 91       	pop	r25
    412c:	8f 91       	pop	r24
    412e:	2f 91       	pop	r18
    4130:	0f 90       	pop	r0
    4132:	0b be       	out	0x3b, r0	; 59
    4134:	0f 90       	pop	r0
    4136:	0f be       	out	0x3f, r0	; 63
    4138:	0f 90       	pop	r0
    413a:	1f 90       	pop	r1
    413c:	18 95       	reti

0000413e <__vector_36>:
    413e:	1f 92       	push	r1
    4140:	0f 92       	push	r0
    4142:	0f b6       	in	r0, 0x3f	; 63
    4144:	0f 92       	push	r0
    4146:	11 24       	eor	r1, r1
    4148:	0b b6       	in	r0, 0x3b	; 59
    414a:	0f 92       	push	r0
    414c:	2f 93       	push	r18
    414e:	3f 93       	push	r19
    4150:	4f 93       	push	r20
    4152:	5f 93       	push	r21
    4154:	6f 93       	push	r22
    4156:	7f 93       	push	r23
    4158:	8f 93       	push	r24
    415a:	9f 93       	push	r25
    415c:	af 93       	push	r26
    415e:	bf 93       	push	r27
    4160:	cf 93       	push	r28
    4162:	df 93       	push	r29
    4164:	ef 93       	push	r30
    4166:	ff 93       	push	r31
    4168:	a0 91 9b 13 	lds	r26, 0x139B	; 0x80139b <_ser_handle+0x2>
    416c:	b0 91 9c 13 	lds	r27, 0x139C	; 0x80139c <_ser_handle+0x3>
    4170:	10 97       	sbiw	r26, 0x00	; 0
    4172:	11 f1       	breq	.+68     	; 0x41b8 <__vector_36+0x7a>
    4174:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    4178:	14 96       	adiw	r26, 0x04	; 4
    417a:	ed 91       	ld	r30, X+
    417c:	fc 91       	ld	r31, X
    417e:	15 97       	sbiw	r26, 0x05	; 5
    4180:	93 81       	ldd	r25, Z+3	; 0x03
    4182:	82 81       	ldd	r24, Z+2	; 0x02
    4184:	25 81       	ldd	r18, Z+5	; 0x05
    4186:	98 1b       	sub	r25, r24
    4188:	92 23       	and	r25, r18
    418a:	84 81       	ldd	r24, Z+4	; 0x04
    418c:	98 17       	cp	r25, r24
    418e:	61 f0       	breq	.+24     	; 0x41a8 <__vector_36+0x6a>
    4190:	83 81       	ldd	r24, Z+3	; 0x03
    4192:	26 95       	lsr	r18
    4194:	28 23       	and	r18, r24
    4196:	c0 81       	ld	r28, Z
    4198:	d1 81       	ldd	r29, Z+1	; 0x01
    419a:	c2 0f       	add	r28, r18
    419c:	d1 1d       	adc	r29, r1
    419e:	68 83       	st	Y, r22
    41a0:	8f 5f       	subi	r24, 0xFF	; 255
    41a2:	95 81       	ldd	r25, Z+5	; 0x05
    41a4:	89 23       	and	r24, r25
    41a6:	83 83       	std	Z+3, r24	; 0x03
    41a8:	16 96       	adiw	r26, 0x06	; 6
    41aa:	ed 91       	ld	r30, X+
    41ac:	fc 91       	ld	r31, X
    41ae:	17 97       	sbiw	r26, 0x07	; 7
    41b0:	30 97       	sbiw	r30, 0x00	; 0
    41b2:	11 f0       	breq	.+4      	; 0x41b8 <__vector_36+0x7a>
    41b4:	cd 01       	movw	r24, r26
    41b6:	19 95       	eicall
    41b8:	ff 91       	pop	r31
    41ba:	ef 91       	pop	r30
    41bc:	df 91       	pop	r29
    41be:	cf 91       	pop	r28
    41c0:	bf 91       	pop	r27
    41c2:	af 91       	pop	r26
    41c4:	9f 91       	pop	r25
    41c6:	8f 91       	pop	r24
    41c8:	7f 91       	pop	r23
    41ca:	6f 91       	pop	r22
    41cc:	5f 91       	pop	r21
    41ce:	4f 91       	pop	r20
    41d0:	3f 91       	pop	r19
    41d2:	2f 91       	pop	r18
    41d4:	0f 90       	pop	r0
    41d6:	0b be       	out	0x3b, r0	; 59
    41d8:	0f 90       	pop	r0
    41da:	0f be       	out	0x3f, r0	; 63
    41dc:	0f 90       	pop	r0
    41de:	1f 90       	pop	r1
    41e0:	18 95       	reti

000041e2 <__vector_37>:
    41e2:	1f 92       	push	r1
    41e4:	0f 92       	push	r0
    41e6:	0f b6       	in	r0, 0x3f	; 63
    41e8:	0f 92       	push	r0
    41ea:	11 24       	eor	r1, r1
    41ec:	0b b6       	in	r0, 0x3b	; 59
    41ee:	0f 92       	push	r0
    41f0:	2f 93       	push	r18
    41f2:	8f 93       	push	r24
    41f4:	9f 93       	push	r25
    41f6:	af 93       	push	r26
    41f8:	bf 93       	push	r27
    41fa:	ef 93       	push	r30
    41fc:	ff 93       	push	r31
    41fe:	e0 91 9b 13 	lds	r30, 0x139B	; 0x80139b <_ser_handle+0x2>
    4202:	f0 91 9c 13 	lds	r31, 0x139C	; 0x80139c <_ser_handle+0x3>
    4206:	30 97       	sbiw	r30, 0x00	; 0
    4208:	b9 f0       	breq	.+46     	; 0x4238 <__vector_37+0x56>
    420a:	02 80       	ldd	r0, Z+2	; 0x02
    420c:	f3 81       	ldd	r31, Z+3	; 0x03
    420e:	e0 2d       	mov	r30, r0
    4210:	93 81       	ldd	r25, Z+3	; 0x03
    4212:	82 81       	ldd	r24, Z+2	; 0x02
    4214:	98 17       	cp	r25, r24
    4216:	b1 f0       	breq	.+44     	; 0x4244 <__vector_37+0x62>
    4218:	92 81       	ldd	r25, Z+2	; 0x02
    421a:	85 81       	ldd	r24, Z+5	; 0x05
    421c:	28 2f       	mov	r18, r24
    421e:	26 95       	lsr	r18
    4220:	29 23       	and	r18, r25
    4222:	a0 81       	ld	r26, Z
    4224:	b1 81       	ldd	r27, Z+1	; 0x01
    4226:	a2 0f       	add	r26, r18
    4228:	b1 1d       	adc	r27, r1
    422a:	2c 91       	ld	r18, X
    422c:	9f 5f       	subi	r25, 0xFF	; 255
    422e:	89 23       	and	r24, r25
    4230:	82 83       	std	Z+2, r24	; 0x02
    4232:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    4236:	0b c0       	rjmp	.+22     	; 0x424e <__vector_37+0x6c>
    4238:	e9 ec       	ldi	r30, 0xC9	; 201
    423a:	f0 e0       	ldi	r31, 0x00	; 0
    423c:	80 81       	ld	r24, Z
    423e:	8f 7d       	andi	r24, 0xDF	; 223
    4240:	80 83       	st	Z, r24
    4242:	05 c0       	rjmp	.+10     	; 0x424e <__vector_37+0x6c>
    4244:	e9 ec       	ldi	r30, 0xC9	; 201
    4246:	f0 e0       	ldi	r31, 0x00	; 0
    4248:	80 81       	ld	r24, Z
    424a:	8f 7d       	andi	r24, 0xDF	; 223
    424c:	80 83       	st	Z, r24
    424e:	ff 91       	pop	r31
    4250:	ef 91       	pop	r30
    4252:	bf 91       	pop	r27
    4254:	af 91       	pop	r26
    4256:	9f 91       	pop	r25
    4258:	8f 91       	pop	r24
    425a:	2f 91       	pop	r18
    425c:	0f 90       	pop	r0
    425e:	0b be       	out	0x3b, r0	; 59
    4260:	0f 90       	pop	r0
    4262:	0f be       	out	0x3f, r0	; 63
    4264:	0f 90       	pop	r0
    4266:	1f 90       	pop	r1
    4268:	18 95       	reti

0000426a <__vector_51>:
    426a:	1f 92       	push	r1
    426c:	0f 92       	push	r0
    426e:	0f b6       	in	r0, 0x3f	; 63
    4270:	0f 92       	push	r0
    4272:	11 24       	eor	r1, r1
    4274:	0b b6       	in	r0, 0x3b	; 59
    4276:	0f 92       	push	r0
    4278:	2f 93       	push	r18
    427a:	3f 93       	push	r19
    427c:	4f 93       	push	r20
    427e:	5f 93       	push	r21
    4280:	6f 93       	push	r22
    4282:	7f 93       	push	r23
    4284:	8f 93       	push	r24
    4286:	9f 93       	push	r25
    4288:	af 93       	push	r26
    428a:	bf 93       	push	r27
    428c:	cf 93       	push	r28
    428e:	df 93       	push	r29
    4290:	ef 93       	push	r30
    4292:	ff 93       	push	r31
    4294:	a0 91 9d 13 	lds	r26, 0x139D	; 0x80139d <_ser_handle+0x4>
    4298:	b0 91 9e 13 	lds	r27, 0x139E	; 0x80139e <_ser_handle+0x5>
    429c:	10 97       	sbiw	r26, 0x00	; 0
    429e:	11 f1       	breq	.+68     	; 0x42e4 <__vector_51+0x7a>
    42a0:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    42a4:	14 96       	adiw	r26, 0x04	; 4
    42a6:	ed 91       	ld	r30, X+
    42a8:	fc 91       	ld	r31, X
    42aa:	15 97       	sbiw	r26, 0x05	; 5
    42ac:	93 81       	ldd	r25, Z+3	; 0x03
    42ae:	82 81       	ldd	r24, Z+2	; 0x02
    42b0:	25 81       	ldd	r18, Z+5	; 0x05
    42b2:	98 1b       	sub	r25, r24
    42b4:	92 23       	and	r25, r18
    42b6:	84 81       	ldd	r24, Z+4	; 0x04
    42b8:	98 17       	cp	r25, r24
    42ba:	61 f0       	breq	.+24     	; 0x42d4 <__vector_51+0x6a>
    42bc:	83 81       	ldd	r24, Z+3	; 0x03
    42be:	26 95       	lsr	r18
    42c0:	28 23       	and	r18, r24
    42c2:	c0 81       	ld	r28, Z
    42c4:	d1 81       	ldd	r29, Z+1	; 0x01
    42c6:	c2 0f       	add	r28, r18
    42c8:	d1 1d       	adc	r29, r1
    42ca:	68 83       	st	Y, r22
    42cc:	8f 5f       	subi	r24, 0xFF	; 255
    42ce:	95 81       	ldd	r25, Z+5	; 0x05
    42d0:	89 23       	and	r24, r25
    42d2:	83 83       	std	Z+3, r24	; 0x03
    42d4:	16 96       	adiw	r26, 0x06	; 6
    42d6:	ed 91       	ld	r30, X+
    42d8:	fc 91       	ld	r31, X
    42da:	17 97       	sbiw	r26, 0x07	; 7
    42dc:	30 97       	sbiw	r30, 0x00	; 0
    42de:	11 f0       	breq	.+4      	; 0x42e4 <__vector_51+0x7a>
    42e0:	cd 01       	movw	r24, r26
    42e2:	19 95       	eicall
    42e4:	ff 91       	pop	r31
    42e6:	ef 91       	pop	r30
    42e8:	df 91       	pop	r29
    42ea:	cf 91       	pop	r28
    42ec:	bf 91       	pop	r27
    42ee:	af 91       	pop	r26
    42f0:	9f 91       	pop	r25
    42f2:	8f 91       	pop	r24
    42f4:	7f 91       	pop	r23
    42f6:	6f 91       	pop	r22
    42f8:	5f 91       	pop	r21
    42fa:	4f 91       	pop	r20
    42fc:	3f 91       	pop	r19
    42fe:	2f 91       	pop	r18
    4300:	0f 90       	pop	r0
    4302:	0b be       	out	0x3b, r0	; 59
    4304:	0f 90       	pop	r0
    4306:	0f be       	out	0x3f, r0	; 63
    4308:	0f 90       	pop	r0
    430a:	1f 90       	pop	r1
    430c:	18 95       	reti

0000430e <__vector_52>:
    430e:	1f 92       	push	r1
    4310:	0f 92       	push	r0
    4312:	0f b6       	in	r0, 0x3f	; 63
    4314:	0f 92       	push	r0
    4316:	11 24       	eor	r1, r1
    4318:	0b b6       	in	r0, 0x3b	; 59
    431a:	0f 92       	push	r0
    431c:	2f 93       	push	r18
    431e:	8f 93       	push	r24
    4320:	9f 93       	push	r25
    4322:	af 93       	push	r26
    4324:	bf 93       	push	r27
    4326:	ef 93       	push	r30
    4328:	ff 93       	push	r31
    432a:	e0 91 9d 13 	lds	r30, 0x139D	; 0x80139d <_ser_handle+0x4>
    432e:	f0 91 9e 13 	lds	r31, 0x139E	; 0x80139e <_ser_handle+0x5>
    4332:	30 97       	sbiw	r30, 0x00	; 0
    4334:	b9 f0       	breq	.+46     	; 0x4364 <__vector_52+0x56>
    4336:	02 80       	ldd	r0, Z+2	; 0x02
    4338:	f3 81       	ldd	r31, Z+3	; 0x03
    433a:	e0 2d       	mov	r30, r0
    433c:	93 81       	ldd	r25, Z+3	; 0x03
    433e:	82 81       	ldd	r24, Z+2	; 0x02
    4340:	98 17       	cp	r25, r24
    4342:	b1 f0       	breq	.+44     	; 0x4370 <__vector_52+0x62>
    4344:	92 81       	ldd	r25, Z+2	; 0x02
    4346:	85 81       	ldd	r24, Z+5	; 0x05
    4348:	28 2f       	mov	r18, r24
    434a:	26 95       	lsr	r18
    434c:	29 23       	and	r18, r25
    434e:	a0 81       	ld	r26, Z
    4350:	b1 81       	ldd	r27, Z+1	; 0x01
    4352:	a2 0f       	add	r26, r18
    4354:	b1 1d       	adc	r27, r1
    4356:	2c 91       	ld	r18, X
    4358:	9f 5f       	subi	r25, 0xFF	; 255
    435a:	89 23       	and	r24, r25
    435c:	82 83       	std	Z+2, r24	; 0x02
    435e:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    4362:	0b c0       	rjmp	.+22     	; 0x437a <__vector_52+0x6c>
    4364:	e1 ed       	ldi	r30, 0xD1	; 209
    4366:	f0 e0       	ldi	r31, 0x00	; 0
    4368:	80 81       	ld	r24, Z
    436a:	8f 7d       	andi	r24, 0xDF	; 223
    436c:	80 83       	st	Z, r24
    436e:	05 c0       	rjmp	.+10     	; 0x437a <__vector_52+0x6c>
    4370:	e1 ed       	ldi	r30, 0xD1	; 209
    4372:	f0 e0       	ldi	r31, 0x00	; 0
    4374:	80 81       	ld	r24, Z
    4376:	8f 7d       	andi	r24, 0xDF	; 223
    4378:	80 83       	st	Z, r24
    437a:	ff 91       	pop	r31
    437c:	ef 91       	pop	r30
    437e:	bf 91       	pop	r27
    4380:	af 91       	pop	r26
    4382:	9f 91       	pop	r25
    4384:	8f 91       	pop	r24
    4386:	2f 91       	pop	r18
    4388:	0f 90       	pop	r0
    438a:	0b be       	out	0x3b, r0	; 59
    438c:	0f 90       	pop	r0
    438e:	0f be       	out	0x3f, r0	; 63
    4390:	0f 90       	pop	r0
    4392:	1f 90       	pop	r1
    4394:	18 95       	reti

00004396 <__vector_54>:
    4396:	1f 92       	push	r1
    4398:	0f 92       	push	r0
    439a:	0f b6       	in	r0, 0x3f	; 63
    439c:	0f 92       	push	r0
    439e:	11 24       	eor	r1, r1
    43a0:	0b b6       	in	r0, 0x3b	; 59
    43a2:	0f 92       	push	r0
    43a4:	2f 93       	push	r18
    43a6:	3f 93       	push	r19
    43a8:	4f 93       	push	r20
    43aa:	5f 93       	push	r21
    43ac:	6f 93       	push	r22
    43ae:	7f 93       	push	r23
    43b0:	8f 93       	push	r24
    43b2:	9f 93       	push	r25
    43b4:	af 93       	push	r26
    43b6:	bf 93       	push	r27
    43b8:	cf 93       	push	r28
    43ba:	df 93       	push	r29
    43bc:	ef 93       	push	r30
    43be:	ff 93       	push	r31
    43c0:	a0 91 9f 13 	lds	r26, 0x139F	; 0x80139f <_ser_handle+0x6>
    43c4:	b0 91 a0 13 	lds	r27, 0x13A0	; 0x8013a0 <_ser_handle+0x7>
    43c8:	10 97       	sbiw	r26, 0x00	; 0
    43ca:	11 f1       	breq	.+68     	; 0x4410 <__vector_54+0x7a>
    43cc:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
    43d0:	14 96       	adiw	r26, 0x04	; 4
    43d2:	ed 91       	ld	r30, X+
    43d4:	fc 91       	ld	r31, X
    43d6:	15 97       	sbiw	r26, 0x05	; 5
    43d8:	93 81       	ldd	r25, Z+3	; 0x03
    43da:	82 81       	ldd	r24, Z+2	; 0x02
    43dc:	25 81       	ldd	r18, Z+5	; 0x05
    43de:	98 1b       	sub	r25, r24
    43e0:	92 23       	and	r25, r18
    43e2:	84 81       	ldd	r24, Z+4	; 0x04
    43e4:	98 17       	cp	r25, r24
    43e6:	61 f0       	breq	.+24     	; 0x4400 <__vector_54+0x6a>
    43e8:	83 81       	ldd	r24, Z+3	; 0x03
    43ea:	26 95       	lsr	r18
    43ec:	28 23       	and	r18, r24
    43ee:	c0 81       	ld	r28, Z
    43f0:	d1 81       	ldd	r29, Z+1	; 0x01
    43f2:	c2 0f       	add	r28, r18
    43f4:	d1 1d       	adc	r29, r1
    43f6:	68 83       	st	Y, r22
    43f8:	8f 5f       	subi	r24, 0xFF	; 255
    43fa:	95 81       	ldd	r25, Z+5	; 0x05
    43fc:	89 23       	and	r24, r25
    43fe:	83 83       	std	Z+3, r24	; 0x03
    4400:	16 96       	adiw	r26, 0x06	; 6
    4402:	ed 91       	ld	r30, X+
    4404:	fc 91       	ld	r31, X
    4406:	17 97       	sbiw	r26, 0x07	; 7
    4408:	30 97       	sbiw	r30, 0x00	; 0
    440a:	11 f0       	breq	.+4      	; 0x4410 <__vector_54+0x7a>
    440c:	cd 01       	movw	r24, r26
    440e:	19 95       	eicall
    4410:	ff 91       	pop	r31
    4412:	ef 91       	pop	r30
    4414:	df 91       	pop	r29
    4416:	cf 91       	pop	r28
    4418:	bf 91       	pop	r27
    441a:	af 91       	pop	r26
    441c:	9f 91       	pop	r25
    441e:	8f 91       	pop	r24
    4420:	7f 91       	pop	r23
    4422:	6f 91       	pop	r22
    4424:	5f 91       	pop	r21
    4426:	4f 91       	pop	r20
    4428:	3f 91       	pop	r19
    442a:	2f 91       	pop	r18
    442c:	0f 90       	pop	r0
    442e:	0b be       	out	0x3b, r0	; 59
    4430:	0f 90       	pop	r0
    4432:	0f be       	out	0x3f, r0	; 63
    4434:	0f 90       	pop	r0
    4436:	1f 90       	pop	r1
    4438:	18 95       	reti

0000443a <__vector_55>:
    443a:	1f 92       	push	r1
    443c:	0f 92       	push	r0
    443e:	0f b6       	in	r0, 0x3f	; 63
    4440:	0f 92       	push	r0
    4442:	11 24       	eor	r1, r1
    4444:	0b b6       	in	r0, 0x3b	; 59
    4446:	0f 92       	push	r0
    4448:	2f 93       	push	r18
    444a:	8f 93       	push	r24
    444c:	9f 93       	push	r25
    444e:	af 93       	push	r26
    4450:	bf 93       	push	r27
    4452:	ef 93       	push	r30
    4454:	ff 93       	push	r31
    4456:	e0 91 9f 13 	lds	r30, 0x139F	; 0x80139f <_ser_handle+0x6>
    445a:	f0 91 a0 13 	lds	r31, 0x13A0	; 0x8013a0 <_ser_handle+0x7>
    445e:	30 97       	sbiw	r30, 0x00	; 0
    4460:	b9 f0       	breq	.+46     	; 0x4490 <__vector_55+0x56>
    4462:	02 80       	ldd	r0, Z+2	; 0x02
    4464:	f3 81       	ldd	r31, Z+3	; 0x03
    4466:	e0 2d       	mov	r30, r0
    4468:	93 81       	ldd	r25, Z+3	; 0x03
    446a:	82 81       	ldd	r24, Z+2	; 0x02
    446c:	98 17       	cp	r25, r24
    446e:	b1 f0       	breq	.+44     	; 0x449c <__vector_55+0x62>
    4470:	92 81       	ldd	r25, Z+2	; 0x02
    4472:	85 81       	ldd	r24, Z+5	; 0x05
    4474:	28 2f       	mov	r18, r24
    4476:	26 95       	lsr	r18
    4478:	29 23       	and	r18, r25
    447a:	a0 81       	ld	r26, Z
    447c:	b1 81       	ldd	r27, Z+1	; 0x01
    447e:	a2 0f       	add	r26, r18
    4480:	b1 1d       	adc	r27, r1
    4482:	2c 91       	ld	r18, X
    4484:	9f 5f       	subi	r25, 0xFF	; 255
    4486:	89 23       	and	r24, r25
    4488:	82 83       	std	Z+2, r24	; 0x02
    448a:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
    448e:	0b c0       	rjmp	.+22     	; 0x44a6 <__vector_55+0x6c>
    4490:	e1 e3       	ldi	r30, 0x31	; 49
    4492:	f1 e0       	ldi	r31, 0x01	; 1
    4494:	80 81       	ld	r24, Z
    4496:	8f 7d       	andi	r24, 0xDF	; 223
    4498:	80 83       	st	Z, r24
    449a:	05 c0       	rjmp	.+10     	; 0x44a6 <__vector_55+0x6c>
    449c:	e1 e3       	ldi	r30, 0x31	; 49
    449e:	f1 e0       	ldi	r31, 0x01	; 1
    44a0:	80 81       	ld	r24, Z
    44a2:	8f 7d       	andi	r24, 0xDF	; 223
    44a4:	80 83       	st	Z, r24
    44a6:	ff 91       	pop	r31
    44a8:	ef 91       	pop	r30
    44aa:	bf 91       	pop	r27
    44ac:	af 91       	pop	r26
    44ae:	9f 91       	pop	r25
    44b0:	8f 91       	pop	r24
    44b2:	2f 91       	pop	r18
    44b4:	0f 90       	pop	r0
    44b6:	0b be       	out	0x3b, r0	; 59
    44b8:	0f 90       	pop	r0
    44ba:	0f be       	out	0x3f, r0	; 63
    44bc:	0f 90       	pop	r0
    44be:	1f 90       	pop	r1
    44c0:	18 95       	reti

000044c2 <usart_getchar>:
    44c2:	cf 93       	push	r28
    44c4:	df 93       	push	r29
    44c6:	1f 92       	push	r1
    44c8:	cd b7       	in	r28, 0x3d	; 61
    44ca:	de b7       	in	r29, 0x3e	; 62
    44cc:	be 01       	movw	r22, r28
    44ce:	6f 5f       	subi	r22, 0xFF	; 255
    44d0:	7f 4f       	sbci	r23, 0xFF	; 255
    44d2:	80 91 a1 13 	lds	r24, 0x13A1	; 0x8013a1 <_com_serial_instance>
    44d6:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_com_serial_instance+0x1>
    44da:	7b dd       	rcall	.-1290   	; 0x3fd2 <serial_getByte>
    44dc:	81 11       	cpse	r24, r1
    44de:	f6 cf       	rjmp	.-20     	; 0x44cc <usart_getchar+0xa>
    44e0:	89 81       	ldd	r24, Y+1	; 0x01
    44e2:	90 e0       	ldi	r25, 0x00	; 0
    44e4:	0f 90       	pop	r0
    44e6:	df 91       	pop	r29
    44e8:	cf 91       	pop	r28
    44ea:	08 95       	ret

000044ec <usart_putchar>:
    44ec:	68 2f       	mov	r22, r24
    44ee:	80 91 a1 13 	lds	r24, 0x13A1	; 0x8013a1 <_com_serial_instance>
    44f2:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_com_serial_instance+0x1>
    44f6:	ed dc       	rcall	.-1574   	; 0x3ed2 <serial_sendByte>
    44f8:	80 e0       	ldi	r24, 0x00	; 0
    44fa:	90 e0       	ldi	r25, 0x00	; 0
    44fc:	08 95       	ret

000044fe <stdio_initialise>:
    44fe:	8f 92       	push	r8
    4500:	9f 92       	push	r9
    4502:	af 92       	push	r10
    4504:	cf 92       	push	r12
    4506:	ef 92       	push	r14
    4508:	0f 93       	push	r16
    450a:	81 2c       	mov	r8, r1
    450c:	91 2c       	mov	r9, r1
    450e:	68 94       	set
    4510:	aa 24       	eor	r10, r10
    4512:	a7 f8       	bld	r10, 7
    4514:	68 94       	set
    4516:	cc 24       	eor	r12, r12
    4518:	c7 f8       	bld	r12, 7
    451a:	e1 2c       	mov	r14, r1
    451c:	00 e0       	ldi	r16, 0x00	; 0
    451e:	23 e0       	ldi	r18, 0x03	; 3
    4520:	40 e0       	ldi	r20, 0x00	; 0
    4522:	51 ee       	ldi	r21, 0xE1	; 225
    4524:	60 e0       	ldi	r22, 0x00	; 0
    4526:	70 e0       	ldi	r23, 0x00	; 0
    4528:	38 dc       	rcall	.-1936   	; 0x3d9a <serial_create>
    452a:	90 93 a2 13 	sts	0x13A2, r25	; 0x8013a2 <_com_serial_instance+0x1>
    452e:	80 93 a1 13 	sts	0x13A1, r24	; 0x8013a1 <_com_serial_instance>
    4532:	eb ec       	ldi	r30, 0xCB	; 203
    4534:	f3 e1       	ldi	r31, 0x13	; 19
    4536:	8f e0       	ldi	r24, 0x0F	; 15
    4538:	92 e0       	ldi	r25, 0x02	; 2
    453a:	91 83       	std	Z+1, r25	; 0x01
    453c:	80 83       	st	Z, r24
    453e:	93 83       	std	Z+3, r25	; 0x03
    4540:	82 83       	std	Z+2, r24	; 0x02
    4542:	0f 91       	pop	r16
    4544:	ef 90       	pop	r14
    4546:	cf 90       	pop	r12
    4548:	af 90       	pop	r10
    454a:	9f 90       	pop	r9
    454c:	8f 90       	pop	r8
    454e:	08 95       	ret

00004550 <_turn_off>:
    4550:	90 e0       	ldi	r25, 0x00	; 0
    4552:	fc 01       	movw	r30, r24
    4554:	ee 0f       	add	r30, r30
    4556:	ff 1f       	adc	r31, r31
    4558:	e8 0f       	add	r30, r24
    455a:	f9 1f       	adc	r31, r25
    455c:	ee 0f       	add	r30, r30
    455e:	ff 1f       	adc	r31, r31
    4560:	ed 55       	subi	r30, 0x5D	; 93
    4562:	fc 4e       	sbci	r31, 0xEC	; 236
    4564:	23 81       	ldd	r18, Z+3	; 0x03
    4566:	21 11       	cpse	r18, r1
    4568:	1f c0       	rjmp	.+62     	; 0x45a8 <_turn_off+0x58>
    456a:	9c 01       	movw	r18, r24
    456c:	22 0f       	add	r18, r18
    456e:	33 1f       	adc	r19, r19
    4570:	f9 01       	movw	r30, r18
    4572:	e8 0f       	add	r30, r24
    4574:	f9 1f       	adc	r31, r25
    4576:	ee 0f       	add	r30, r30
    4578:	ff 1f       	adc	r31, r31
    457a:	ed 55       	subi	r30, 0x5D	; 93
    457c:	fc 4e       	sbci	r31, 0xEC	; 236
    457e:	a0 81       	ld	r26, Z
    4580:	b1 81       	ldd	r27, Z+1	; 0x01
    4582:	4c 91       	ld	r20, X
    4584:	f9 01       	movw	r30, r18
    4586:	e8 0f       	add	r30, r24
    4588:	f9 1f       	adc	r31, r25
    458a:	ee 0f       	add	r30, r30
    458c:	ff 1f       	adc	r31, r31
    458e:	ed 55       	subi	r30, 0x5D	; 93
    4590:	fc 4e       	sbci	r31, 0xEC	; 236
    4592:	81 e0       	ldi	r24, 0x01	; 1
    4594:	90 e0       	ldi	r25, 0x00	; 0
    4596:	02 80       	ldd	r0, Z+2	; 0x02
    4598:	02 c0       	rjmp	.+4      	; 0x459e <_turn_off+0x4e>
    459a:	88 0f       	add	r24, r24
    459c:	99 1f       	adc	r25, r25
    459e:	0a 94       	dec	r0
    45a0:	e2 f7       	brpl	.-8      	; 0x459a <_turn_off+0x4a>
    45a2:	84 2b       	or	r24, r20
    45a4:	8c 93       	st	X, r24
    45a6:	08 95       	ret
    45a8:	fc 01       	movw	r30, r24
    45aa:	ee 0f       	add	r30, r30
    45ac:	ff 1f       	adc	r31, r31
    45ae:	df 01       	movw	r26, r30
    45b0:	a8 0f       	add	r26, r24
    45b2:	b9 1f       	adc	r27, r25
    45b4:	aa 0f       	add	r26, r26
    45b6:	bb 1f       	adc	r27, r27
    45b8:	ad 55       	subi	r26, 0x5D	; 93
    45ba:	bc 4e       	sbci	r27, 0xEC	; 236
    45bc:	0d 90       	ld	r0, X+
    45be:	bc 91       	ld	r27, X
    45c0:	a0 2d       	mov	r26, r0
    45c2:	2c 91       	ld	r18, X
    45c4:	e8 0f       	add	r30, r24
    45c6:	f9 1f       	adc	r31, r25
    45c8:	ee 0f       	add	r30, r30
    45ca:	ff 1f       	adc	r31, r31
    45cc:	ed 55       	subi	r30, 0x5D	; 93
    45ce:	fc 4e       	sbci	r31, 0xEC	; 236
    45d0:	81 e0       	ldi	r24, 0x01	; 1
    45d2:	90 e0       	ldi	r25, 0x00	; 0
    45d4:	02 80       	ldd	r0, Z+2	; 0x02
    45d6:	02 c0       	rjmp	.+4      	; 0x45dc <_turn_off+0x8c>
    45d8:	88 0f       	add	r24, r24
    45da:	99 1f       	adc	r25, r25
    45dc:	0a 94       	dec	r0
    45de:	e2 f7       	brpl	.-8      	; 0x45d8 <_turn_off+0x88>
    45e0:	80 95       	com	r24
    45e2:	82 23       	and	r24, r18
    45e4:	8c 93       	st	X, r24
    45e6:	08 95       	ret

000045e8 <_turn_on>:
    45e8:	90 e0       	ldi	r25, 0x00	; 0
    45ea:	fc 01       	movw	r30, r24
    45ec:	ee 0f       	add	r30, r30
    45ee:	ff 1f       	adc	r31, r31
    45f0:	e8 0f       	add	r30, r24
    45f2:	f9 1f       	adc	r31, r25
    45f4:	ee 0f       	add	r30, r30
    45f6:	ff 1f       	adc	r31, r31
    45f8:	ed 55       	subi	r30, 0x5D	; 93
    45fa:	fc 4e       	sbci	r31, 0xEC	; 236
    45fc:	23 81       	ldd	r18, Z+3	; 0x03
    45fe:	21 11       	cpse	r18, r1
    4600:	20 c0       	rjmp	.+64     	; 0x4642 <_turn_on+0x5a>
    4602:	9c 01       	movw	r18, r24
    4604:	22 0f       	add	r18, r18
    4606:	33 1f       	adc	r19, r19
    4608:	f9 01       	movw	r30, r18
    460a:	e8 0f       	add	r30, r24
    460c:	f9 1f       	adc	r31, r25
    460e:	ee 0f       	add	r30, r30
    4610:	ff 1f       	adc	r31, r31
    4612:	ed 55       	subi	r30, 0x5D	; 93
    4614:	fc 4e       	sbci	r31, 0xEC	; 236
    4616:	a0 81       	ld	r26, Z
    4618:	b1 81       	ldd	r27, Z+1	; 0x01
    461a:	4c 91       	ld	r20, X
    461c:	f9 01       	movw	r30, r18
    461e:	e8 0f       	add	r30, r24
    4620:	f9 1f       	adc	r31, r25
    4622:	ee 0f       	add	r30, r30
    4624:	ff 1f       	adc	r31, r31
    4626:	ed 55       	subi	r30, 0x5D	; 93
    4628:	fc 4e       	sbci	r31, 0xEC	; 236
    462a:	81 e0       	ldi	r24, 0x01	; 1
    462c:	90 e0       	ldi	r25, 0x00	; 0
    462e:	02 80       	ldd	r0, Z+2	; 0x02
    4630:	02 c0       	rjmp	.+4      	; 0x4636 <_turn_on+0x4e>
    4632:	88 0f       	add	r24, r24
    4634:	99 1f       	adc	r25, r25
    4636:	0a 94       	dec	r0
    4638:	e2 f7       	brpl	.-8      	; 0x4632 <_turn_on+0x4a>
    463a:	80 95       	com	r24
    463c:	84 23       	and	r24, r20
    463e:	8c 93       	st	X, r24
    4640:	08 95       	ret
    4642:	fc 01       	movw	r30, r24
    4644:	ee 0f       	add	r30, r30
    4646:	ff 1f       	adc	r31, r31
    4648:	df 01       	movw	r26, r30
    464a:	a8 0f       	add	r26, r24
    464c:	b9 1f       	adc	r27, r25
    464e:	aa 0f       	add	r26, r26
    4650:	bb 1f       	adc	r27, r27
    4652:	ad 55       	subi	r26, 0x5D	; 93
    4654:	bc 4e       	sbci	r27, 0xEC	; 236
    4656:	0d 90       	ld	r0, X+
    4658:	bc 91       	ld	r27, X
    465a:	a0 2d       	mov	r26, r0
    465c:	2c 91       	ld	r18, X
    465e:	e8 0f       	add	r30, r24
    4660:	f9 1f       	adc	r31, r25
    4662:	ee 0f       	add	r30, r30
    4664:	ff 1f       	adc	r31, r31
    4666:	ed 55       	subi	r30, 0x5D	; 93
    4668:	fc 4e       	sbci	r31, 0xEC	; 236
    466a:	81 e0       	ldi	r24, 0x01	; 1
    466c:	90 e0       	ldi	r25, 0x00	; 0
    466e:	02 80       	ldd	r0, Z+2	; 0x02
    4670:	02 c0       	rjmp	.+4      	; 0x4676 <_turn_on+0x8e>
    4672:	88 0f       	add	r24, r24
    4674:	99 1f       	adc	r25, r25
    4676:	0a 94       	dec	r0
    4678:	e2 f7       	brpl	.-8      	; 0x4672 <_turn_on+0x8a>
    467a:	82 2b       	or	r24, r18
    467c:	8c 93       	st	X, r24
    467e:	08 95       	ret

00004680 <_hal_led_task>:
    4680:	cc 24       	eor	r12, r12
    4682:	c3 94       	inc	r12
    4684:	d1 2c       	mov	r13, r1
    4686:	68 94       	set
    4688:	bb 24       	eor	r11, r11
    468a:	b2 f8       	bld	r11, 2
    468c:	c3 ea       	ldi	r28, 0xA3	; 163
    468e:	d3 e1       	ldi	r29, 0x13	; 19
    4690:	10 e0       	ldi	r17, 0x00	; 0
    4692:	8c 81       	ldd	r24, Y+4	; 0x04
    4694:	81 30       	cpi	r24, 0x01	; 1
    4696:	81 f0       	breq	.+32     	; 0x46b8 <_hal_led_task+0x38>
    4698:	18 f1       	brcs	.+70     	; 0x46e0 <_hal_led_task+0x60>
    469a:	82 30       	cpi	r24, 0x02	; 2
    469c:	61 f5       	brne	.+88     	; 0x46f6 <_hal_led_task+0x76>
    469e:	e8 81       	ld	r30, Y
    46a0:	f9 81       	ldd	r31, Y+1	; 0x01
    46a2:	20 81       	ld	r18, Z
    46a4:	c6 01       	movw	r24, r12
    46a6:	0a 80       	ldd	r0, Y+2	; 0x02
    46a8:	02 c0       	rjmp	.+4      	; 0x46ae <_hal_led_task+0x2e>
    46aa:	88 0f       	add	r24, r24
    46ac:	99 1f       	adc	r25, r25
    46ae:	0a 94       	dec	r0
    46b0:	e2 f7       	brpl	.-8      	; 0x46aa <_hal_led_task+0x2a>
    46b2:	82 27       	eor	r24, r18
    46b4:	80 83       	st	Z, r24
    46b6:	1f c0       	rjmp	.+62     	; 0x46f6 <_hal_led_task+0x76>
    46b8:	8d 81       	ldd	r24, Y+5	; 0x05
    46ba:	8f 5f       	subi	r24, 0xFF	; 255
    46bc:	8a 30       	cpi	r24, 0x0A	; 10
    46be:	10 f4       	brcc	.+4      	; 0x46c4 <_hal_led_task+0x44>
    46c0:	8d 83       	std	Y+5, r24	; 0x05
    46c2:	19 c0       	rjmp	.+50     	; 0x46f6 <_hal_led_task+0x76>
    46c4:	1d 82       	std	Y+5, r1	; 0x05
    46c6:	e8 81       	ld	r30, Y
    46c8:	f9 81       	ldd	r31, Y+1	; 0x01
    46ca:	20 81       	ld	r18, Z
    46cc:	c6 01       	movw	r24, r12
    46ce:	0a 80       	ldd	r0, Y+2	; 0x02
    46d0:	02 c0       	rjmp	.+4      	; 0x46d6 <_hal_led_task+0x56>
    46d2:	88 0f       	add	r24, r24
    46d4:	99 1f       	adc	r25, r25
    46d6:	0a 94       	dec	r0
    46d8:	e2 f7       	brpl	.-8      	; 0x46d2 <_hal_led_task+0x52>
    46da:	82 27       	eor	r24, r18
    46dc:	80 83       	st	Z, r24
    46de:	0b c0       	rjmp	.+22     	; 0x46f6 <_hal_led_task+0x76>
    46e0:	0d 81       	ldd	r16, Y+5	; 0x05
    46e2:	00 23       	and	r16, r16
    46e4:	29 f0       	breq	.+10     	; 0x46f0 <_hal_led_task+0x70>
    46e6:	81 2f       	mov	r24, r17
    46e8:	7f df       	rcall	.-258    	; 0x45e8 <_turn_on>
    46ea:	01 50       	subi	r16, 0x01	; 1
    46ec:	0d 83       	std	Y+5, r16	; 0x05
    46ee:	03 c0       	rjmp	.+6      	; 0x46f6 <_hal_led_task+0x76>
    46f0:	bc 82       	std	Y+4, r11	; 0x04
    46f2:	81 2f       	mov	r24, r17
    46f4:	2d df       	rcall	.-422    	; 0x4550 <_turn_off>
    46f6:	1f 5f       	subi	r17, 0xFF	; 255
    46f8:	26 96       	adiw	r28, 0x06	; 6
    46fa:	14 30       	cpi	r17, 0x04	; 4
    46fc:	51 f6       	brne	.-108    	; 0x4692 <_hal_led_task+0x12>
    46fe:	65 e0       	ldi	r22, 0x05	; 5
    4700:	70 e0       	ldi	r23, 0x00	; 0
    4702:	80 e0       	ldi	r24, 0x00	; 0
    4704:	90 e0       	ldi	r25, 0x00	; 0
    4706:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <vTaskDelay>
    470a:	c0 cf       	rjmp	.-128    	; 0x468c <_hal_led_task+0xc>

0000470c <status_leds_initialise>:
    470c:	ef 92       	push	r14
    470e:	ff 92       	push	r15
    4710:	0f 93       	push	r16
    4712:	1f 93       	push	r17
    4714:	cf 93       	push	r28
    4716:	df 93       	push	r29
    4718:	08 2f       	mov	r16, r24
    471a:	80 e4       	ldi	r24, 0x40	; 64
    471c:	87 b9       	out	0x07, r24	; 7
    471e:	c3 ea       	ldi	r28, 0xA3	; 163
    4720:	d3 e1       	ldi	r29, 0x13	; 19
    4722:	0f 2e       	mov	r0, r31
    4724:	f8 e2       	ldi	r31, 0x28	; 40
    4726:	ef 2e       	mov	r14, r31
    4728:	f1 2c       	mov	r15, r1
    472a:	f0 2d       	mov	r31, r0
    472c:	f9 82       	std	Y+1, r15	; 0x01
    472e:	e8 82       	st	Y, r14
    4730:	86 e0       	ldi	r24, 0x06	; 6
    4732:	8a 83       	std	Y+2, r24	; 0x02
    4734:	1b 82       	std	Y+3, r1	; 0x03
    4736:	14 e0       	ldi	r17, 0x04	; 4
    4738:	1c 83       	std	Y+4, r17	; 0x04
    473a:	80 e0       	ldi	r24, 0x00	; 0
    473c:	09 df       	rcall	.-494    	; 0x4550 <_turn_off>
    473e:	80 e8       	ldi	r24, 0x80	; 128
    4740:	87 b9       	out	0x07, r24	; 7
    4742:	ff 82       	std	Y+7, r15	; 0x07
    4744:	ee 82       	std	Y+6, r14	; 0x06
    4746:	87 e0       	ldi	r24, 0x07	; 7
    4748:	88 87       	std	Y+8, r24	; 0x08
    474a:	19 86       	std	Y+9, r1	; 0x09
    474c:	1a 87       	std	Y+10, r17	; 0x0a
    474e:	81 e0       	ldi	r24, 0x01	; 1
    4750:	ff de       	rcall	.-514    	; 0x4550 <_turn_off>
    4752:	80 e2       	ldi	r24, 0x20	; 32
    4754:	83 bb       	out	0x13, r24	; 19
    4756:	84 e3       	ldi	r24, 0x34	; 52
    4758:	90 e0       	ldi	r25, 0x00	; 0
    475a:	9d 87       	std	Y+13, r25	; 0x0d
    475c:	8c 87       	std	Y+12, r24	; 0x0c
    475e:	85 e0       	ldi	r24, 0x05	; 5
    4760:	8e 87       	std	Y+14, r24	; 0x0e
    4762:	1f 86       	std	Y+15, r1	; 0x0f
    4764:	18 8b       	std	Y+16, r17	; 0x10
    4766:	82 e0       	ldi	r24, 0x02	; 2
    4768:	f3 de       	rcall	.-538    	; 0x4550 <_turn_off>
    476a:	80 e1       	ldi	r24, 0x10	; 16
    476c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
    4770:	82 e0       	ldi	r24, 0x02	; 2
    4772:	91 e0       	ldi	r25, 0x01	; 1
    4774:	9b 8b       	std	Y+19, r25	; 0x13
    4776:	8a 8b       	std	Y+18, r24	; 0x12
    4778:	1c 8b       	std	Y+20, r17	; 0x14
    477a:	1d 8a       	std	Y+21, r1	; 0x15
    477c:	1e 8b       	std	Y+22, r17	; 0x16
    477e:	83 e0       	ldi	r24, 0x03	; 3
    4780:	e7 de       	rcall	.-562    	; 0x4550 <_turn_off>
    4782:	e1 2c       	mov	r14, r1
    4784:	f1 2c       	mov	r15, r1
    4786:	20 e0       	ldi	r18, 0x00	; 0
    4788:	30 e0       	ldi	r19, 0x00	; 0
    478a:	40 ec       	ldi	r20, 0xC0	; 192
    478c:	50 e0       	ldi	r21, 0x00	; 0
    478e:	67 e3       	ldi	r22, 0x37	; 55
    4790:	77 e0       	ldi	r23, 0x07	; 7
    4792:	80 e4       	ldi	r24, 0x40	; 64
    4794:	93 e2       	ldi	r25, 0x23	; 35
    4796:	0e 94 ac 0b 	call	0x1758	; 0x1758 <xTaskCreate>
    479a:	df 91       	pop	r29
    479c:	cf 91       	pop	r28
    479e:	1f 91       	pop	r17
    47a0:	0f 91       	pop	r16
    47a2:	ff 90       	pop	r15
    47a4:	ef 90       	pop	r14
    47a6:	08 95       	ret

000047a8 <status_leds_slowBlink>:
    47a8:	cf 93       	push	r28
    47aa:	df 93       	push	r29
    47ac:	90 e0       	ldi	r25, 0x00	; 0
    47ae:	fc 01       	movw	r30, r24
    47b0:	ee 0f       	add	r30, r30
    47b2:	ff 1f       	adc	r31, r31
    47b4:	df 01       	movw	r26, r30
    47b6:	a8 0f       	add	r26, r24
    47b8:	b9 1f       	adc	r27, r25
    47ba:	aa 0f       	add	r26, r26
    47bc:	bb 1f       	adc	r27, r27
    47be:	ad 55       	subi	r26, 0x5D	; 93
    47c0:	bc 4e       	sbci	r27, 0xEC	; 236
    47c2:	cd 91       	ld	r28, X+
    47c4:	dc 91       	ld	r29, X
    47c6:	11 97       	sbiw	r26, 0x01	; 1
    47c8:	48 81       	ld	r20, Y
    47ca:	21 e0       	ldi	r18, 0x01	; 1
    47cc:	30 e0       	ldi	r19, 0x00	; 0
    47ce:	12 96       	adiw	r26, 0x02	; 2
    47d0:	0c 90       	ld	r0, X
    47d2:	12 97       	sbiw	r26, 0x02	; 2
    47d4:	02 c0       	rjmp	.+4      	; 0x47da <status_leds_slowBlink+0x32>
    47d6:	22 0f       	add	r18, r18
    47d8:	33 1f       	adc	r19, r19
    47da:	0a 94       	dec	r0
    47dc:	e2 f7       	brpl	.-8      	; 0x47d6 <status_leds_slowBlink+0x2e>
    47de:	24 27       	eor	r18, r20
    47e0:	28 83       	st	Y, r18
    47e2:	fd 01       	movw	r30, r26
    47e4:	81 e0       	ldi	r24, 0x01	; 1
    47e6:	84 83       	std	Z+4, r24	; 0x04
    47e8:	df 91       	pop	r29
    47ea:	cf 91       	pop	r28
    47ec:	08 95       	ret

000047ee <status_leds_fastBlink>:
    47ee:	cf 93       	push	r28
    47f0:	df 93       	push	r29
    47f2:	90 e0       	ldi	r25, 0x00	; 0
    47f4:	fc 01       	movw	r30, r24
    47f6:	ee 0f       	add	r30, r30
    47f8:	ff 1f       	adc	r31, r31
    47fa:	df 01       	movw	r26, r30
    47fc:	a8 0f       	add	r26, r24
    47fe:	b9 1f       	adc	r27, r25
    4800:	aa 0f       	add	r26, r26
    4802:	bb 1f       	adc	r27, r27
    4804:	ad 55       	subi	r26, 0x5D	; 93
    4806:	bc 4e       	sbci	r27, 0xEC	; 236
    4808:	cd 91       	ld	r28, X+
    480a:	dc 91       	ld	r29, X
    480c:	11 97       	sbiw	r26, 0x01	; 1
    480e:	48 81       	ld	r20, Y
    4810:	21 e0       	ldi	r18, 0x01	; 1
    4812:	30 e0       	ldi	r19, 0x00	; 0
    4814:	12 96       	adiw	r26, 0x02	; 2
    4816:	0c 90       	ld	r0, X
    4818:	12 97       	sbiw	r26, 0x02	; 2
    481a:	02 c0       	rjmp	.+4      	; 0x4820 <status_leds_fastBlink+0x32>
    481c:	22 0f       	add	r18, r18
    481e:	33 1f       	adc	r19, r19
    4820:	0a 94       	dec	r0
    4822:	e2 f7       	brpl	.-8      	; 0x481c <status_leds_fastBlink+0x2e>
    4824:	24 27       	eor	r18, r20
    4826:	28 83       	st	Y, r18
    4828:	fd 01       	movw	r30, r26
    482a:	82 e0       	ldi	r24, 0x02	; 2
    482c:	84 83       	std	Z+4, r24	; 0x04
    482e:	df 91       	pop	r29
    4830:	cf 91       	pop	r28
    4832:	08 95       	ret

00004834 <status_leds_ledOn>:
    4834:	28 2f       	mov	r18, r24
    4836:	30 e0       	ldi	r19, 0x00	; 0
    4838:	f9 01       	movw	r30, r18
    483a:	ee 0f       	add	r30, r30
    483c:	ff 1f       	adc	r31, r31
    483e:	e2 0f       	add	r30, r18
    4840:	f3 1f       	adc	r31, r19
    4842:	ee 0f       	add	r30, r30
    4844:	ff 1f       	adc	r31, r31
    4846:	ed 55       	subi	r30, 0x5D	; 93
    4848:	fc 4e       	sbci	r31, 0xEC	; 236
    484a:	93 e0       	ldi	r25, 0x03	; 3
    484c:	94 83       	std	Z+4, r25	; 0x04
    484e:	cc ce       	rjmp	.-616    	; 0x45e8 <_turn_on>
    4850:	08 95       	ret

00004852 <status_leds_ledOff>:
    4852:	28 2f       	mov	r18, r24
    4854:	30 e0       	ldi	r19, 0x00	; 0
    4856:	f9 01       	movw	r30, r18
    4858:	ee 0f       	add	r30, r30
    485a:	ff 1f       	adc	r31, r31
    485c:	e2 0f       	add	r30, r18
    485e:	f3 1f       	adc	r31, r19
    4860:	ee 0f       	add	r30, r30
    4862:	ff 1f       	adc	r31, r31
    4864:	ed 55       	subi	r30, 0x5D	; 93
    4866:	fc 4e       	sbci	r31, 0xEC	; 236
    4868:	94 e0       	ldi	r25, 0x04	; 4
    486a:	94 83       	std	Z+4, r25	; 0x04
    486c:	71 ce       	rjmp	.-798    	; 0x4550 <_turn_off>
    486e:	08 95       	ret

00004870 <status_leds_longPuls>:
    4870:	90 e0       	ldi	r25, 0x00	; 0
    4872:	fc 01       	movw	r30, r24
    4874:	ee 0f       	add	r30, r30
    4876:	ff 1f       	adc	r31, r31
    4878:	df 01       	movw	r26, r30
    487a:	a8 0f       	add	r26, r24
    487c:	b9 1f       	adc	r27, r25
    487e:	aa 0f       	add	r26, r26
    4880:	bb 1f       	adc	r27, r27
    4882:	ad 55       	subi	r26, 0x5D	; 93
    4884:	bc 4e       	sbci	r27, 0xEC	; 236
    4886:	24 e0       	ldi	r18, 0x04	; 4
    4888:	15 96       	adiw	r26, 0x05	; 5
    488a:	2c 93       	st	X, r18
    488c:	15 97       	sbiw	r26, 0x05	; 5
    488e:	fd 01       	movw	r30, r26
    4890:	14 82       	std	Z+4, r1	; 0x04
    4892:	08 95       	ret

00004894 <status_leds_shortPuls>:
    4894:	90 e0       	ldi	r25, 0x00	; 0
    4896:	fc 01       	movw	r30, r24
    4898:	ee 0f       	add	r30, r30
    489a:	ff 1f       	adc	r31, r31
    489c:	df 01       	movw	r26, r30
    489e:	a8 0f       	add	r26, r24
    48a0:	b9 1f       	adc	r27, r25
    48a2:	aa 0f       	add	r26, r26
    48a4:	bb 1f       	adc	r27, r27
    48a6:	ad 55       	subi	r26, 0x5D	; 93
    48a8:	bc 4e       	sbci	r27, 0xEC	; 236
    48aa:	21 e0       	ldi	r18, 0x01	; 1
    48ac:	15 96       	adiw	r26, 0x05	; 5
    48ae:	2c 93       	st	X, r18
    48b0:	15 97       	sbiw	r26, 0x05	; 5
    48b2:	fd 01       	movw	r30, r26
    48b4:	14 82       	std	Z+4, r1	; 0x04
    48b6:	08 95       	ret

000048b8 <fifo_init>:
    48b8:	fc 01       	movw	r30, r24
    48ba:	41 11       	cpse	r20, r1
    48bc:	01 c0       	rjmp	.+2      	; 0x48c0 <fifo_init+0x8>
    48be:	45 d3       	rcall	.+1674   	; 0x4f4a <abort>
    48c0:	84 2f       	mov	r24, r20
    48c2:	90 e0       	ldi	r25, 0x00	; 0
    48c4:	9c 01       	movw	r18, r24
    48c6:	21 50       	subi	r18, 0x01	; 1
    48c8:	31 09       	sbc	r19, r1
    48ca:	82 23       	and	r24, r18
    48cc:	93 23       	and	r25, r19
    48ce:	89 2b       	or	r24, r25
    48d0:	09 f0       	breq	.+2      	; 0x48d4 <fifo_init+0x1c>
    48d2:	3b d3       	rcall	.+1654   	; 0x4f4a <abort>
    48d4:	41 38       	cpi	r20, 0x81	; 129
    48d6:	08 f0       	brcs	.+2      	; 0x48da <fifo_init+0x22>
    48d8:	38 d3       	rcall	.+1648   	; 0x4f4a <abort>
    48da:	12 82       	std	Z+2, r1	; 0x02
    48dc:	13 82       	std	Z+3, r1	; 0x03
    48de:	44 83       	std	Z+4, r20	; 0x04
    48e0:	44 0f       	add	r20, r20
    48e2:	41 50       	subi	r20, 0x01	; 1
    48e4:	45 83       	std	Z+5, r20	; 0x05
    48e6:	71 83       	std	Z+1, r23	; 0x01
    48e8:	60 83       	st	Z, r22
    48ea:	80 e0       	ldi	r24, 0x00	; 0
    48ec:	90 e0       	ldi	r25, 0x00	; 0
    48ee:	08 95       	ret

000048f0 <__subsf3>:
    48f0:	50 58       	subi	r21, 0x80	; 128

000048f2 <__addsf3>:
    48f2:	bb 27       	eor	r27, r27
    48f4:	aa 27       	eor	r26, r26
    48f6:	0e d0       	rcall	.+28     	; 0x4914 <__addsf3x>
    48f8:	48 c1       	rjmp	.+656    	; 0x4b8a <__fp_round>
    48fa:	39 d1       	rcall	.+626    	; 0x4b6e <__fp_pscA>
    48fc:	30 f0       	brcs	.+12     	; 0x490a <__addsf3+0x18>
    48fe:	3e d1       	rcall	.+636    	; 0x4b7c <__fp_pscB>
    4900:	20 f0       	brcs	.+8      	; 0x490a <__addsf3+0x18>
    4902:	31 f4       	brne	.+12     	; 0x4910 <__addsf3+0x1e>
    4904:	9f 3f       	cpi	r25, 0xFF	; 255
    4906:	11 f4       	brne	.+4      	; 0x490c <__addsf3+0x1a>
    4908:	1e f4       	brtc	.+6      	; 0x4910 <__addsf3+0x1e>
    490a:	2e c1       	rjmp	.+604    	; 0x4b68 <__fp_nan>
    490c:	0e f4       	brtc	.+2      	; 0x4910 <__addsf3+0x1e>
    490e:	e0 95       	com	r30
    4910:	e7 fb       	bst	r30, 7
    4912:	24 c1       	rjmp	.+584    	; 0x4b5c <__fp_inf>

00004914 <__addsf3x>:
    4914:	e9 2f       	mov	r30, r25
    4916:	4a d1       	rcall	.+660    	; 0x4bac <__fp_split3>
    4918:	80 f3       	brcs	.-32     	; 0x48fa <__addsf3+0x8>
    491a:	ba 17       	cp	r27, r26
    491c:	62 07       	cpc	r22, r18
    491e:	73 07       	cpc	r23, r19
    4920:	84 07       	cpc	r24, r20
    4922:	95 07       	cpc	r25, r21
    4924:	18 f0       	brcs	.+6      	; 0x492c <__addsf3x+0x18>
    4926:	71 f4       	brne	.+28     	; 0x4944 <__addsf3x+0x30>
    4928:	9e f5       	brtc	.+102    	; 0x4990 <__addsf3x+0x7c>
    492a:	62 c1       	rjmp	.+708    	; 0x4bf0 <__fp_zero>
    492c:	0e f4       	brtc	.+2      	; 0x4930 <__addsf3x+0x1c>
    492e:	e0 95       	com	r30
    4930:	0b 2e       	mov	r0, r27
    4932:	ba 2f       	mov	r27, r26
    4934:	a0 2d       	mov	r26, r0
    4936:	0b 01       	movw	r0, r22
    4938:	b9 01       	movw	r22, r18
    493a:	90 01       	movw	r18, r0
    493c:	0c 01       	movw	r0, r24
    493e:	ca 01       	movw	r24, r20
    4940:	a0 01       	movw	r20, r0
    4942:	11 24       	eor	r1, r1
    4944:	ff 27       	eor	r31, r31
    4946:	59 1b       	sub	r21, r25
    4948:	99 f0       	breq	.+38     	; 0x4970 <__addsf3x+0x5c>
    494a:	59 3f       	cpi	r21, 0xF9	; 249
    494c:	50 f4       	brcc	.+20     	; 0x4962 <__addsf3x+0x4e>
    494e:	50 3e       	cpi	r21, 0xE0	; 224
    4950:	68 f1       	brcs	.+90     	; 0x49ac <__addsf3x+0x98>
    4952:	1a 16       	cp	r1, r26
    4954:	f0 40       	sbci	r31, 0x00	; 0
    4956:	a2 2f       	mov	r26, r18
    4958:	23 2f       	mov	r18, r19
    495a:	34 2f       	mov	r19, r20
    495c:	44 27       	eor	r20, r20
    495e:	58 5f       	subi	r21, 0xF8	; 248
    4960:	f3 cf       	rjmp	.-26     	; 0x4948 <__addsf3x+0x34>
    4962:	46 95       	lsr	r20
    4964:	37 95       	ror	r19
    4966:	27 95       	ror	r18
    4968:	a7 95       	ror	r26
    496a:	f0 40       	sbci	r31, 0x00	; 0
    496c:	53 95       	inc	r21
    496e:	c9 f7       	brne	.-14     	; 0x4962 <__addsf3x+0x4e>
    4970:	7e f4       	brtc	.+30     	; 0x4990 <__addsf3x+0x7c>
    4972:	1f 16       	cp	r1, r31
    4974:	ba 0b       	sbc	r27, r26
    4976:	62 0b       	sbc	r22, r18
    4978:	73 0b       	sbc	r23, r19
    497a:	84 0b       	sbc	r24, r20
    497c:	ba f0       	brmi	.+46     	; 0x49ac <__addsf3x+0x98>
    497e:	91 50       	subi	r25, 0x01	; 1
    4980:	a1 f0       	breq	.+40     	; 0x49aa <__addsf3x+0x96>
    4982:	ff 0f       	add	r31, r31
    4984:	bb 1f       	adc	r27, r27
    4986:	66 1f       	adc	r22, r22
    4988:	77 1f       	adc	r23, r23
    498a:	88 1f       	adc	r24, r24
    498c:	c2 f7       	brpl	.-16     	; 0x497e <__addsf3x+0x6a>
    498e:	0e c0       	rjmp	.+28     	; 0x49ac <__addsf3x+0x98>
    4990:	ba 0f       	add	r27, r26
    4992:	62 1f       	adc	r22, r18
    4994:	73 1f       	adc	r23, r19
    4996:	84 1f       	adc	r24, r20
    4998:	48 f4       	brcc	.+18     	; 0x49ac <__addsf3x+0x98>
    499a:	87 95       	ror	r24
    499c:	77 95       	ror	r23
    499e:	67 95       	ror	r22
    49a0:	b7 95       	ror	r27
    49a2:	f7 95       	ror	r31
    49a4:	9e 3f       	cpi	r25, 0xFE	; 254
    49a6:	08 f0       	brcs	.+2      	; 0x49aa <__addsf3x+0x96>
    49a8:	b3 cf       	rjmp	.-154    	; 0x4910 <__addsf3+0x1e>
    49aa:	93 95       	inc	r25
    49ac:	88 0f       	add	r24, r24
    49ae:	08 f0       	brcs	.+2      	; 0x49b2 <__addsf3x+0x9e>
    49b0:	99 27       	eor	r25, r25
    49b2:	ee 0f       	add	r30, r30
    49b4:	97 95       	ror	r25
    49b6:	87 95       	ror	r24
    49b8:	08 95       	ret

000049ba <__divsf3>:
    49ba:	0c d0       	rcall	.+24     	; 0x49d4 <__divsf3x>
    49bc:	e6 c0       	rjmp	.+460    	; 0x4b8a <__fp_round>
    49be:	de d0       	rcall	.+444    	; 0x4b7c <__fp_pscB>
    49c0:	40 f0       	brcs	.+16     	; 0x49d2 <__divsf3+0x18>
    49c2:	d5 d0       	rcall	.+426    	; 0x4b6e <__fp_pscA>
    49c4:	30 f0       	brcs	.+12     	; 0x49d2 <__divsf3+0x18>
    49c6:	21 f4       	brne	.+8      	; 0x49d0 <__divsf3+0x16>
    49c8:	5f 3f       	cpi	r21, 0xFF	; 255
    49ca:	19 f0       	breq	.+6      	; 0x49d2 <__divsf3+0x18>
    49cc:	c7 c0       	rjmp	.+398    	; 0x4b5c <__fp_inf>
    49ce:	51 11       	cpse	r21, r1
    49d0:	10 c1       	rjmp	.+544    	; 0x4bf2 <__fp_szero>
    49d2:	ca c0       	rjmp	.+404    	; 0x4b68 <__fp_nan>

000049d4 <__divsf3x>:
    49d4:	eb d0       	rcall	.+470    	; 0x4bac <__fp_split3>
    49d6:	98 f3       	brcs	.-26     	; 0x49be <__divsf3+0x4>

000049d8 <__divsf3_pse>:
    49d8:	99 23       	and	r25, r25
    49da:	c9 f3       	breq	.-14     	; 0x49ce <__divsf3+0x14>
    49dc:	55 23       	and	r21, r21
    49de:	b1 f3       	breq	.-20     	; 0x49cc <__divsf3+0x12>
    49e0:	95 1b       	sub	r25, r21
    49e2:	55 0b       	sbc	r21, r21
    49e4:	bb 27       	eor	r27, r27
    49e6:	aa 27       	eor	r26, r26
    49e8:	62 17       	cp	r22, r18
    49ea:	73 07       	cpc	r23, r19
    49ec:	84 07       	cpc	r24, r20
    49ee:	38 f0       	brcs	.+14     	; 0x49fe <__divsf3_pse+0x26>
    49f0:	9f 5f       	subi	r25, 0xFF	; 255
    49f2:	5f 4f       	sbci	r21, 0xFF	; 255
    49f4:	22 0f       	add	r18, r18
    49f6:	33 1f       	adc	r19, r19
    49f8:	44 1f       	adc	r20, r20
    49fa:	aa 1f       	adc	r26, r26
    49fc:	a9 f3       	breq	.-22     	; 0x49e8 <__divsf3_pse+0x10>
    49fe:	33 d0       	rcall	.+102    	; 0x4a66 <__divsf3_pse+0x8e>
    4a00:	0e 2e       	mov	r0, r30
    4a02:	3a f0       	brmi	.+14     	; 0x4a12 <__divsf3_pse+0x3a>
    4a04:	e0 e8       	ldi	r30, 0x80	; 128
    4a06:	30 d0       	rcall	.+96     	; 0x4a68 <__divsf3_pse+0x90>
    4a08:	91 50       	subi	r25, 0x01	; 1
    4a0a:	50 40       	sbci	r21, 0x00	; 0
    4a0c:	e6 95       	lsr	r30
    4a0e:	00 1c       	adc	r0, r0
    4a10:	ca f7       	brpl	.-14     	; 0x4a04 <__divsf3_pse+0x2c>
    4a12:	29 d0       	rcall	.+82     	; 0x4a66 <__divsf3_pse+0x8e>
    4a14:	fe 2f       	mov	r31, r30
    4a16:	27 d0       	rcall	.+78     	; 0x4a66 <__divsf3_pse+0x8e>
    4a18:	66 0f       	add	r22, r22
    4a1a:	77 1f       	adc	r23, r23
    4a1c:	88 1f       	adc	r24, r24
    4a1e:	bb 1f       	adc	r27, r27
    4a20:	26 17       	cp	r18, r22
    4a22:	37 07       	cpc	r19, r23
    4a24:	48 07       	cpc	r20, r24
    4a26:	ab 07       	cpc	r26, r27
    4a28:	b0 e8       	ldi	r27, 0x80	; 128
    4a2a:	09 f0       	breq	.+2      	; 0x4a2e <__divsf3_pse+0x56>
    4a2c:	bb 0b       	sbc	r27, r27
    4a2e:	80 2d       	mov	r24, r0
    4a30:	bf 01       	movw	r22, r30
    4a32:	ff 27       	eor	r31, r31
    4a34:	93 58       	subi	r25, 0x83	; 131
    4a36:	5f 4f       	sbci	r21, 0xFF	; 255
    4a38:	2a f0       	brmi	.+10     	; 0x4a44 <__divsf3_pse+0x6c>
    4a3a:	9e 3f       	cpi	r25, 0xFE	; 254
    4a3c:	51 05       	cpc	r21, r1
    4a3e:	68 f0       	brcs	.+26     	; 0x4a5a <__divsf3_pse+0x82>
    4a40:	8d c0       	rjmp	.+282    	; 0x4b5c <__fp_inf>
    4a42:	d7 c0       	rjmp	.+430    	; 0x4bf2 <__fp_szero>
    4a44:	5f 3f       	cpi	r21, 0xFF	; 255
    4a46:	ec f3       	brlt	.-6      	; 0x4a42 <__divsf3_pse+0x6a>
    4a48:	98 3e       	cpi	r25, 0xE8	; 232
    4a4a:	dc f3       	brlt	.-10     	; 0x4a42 <__divsf3_pse+0x6a>
    4a4c:	86 95       	lsr	r24
    4a4e:	77 95       	ror	r23
    4a50:	67 95       	ror	r22
    4a52:	b7 95       	ror	r27
    4a54:	f7 95       	ror	r31
    4a56:	9f 5f       	subi	r25, 0xFF	; 255
    4a58:	c9 f7       	brne	.-14     	; 0x4a4c <__divsf3_pse+0x74>
    4a5a:	88 0f       	add	r24, r24
    4a5c:	91 1d       	adc	r25, r1
    4a5e:	96 95       	lsr	r25
    4a60:	87 95       	ror	r24
    4a62:	97 f9       	bld	r25, 7
    4a64:	08 95       	ret
    4a66:	e1 e0       	ldi	r30, 0x01	; 1
    4a68:	66 0f       	add	r22, r22
    4a6a:	77 1f       	adc	r23, r23
    4a6c:	88 1f       	adc	r24, r24
    4a6e:	bb 1f       	adc	r27, r27
    4a70:	62 17       	cp	r22, r18
    4a72:	73 07       	cpc	r23, r19
    4a74:	84 07       	cpc	r24, r20
    4a76:	ba 07       	cpc	r27, r26
    4a78:	20 f0       	brcs	.+8      	; 0x4a82 <__divsf3_pse+0xaa>
    4a7a:	62 1b       	sub	r22, r18
    4a7c:	73 0b       	sbc	r23, r19
    4a7e:	84 0b       	sbc	r24, r20
    4a80:	ba 0b       	sbc	r27, r26
    4a82:	ee 1f       	adc	r30, r30
    4a84:	88 f7       	brcc	.-30     	; 0x4a68 <__divsf3_pse+0x90>
    4a86:	e0 95       	com	r30
    4a88:	08 95       	ret

00004a8a <__fixunssfsi>:
    4a8a:	98 d0       	rcall	.+304    	; 0x4bbc <__fp_splitA>
    4a8c:	88 f0       	brcs	.+34     	; 0x4ab0 <__fixunssfsi+0x26>
    4a8e:	9f 57       	subi	r25, 0x7F	; 127
    4a90:	90 f0       	brcs	.+36     	; 0x4ab6 <__fixunssfsi+0x2c>
    4a92:	b9 2f       	mov	r27, r25
    4a94:	99 27       	eor	r25, r25
    4a96:	b7 51       	subi	r27, 0x17	; 23
    4a98:	a0 f0       	brcs	.+40     	; 0x4ac2 <__fixunssfsi+0x38>
    4a9a:	d1 f0       	breq	.+52     	; 0x4ad0 <__fixunssfsi+0x46>
    4a9c:	66 0f       	add	r22, r22
    4a9e:	77 1f       	adc	r23, r23
    4aa0:	88 1f       	adc	r24, r24
    4aa2:	99 1f       	adc	r25, r25
    4aa4:	1a f0       	brmi	.+6      	; 0x4aac <__fixunssfsi+0x22>
    4aa6:	ba 95       	dec	r27
    4aa8:	c9 f7       	brne	.-14     	; 0x4a9c <__fixunssfsi+0x12>
    4aaa:	12 c0       	rjmp	.+36     	; 0x4ad0 <__fixunssfsi+0x46>
    4aac:	b1 30       	cpi	r27, 0x01	; 1
    4aae:	81 f0       	breq	.+32     	; 0x4ad0 <__fixunssfsi+0x46>
    4ab0:	9f d0       	rcall	.+318    	; 0x4bf0 <__fp_zero>
    4ab2:	b1 e0       	ldi	r27, 0x01	; 1
    4ab4:	08 95       	ret
    4ab6:	9c c0       	rjmp	.+312    	; 0x4bf0 <__fp_zero>
    4ab8:	67 2f       	mov	r22, r23
    4aba:	78 2f       	mov	r23, r24
    4abc:	88 27       	eor	r24, r24
    4abe:	b8 5f       	subi	r27, 0xF8	; 248
    4ac0:	39 f0       	breq	.+14     	; 0x4ad0 <__fixunssfsi+0x46>
    4ac2:	b9 3f       	cpi	r27, 0xF9	; 249
    4ac4:	cc f3       	brlt	.-14     	; 0x4ab8 <__fixunssfsi+0x2e>
    4ac6:	86 95       	lsr	r24
    4ac8:	77 95       	ror	r23
    4aca:	67 95       	ror	r22
    4acc:	b3 95       	inc	r27
    4ace:	d9 f7       	brne	.-10     	; 0x4ac6 <__fixunssfsi+0x3c>
    4ad0:	3e f4       	brtc	.+14     	; 0x4ae0 <__fixunssfsi+0x56>
    4ad2:	90 95       	com	r25
    4ad4:	80 95       	com	r24
    4ad6:	70 95       	com	r23
    4ad8:	61 95       	neg	r22
    4ada:	7f 4f       	sbci	r23, 0xFF	; 255
    4adc:	8f 4f       	sbci	r24, 0xFF	; 255
    4ade:	9f 4f       	sbci	r25, 0xFF	; 255
    4ae0:	08 95       	ret

00004ae2 <__floatunsisf>:
    4ae2:	e8 94       	clt
    4ae4:	09 c0       	rjmp	.+18     	; 0x4af8 <__floatsisf+0x12>

00004ae6 <__floatsisf>:
    4ae6:	97 fb       	bst	r25, 7
    4ae8:	3e f4       	brtc	.+14     	; 0x4af8 <__floatsisf+0x12>
    4aea:	90 95       	com	r25
    4aec:	80 95       	com	r24
    4aee:	70 95       	com	r23
    4af0:	61 95       	neg	r22
    4af2:	7f 4f       	sbci	r23, 0xFF	; 255
    4af4:	8f 4f       	sbci	r24, 0xFF	; 255
    4af6:	9f 4f       	sbci	r25, 0xFF	; 255
    4af8:	99 23       	and	r25, r25
    4afa:	a9 f0       	breq	.+42     	; 0x4b26 <__floatsisf+0x40>
    4afc:	f9 2f       	mov	r31, r25
    4afe:	96 e9       	ldi	r25, 0x96	; 150
    4b00:	bb 27       	eor	r27, r27
    4b02:	93 95       	inc	r25
    4b04:	f6 95       	lsr	r31
    4b06:	87 95       	ror	r24
    4b08:	77 95       	ror	r23
    4b0a:	67 95       	ror	r22
    4b0c:	b7 95       	ror	r27
    4b0e:	f1 11       	cpse	r31, r1
    4b10:	f8 cf       	rjmp	.-16     	; 0x4b02 <__floatsisf+0x1c>
    4b12:	fa f4       	brpl	.+62     	; 0x4b52 <__floatsisf+0x6c>
    4b14:	bb 0f       	add	r27, r27
    4b16:	11 f4       	brne	.+4      	; 0x4b1c <__floatsisf+0x36>
    4b18:	60 ff       	sbrs	r22, 0
    4b1a:	1b c0       	rjmp	.+54     	; 0x4b52 <__floatsisf+0x6c>
    4b1c:	6f 5f       	subi	r22, 0xFF	; 255
    4b1e:	7f 4f       	sbci	r23, 0xFF	; 255
    4b20:	8f 4f       	sbci	r24, 0xFF	; 255
    4b22:	9f 4f       	sbci	r25, 0xFF	; 255
    4b24:	16 c0       	rjmp	.+44     	; 0x4b52 <__floatsisf+0x6c>
    4b26:	88 23       	and	r24, r24
    4b28:	11 f0       	breq	.+4      	; 0x4b2e <__floatsisf+0x48>
    4b2a:	96 e9       	ldi	r25, 0x96	; 150
    4b2c:	11 c0       	rjmp	.+34     	; 0x4b50 <__floatsisf+0x6a>
    4b2e:	77 23       	and	r23, r23
    4b30:	21 f0       	breq	.+8      	; 0x4b3a <__floatsisf+0x54>
    4b32:	9e e8       	ldi	r25, 0x8E	; 142
    4b34:	87 2f       	mov	r24, r23
    4b36:	76 2f       	mov	r23, r22
    4b38:	05 c0       	rjmp	.+10     	; 0x4b44 <__floatsisf+0x5e>
    4b3a:	66 23       	and	r22, r22
    4b3c:	71 f0       	breq	.+28     	; 0x4b5a <__floatsisf+0x74>
    4b3e:	96 e8       	ldi	r25, 0x86	; 134
    4b40:	86 2f       	mov	r24, r22
    4b42:	70 e0       	ldi	r23, 0x00	; 0
    4b44:	60 e0       	ldi	r22, 0x00	; 0
    4b46:	2a f0       	brmi	.+10     	; 0x4b52 <__floatsisf+0x6c>
    4b48:	9a 95       	dec	r25
    4b4a:	66 0f       	add	r22, r22
    4b4c:	77 1f       	adc	r23, r23
    4b4e:	88 1f       	adc	r24, r24
    4b50:	da f7       	brpl	.-10     	; 0x4b48 <__floatsisf+0x62>
    4b52:	88 0f       	add	r24, r24
    4b54:	96 95       	lsr	r25
    4b56:	87 95       	ror	r24
    4b58:	97 f9       	bld	r25, 7
    4b5a:	08 95       	ret

00004b5c <__fp_inf>:
    4b5c:	97 f9       	bld	r25, 7
    4b5e:	9f 67       	ori	r25, 0x7F	; 127
    4b60:	80 e8       	ldi	r24, 0x80	; 128
    4b62:	70 e0       	ldi	r23, 0x00	; 0
    4b64:	60 e0       	ldi	r22, 0x00	; 0
    4b66:	08 95       	ret

00004b68 <__fp_nan>:
    4b68:	9f ef       	ldi	r25, 0xFF	; 255
    4b6a:	80 ec       	ldi	r24, 0xC0	; 192
    4b6c:	08 95       	ret

00004b6e <__fp_pscA>:
    4b6e:	00 24       	eor	r0, r0
    4b70:	0a 94       	dec	r0
    4b72:	16 16       	cp	r1, r22
    4b74:	17 06       	cpc	r1, r23
    4b76:	18 06       	cpc	r1, r24
    4b78:	09 06       	cpc	r0, r25
    4b7a:	08 95       	ret

00004b7c <__fp_pscB>:
    4b7c:	00 24       	eor	r0, r0
    4b7e:	0a 94       	dec	r0
    4b80:	12 16       	cp	r1, r18
    4b82:	13 06       	cpc	r1, r19
    4b84:	14 06       	cpc	r1, r20
    4b86:	05 06       	cpc	r0, r21
    4b88:	08 95       	ret

00004b8a <__fp_round>:
    4b8a:	09 2e       	mov	r0, r25
    4b8c:	03 94       	inc	r0
    4b8e:	00 0c       	add	r0, r0
    4b90:	11 f4       	brne	.+4      	; 0x4b96 <__fp_round+0xc>
    4b92:	88 23       	and	r24, r24
    4b94:	52 f0       	brmi	.+20     	; 0x4baa <__fp_round+0x20>
    4b96:	bb 0f       	add	r27, r27
    4b98:	40 f4       	brcc	.+16     	; 0x4baa <__fp_round+0x20>
    4b9a:	bf 2b       	or	r27, r31
    4b9c:	11 f4       	brne	.+4      	; 0x4ba2 <__fp_round+0x18>
    4b9e:	60 ff       	sbrs	r22, 0
    4ba0:	04 c0       	rjmp	.+8      	; 0x4baa <__fp_round+0x20>
    4ba2:	6f 5f       	subi	r22, 0xFF	; 255
    4ba4:	7f 4f       	sbci	r23, 0xFF	; 255
    4ba6:	8f 4f       	sbci	r24, 0xFF	; 255
    4ba8:	9f 4f       	sbci	r25, 0xFF	; 255
    4baa:	08 95       	ret

00004bac <__fp_split3>:
    4bac:	57 fd       	sbrc	r21, 7
    4bae:	90 58       	subi	r25, 0x80	; 128
    4bb0:	44 0f       	add	r20, r20
    4bb2:	55 1f       	adc	r21, r21
    4bb4:	59 f0       	breq	.+22     	; 0x4bcc <__fp_splitA+0x10>
    4bb6:	5f 3f       	cpi	r21, 0xFF	; 255
    4bb8:	71 f0       	breq	.+28     	; 0x4bd6 <__fp_splitA+0x1a>
    4bba:	47 95       	ror	r20

00004bbc <__fp_splitA>:
    4bbc:	88 0f       	add	r24, r24
    4bbe:	97 fb       	bst	r25, 7
    4bc0:	99 1f       	adc	r25, r25
    4bc2:	61 f0       	breq	.+24     	; 0x4bdc <__fp_splitA+0x20>
    4bc4:	9f 3f       	cpi	r25, 0xFF	; 255
    4bc6:	79 f0       	breq	.+30     	; 0x4be6 <__fp_splitA+0x2a>
    4bc8:	87 95       	ror	r24
    4bca:	08 95       	ret
    4bcc:	12 16       	cp	r1, r18
    4bce:	13 06       	cpc	r1, r19
    4bd0:	14 06       	cpc	r1, r20
    4bd2:	55 1f       	adc	r21, r21
    4bd4:	f2 cf       	rjmp	.-28     	; 0x4bba <__fp_split3+0xe>
    4bd6:	46 95       	lsr	r20
    4bd8:	f1 df       	rcall	.-30     	; 0x4bbc <__fp_splitA>
    4bda:	08 c0       	rjmp	.+16     	; 0x4bec <__fp_splitA+0x30>
    4bdc:	16 16       	cp	r1, r22
    4bde:	17 06       	cpc	r1, r23
    4be0:	18 06       	cpc	r1, r24
    4be2:	99 1f       	adc	r25, r25
    4be4:	f1 cf       	rjmp	.-30     	; 0x4bc8 <__fp_splitA+0xc>
    4be6:	86 95       	lsr	r24
    4be8:	71 05       	cpc	r23, r1
    4bea:	61 05       	cpc	r22, r1
    4bec:	08 94       	sec
    4bee:	08 95       	ret

00004bf0 <__fp_zero>:
    4bf0:	e8 94       	clt

00004bf2 <__fp_szero>:
    4bf2:	bb 27       	eor	r27, r27
    4bf4:	66 27       	eor	r22, r22
    4bf6:	77 27       	eor	r23, r23
    4bf8:	cb 01       	movw	r24, r22
    4bfa:	97 f9       	bld	r25, 7
    4bfc:	08 95       	ret

00004bfe <__mulsf3>:
    4bfe:	0b d0       	rcall	.+22     	; 0x4c16 <__mulsf3x>
    4c00:	c4 cf       	rjmp	.-120    	; 0x4b8a <__fp_round>
    4c02:	b5 df       	rcall	.-150    	; 0x4b6e <__fp_pscA>
    4c04:	28 f0       	brcs	.+10     	; 0x4c10 <__mulsf3+0x12>
    4c06:	ba df       	rcall	.-140    	; 0x4b7c <__fp_pscB>
    4c08:	18 f0       	brcs	.+6      	; 0x4c10 <__mulsf3+0x12>
    4c0a:	95 23       	and	r25, r21
    4c0c:	09 f0       	breq	.+2      	; 0x4c10 <__mulsf3+0x12>
    4c0e:	a6 cf       	rjmp	.-180    	; 0x4b5c <__fp_inf>
    4c10:	ab cf       	rjmp	.-170    	; 0x4b68 <__fp_nan>
    4c12:	11 24       	eor	r1, r1
    4c14:	ee cf       	rjmp	.-36     	; 0x4bf2 <__fp_szero>

00004c16 <__mulsf3x>:
    4c16:	ca df       	rcall	.-108    	; 0x4bac <__fp_split3>
    4c18:	a0 f3       	brcs	.-24     	; 0x4c02 <__mulsf3+0x4>

00004c1a <__mulsf3_pse>:
    4c1a:	95 9f       	mul	r25, r21
    4c1c:	d1 f3       	breq	.-12     	; 0x4c12 <__mulsf3+0x14>
    4c1e:	95 0f       	add	r25, r21
    4c20:	50 e0       	ldi	r21, 0x00	; 0
    4c22:	55 1f       	adc	r21, r21
    4c24:	62 9f       	mul	r22, r18
    4c26:	f0 01       	movw	r30, r0
    4c28:	72 9f       	mul	r23, r18
    4c2a:	bb 27       	eor	r27, r27
    4c2c:	f0 0d       	add	r31, r0
    4c2e:	b1 1d       	adc	r27, r1
    4c30:	63 9f       	mul	r22, r19
    4c32:	aa 27       	eor	r26, r26
    4c34:	f0 0d       	add	r31, r0
    4c36:	b1 1d       	adc	r27, r1
    4c38:	aa 1f       	adc	r26, r26
    4c3a:	64 9f       	mul	r22, r20
    4c3c:	66 27       	eor	r22, r22
    4c3e:	b0 0d       	add	r27, r0
    4c40:	a1 1d       	adc	r26, r1
    4c42:	66 1f       	adc	r22, r22
    4c44:	82 9f       	mul	r24, r18
    4c46:	22 27       	eor	r18, r18
    4c48:	b0 0d       	add	r27, r0
    4c4a:	a1 1d       	adc	r26, r1
    4c4c:	62 1f       	adc	r22, r18
    4c4e:	73 9f       	mul	r23, r19
    4c50:	b0 0d       	add	r27, r0
    4c52:	a1 1d       	adc	r26, r1
    4c54:	62 1f       	adc	r22, r18
    4c56:	83 9f       	mul	r24, r19
    4c58:	a0 0d       	add	r26, r0
    4c5a:	61 1d       	adc	r22, r1
    4c5c:	22 1f       	adc	r18, r18
    4c5e:	74 9f       	mul	r23, r20
    4c60:	33 27       	eor	r19, r19
    4c62:	a0 0d       	add	r26, r0
    4c64:	61 1d       	adc	r22, r1
    4c66:	23 1f       	adc	r18, r19
    4c68:	84 9f       	mul	r24, r20
    4c6a:	60 0d       	add	r22, r0
    4c6c:	21 1d       	adc	r18, r1
    4c6e:	82 2f       	mov	r24, r18
    4c70:	76 2f       	mov	r23, r22
    4c72:	6a 2f       	mov	r22, r26
    4c74:	11 24       	eor	r1, r1
    4c76:	9f 57       	subi	r25, 0x7F	; 127
    4c78:	50 40       	sbci	r21, 0x00	; 0
    4c7a:	8a f0       	brmi	.+34     	; 0x4c9e <__mulsf3_pse+0x84>
    4c7c:	e1 f0       	breq	.+56     	; 0x4cb6 <__mulsf3_pse+0x9c>
    4c7e:	88 23       	and	r24, r24
    4c80:	4a f0       	brmi	.+18     	; 0x4c94 <__mulsf3_pse+0x7a>
    4c82:	ee 0f       	add	r30, r30
    4c84:	ff 1f       	adc	r31, r31
    4c86:	bb 1f       	adc	r27, r27
    4c88:	66 1f       	adc	r22, r22
    4c8a:	77 1f       	adc	r23, r23
    4c8c:	88 1f       	adc	r24, r24
    4c8e:	91 50       	subi	r25, 0x01	; 1
    4c90:	50 40       	sbci	r21, 0x00	; 0
    4c92:	a9 f7       	brne	.-22     	; 0x4c7e <__mulsf3_pse+0x64>
    4c94:	9e 3f       	cpi	r25, 0xFE	; 254
    4c96:	51 05       	cpc	r21, r1
    4c98:	70 f0       	brcs	.+28     	; 0x4cb6 <__mulsf3_pse+0x9c>
    4c9a:	60 cf       	rjmp	.-320    	; 0x4b5c <__fp_inf>
    4c9c:	aa cf       	rjmp	.-172    	; 0x4bf2 <__fp_szero>
    4c9e:	5f 3f       	cpi	r21, 0xFF	; 255
    4ca0:	ec f3       	brlt	.-6      	; 0x4c9c <__mulsf3_pse+0x82>
    4ca2:	98 3e       	cpi	r25, 0xE8	; 232
    4ca4:	dc f3       	brlt	.-10     	; 0x4c9c <__mulsf3_pse+0x82>
    4ca6:	86 95       	lsr	r24
    4ca8:	77 95       	ror	r23
    4caa:	67 95       	ror	r22
    4cac:	b7 95       	ror	r27
    4cae:	f7 95       	ror	r31
    4cb0:	e7 95       	ror	r30
    4cb2:	9f 5f       	subi	r25, 0xFF	; 255
    4cb4:	c1 f7       	brne	.-16     	; 0x4ca6 <__mulsf3_pse+0x8c>
    4cb6:	fe 2b       	or	r31, r30
    4cb8:	88 0f       	add	r24, r24
    4cba:	91 1d       	adc	r25, r1
    4cbc:	96 95       	lsr	r25
    4cbe:	87 95       	ror	r24
    4cc0:	97 f9       	bld	r25, 7
    4cc2:	08 95       	ret

00004cc4 <__tablejump2__>:
    4cc4:	ee 0f       	add	r30, r30
    4cc6:	ff 1f       	adc	r31, r31
    4cc8:	88 1f       	adc	r24, r24
    4cca:	8b bf       	out	0x3b, r24	; 59
    4ccc:	07 90       	elpm	r0, Z+
    4cce:	f6 91       	elpm	r31, Z
    4cd0:	e0 2d       	mov	r30, r0
    4cd2:	19 94       	eijmp

00004cd4 <calloc>:
    4cd4:	0f 93       	push	r16
    4cd6:	1f 93       	push	r17
    4cd8:	cf 93       	push	r28
    4cda:	df 93       	push	r29
    4cdc:	86 9f       	mul	r24, r22
    4cde:	80 01       	movw	r16, r0
    4ce0:	87 9f       	mul	r24, r23
    4ce2:	10 0d       	add	r17, r0
    4ce4:	96 9f       	mul	r25, r22
    4ce6:	10 0d       	add	r17, r0
    4ce8:	11 24       	eor	r1, r1
    4cea:	c8 01       	movw	r24, r16
    4cec:	0d d0       	rcall	.+26     	; 0x4d08 <malloc>
    4cee:	ec 01       	movw	r28, r24
    4cf0:	00 97       	sbiw	r24, 0x00	; 0
    4cf2:	21 f0       	breq	.+8      	; 0x4cfc <calloc+0x28>
    4cf4:	a8 01       	movw	r20, r16
    4cf6:	60 e0       	ldi	r22, 0x00	; 0
    4cf8:	70 e0       	ldi	r23, 0x00	; 0
    4cfa:	34 d1       	rcall	.+616    	; 0x4f64 <memset>
    4cfc:	ce 01       	movw	r24, r28
    4cfe:	df 91       	pop	r29
    4d00:	cf 91       	pop	r28
    4d02:	1f 91       	pop	r17
    4d04:	0f 91       	pop	r16
    4d06:	08 95       	ret

00004d08 <malloc>:
    4d08:	0f 93       	push	r16
    4d0a:	1f 93       	push	r17
    4d0c:	cf 93       	push	r28
    4d0e:	df 93       	push	r29
    4d10:	82 30       	cpi	r24, 0x02	; 2
    4d12:	91 05       	cpc	r25, r1
    4d14:	10 f4       	brcc	.+4      	; 0x4d1a <malloc+0x12>
    4d16:	82 e0       	ldi	r24, 0x02	; 2
    4d18:	90 e0       	ldi	r25, 0x00	; 0
    4d1a:	e0 91 c9 13 	lds	r30, 0x13C9	; 0x8013c9 <__flp>
    4d1e:	f0 91 ca 13 	lds	r31, 0x13CA	; 0x8013ca <__flp+0x1>
    4d22:	20 e0       	ldi	r18, 0x00	; 0
    4d24:	30 e0       	ldi	r19, 0x00	; 0
    4d26:	a0 e0       	ldi	r26, 0x00	; 0
    4d28:	b0 e0       	ldi	r27, 0x00	; 0
    4d2a:	30 97       	sbiw	r30, 0x00	; 0
    4d2c:	19 f1       	breq	.+70     	; 0x4d74 <malloc+0x6c>
    4d2e:	40 81       	ld	r20, Z
    4d30:	51 81       	ldd	r21, Z+1	; 0x01
    4d32:	02 81       	ldd	r16, Z+2	; 0x02
    4d34:	13 81       	ldd	r17, Z+3	; 0x03
    4d36:	48 17       	cp	r20, r24
    4d38:	59 07       	cpc	r21, r25
    4d3a:	c8 f0       	brcs	.+50     	; 0x4d6e <malloc+0x66>
    4d3c:	84 17       	cp	r24, r20
    4d3e:	95 07       	cpc	r25, r21
    4d40:	69 f4       	brne	.+26     	; 0x4d5c <malloc+0x54>
    4d42:	10 97       	sbiw	r26, 0x00	; 0
    4d44:	31 f0       	breq	.+12     	; 0x4d52 <malloc+0x4a>
    4d46:	12 96       	adiw	r26, 0x02	; 2
    4d48:	0c 93       	st	X, r16
    4d4a:	12 97       	sbiw	r26, 0x02	; 2
    4d4c:	13 96       	adiw	r26, 0x03	; 3
    4d4e:	1c 93       	st	X, r17
    4d50:	27 c0       	rjmp	.+78     	; 0x4da0 <malloc+0x98>
    4d52:	00 93 c9 13 	sts	0x13C9, r16	; 0x8013c9 <__flp>
    4d56:	10 93 ca 13 	sts	0x13CA, r17	; 0x8013ca <__flp+0x1>
    4d5a:	22 c0       	rjmp	.+68     	; 0x4da0 <malloc+0x98>
    4d5c:	21 15       	cp	r18, r1
    4d5e:	31 05       	cpc	r19, r1
    4d60:	19 f0       	breq	.+6      	; 0x4d68 <malloc+0x60>
    4d62:	42 17       	cp	r20, r18
    4d64:	53 07       	cpc	r21, r19
    4d66:	18 f4       	brcc	.+6      	; 0x4d6e <malloc+0x66>
    4d68:	9a 01       	movw	r18, r20
    4d6a:	bd 01       	movw	r22, r26
    4d6c:	ef 01       	movw	r28, r30
    4d6e:	df 01       	movw	r26, r30
    4d70:	f8 01       	movw	r30, r16
    4d72:	db cf       	rjmp	.-74     	; 0x4d2a <malloc+0x22>
    4d74:	21 15       	cp	r18, r1
    4d76:	31 05       	cpc	r19, r1
    4d78:	f9 f0       	breq	.+62     	; 0x4db8 <malloc+0xb0>
    4d7a:	28 1b       	sub	r18, r24
    4d7c:	39 0b       	sbc	r19, r25
    4d7e:	24 30       	cpi	r18, 0x04	; 4
    4d80:	31 05       	cpc	r19, r1
    4d82:	80 f4       	brcc	.+32     	; 0x4da4 <malloc+0x9c>
    4d84:	8a 81       	ldd	r24, Y+2	; 0x02
    4d86:	9b 81       	ldd	r25, Y+3	; 0x03
    4d88:	61 15       	cp	r22, r1
    4d8a:	71 05       	cpc	r23, r1
    4d8c:	21 f0       	breq	.+8      	; 0x4d96 <malloc+0x8e>
    4d8e:	fb 01       	movw	r30, r22
    4d90:	93 83       	std	Z+3, r25	; 0x03
    4d92:	82 83       	std	Z+2, r24	; 0x02
    4d94:	04 c0       	rjmp	.+8      	; 0x4d9e <malloc+0x96>
    4d96:	90 93 ca 13 	sts	0x13CA, r25	; 0x8013ca <__flp+0x1>
    4d9a:	80 93 c9 13 	sts	0x13C9, r24	; 0x8013c9 <__flp>
    4d9e:	fe 01       	movw	r30, r28
    4da0:	32 96       	adiw	r30, 0x02	; 2
    4da2:	44 c0       	rjmp	.+136    	; 0x4e2c <malloc+0x124>
    4da4:	fe 01       	movw	r30, r28
    4da6:	e2 0f       	add	r30, r18
    4da8:	f3 1f       	adc	r31, r19
    4daa:	81 93       	st	Z+, r24
    4dac:	91 93       	st	Z+, r25
    4dae:	22 50       	subi	r18, 0x02	; 2
    4db0:	31 09       	sbc	r19, r1
    4db2:	39 83       	std	Y+1, r19	; 0x01
    4db4:	28 83       	st	Y, r18
    4db6:	3a c0       	rjmp	.+116    	; 0x4e2c <malloc+0x124>
    4db8:	20 91 c7 13 	lds	r18, 0x13C7	; 0x8013c7 <__brkval>
    4dbc:	30 91 c8 13 	lds	r19, 0x13C8	; 0x8013c8 <__brkval+0x1>
    4dc0:	23 2b       	or	r18, r19
    4dc2:	41 f4       	brne	.+16     	; 0x4dd4 <malloc+0xcc>
    4dc4:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    4dc8:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    4dcc:	30 93 c8 13 	sts	0x13C8, r19	; 0x8013c8 <__brkval+0x1>
    4dd0:	20 93 c7 13 	sts	0x13C7, r18	; 0x8013c7 <__brkval>
    4dd4:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    4dd8:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    4ddc:	21 15       	cp	r18, r1
    4dde:	31 05       	cpc	r19, r1
    4de0:	41 f4       	brne	.+16     	; 0x4df2 <malloc+0xea>
    4de2:	2d b7       	in	r18, 0x3d	; 61
    4de4:	3e b7       	in	r19, 0x3e	; 62
    4de6:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    4dea:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    4dee:	24 1b       	sub	r18, r20
    4df0:	35 0b       	sbc	r19, r21
    4df2:	e0 91 c7 13 	lds	r30, 0x13C7	; 0x8013c7 <__brkval>
    4df6:	f0 91 c8 13 	lds	r31, 0x13C8	; 0x8013c8 <__brkval+0x1>
    4dfa:	e2 17       	cp	r30, r18
    4dfc:	f3 07       	cpc	r31, r19
    4dfe:	a0 f4       	brcc	.+40     	; 0x4e28 <malloc+0x120>
    4e00:	2e 1b       	sub	r18, r30
    4e02:	3f 0b       	sbc	r19, r31
    4e04:	28 17       	cp	r18, r24
    4e06:	39 07       	cpc	r19, r25
    4e08:	78 f0       	brcs	.+30     	; 0x4e28 <malloc+0x120>
    4e0a:	ac 01       	movw	r20, r24
    4e0c:	4e 5f       	subi	r20, 0xFE	; 254
    4e0e:	5f 4f       	sbci	r21, 0xFF	; 255
    4e10:	24 17       	cp	r18, r20
    4e12:	35 07       	cpc	r19, r21
    4e14:	48 f0       	brcs	.+18     	; 0x4e28 <malloc+0x120>
    4e16:	4e 0f       	add	r20, r30
    4e18:	5f 1f       	adc	r21, r31
    4e1a:	50 93 c8 13 	sts	0x13C8, r21	; 0x8013c8 <__brkval+0x1>
    4e1e:	40 93 c7 13 	sts	0x13C7, r20	; 0x8013c7 <__brkval>
    4e22:	81 93       	st	Z+, r24
    4e24:	91 93       	st	Z+, r25
    4e26:	02 c0       	rjmp	.+4      	; 0x4e2c <malloc+0x124>
    4e28:	e0 e0       	ldi	r30, 0x00	; 0
    4e2a:	f0 e0       	ldi	r31, 0x00	; 0
    4e2c:	cf 01       	movw	r24, r30
    4e2e:	df 91       	pop	r29
    4e30:	cf 91       	pop	r28
    4e32:	1f 91       	pop	r17
    4e34:	0f 91       	pop	r16
    4e36:	08 95       	ret

00004e38 <free>:
    4e38:	cf 93       	push	r28
    4e3a:	df 93       	push	r29
    4e3c:	00 97       	sbiw	r24, 0x00	; 0
    4e3e:	09 f4       	brne	.+2      	; 0x4e42 <free+0xa>
    4e40:	81 c0       	rjmp	.+258    	; 0x4f44 <free+0x10c>
    4e42:	fc 01       	movw	r30, r24
    4e44:	32 97       	sbiw	r30, 0x02	; 2
    4e46:	13 82       	std	Z+3, r1	; 0x03
    4e48:	12 82       	std	Z+2, r1	; 0x02
    4e4a:	a0 91 c9 13 	lds	r26, 0x13C9	; 0x8013c9 <__flp>
    4e4e:	b0 91 ca 13 	lds	r27, 0x13CA	; 0x8013ca <__flp+0x1>
    4e52:	10 97       	sbiw	r26, 0x00	; 0
    4e54:	81 f4       	brne	.+32     	; 0x4e76 <free+0x3e>
    4e56:	20 81       	ld	r18, Z
    4e58:	31 81       	ldd	r19, Z+1	; 0x01
    4e5a:	82 0f       	add	r24, r18
    4e5c:	93 1f       	adc	r25, r19
    4e5e:	20 91 c7 13 	lds	r18, 0x13C7	; 0x8013c7 <__brkval>
    4e62:	30 91 c8 13 	lds	r19, 0x13C8	; 0x8013c8 <__brkval+0x1>
    4e66:	28 17       	cp	r18, r24
    4e68:	39 07       	cpc	r19, r25
    4e6a:	51 f5       	brne	.+84     	; 0x4ec0 <free+0x88>
    4e6c:	f0 93 c8 13 	sts	0x13C8, r31	; 0x8013c8 <__brkval+0x1>
    4e70:	e0 93 c7 13 	sts	0x13C7, r30	; 0x8013c7 <__brkval>
    4e74:	67 c0       	rjmp	.+206    	; 0x4f44 <free+0x10c>
    4e76:	ed 01       	movw	r28, r26
    4e78:	20 e0       	ldi	r18, 0x00	; 0
    4e7a:	30 e0       	ldi	r19, 0x00	; 0
    4e7c:	ce 17       	cp	r28, r30
    4e7e:	df 07       	cpc	r29, r31
    4e80:	40 f4       	brcc	.+16     	; 0x4e92 <free+0x5a>
    4e82:	4a 81       	ldd	r20, Y+2	; 0x02
    4e84:	5b 81       	ldd	r21, Y+3	; 0x03
    4e86:	9e 01       	movw	r18, r28
    4e88:	41 15       	cp	r20, r1
    4e8a:	51 05       	cpc	r21, r1
    4e8c:	f1 f0       	breq	.+60     	; 0x4eca <free+0x92>
    4e8e:	ea 01       	movw	r28, r20
    4e90:	f5 cf       	rjmp	.-22     	; 0x4e7c <free+0x44>
    4e92:	d3 83       	std	Z+3, r29	; 0x03
    4e94:	c2 83       	std	Z+2, r28	; 0x02
    4e96:	40 81       	ld	r20, Z
    4e98:	51 81       	ldd	r21, Z+1	; 0x01
    4e9a:	84 0f       	add	r24, r20
    4e9c:	95 1f       	adc	r25, r21
    4e9e:	c8 17       	cp	r28, r24
    4ea0:	d9 07       	cpc	r29, r25
    4ea2:	59 f4       	brne	.+22     	; 0x4eba <free+0x82>
    4ea4:	88 81       	ld	r24, Y
    4ea6:	99 81       	ldd	r25, Y+1	; 0x01
    4ea8:	84 0f       	add	r24, r20
    4eaa:	95 1f       	adc	r25, r21
    4eac:	02 96       	adiw	r24, 0x02	; 2
    4eae:	91 83       	std	Z+1, r25	; 0x01
    4eb0:	80 83       	st	Z, r24
    4eb2:	8a 81       	ldd	r24, Y+2	; 0x02
    4eb4:	9b 81       	ldd	r25, Y+3	; 0x03
    4eb6:	93 83       	std	Z+3, r25	; 0x03
    4eb8:	82 83       	std	Z+2, r24	; 0x02
    4eba:	21 15       	cp	r18, r1
    4ebc:	31 05       	cpc	r19, r1
    4ebe:	29 f4       	brne	.+10     	; 0x4eca <free+0x92>
    4ec0:	f0 93 ca 13 	sts	0x13CA, r31	; 0x8013ca <__flp+0x1>
    4ec4:	e0 93 c9 13 	sts	0x13C9, r30	; 0x8013c9 <__flp>
    4ec8:	3d c0       	rjmp	.+122    	; 0x4f44 <free+0x10c>
    4eca:	e9 01       	movw	r28, r18
    4ecc:	fb 83       	std	Y+3, r31	; 0x03
    4ece:	ea 83       	std	Y+2, r30	; 0x02
    4ed0:	49 91       	ld	r20, Y+
    4ed2:	59 91       	ld	r21, Y+
    4ed4:	c4 0f       	add	r28, r20
    4ed6:	d5 1f       	adc	r29, r21
    4ed8:	ec 17       	cp	r30, r28
    4eda:	fd 07       	cpc	r31, r29
    4edc:	61 f4       	brne	.+24     	; 0x4ef6 <free+0xbe>
    4ede:	80 81       	ld	r24, Z
    4ee0:	91 81       	ldd	r25, Z+1	; 0x01
    4ee2:	84 0f       	add	r24, r20
    4ee4:	95 1f       	adc	r25, r21
    4ee6:	02 96       	adiw	r24, 0x02	; 2
    4ee8:	e9 01       	movw	r28, r18
    4eea:	99 83       	std	Y+1, r25	; 0x01
    4eec:	88 83       	st	Y, r24
    4eee:	82 81       	ldd	r24, Z+2	; 0x02
    4ef0:	93 81       	ldd	r25, Z+3	; 0x03
    4ef2:	9b 83       	std	Y+3, r25	; 0x03
    4ef4:	8a 83       	std	Y+2, r24	; 0x02
    4ef6:	e0 e0       	ldi	r30, 0x00	; 0
    4ef8:	f0 e0       	ldi	r31, 0x00	; 0
    4efa:	12 96       	adiw	r26, 0x02	; 2
    4efc:	8d 91       	ld	r24, X+
    4efe:	9c 91       	ld	r25, X
    4f00:	13 97       	sbiw	r26, 0x03	; 3
    4f02:	00 97       	sbiw	r24, 0x00	; 0
    4f04:	19 f0       	breq	.+6      	; 0x4f0c <free+0xd4>
    4f06:	fd 01       	movw	r30, r26
    4f08:	dc 01       	movw	r26, r24
    4f0a:	f7 cf       	rjmp	.-18     	; 0x4efa <free+0xc2>
    4f0c:	8d 91       	ld	r24, X+
    4f0e:	9c 91       	ld	r25, X
    4f10:	11 97       	sbiw	r26, 0x01	; 1
    4f12:	9d 01       	movw	r18, r26
    4f14:	2e 5f       	subi	r18, 0xFE	; 254
    4f16:	3f 4f       	sbci	r19, 0xFF	; 255
    4f18:	82 0f       	add	r24, r18
    4f1a:	93 1f       	adc	r25, r19
    4f1c:	20 91 c7 13 	lds	r18, 0x13C7	; 0x8013c7 <__brkval>
    4f20:	30 91 c8 13 	lds	r19, 0x13C8	; 0x8013c8 <__brkval+0x1>
    4f24:	28 17       	cp	r18, r24
    4f26:	39 07       	cpc	r19, r25
    4f28:	69 f4       	brne	.+26     	; 0x4f44 <free+0x10c>
    4f2a:	30 97       	sbiw	r30, 0x00	; 0
    4f2c:	29 f4       	brne	.+10     	; 0x4f38 <free+0x100>
    4f2e:	10 92 ca 13 	sts	0x13CA, r1	; 0x8013ca <__flp+0x1>
    4f32:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <__flp>
    4f36:	02 c0       	rjmp	.+4      	; 0x4f3c <free+0x104>
    4f38:	13 82       	std	Z+3, r1	; 0x03
    4f3a:	12 82       	std	Z+2, r1	; 0x02
    4f3c:	b0 93 c8 13 	sts	0x13C8, r27	; 0x8013c8 <__brkval+0x1>
    4f40:	a0 93 c7 13 	sts	0x13C7, r26	; 0x8013c7 <__brkval>
    4f44:	df 91       	pop	r29
    4f46:	cf 91       	pop	r28
    4f48:	08 95       	ret

00004f4a <abort>:
    4f4a:	81 e0       	ldi	r24, 0x01	; 1
    4f4c:	90 e0       	ldi	r25, 0x00	; 0
    4f4e:	f8 94       	cli
    4f50:	7d c3       	rjmp	.+1786   	; 0x564c <_exit>

00004f52 <memcpy>:
    4f52:	fb 01       	movw	r30, r22
    4f54:	dc 01       	movw	r26, r24
    4f56:	02 c0       	rjmp	.+4      	; 0x4f5c <memcpy+0xa>
    4f58:	01 90       	ld	r0, Z+
    4f5a:	0d 92       	st	X+, r0
    4f5c:	41 50       	subi	r20, 0x01	; 1
    4f5e:	50 40       	sbci	r21, 0x00	; 0
    4f60:	d8 f7       	brcc	.-10     	; 0x4f58 <memcpy+0x6>
    4f62:	08 95       	ret

00004f64 <memset>:
    4f64:	dc 01       	movw	r26, r24
    4f66:	01 c0       	rjmp	.+2      	; 0x4f6a <memset+0x6>
    4f68:	6d 93       	st	X+, r22
    4f6a:	41 50       	subi	r20, 0x01	; 1
    4f6c:	50 40       	sbci	r21, 0x00	; 0
    4f6e:	e0 f7       	brcc	.-8      	; 0x4f68 <memset+0x4>
    4f70:	08 95       	ret

00004f72 <strcasestr>:
    4f72:	fb 01       	movw	r30, r22
    4f74:	51 91       	ld	r21, Z+
    4f76:	55 23       	and	r21, r21
    4f78:	b1 f0       	breq	.+44     	; 0x4fa6 <strcasestr+0x34>
    4f7a:	bf 01       	movw	r22, r30
    4f7c:	dc 01       	movw	r26, r24
    4f7e:	05 2e       	mov	r0, r21
    4f80:	4d 91       	ld	r20, X+
    4f82:	44 23       	and	r20, r20
    4f84:	69 f0       	breq	.+26     	; 0x4fa0 <strcasestr+0x2e>
    4f86:	10 d0       	rcall	.+32     	; 0x4fa8 <strcasestr+0x36>
    4f88:	d9 f7       	brne	.-10     	; 0x4f80 <strcasestr+0xe>
    4f8a:	cd 01       	movw	r24, r26
    4f8c:	01 90       	ld	r0, Z+
    4f8e:	00 20       	and	r0, r0
    4f90:	49 f0       	breq	.+18     	; 0x4fa4 <strcasestr+0x32>
    4f92:	4d 91       	ld	r20, X+
    4f94:	41 11       	cpse	r20, r1
    4f96:	08 d0       	rcall	.+16     	; 0x4fa8 <strcasestr+0x36>
    4f98:	c9 f3       	breq	.-14     	; 0x4f8c <strcasestr+0x1a>
    4f9a:	fb 01       	movw	r30, r22
    4f9c:	41 11       	cpse	r20, r1
    4f9e:	ee cf       	rjmp	.-36     	; 0x4f7c <strcasestr+0xa>
    4fa0:	81 e0       	ldi	r24, 0x01	; 1
    4fa2:	90 e0       	ldi	r25, 0x00	; 0
    4fa4:	01 97       	sbiw	r24, 0x01	; 1
    4fa6:	08 95       	ret
    4fa8:	40 25       	eor	r20, r0
    4faa:	39 f0       	breq	.+14     	; 0x4fba <strcasestr+0x48>
    4fac:	40 32       	cpi	r20, 0x20	; 32
    4fae:	29 f4       	brne	.+10     	; 0x4fba <strcasestr+0x48>
    4fb0:	40 29       	or	r20, r0
    4fb2:	4b 57       	subi	r20, 0x7B	; 123
    4fb4:	46 5e       	subi	r20, 0xE6	; 230
    4fb6:	08 f0       	brcs	.+2      	; 0x4fba <strcasestr+0x48>
    4fb8:	18 94       	sez
    4fba:	08 95       	ret

00004fbc <strcat>:
    4fbc:	fb 01       	movw	r30, r22
    4fbe:	dc 01       	movw	r26, r24
    4fc0:	0d 90       	ld	r0, X+
    4fc2:	00 20       	and	r0, r0
    4fc4:	e9 f7       	brne	.-6      	; 0x4fc0 <strcat+0x4>
    4fc6:	11 97       	sbiw	r26, 0x01	; 1
    4fc8:	01 90       	ld	r0, Z+
    4fca:	0d 92       	st	X+, r0
    4fcc:	00 20       	and	r0, r0
    4fce:	e1 f7       	brne	.-8      	; 0x4fc8 <strcat+0xc>
    4fd0:	08 95       	ret

00004fd2 <strcpy>:
    4fd2:	fb 01       	movw	r30, r22
    4fd4:	dc 01       	movw	r26, r24
    4fd6:	01 90       	ld	r0, Z+
    4fd8:	0d 92       	st	X+, r0
    4fda:	00 20       	and	r0, r0
    4fdc:	e1 f7       	brne	.-8      	; 0x4fd6 <strcpy+0x4>
    4fde:	08 95       	ret

00004fe0 <strncasecmp>:
    4fe0:	fb 01       	movw	r30, r22
    4fe2:	dc 01       	movw	r26, r24
    4fe4:	41 50       	subi	r20, 0x01	; 1
    4fe6:	50 40       	sbci	r21, 0x00	; 0
    4fe8:	88 f0       	brcs	.+34     	; 0x500c <strncasecmp+0x2c>
    4fea:	8d 91       	ld	r24, X+
    4fec:	81 34       	cpi	r24, 0x41	; 65
    4fee:	1c f0       	brlt	.+6      	; 0x4ff6 <strncasecmp+0x16>
    4ff0:	8b 35       	cpi	r24, 0x5B	; 91
    4ff2:	0c f4       	brge	.+2      	; 0x4ff6 <strncasecmp+0x16>
    4ff4:	80 5e       	subi	r24, 0xE0	; 224
    4ff6:	61 91       	ld	r22, Z+
    4ff8:	61 34       	cpi	r22, 0x41	; 65
    4ffa:	1c f0       	brlt	.+6      	; 0x5002 <strncasecmp+0x22>
    4ffc:	6b 35       	cpi	r22, 0x5B	; 91
    4ffe:	0c f4       	brge	.+2      	; 0x5002 <strncasecmp+0x22>
    5000:	60 5e       	subi	r22, 0xE0	; 224
    5002:	86 1b       	sub	r24, r22
    5004:	61 11       	cpse	r22, r1
    5006:	71 f3       	breq	.-36     	; 0x4fe4 <strncasecmp+0x4>
    5008:	99 0b       	sbc	r25, r25
    500a:	08 95       	ret
    500c:	88 1b       	sub	r24, r24
    500e:	fc cf       	rjmp	.-8      	; 0x5008 <strncasecmp+0x28>

00005010 <printf>:
    5010:	cf 93       	push	r28
    5012:	df 93       	push	r29
    5014:	cd b7       	in	r28, 0x3d	; 61
    5016:	de b7       	in	r29, 0x3e	; 62
    5018:	ae 01       	movw	r20, r28
    501a:	4a 5f       	subi	r20, 0xFA	; 250
    501c:	5f 4f       	sbci	r21, 0xFF	; 255
    501e:	fa 01       	movw	r30, r20
    5020:	61 91       	ld	r22, Z+
    5022:	71 91       	ld	r23, Z+
    5024:	af 01       	movw	r20, r30
    5026:	80 91 cd 13 	lds	r24, 0x13CD	; 0x8013cd <__iob+0x2>
    502a:	90 91 ce 13 	lds	r25, 0x13CE	; 0x8013ce <__iob+0x3>
    502e:	61 d0       	rcall	.+194    	; 0x50f2 <vfprintf>
    5030:	df 91       	pop	r29
    5032:	cf 91       	pop	r28
    5034:	08 95       	ret

00005036 <puts>:
    5036:	0f 93       	push	r16
    5038:	1f 93       	push	r17
    503a:	cf 93       	push	r28
    503c:	df 93       	push	r29
    503e:	e0 91 cd 13 	lds	r30, 0x13CD	; 0x8013cd <__iob+0x2>
    5042:	f0 91 ce 13 	lds	r31, 0x13CE	; 0x8013ce <__iob+0x3>
    5046:	23 81       	ldd	r18, Z+3	; 0x03
    5048:	21 ff       	sbrs	r18, 1
    504a:	1b c0       	rjmp	.+54     	; 0x5082 <puts+0x4c>
    504c:	8c 01       	movw	r16, r24
    504e:	d0 e0       	ldi	r29, 0x00	; 0
    5050:	c0 e0       	ldi	r28, 0x00	; 0
    5052:	f8 01       	movw	r30, r16
    5054:	81 91       	ld	r24, Z+
    5056:	8f 01       	movw	r16, r30
    5058:	60 91 cd 13 	lds	r22, 0x13CD	; 0x8013cd <__iob+0x2>
    505c:	70 91 ce 13 	lds	r23, 0x13CE	; 0x8013ce <__iob+0x3>
    5060:	db 01       	movw	r26, r22
    5062:	18 96       	adiw	r26, 0x08	; 8
    5064:	ed 91       	ld	r30, X+
    5066:	fc 91       	ld	r31, X
    5068:	19 97       	sbiw	r26, 0x09	; 9
    506a:	88 23       	and	r24, r24
    506c:	31 f0       	breq	.+12     	; 0x507a <puts+0x44>
    506e:	19 95       	eicall
    5070:	89 2b       	or	r24, r25
    5072:	79 f3       	breq	.-34     	; 0x5052 <puts+0x1c>
    5074:	df ef       	ldi	r29, 0xFF	; 255
    5076:	cf ef       	ldi	r28, 0xFF	; 255
    5078:	ec cf       	rjmp	.-40     	; 0x5052 <puts+0x1c>
    507a:	8a e0       	ldi	r24, 0x0A	; 10
    507c:	19 95       	eicall
    507e:	89 2b       	or	r24, r25
    5080:	19 f0       	breq	.+6      	; 0x5088 <puts+0x52>
    5082:	8f ef       	ldi	r24, 0xFF	; 255
    5084:	9f ef       	ldi	r25, 0xFF	; 255
    5086:	02 c0       	rjmp	.+4      	; 0x508c <puts+0x56>
    5088:	8d 2f       	mov	r24, r29
    508a:	9c 2f       	mov	r25, r28
    508c:	df 91       	pop	r29
    508e:	cf 91       	pop	r28
    5090:	1f 91       	pop	r17
    5092:	0f 91       	pop	r16
    5094:	08 95       	ret

00005096 <sprintf>:
    5096:	0f 93       	push	r16
    5098:	1f 93       	push	r17
    509a:	cf 93       	push	r28
    509c:	df 93       	push	r29
    509e:	cd b7       	in	r28, 0x3d	; 61
    50a0:	de b7       	in	r29, 0x3e	; 62
    50a2:	2e 97       	sbiw	r28, 0x0e	; 14
    50a4:	0f b6       	in	r0, 0x3f	; 63
    50a6:	f8 94       	cli
    50a8:	de bf       	out	0x3e, r29	; 62
    50aa:	0f be       	out	0x3f, r0	; 63
    50ac:	cd bf       	out	0x3d, r28	; 61
    50ae:	0e 89       	ldd	r16, Y+22	; 0x16
    50b0:	1f 89       	ldd	r17, Y+23	; 0x17
    50b2:	86 e0       	ldi	r24, 0x06	; 6
    50b4:	8c 83       	std	Y+4, r24	; 0x04
    50b6:	1a 83       	std	Y+2, r17	; 0x02
    50b8:	09 83       	std	Y+1, r16	; 0x01
    50ba:	8f ef       	ldi	r24, 0xFF	; 255
    50bc:	9f e7       	ldi	r25, 0x7F	; 127
    50be:	9e 83       	std	Y+6, r25	; 0x06
    50c0:	8d 83       	std	Y+5, r24	; 0x05
    50c2:	ae 01       	movw	r20, r28
    50c4:	46 5e       	subi	r20, 0xE6	; 230
    50c6:	5f 4f       	sbci	r21, 0xFF	; 255
    50c8:	68 8d       	ldd	r22, Y+24	; 0x18
    50ca:	79 8d       	ldd	r23, Y+25	; 0x19
    50cc:	ce 01       	movw	r24, r28
    50ce:	01 96       	adiw	r24, 0x01	; 1
    50d0:	10 d0       	rcall	.+32     	; 0x50f2 <vfprintf>
    50d2:	ef 81       	ldd	r30, Y+7	; 0x07
    50d4:	f8 85       	ldd	r31, Y+8	; 0x08
    50d6:	e0 0f       	add	r30, r16
    50d8:	f1 1f       	adc	r31, r17
    50da:	10 82       	st	Z, r1
    50dc:	2e 96       	adiw	r28, 0x0e	; 14
    50de:	0f b6       	in	r0, 0x3f	; 63
    50e0:	f8 94       	cli
    50e2:	de bf       	out	0x3e, r29	; 62
    50e4:	0f be       	out	0x3f, r0	; 63
    50e6:	cd bf       	out	0x3d, r28	; 61
    50e8:	df 91       	pop	r29
    50ea:	cf 91       	pop	r28
    50ec:	1f 91       	pop	r17
    50ee:	0f 91       	pop	r16
    50f0:	08 95       	ret

000050f2 <vfprintf>:
    50f2:	2f 92       	push	r2
    50f4:	3f 92       	push	r3
    50f6:	4f 92       	push	r4
    50f8:	5f 92       	push	r5
    50fa:	6f 92       	push	r6
    50fc:	7f 92       	push	r7
    50fe:	8f 92       	push	r8
    5100:	9f 92       	push	r9
    5102:	af 92       	push	r10
    5104:	bf 92       	push	r11
    5106:	cf 92       	push	r12
    5108:	df 92       	push	r13
    510a:	ef 92       	push	r14
    510c:	ff 92       	push	r15
    510e:	0f 93       	push	r16
    5110:	1f 93       	push	r17
    5112:	cf 93       	push	r28
    5114:	df 93       	push	r29
    5116:	cd b7       	in	r28, 0x3d	; 61
    5118:	de b7       	in	r29, 0x3e	; 62
    511a:	2b 97       	sbiw	r28, 0x0b	; 11
    511c:	0f b6       	in	r0, 0x3f	; 63
    511e:	f8 94       	cli
    5120:	de bf       	out	0x3e, r29	; 62
    5122:	0f be       	out	0x3f, r0	; 63
    5124:	cd bf       	out	0x3d, r28	; 61
    5126:	6c 01       	movw	r12, r24
    5128:	7b 01       	movw	r14, r22
    512a:	8a 01       	movw	r16, r20
    512c:	fc 01       	movw	r30, r24
    512e:	17 82       	std	Z+7, r1	; 0x07
    5130:	16 82       	std	Z+6, r1	; 0x06
    5132:	83 81       	ldd	r24, Z+3	; 0x03
    5134:	81 ff       	sbrs	r24, 1
    5136:	bf c1       	rjmp	.+894    	; 0x54b6 <vfprintf+0x3c4>
    5138:	ce 01       	movw	r24, r28
    513a:	01 96       	adiw	r24, 0x01	; 1
    513c:	3c 01       	movw	r6, r24
    513e:	f6 01       	movw	r30, r12
    5140:	93 81       	ldd	r25, Z+3	; 0x03
    5142:	f7 01       	movw	r30, r14
    5144:	93 fd       	sbrc	r25, 3
    5146:	85 91       	lpm	r24, Z+
    5148:	93 ff       	sbrs	r25, 3
    514a:	81 91       	ld	r24, Z+
    514c:	7f 01       	movw	r14, r30
    514e:	88 23       	and	r24, r24
    5150:	09 f4       	brne	.+2      	; 0x5154 <vfprintf+0x62>
    5152:	ad c1       	rjmp	.+858    	; 0x54ae <vfprintf+0x3bc>
    5154:	85 32       	cpi	r24, 0x25	; 37
    5156:	39 f4       	brne	.+14     	; 0x5166 <vfprintf+0x74>
    5158:	93 fd       	sbrc	r25, 3
    515a:	85 91       	lpm	r24, Z+
    515c:	93 ff       	sbrs	r25, 3
    515e:	81 91       	ld	r24, Z+
    5160:	7f 01       	movw	r14, r30
    5162:	85 32       	cpi	r24, 0x25	; 37
    5164:	21 f4       	brne	.+8      	; 0x516e <vfprintf+0x7c>
    5166:	b6 01       	movw	r22, r12
    5168:	90 e0       	ldi	r25, 0x00	; 0
    516a:	d6 d1       	rcall	.+940    	; 0x5518 <fputc>
    516c:	e8 cf       	rjmp	.-48     	; 0x513e <vfprintf+0x4c>
    516e:	91 2c       	mov	r9, r1
    5170:	21 2c       	mov	r2, r1
    5172:	31 2c       	mov	r3, r1
    5174:	ff e1       	ldi	r31, 0x1F	; 31
    5176:	f3 15       	cp	r31, r3
    5178:	d8 f0       	brcs	.+54     	; 0x51b0 <vfprintf+0xbe>
    517a:	8b 32       	cpi	r24, 0x2B	; 43
    517c:	79 f0       	breq	.+30     	; 0x519c <vfprintf+0xaa>
    517e:	38 f4       	brcc	.+14     	; 0x518e <vfprintf+0x9c>
    5180:	80 32       	cpi	r24, 0x20	; 32
    5182:	79 f0       	breq	.+30     	; 0x51a2 <vfprintf+0xb0>
    5184:	83 32       	cpi	r24, 0x23	; 35
    5186:	a1 f4       	brne	.+40     	; 0x51b0 <vfprintf+0xbe>
    5188:	23 2d       	mov	r18, r3
    518a:	20 61       	ori	r18, 0x10	; 16
    518c:	1d c0       	rjmp	.+58     	; 0x51c8 <vfprintf+0xd6>
    518e:	8d 32       	cpi	r24, 0x2D	; 45
    5190:	61 f0       	breq	.+24     	; 0x51aa <vfprintf+0xb8>
    5192:	80 33       	cpi	r24, 0x30	; 48
    5194:	69 f4       	brne	.+26     	; 0x51b0 <vfprintf+0xbe>
    5196:	23 2d       	mov	r18, r3
    5198:	21 60       	ori	r18, 0x01	; 1
    519a:	16 c0       	rjmp	.+44     	; 0x51c8 <vfprintf+0xd6>
    519c:	83 2d       	mov	r24, r3
    519e:	82 60       	ori	r24, 0x02	; 2
    51a0:	38 2e       	mov	r3, r24
    51a2:	e3 2d       	mov	r30, r3
    51a4:	e4 60       	ori	r30, 0x04	; 4
    51a6:	3e 2e       	mov	r3, r30
    51a8:	2a c0       	rjmp	.+84     	; 0x51fe <vfprintf+0x10c>
    51aa:	f3 2d       	mov	r31, r3
    51ac:	f8 60       	ori	r31, 0x08	; 8
    51ae:	1d c0       	rjmp	.+58     	; 0x51ea <vfprintf+0xf8>
    51b0:	37 fc       	sbrc	r3, 7
    51b2:	2d c0       	rjmp	.+90     	; 0x520e <vfprintf+0x11c>
    51b4:	20 ed       	ldi	r18, 0xD0	; 208
    51b6:	28 0f       	add	r18, r24
    51b8:	2a 30       	cpi	r18, 0x0A	; 10
    51ba:	40 f0       	brcs	.+16     	; 0x51cc <vfprintf+0xda>
    51bc:	8e 32       	cpi	r24, 0x2E	; 46
    51be:	b9 f4       	brne	.+46     	; 0x51ee <vfprintf+0xfc>
    51c0:	36 fc       	sbrc	r3, 6
    51c2:	75 c1       	rjmp	.+746    	; 0x54ae <vfprintf+0x3bc>
    51c4:	23 2d       	mov	r18, r3
    51c6:	20 64       	ori	r18, 0x40	; 64
    51c8:	32 2e       	mov	r3, r18
    51ca:	19 c0       	rjmp	.+50     	; 0x51fe <vfprintf+0x10c>
    51cc:	36 fe       	sbrs	r3, 6
    51ce:	06 c0       	rjmp	.+12     	; 0x51dc <vfprintf+0xea>
    51d0:	8a e0       	ldi	r24, 0x0A	; 10
    51d2:	98 9e       	mul	r9, r24
    51d4:	20 0d       	add	r18, r0
    51d6:	11 24       	eor	r1, r1
    51d8:	92 2e       	mov	r9, r18
    51da:	11 c0       	rjmp	.+34     	; 0x51fe <vfprintf+0x10c>
    51dc:	ea e0       	ldi	r30, 0x0A	; 10
    51de:	2e 9e       	mul	r2, r30
    51e0:	20 0d       	add	r18, r0
    51e2:	11 24       	eor	r1, r1
    51e4:	22 2e       	mov	r2, r18
    51e6:	f3 2d       	mov	r31, r3
    51e8:	f0 62       	ori	r31, 0x20	; 32
    51ea:	3f 2e       	mov	r3, r31
    51ec:	08 c0       	rjmp	.+16     	; 0x51fe <vfprintf+0x10c>
    51ee:	8c 36       	cpi	r24, 0x6C	; 108
    51f0:	21 f4       	brne	.+8      	; 0x51fa <vfprintf+0x108>
    51f2:	83 2d       	mov	r24, r3
    51f4:	80 68       	ori	r24, 0x80	; 128
    51f6:	38 2e       	mov	r3, r24
    51f8:	02 c0       	rjmp	.+4      	; 0x51fe <vfprintf+0x10c>
    51fa:	88 36       	cpi	r24, 0x68	; 104
    51fc:	41 f4       	brne	.+16     	; 0x520e <vfprintf+0x11c>
    51fe:	f7 01       	movw	r30, r14
    5200:	93 fd       	sbrc	r25, 3
    5202:	85 91       	lpm	r24, Z+
    5204:	93 ff       	sbrs	r25, 3
    5206:	81 91       	ld	r24, Z+
    5208:	7f 01       	movw	r14, r30
    520a:	81 11       	cpse	r24, r1
    520c:	b3 cf       	rjmp	.-154    	; 0x5174 <vfprintf+0x82>
    520e:	98 2f       	mov	r25, r24
    5210:	9f 7d       	andi	r25, 0xDF	; 223
    5212:	95 54       	subi	r25, 0x45	; 69
    5214:	93 30       	cpi	r25, 0x03	; 3
    5216:	28 f4       	brcc	.+10     	; 0x5222 <vfprintf+0x130>
    5218:	0c 5f       	subi	r16, 0xFC	; 252
    521a:	1f 4f       	sbci	r17, 0xFF	; 255
    521c:	9f e3       	ldi	r25, 0x3F	; 63
    521e:	99 83       	std	Y+1, r25	; 0x01
    5220:	0d c0       	rjmp	.+26     	; 0x523c <vfprintf+0x14a>
    5222:	83 36       	cpi	r24, 0x63	; 99
    5224:	31 f0       	breq	.+12     	; 0x5232 <vfprintf+0x140>
    5226:	83 37       	cpi	r24, 0x73	; 115
    5228:	71 f0       	breq	.+28     	; 0x5246 <vfprintf+0x154>
    522a:	83 35       	cpi	r24, 0x53	; 83
    522c:	09 f0       	breq	.+2      	; 0x5230 <vfprintf+0x13e>
    522e:	55 c0       	rjmp	.+170    	; 0x52da <vfprintf+0x1e8>
    5230:	20 c0       	rjmp	.+64     	; 0x5272 <vfprintf+0x180>
    5232:	f8 01       	movw	r30, r16
    5234:	80 81       	ld	r24, Z
    5236:	89 83       	std	Y+1, r24	; 0x01
    5238:	0e 5f       	subi	r16, 0xFE	; 254
    523a:	1f 4f       	sbci	r17, 0xFF	; 255
    523c:	88 24       	eor	r8, r8
    523e:	83 94       	inc	r8
    5240:	91 2c       	mov	r9, r1
    5242:	53 01       	movw	r10, r6
    5244:	12 c0       	rjmp	.+36     	; 0x526a <vfprintf+0x178>
    5246:	28 01       	movw	r4, r16
    5248:	f2 e0       	ldi	r31, 0x02	; 2
    524a:	4f 0e       	add	r4, r31
    524c:	51 1c       	adc	r5, r1
    524e:	f8 01       	movw	r30, r16
    5250:	a0 80       	ld	r10, Z
    5252:	b1 80       	ldd	r11, Z+1	; 0x01
    5254:	36 fe       	sbrs	r3, 6
    5256:	03 c0       	rjmp	.+6      	; 0x525e <vfprintf+0x16c>
    5258:	69 2d       	mov	r22, r9
    525a:	70 e0       	ldi	r23, 0x00	; 0
    525c:	02 c0       	rjmp	.+4      	; 0x5262 <vfprintf+0x170>
    525e:	6f ef       	ldi	r22, 0xFF	; 255
    5260:	7f ef       	ldi	r23, 0xFF	; 255
    5262:	c5 01       	movw	r24, r10
    5264:	4e d1       	rcall	.+668    	; 0x5502 <strnlen>
    5266:	4c 01       	movw	r8, r24
    5268:	82 01       	movw	r16, r4
    526a:	f3 2d       	mov	r31, r3
    526c:	ff 77       	andi	r31, 0x7F	; 127
    526e:	3f 2e       	mov	r3, r31
    5270:	15 c0       	rjmp	.+42     	; 0x529c <vfprintf+0x1aa>
    5272:	28 01       	movw	r4, r16
    5274:	22 e0       	ldi	r18, 0x02	; 2
    5276:	42 0e       	add	r4, r18
    5278:	51 1c       	adc	r5, r1
    527a:	f8 01       	movw	r30, r16
    527c:	a0 80       	ld	r10, Z
    527e:	b1 80       	ldd	r11, Z+1	; 0x01
    5280:	36 fe       	sbrs	r3, 6
    5282:	03 c0       	rjmp	.+6      	; 0x528a <vfprintf+0x198>
    5284:	69 2d       	mov	r22, r9
    5286:	70 e0       	ldi	r23, 0x00	; 0
    5288:	02 c0       	rjmp	.+4      	; 0x528e <vfprintf+0x19c>
    528a:	6f ef       	ldi	r22, 0xFF	; 255
    528c:	7f ef       	ldi	r23, 0xFF	; 255
    528e:	c5 01       	movw	r24, r10
    5290:	2d d1       	rcall	.+602    	; 0x54ec <strnlen_P>
    5292:	4c 01       	movw	r8, r24
    5294:	f3 2d       	mov	r31, r3
    5296:	f0 68       	ori	r31, 0x80	; 128
    5298:	3f 2e       	mov	r3, r31
    529a:	82 01       	movw	r16, r4
    529c:	33 fc       	sbrc	r3, 3
    529e:	19 c0       	rjmp	.+50     	; 0x52d2 <vfprintf+0x1e0>
    52a0:	82 2d       	mov	r24, r2
    52a2:	90 e0       	ldi	r25, 0x00	; 0
    52a4:	88 16       	cp	r8, r24
    52a6:	99 06       	cpc	r9, r25
    52a8:	a0 f4       	brcc	.+40     	; 0x52d2 <vfprintf+0x1e0>
    52aa:	b6 01       	movw	r22, r12
    52ac:	80 e2       	ldi	r24, 0x20	; 32
    52ae:	90 e0       	ldi	r25, 0x00	; 0
    52b0:	33 d1       	rcall	.+614    	; 0x5518 <fputc>
    52b2:	2a 94       	dec	r2
    52b4:	f5 cf       	rjmp	.-22     	; 0x52a0 <vfprintf+0x1ae>
    52b6:	f5 01       	movw	r30, r10
    52b8:	37 fc       	sbrc	r3, 7
    52ba:	85 91       	lpm	r24, Z+
    52bc:	37 fe       	sbrs	r3, 7
    52be:	81 91       	ld	r24, Z+
    52c0:	5f 01       	movw	r10, r30
    52c2:	b6 01       	movw	r22, r12
    52c4:	90 e0       	ldi	r25, 0x00	; 0
    52c6:	28 d1       	rcall	.+592    	; 0x5518 <fputc>
    52c8:	21 10       	cpse	r2, r1
    52ca:	2a 94       	dec	r2
    52cc:	21 e0       	ldi	r18, 0x01	; 1
    52ce:	82 1a       	sub	r8, r18
    52d0:	91 08       	sbc	r9, r1
    52d2:	81 14       	cp	r8, r1
    52d4:	91 04       	cpc	r9, r1
    52d6:	79 f7       	brne	.-34     	; 0x52b6 <vfprintf+0x1c4>
    52d8:	e1 c0       	rjmp	.+450    	; 0x549c <vfprintf+0x3aa>
    52da:	84 36       	cpi	r24, 0x64	; 100
    52dc:	11 f0       	breq	.+4      	; 0x52e2 <vfprintf+0x1f0>
    52de:	89 36       	cpi	r24, 0x69	; 105
    52e0:	39 f5       	brne	.+78     	; 0x5330 <vfprintf+0x23e>
    52e2:	f8 01       	movw	r30, r16
    52e4:	37 fe       	sbrs	r3, 7
    52e6:	07 c0       	rjmp	.+14     	; 0x52f6 <vfprintf+0x204>
    52e8:	60 81       	ld	r22, Z
    52ea:	71 81       	ldd	r23, Z+1	; 0x01
    52ec:	82 81       	ldd	r24, Z+2	; 0x02
    52ee:	93 81       	ldd	r25, Z+3	; 0x03
    52f0:	0c 5f       	subi	r16, 0xFC	; 252
    52f2:	1f 4f       	sbci	r17, 0xFF	; 255
    52f4:	08 c0       	rjmp	.+16     	; 0x5306 <vfprintf+0x214>
    52f6:	60 81       	ld	r22, Z
    52f8:	71 81       	ldd	r23, Z+1	; 0x01
    52fa:	07 2e       	mov	r0, r23
    52fc:	00 0c       	add	r0, r0
    52fe:	88 0b       	sbc	r24, r24
    5300:	99 0b       	sbc	r25, r25
    5302:	0e 5f       	subi	r16, 0xFE	; 254
    5304:	1f 4f       	sbci	r17, 0xFF	; 255
    5306:	f3 2d       	mov	r31, r3
    5308:	ff 76       	andi	r31, 0x6F	; 111
    530a:	3f 2e       	mov	r3, r31
    530c:	97 ff       	sbrs	r25, 7
    530e:	09 c0       	rjmp	.+18     	; 0x5322 <vfprintf+0x230>
    5310:	90 95       	com	r25
    5312:	80 95       	com	r24
    5314:	70 95       	com	r23
    5316:	61 95       	neg	r22
    5318:	7f 4f       	sbci	r23, 0xFF	; 255
    531a:	8f 4f       	sbci	r24, 0xFF	; 255
    531c:	9f 4f       	sbci	r25, 0xFF	; 255
    531e:	f0 68       	ori	r31, 0x80	; 128
    5320:	3f 2e       	mov	r3, r31
    5322:	2a e0       	ldi	r18, 0x0A	; 10
    5324:	30 e0       	ldi	r19, 0x00	; 0
    5326:	a3 01       	movw	r20, r6
    5328:	33 d1       	rcall	.+614    	; 0x5590 <__ultoa_invert>
    532a:	88 2e       	mov	r8, r24
    532c:	86 18       	sub	r8, r6
    532e:	44 c0       	rjmp	.+136    	; 0x53b8 <vfprintf+0x2c6>
    5330:	85 37       	cpi	r24, 0x75	; 117
    5332:	31 f4       	brne	.+12     	; 0x5340 <vfprintf+0x24e>
    5334:	23 2d       	mov	r18, r3
    5336:	2f 7e       	andi	r18, 0xEF	; 239
    5338:	b2 2e       	mov	r11, r18
    533a:	2a e0       	ldi	r18, 0x0A	; 10
    533c:	30 e0       	ldi	r19, 0x00	; 0
    533e:	25 c0       	rjmp	.+74     	; 0x538a <vfprintf+0x298>
    5340:	93 2d       	mov	r25, r3
    5342:	99 7f       	andi	r25, 0xF9	; 249
    5344:	b9 2e       	mov	r11, r25
    5346:	8f 36       	cpi	r24, 0x6F	; 111
    5348:	c1 f0       	breq	.+48     	; 0x537a <vfprintf+0x288>
    534a:	18 f4       	brcc	.+6      	; 0x5352 <vfprintf+0x260>
    534c:	88 35       	cpi	r24, 0x58	; 88
    534e:	79 f0       	breq	.+30     	; 0x536e <vfprintf+0x27c>
    5350:	ae c0       	rjmp	.+348    	; 0x54ae <vfprintf+0x3bc>
    5352:	80 37       	cpi	r24, 0x70	; 112
    5354:	19 f0       	breq	.+6      	; 0x535c <vfprintf+0x26a>
    5356:	88 37       	cpi	r24, 0x78	; 120
    5358:	21 f0       	breq	.+8      	; 0x5362 <vfprintf+0x270>
    535a:	a9 c0       	rjmp	.+338    	; 0x54ae <vfprintf+0x3bc>
    535c:	e9 2f       	mov	r30, r25
    535e:	e0 61       	ori	r30, 0x10	; 16
    5360:	be 2e       	mov	r11, r30
    5362:	b4 fe       	sbrs	r11, 4
    5364:	0d c0       	rjmp	.+26     	; 0x5380 <vfprintf+0x28e>
    5366:	fb 2d       	mov	r31, r11
    5368:	f4 60       	ori	r31, 0x04	; 4
    536a:	bf 2e       	mov	r11, r31
    536c:	09 c0       	rjmp	.+18     	; 0x5380 <vfprintf+0x28e>
    536e:	34 fe       	sbrs	r3, 4
    5370:	0a c0       	rjmp	.+20     	; 0x5386 <vfprintf+0x294>
    5372:	29 2f       	mov	r18, r25
    5374:	26 60       	ori	r18, 0x06	; 6
    5376:	b2 2e       	mov	r11, r18
    5378:	06 c0       	rjmp	.+12     	; 0x5386 <vfprintf+0x294>
    537a:	28 e0       	ldi	r18, 0x08	; 8
    537c:	30 e0       	ldi	r19, 0x00	; 0
    537e:	05 c0       	rjmp	.+10     	; 0x538a <vfprintf+0x298>
    5380:	20 e1       	ldi	r18, 0x10	; 16
    5382:	30 e0       	ldi	r19, 0x00	; 0
    5384:	02 c0       	rjmp	.+4      	; 0x538a <vfprintf+0x298>
    5386:	20 e1       	ldi	r18, 0x10	; 16
    5388:	32 e0       	ldi	r19, 0x02	; 2
    538a:	f8 01       	movw	r30, r16
    538c:	b7 fe       	sbrs	r11, 7
    538e:	07 c0       	rjmp	.+14     	; 0x539e <vfprintf+0x2ac>
    5390:	60 81       	ld	r22, Z
    5392:	71 81       	ldd	r23, Z+1	; 0x01
    5394:	82 81       	ldd	r24, Z+2	; 0x02
    5396:	93 81       	ldd	r25, Z+3	; 0x03
    5398:	0c 5f       	subi	r16, 0xFC	; 252
    539a:	1f 4f       	sbci	r17, 0xFF	; 255
    539c:	06 c0       	rjmp	.+12     	; 0x53aa <vfprintf+0x2b8>
    539e:	60 81       	ld	r22, Z
    53a0:	71 81       	ldd	r23, Z+1	; 0x01
    53a2:	80 e0       	ldi	r24, 0x00	; 0
    53a4:	90 e0       	ldi	r25, 0x00	; 0
    53a6:	0e 5f       	subi	r16, 0xFE	; 254
    53a8:	1f 4f       	sbci	r17, 0xFF	; 255
    53aa:	a3 01       	movw	r20, r6
    53ac:	f1 d0       	rcall	.+482    	; 0x5590 <__ultoa_invert>
    53ae:	88 2e       	mov	r8, r24
    53b0:	86 18       	sub	r8, r6
    53b2:	fb 2d       	mov	r31, r11
    53b4:	ff 77       	andi	r31, 0x7F	; 127
    53b6:	3f 2e       	mov	r3, r31
    53b8:	36 fe       	sbrs	r3, 6
    53ba:	0d c0       	rjmp	.+26     	; 0x53d6 <vfprintf+0x2e4>
    53bc:	23 2d       	mov	r18, r3
    53be:	2e 7f       	andi	r18, 0xFE	; 254
    53c0:	a2 2e       	mov	r10, r18
    53c2:	89 14       	cp	r8, r9
    53c4:	58 f4       	brcc	.+22     	; 0x53dc <vfprintf+0x2ea>
    53c6:	34 fe       	sbrs	r3, 4
    53c8:	0b c0       	rjmp	.+22     	; 0x53e0 <vfprintf+0x2ee>
    53ca:	32 fc       	sbrc	r3, 2
    53cc:	09 c0       	rjmp	.+18     	; 0x53e0 <vfprintf+0x2ee>
    53ce:	83 2d       	mov	r24, r3
    53d0:	8e 7e       	andi	r24, 0xEE	; 238
    53d2:	a8 2e       	mov	r10, r24
    53d4:	05 c0       	rjmp	.+10     	; 0x53e0 <vfprintf+0x2ee>
    53d6:	b8 2c       	mov	r11, r8
    53d8:	a3 2c       	mov	r10, r3
    53da:	03 c0       	rjmp	.+6      	; 0x53e2 <vfprintf+0x2f0>
    53dc:	b8 2c       	mov	r11, r8
    53de:	01 c0       	rjmp	.+2      	; 0x53e2 <vfprintf+0x2f0>
    53e0:	b9 2c       	mov	r11, r9
    53e2:	a4 fe       	sbrs	r10, 4
    53e4:	0f c0       	rjmp	.+30     	; 0x5404 <vfprintf+0x312>
    53e6:	fe 01       	movw	r30, r28
    53e8:	e8 0d       	add	r30, r8
    53ea:	f1 1d       	adc	r31, r1
    53ec:	80 81       	ld	r24, Z
    53ee:	80 33       	cpi	r24, 0x30	; 48
    53f0:	21 f4       	brne	.+8      	; 0x53fa <vfprintf+0x308>
    53f2:	9a 2d       	mov	r25, r10
    53f4:	99 7e       	andi	r25, 0xE9	; 233
    53f6:	a9 2e       	mov	r10, r25
    53f8:	09 c0       	rjmp	.+18     	; 0x540c <vfprintf+0x31a>
    53fa:	a2 fe       	sbrs	r10, 2
    53fc:	06 c0       	rjmp	.+12     	; 0x540a <vfprintf+0x318>
    53fe:	b3 94       	inc	r11
    5400:	b3 94       	inc	r11
    5402:	04 c0       	rjmp	.+8      	; 0x540c <vfprintf+0x31a>
    5404:	8a 2d       	mov	r24, r10
    5406:	86 78       	andi	r24, 0x86	; 134
    5408:	09 f0       	breq	.+2      	; 0x540c <vfprintf+0x31a>
    540a:	b3 94       	inc	r11
    540c:	a3 fc       	sbrc	r10, 3
    540e:	10 c0       	rjmp	.+32     	; 0x5430 <vfprintf+0x33e>
    5410:	a0 fe       	sbrs	r10, 0
    5412:	06 c0       	rjmp	.+12     	; 0x5420 <vfprintf+0x32e>
    5414:	b2 14       	cp	r11, r2
    5416:	80 f4       	brcc	.+32     	; 0x5438 <vfprintf+0x346>
    5418:	28 0c       	add	r2, r8
    541a:	92 2c       	mov	r9, r2
    541c:	9b 18       	sub	r9, r11
    541e:	0d c0       	rjmp	.+26     	; 0x543a <vfprintf+0x348>
    5420:	b2 14       	cp	r11, r2
    5422:	58 f4       	brcc	.+22     	; 0x543a <vfprintf+0x348>
    5424:	b6 01       	movw	r22, r12
    5426:	80 e2       	ldi	r24, 0x20	; 32
    5428:	90 e0       	ldi	r25, 0x00	; 0
    542a:	76 d0       	rcall	.+236    	; 0x5518 <fputc>
    542c:	b3 94       	inc	r11
    542e:	f8 cf       	rjmp	.-16     	; 0x5420 <vfprintf+0x32e>
    5430:	b2 14       	cp	r11, r2
    5432:	18 f4       	brcc	.+6      	; 0x543a <vfprintf+0x348>
    5434:	2b 18       	sub	r2, r11
    5436:	02 c0       	rjmp	.+4      	; 0x543c <vfprintf+0x34a>
    5438:	98 2c       	mov	r9, r8
    543a:	21 2c       	mov	r2, r1
    543c:	a4 fe       	sbrs	r10, 4
    543e:	0f c0       	rjmp	.+30     	; 0x545e <vfprintf+0x36c>
    5440:	b6 01       	movw	r22, r12
    5442:	80 e3       	ldi	r24, 0x30	; 48
    5444:	90 e0       	ldi	r25, 0x00	; 0
    5446:	68 d0       	rcall	.+208    	; 0x5518 <fputc>
    5448:	a2 fe       	sbrs	r10, 2
    544a:	16 c0       	rjmp	.+44     	; 0x5478 <vfprintf+0x386>
    544c:	a1 fc       	sbrc	r10, 1
    544e:	03 c0       	rjmp	.+6      	; 0x5456 <vfprintf+0x364>
    5450:	88 e7       	ldi	r24, 0x78	; 120
    5452:	90 e0       	ldi	r25, 0x00	; 0
    5454:	02 c0       	rjmp	.+4      	; 0x545a <vfprintf+0x368>
    5456:	88 e5       	ldi	r24, 0x58	; 88
    5458:	90 e0       	ldi	r25, 0x00	; 0
    545a:	b6 01       	movw	r22, r12
    545c:	0c c0       	rjmp	.+24     	; 0x5476 <vfprintf+0x384>
    545e:	8a 2d       	mov	r24, r10
    5460:	86 78       	andi	r24, 0x86	; 134
    5462:	51 f0       	breq	.+20     	; 0x5478 <vfprintf+0x386>
    5464:	a1 fe       	sbrs	r10, 1
    5466:	02 c0       	rjmp	.+4      	; 0x546c <vfprintf+0x37a>
    5468:	8b e2       	ldi	r24, 0x2B	; 43
    546a:	01 c0       	rjmp	.+2      	; 0x546e <vfprintf+0x37c>
    546c:	80 e2       	ldi	r24, 0x20	; 32
    546e:	a7 fc       	sbrc	r10, 7
    5470:	8d e2       	ldi	r24, 0x2D	; 45
    5472:	b6 01       	movw	r22, r12
    5474:	90 e0       	ldi	r25, 0x00	; 0
    5476:	50 d0       	rcall	.+160    	; 0x5518 <fputc>
    5478:	89 14       	cp	r8, r9
    547a:	30 f4       	brcc	.+12     	; 0x5488 <vfprintf+0x396>
    547c:	b6 01       	movw	r22, r12
    547e:	80 e3       	ldi	r24, 0x30	; 48
    5480:	90 e0       	ldi	r25, 0x00	; 0
    5482:	4a d0       	rcall	.+148    	; 0x5518 <fputc>
    5484:	9a 94       	dec	r9
    5486:	f8 cf       	rjmp	.-16     	; 0x5478 <vfprintf+0x386>
    5488:	8a 94       	dec	r8
    548a:	f3 01       	movw	r30, r6
    548c:	e8 0d       	add	r30, r8
    548e:	f1 1d       	adc	r31, r1
    5490:	80 81       	ld	r24, Z
    5492:	b6 01       	movw	r22, r12
    5494:	90 e0       	ldi	r25, 0x00	; 0
    5496:	40 d0       	rcall	.+128    	; 0x5518 <fputc>
    5498:	81 10       	cpse	r8, r1
    549a:	f6 cf       	rjmp	.-20     	; 0x5488 <vfprintf+0x396>
    549c:	22 20       	and	r2, r2
    549e:	09 f4       	brne	.+2      	; 0x54a2 <vfprintf+0x3b0>
    54a0:	4e ce       	rjmp	.-868    	; 0x513e <vfprintf+0x4c>
    54a2:	b6 01       	movw	r22, r12
    54a4:	80 e2       	ldi	r24, 0x20	; 32
    54a6:	90 e0       	ldi	r25, 0x00	; 0
    54a8:	37 d0       	rcall	.+110    	; 0x5518 <fputc>
    54aa:	2a 94       	dec	r2
    54ac:	f7 cf       	rjmp	.-18     	; 0x549c <vfprintf+0x3aa>
    54ae:	f6 01       	movw	r30, r12
    54b0:	86 81       	ldd	r24, Z+6	; 0x06
    54b2:	97 81       	ldd	r25, Z+7	; 0x07
    54b4:	02 c0       	rjmp	.+4      	; 0x54ba <vfprintf+0x3c8>
    54b6:	8f ef       	ldi	r24, 0xFF	; 255
    54b8:	9f ef       	ldi	r25, 0xFF	; 255
    54ba:	2b 96       	adiw	r28, 0x0b	; 11
    54bc:	0f b6       	in	r0, 0x3f	; 63
    54be:	f8 94       	cli
    54c0:	de bf       	out	0x3e, r29	; 62
    54c2:	0f be       	out	0x3f, r0	; 63
    54c4:	cd bf       	out	0x3d, r28	; 61
    54c6:	df 91       	pop	r29
    54c8:	cf 91       	pop	r28
    54ca:	1f 91       	pop	r17
    54cc:	0f 91       	pop	r16
    54ce:	ff 90       	pop	r15
    54d0:	ef 90       	pop	r14
    54d2:	df 90       	pop	r13
    54d4:	cf 90       	pop	r12
    54d6:	bf 90       	pop	r11
    54d8:	af 90       	pop	r10
    54da:	9f 90       	pop	r9
    54dc:	8f 90       	pop	r8
    54de:	7f 90       	pop	r7
    54e0:	6f 90       	pop	r6
    54e2:	5f 90       	pop	r5
    54e4:	4f 90       	pop	r4
    54e6:	3f 90       	pop	r3
    54e8:	2f 90       	pop	r2
    54ea:	08 95       	ret

000054ec <strnlen_P>:
    54ec:	fc 01       	movw	r30, r24
    54ee:	05 90       	lpm	r0, Z+
    54f0:	61 50       	subi	r22, 0x01	; 1
    54f2:	70 40       	sbci	r23, 0x00	; 0
    54f4:	01 10       	cpse	r0, r1
    54f6:	d8 f7       	brcc	.-10     	; 0x54ee <strnlen_P+0x2>
    54f8:	80 95       	com	r24
    54fa:	90 95       	com	r25
    54fc:	8e 0f       	add	r24, r30
    54fe:	9f 1f       	adc	r25, r31
    5500:	08 95       	ret

00005502 <strnlen>:
    5502:	fc 01       	movw	r30, r24
    5504:	61 50       	subi	r22, 0x01	; 1
    5506:	70 40       	sbci	r23, 0x00	; 0
    5508:	01 90       	ld	r0, Z+
    550a:	01 10       	cpse	r0, r1
    550c:	d8 f7       	brcc	.-10     	; 0x5504 <strnlen+0x2>
    550e:	80 95       	com	r24
    5510:	90 95       	com	r25
    5512:	8e 0f       	add	r24, r30
    5514:	9f 1f       	adc	r25, r31
    5516:	08 95       	ret

00005518 <fputc>:
    5518:	0f 93       	push	r16
    551a:	1f 93       	push	r17
    551c:	cf 93       	push	r28
    551e:	df 93       	push	r29
    5520:	fb 01       	movw	r30, r22
    5522:	23 81       	ldd	r18, Z+3	; 0x03
    5524:	21 fd       	sbrc	r18, 1
    5526:	03 c0       	rjmp	.+6      	; 0x552e <fputc+0x16>
    5528:	8f ef       	ldi	r24, 0xFF	; 255
    552a:	9f ef       	ldi	r25, 0xFF	; 255
    552c:	2c c0       	rjmp	.+88     	; 0x5586 <fputc+0x6e>
    552e:	22 ff       	sbrs	r18, 2
    5530:	16 c0       	rjmp	.+44     	; 0x555e <fputc+0x46>
    5532:	46 81       	ldd	r20, Z+6	; 0x06
    5534:	57 81       	ldd	r21, Z+7	; 0x07
    5536:	24 81       	ldd	r18, Z+4	; 0x04
    5538:	35 81       	ldd	r19, Z+5	; 0x05
    553a:	42 17       	cp	r20, r18
    553c:	53 07       	cpc	r21, r19
    553e:	44 f4       	brge	.+16     	; 0x5550 <fputc+0x38>
    5540:	a0 81       	ld	r26, Z
    5542:	b1 81       	ldd	r27, Z+1	; 0x01
    5544:	9d 01       	movw	r18, r26
    5546:	2f 5f       	subi	r18, 0xFF	; 255
    5548:	3f 4f       	sbci	r19, 0xFF	; 255
    554a:	31 83       	std	Z+1, r19	; 0x01
    554c:	20 83       	st	Z, r18
    554e:	8c 93       	st	X, r24
    5550:	26 81       	ldd	r18, Z+6	; 0x06
    5552:	37 81       	ldd	r19, Z+7	; 0x07
    5554:	2f 5f       	subi	r18, 0xFF	; 255
    5556:	3f 4f       	sbci	r19, 0xFF	; 255
    5558:	37 83       	std	Z+7, r19	; 0x07
    555a:	26 83       	std	Z+6, r18	; 0x06
    555c:	14 c0       	rjmp	.+40     	; 0x5586 <fputc+0x6e>
    555e:	8b 01       	movw	r16, r22
    5560:	ec 01       	movw	r28, r24
    5562:	fb 01       	movw	r30, r22
    5564:	00 84       	ldd	r0, Z+8	; 0x08
    5566:	f1 85       	ldd	r31, Z+9	; 0x09
    5568:	e0 2d       	mov	r30, r0
    556a:	19 95       	eicall
    556c:	89 2b       	or	r24, r25
    556e:	e1 f6       	brne	.-72     	; 0x5528 <fputc+0x10>
    5570:	d8 01       	movw	r26, r16
    5572:	16 96       	adiw	r26, 0x06	; 6
    5574:	8d 91       	ld	r24, X+
    5576:	9c 91       	ld	r25, X
    5578:	17 97       	sbiw	r26, 0x07	; 7
    557a:	01 96       	adiw	r24, 0x01	; 1
    557c:	17 96       	adiw	r26, 0x07	; 7
    557e:	9c 93       	st	X, r25
    5580:	8e 93       	st	-X, r24
    5582:	16 97       	sbiw	r26, 0x06	; 6
    5584:	ce 01       	movw	r24, r28
    5586:	df 91       	pop	r29
    5588:	cf 91       	pop	r28
    558a:	1f 91       	pop	r17
    558c:	0f 91       	pop	r16
    558e:	08 95       	ret

00005590 <__ultoa_invert>:
    5590:	fa 01       	movw	r30, r20
    5592:	aa 27       	eor	r26, r26
    5594:	28 30       	cpi	r18, 0x08	; 8
    5596:	51 f1       	breq	.+84     	; 0x55ec <__ultoa_invert+0x5c>
    5598:	20 31       	cpi	r18, 0x10	; 16
    559a:	81 f1       	breq	.+96     	; 0x55fc <__ultoa_invert+0x6c>
    559c:	e8 94       	clt
    559e:	6f 93       	push	r22
    55a0:	6e 7f       	andi	r22, 0xFE	; 254
    55a2:	6e 5f       	subi	r22, 0xFE	; 254
    55a4:	7f 4f       	sbci	r23, 0xFF	; 255
    55a6:	8f 4f       	sbci	r24, 0xFF	; 255
    55a8:	9f 4f       	sbci	r25, 0xFF	; 255
    55aa:	af 4f       	sbci	r26, 0xFF	; 255
    55ac:	b1 e0       	ldi	r27, 0x01	; 1
    55ae:	3e d0       	rcall	.+124    	; 0x562c <__ultoa_invert+0x9c>
    55b0:	b4 e0       	ldi	r27, 0x04	; 4
    55b2:	3c d0       	rcall	.+120    	; 0x562c <__ultoa_invert+0x9c>
    55b4:	67 0f       	add	r22, r23
    55b6:	78 1f       	adc	r23, r24
    55b8:	89 1f       	adc	r24, r25
    55ba:	9a 1f       	adc	r25, r26
    55bc:	a1 1d       	adc	r26, r1
    55be:	68 0f       	add	r22, r24
    55c0:	79 1f       	adc	r23, r25
    55c2:	8a 1f       	adc	r24, r26
    55c4:	91 1d       	adc	r25, r1
    55c6:	a1 1d       	adc	r26, r1
    55c8:	6a 0f       	add	r22, r26
    55ca:	71 1d       	adc	r23, r1
    55cc:	81 1d       	adc	r24, r1
    55ce:	91 1d       	adc	r25, r1
    55d0:	a1 1d       	adc	r26, r1
    55d2:	20 d0       	rcall	.+64     	; 0x5614 <__ultoa_invert+0x84>
    55d4:	09 f4       	brne	.+2      	; 0x55d8 <__ultoa_invert+0x48>
    55d6:	68 94       	set
    55d8:	3f 91       	pop	r19
    55da:	2a e0       	ldi	r18, 0x0A	; 10
    55dc:	26 9f       	mul	r18, r22
    55de:	11 24       	eor	r1, r1
    55e0:	30 19       	sub	r19, r0
    55e2:	30 5d       	subi	r19, 0xD0	; 208
    55e4:	31 93       	st	Z+, r19
    55e6:	de f6       	brtc	.-74     	; 0x559e <__ultoa_invert+0xe>
    55e8:	cf 01       	movw	r24, r30
    55ea:	08 95       	ret
    55ec:	46 2f       	mov	r20, r22
    55ee:	47 70       	andi	r20, 0x07	; 7
    55f0:	40 5d       	subi	r20, 0xD0	; 208
    55f2:	41 93       	st	Z+, r20
    55f4:	b3 e0       	ldi	r27, 0x03	; 3
    55f6:	0f d0       	rcall	.+30     	; 0x5616 <__ultoa_invert+0x86>
    55f8:	c9 f7       	brne	.-14     	; 0x55ec <__ultoa_invert+0x5c>
    55fa:	f6 cf       	rjmp	.-20     	; 0x55e8 <__ultoa_invert+0x58>
    55fc:	46 2f       	mov	r20, r22
    55fe:	4f 70       	andi	r20, 0x0F	; 15
    5600:	40 5d       	subi	r20, 0xD0	; 208
    5602:	4a 33       	cpi	r20, 0x3A	; 58
    5604:	18 f0       	brcs	.+6      	; 0x560c <__ultoa_invert+0x7c>
    5606:	49 5d       	subi	r20, 0xD9	; 217
    5608:	31 fd       	sbrc	r19, 1
    560a:	40 52       	subi	r20, 0x20	; 32
    560c:	41 93       	st	Z+, r20
    560e:	02 d0       	rcall	.+4      	; 0x5614 <__ultoa_invert+0x84>
    5610:	a9 f7       	brne	.-22     	; 0x55fc <__ultoa_invert+0x6c>
    5612:	ea cf       	rjmp	.-44     	; 0x55e8 <__ultoa_invert+0x58>
    5614:	b4 e0       	ldi	r27, 0x04	; 4
    5616:	a6 95       	lsr	r26
    5618:	97 95       	ror	r25
    561a:	87 95       	ror	r24
    561c:	77 95       	ror	r23
    561e:	67 95       	ror	r22
    5620:	ba 95       	dec	r27
    5622:	c9 f7       	brne	.-14     	; 0x5616 <__ultoa_invert+0x86>
    5624:	00 97       	sbiw	r24, 0x00	; 0
    5626:	61 05       	cpc	r22, r1
    5628:	71 05       	cpc	r23, r1
    562a:	08 95       	ret
    562c:	9b 01       	movw	r18, r22
    562e:	ac 01       	movw	r20, r24
    5630:	0a 2e       	mov	r0, r26
    5632:	06 94       	lsr	r0
    5634:	57 95       	ror	r21
    5636:	47 95       	ror	r20
    5638:	37 95       	ror	r19
    563a:	27 95       	ror	r18
    563c:	ba 95       	dec	r27
    563e:	c9 f7       	brne	.-14     	; 0x5632 <__ultoa_invert+0xa2>
    5640:	62 0f       	add	r22, r18
    5642:	73 1f       	adc	r23, r19
    5644:	84 1f       	adc	r24, r20
    5646:	95 1f       	adc	r25, r21
    5648:	a0 1d       	adc	r26, r0
    564a:	08 95       	ret

0000564c <_exit>:
    564c:	f8 94       	cli

0000564e <__stop_program>:
    564e:	ff cf       	rjmp	.-2      	; 0x564e <__stop_program>
=======
000036f8 <hih8120_measure>:
    36f8:	80 91 46 12 	lds	r24, 0x1246	; 0x801246 <_hih8120Handler>
    36fc:	90 91 47 12 	lds	r25, 0x1247	; 0x801247 <_hih8120Handler+0x1>
    3700:	00 97       	sbiw	r24, 0x00	; 0
    3702:	39 f0       	breq	.+14     	; 0x3712 <hih8120_measure+0x1a>
    3704:	64 e0       	ldi	r22, 0x04	; 4
    3706:	0e 94 1f 27 	call	0x4e3e	; 0x4e3e <twiReceive>
    370a:	85 30       	cpi	r24, 0x05	; 5
    370c:	21 f0       	breq	.+8      	; 0x3716 <hih8120_measure+0x1e>
    370e:	83 e0       	ldi	r24, 0x03	; 3
    3710:	08 95       	ret
    3712:	82 e0       	ldi	r24, 0x02	; 2
    3714:	08 95       	ret
    3716:	80 e0       	ldi	r24, 0x00	; 0
    3718:	08 95       	ret

0000371a <hih8120_getHumidity>:
    371a:	60 91 09 02 	lds	r22, 0x0209	; 0x800209 <_hum>
    371e:	70 91 0a 02 	lds	r23, 0x020A	; 0x80020a <_hum+0x1>
    3722:	80 e0       	ldi	r24, 0x00	; 0
    3724:	90 e0       	ldi	r25, 0x00	; 0
    3726:	0e 94 fd 28 	call	0x51fa	; 0x51fa <__floatunsisf>
    372a:	20 e0       	ldi	r18, 0x00	; 0
    372c:	30 e0       	ldi	r19, 0x00	; 0
    372e:	48 ec       	ldi	r20, 0xC8	; 200
    3730:	52 e4       	ldi	r21, 0x42	; 66
    3732:	0e 94 62 29 	call	0x52c4	; 0x52c4 <__mulsf3>
    3736:	20 e0       	ldi	r18, 0x00	; 0
    3738:	38 ef       	ldi	r19, 0xF8	; 248
    373a:	4f e7       	ldi	r20, 0x7F	; 127
    373c:	56 e4       	ldi	r21, 0x46	; 70
    373e:	0c 94 92 28 	jmp	0x5124	; 0x5124 <__divsf3>
=======
000035f8 <takeMeasure>:
	
}


void takeMeasure(void *pvParameters)
{
    35f8:	cf 93       	push	r28
    35fa:	df 93       	push	r29
    35fc:	00 d0       	rcall	.+0      	; 0x35fe <takeMeasure+0x6>
    35fe:	1f 92       	push	r1
    3600:	cd b7       	in	r28, 0x3d	; 61
    3602:	de b7       	in	r29, 0x3e	; 62
	TickType_t xLastWakeTime;
	const TickType_t xFrequency = 24000/portTICK_PERIOD_MS; // 60 s

	// Initialize the xLastWakeTime variable with the current time.
	xLastWakeTime = xTaskGetTickCount();
    3604:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <xTaskGetTickCount>
    3608:	69 83       	std	Y+1, r22	; 0x01
    360a:	7a 83       	std	Y+2, r23	; 0x02
    360c:	8b 83       	std	Y+3, r24	; 0x03
    360e:	9c 83       	std	Y+4, r25	; 0x04
		
	for(;;)
	{
		xTaskDelayUntil( &xLastWakeTime, xFrequency );
    3610:	4c ed       	ldi	r20, 0xDC	; 220
    3612:	55 e0       	ldi	r21, 0x05	; 5
    3614:	60 e0       	ldi	r22, 0x00	; 0
    3616:	70 e0       	ldi	r23, 0x00	; 0
    3618:	ce 01       	movw	r24, r28
    361a:	01 96       	adiw	r24, 0x01	; 1
    361c:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <xTaskDelayUntil>
		tempHumMeasure();	
    3620:	7c dd       	rcall	.-1288   	; 0x311a <tempHumMeasure>
		co2Measure(); // Call CO2HandlerImpl to take measure
    3622:	08 dd       	rcall	.-1520   	; 0x3034 <co2Measure>
    3624:	f5 cf       	rjmp	.-22     	; 0x3610 <takeMeasure+0x18>

00003626 <enqueueMeasures>:
    3626:	cf 93       	push	r28
	}
}

void enqueueMeasures(void *pvParameters)
{
    3628:	df 93       	push	r29
    362a:	00 d0       	rcall	.+0      	; 0x362c <enqueueMeasures+0x6>
    362c:	1f 92       	push	r1
    362e:	cd b7       	in	r28, 0x3d	; 61
    3630:	de b7       	in	r29, 0x3e	; 62
	TickType_t xLastWakeTime;
	const TickType_t xFrequency = 240000/portTICK_PERIOD_MS; // 65 s

	// Initialise the xLastWakeTime variable with the current time.
	xLastWakeTime = xTaskGetTickCount();
    3632:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <xTaskGetTickCount>
    3636:	69 83       	std	Y+1, r22	; 0x01
    3638:	7a 83       	std	Y+2, r23	; 0x02
    363a:	8b 83       	std	Y+3, r24	; 0x03
    363c:	9c 83       	std	Y+4, r25	; 0x04
	
	
	for(;;)
	{
		xTaskDelayUntil( &xLastWakeTime, xFrequency );
    363e:	48 e9       	ldi	r20, 0x98	; 152
    3640:	5a e3       	ldi	r21, 0x3A	; 58
    3642:	60 e0       	ldi	r22, 0x00	; 0
    3644:	70 e0       	ldi	r23, 0x00	; 0
    3646:	ce 01       	movw	r24, r28
    3648:	01 96       	adiw	r24, 0x01	; 1
    364a:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <xTaskDelayUntil>
		enqueueSharedData(); // Call SharedDataQueueImpl to enqueue the measures
    364e:	0e 94 11 01 	call	0x222	; 0x222 <enqueueSharedData>
    3652:	f5 cf       	rjmp	.-22     	; 0x363e <enqueueMeasures+0x18>

00003654 <setupTasks>:
void takeMeasure( void *pvParameters );
void enqueueMeasures( void *pvParameters );


void setupTasks(void) // Can only setup 2 tasks, memory problems?
{
    3654:	ef 92       	push	r14
    3656:	ff 92       	push	r15
    3658:	0f 93       	push	r16
	
	xTaskCreate(
    365a:	e1 2c       	mov	r14, r1
    365c:	f1 2c       	mov	r15, r1
    365e:	00 e0       	ldi	r16, 0x00	; 0
    3660:	20 e0       	ldi	r18, 0x00	; 0
    3662:	30 e0       	ldi	r19, 0x00	; 0
    3664:	40 ec       	ldi	r20, 0xC0	; 192
    3666:	50 e0       	ldi	r21, 0x00	; 0
    3668:	61 ec       	ldi	r22, 0xC1	; 193
    366a:	74 e0       	ldi	r23, 0x04	; 4
    366c:	8c ef       	ldi	r24, 0xFC	; 252
    366e:	9a e1       	ldi	r25, 0x1A	; 26
    3670:	0e 94 6a 0c 	call	0x18d4	; 0x18d4 <xTaskCreate>
	,  configMINIMAL_STACK_SIZE  // This stack size can be checked & adjusted by reading the Stack Highwater
	,  NULL
	,  0 // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );

	xTaskCreate(
    3674:	20 e0       	ldi	r18, 0x00	; 0
    3676:	30 e0       	ldi	r19, 0x00	; 0
    3678:	40 ec       	ldi	r20, 0xC0	; 192
    367a:	50 e0       	ldi	r21, 0x00	; 0
    367c:	6d ec       	ldi	r22, 0xCD	; 205
    367e:	74 e0       	ldi	r23, 0x04	; 4
    3680:	83 e1       	ldi	r24, 0x13	; 19
    3682:	9b e1       	ldi	r25, 0x1B	; 27
    3684:	0e 94 6a 0c 	call	0x18d4	; 0x18d4 <xTaskCreate>
	,  configMINIMAL_STACK_SIZE  // This stack size can be checked & adjusted by reading the Stack Highwater
	,  NULL
	,  0  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );	
	
}
    3688:	0f 91       	pop	r16
    368a:	ff 90       	pop	r15
    368c:	ef 90       	pop	r14
    368e:	08 95       	ret

00003690 <startTasks>:
}


void startTasks()
{
	setupTasks();
    3690:	e1 df       	rcall	.-62     	; 0x3654 <setupTasks>
	
	printf("heapsize: %d \n", xPortGetFreeHeapSize());
    3692:	0e 94 da 02 	call	0x5b4	; 0x5b4 <xPortGetFreeHeapSize>
    3696:	9f 93       	push	r25
    3698:	8f 93       	push	r24
    369a:	8d ed       	ldi	r24, 0xDD	; 221
    369c:	94 e0       	ldi	r25, 0x04	; 4
    369e:	9f 93       	push	r25
    36a0:	8f 93       	push	r24
    36a2:	0e 94 aa 2c 	call	0x5954	; 0x5954 <printf>
	vTaskStartScheduler(); // Initialize and run the freeRTOS scheduler. Execution should never return from here.
    36a6:	0e 94 b6 0c 	call	0x196c	; 0x196c <vTaskStartScheduler>
}
    36aa:	0f 90       	pop	r0
    36ac:	0f 90       	pop	r0
    36ae:	0f 90       	pop	r0
    36b0:	0f 90       	pop	r0
    36b2:	08 95       	ret

000036b4 <initialiseSystem>:
void lora_handler_initialise(UBaseType_t lora_handler_task_priority);

/*-----------------------------------------------------------*/
void initialiseSystem()
{
printf("Program Started!!\n");
    36b4:	8c ee       	ldi	r24, 0xEC	; 236
    36b6:	94 e0       	ldi	r25, 0x04	; 4
    36b8:	0e 94 bd 2c 	call	0x597a	; 0x597a <puts>
	// Set output ports for leds used in the example
	DDRA |= _BV(DDA0) | _BV(DDA7);
    36bc:	81 b1       	in	r24, 0x01	; 1
    36be:	81 68       	ori	r24, 0x81	; 129
    36c0:	81 b9       	out	0x01, r24	; 1

	// Make it possible to use stdio on COM port 0 (USB) on Arduino board - Setting 57600,8,N,1
	stdio_initialise(ser_USART0);
    36c2:	80 e0       	ldi	r24, 0x00	; 0
    36c4:	90 e0       	ldi	r25, 0x00	; 0
    36c6:	0e 94 87 25 	call	0x4b0e	; 0x4b0e <stdio_initialise>
	
	// Initialize queues
	initializeCO2Queue();
    36ca:	aa dc       	rcall	.-1708   	; 0x3020 <initializeCO2Queue>
	initializeTempHumQueues();
    36cc:	db dc       	rcall	.-1610   	; 0x3084 <initializeTempHumQueues>
    36ce:	0e 94 08 01 	call	0x210	; 0x210 <initializeSharedDataQueue>
	initializeSharedDataQueue();

	// Initializing co2 sensor
	mh_z19_initialise(ser_USART3);
    36d2:	83 e0       	ldi	r24, 0x03	; 3
    36d4:	d7 d5       	rcall	.+2990   	; 0x4284 <mh_z19_initialise>
	hih8120_initialise();
    36d6:	a2 d0       	rcall	.+324    	; 0x381c <hih8120_initialise>
    36d8:	85 e0       	ldi	r24, 0x05	; 5



	// vvvvvvvvvvvvvvvvv BELOW IS LoRaWAN initialisation vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
	// Status Leds driver
	status_leds_initialise(5); // Priority 5 for internal task
    36da:	0e 94 8e 26 	call	0x4d1c	; 0x4d1c <status_leds_initialise>
    36de:	41 e0       	ldi	r20, 0x01	; 1
	// Initialise the LoRaWAN driver without down-link buffer
	downlinkMessageBufferHandle = xMessageBufferCreate(sizeof(lora_driver_payload_t));
    36e0:	60 e0       	ldi	r22, 0x00	; 0
    36e2:	70 e0       	ldi	r23, 0x00	; 0
    36e4:	86 e1       	ldi	r24, 0x16	; 22
    36e6:	90 e0       	ldi	r25, 0x00	; 0
    36e8:	0e 94 6e 08 	call	0x10dc	; 0x10dc <xStreamBufferGenericCreate>
    36ec:	90 93 f8 17 	sts	0x17F8, r25	; 0x8017f8 <downlinkMessageBufferHandle+0x1>
    36f0:	80 93 f7 17 	sts	0x17F7, r24	; 0x8017f7 <downlinkMessageBufferHandle>
	lora_driver_initialise(ser_USART1, downlinkMessageBufferHandle);
    36f4:	bc 01       	movw	r22, r24
    36f6:	81 e0       	ldi	r24, 0x01	; 1
    36f8:	1e d2       	rcall	.+1084   	; 0x3b36 <lora_driver_initialise>
	// Create LoRaWAN task and start it up with priority 3
	lora_handler_initialise(3);
    36fa:	83 e0       	ldi	r24, 0x03	; 3
    36fc:	5d cf       	rjmp	.-326    	; 0x35b8 <lora_handler_initialise>
    36fe:	08 95       	ret

00003700 <main>:
    3700:	d9 df       	rcall	.-78     	; 0x36b4 <initialiseSystem>

/*-----------------------------------------------------------*/
int main(void)
{
	initialiseSystem(); // Must be done as the very first thing!!
	printf("Program Started!!\n");
    3702:	8c ee       	ldi	r24, 0xEC	; 236
    3704:	94 e0       	ldi	r25, 0x04	; 4
    3706:	0e 94 bd 2c 	call	0x597a	; 0x597a <puts>
	startTasks();
    370a:	c2 df       	rcall	.-124    	; 0x3690 <startTasks>
    370c:	ff cf       	rjmp	.-2      	; 0x370c <main+0xc>

0000370e <__fixsfsi>:
    370e:	04 d0       	rcall	.+8      	; 0x3718 <__fixunssfsi>
    3710:	68 94       	set
    3712:	b1 11       	cpse	r27, r1
    3714:	50 c0       	rjmp	.+160    	; 0x37b6 <__fp_szero>
    3716:	08 95       	ret

00003718 <__fixunssfsi>:
    3718:	33 d0       	rcall	.+102    	; 0x3780 <__fp_splitA>
    371a:	88 f0       	brcs	.+34     	; 0x373e <__fixunssfsi+0x26>
    371c:	9f 57       	subi	r25, 0x7F	; 127
    371e:	90 f0       	brcs	.+36     	; 0x3744 <__fixunssfsi+0x2c>
    3720:	b9 2f       	mov	r27, r25
    3722:	99 27       	eor	r25, r25
    3724:	b7 51       	subi	r27, 0x17	; 23
    3726:	a0 f0       	brcs	.+40     	; 0x3750 <__fixunssfsi+0x38>
    3728:	d1 f0       	breq	.+52     	; 0x375e <__fixunssfsi+0x46>
    372a:	66 0f       	add	r22, r22
    372c:	77 1f       	adc	r23, r23
    372e:	88 1f       	adc	r24, r24
    3730:	99 1f       	adc	r25, r25
    3732:	1a f0       	brmi	.+6      	; 0x373a <__fixunssfsi+0x22>
    3734:	ba 95       	dec	r27
    3736:	c9 f7       	brne	.-14     	; 0x372a <__fixunssfsi+0x12>
    3738:	12 c0       	rjmp	.+36     	; 0x375e <__fixunssfsi+0x46>
    373a:	b1 30       	cpi	r27, 0x01	; 1
    373c:	81 f0       	breq	.+32     	; 0x375e <__fixunssfsi+0x46>
    373e:	3a d0       	rcall	.+116    	; 0x37b4 <__fp_zero>
    3740:	b1 e0       	ldi	r27, 0x01	; 1
>>>>>>> 1413a59f4c1676bf811b30fc6b6b1aaefe980264
    3742:	08 95       	ret
    3744:	37 c0       	rjmp	.+110    	; 0x37b4 <__fp_zero>
    3746:	67 2f       	mov	r22, r23
    3748:	78 2f       	mov	r23, r24
    374a:	88 27       	eor	r24, r24
    374c:	b8 5f       	subi	r27, 0xF8	; 248
    374e:	39 f0       	breq	.+14     	; 0x375e <__fixunssfsi+0x46>
    3750:	b9 3f       	cpi	r27, 0xF9	; 249
    3752:	cc f3       	brlt	.-14     	; 0x3746 <__fixunssfsi+0x2e>
    3754:	86 95       	lsr	r24
    3756:	77 95       	ror	r23
    3758:	67 95       	ror	r22
    375a:	b3 95       	inc	r27
    375c:	d9 f7       	brne	.-10     	; 0x3754 <__fixunssfsi+0x3c>
    375e:	3e f4       	brtc	.+14     	; 0x376e <__fixunssfsi+0x56>
    3760:	90 95       	com	r25
    3762:	80 95       	com	r24
    3764:	70 95       	com	r23
    3766:	61 95       	neg	r22
    3768:	7f 4f       	sbci	r23, 0xFF	; 255
    376a:	8f 4f       	sbci	r24, 0xFF	; 255
    376c:	9f 4f       	sbci	r25, 0xFF	; 255
    376e:	08 95       	ret

00003770 <__fp_split3>:
    3770:	57 fd       	sbrc	r21, 7
    3772:	90 58       	subi	r25, 0x80	; 128
    3774:	44 0f       	add	r20, r20
    3776:	55 1f       	adc	r21, r21
    3778:	59 f0       	breq	.+22     	; 0x3790 <__fp_splitA+0x10>
    377a:	5f 3f       	cpi	r21, 0xFF	; 255
    377c:	71 f0       	breq	.+28     	; 0x379a <__fp_splitA+0x1a>
    377e:	47 95       	ror	r20

00003780 <__fp_splitA>:
    3780:	88 0f       	add	r24, r24
    3782:	97 fb       	bst	r25, 7
    3784:	99 1f       	adc	r25, r25
    3786:	61 f0       	breq	.+24     	; 0x37a0 <__fp_splitA+0x20>
    3788:	9f 3f       	cpi	r25, 0xFF	; 255
    378a:	79 f0       	breq	.+30     	; 0x37aa <__fp_splitA+0x2a>
    378c:	87 95       	ror	r24
    378e:	08 95       	ret
    3790:	12 16       	cp	r1, r18
    3792:	13 06       	cpc	r1, r19
    3794:	14 06       	cpc	r1, r20
    3796:	55 1f       	adc	r21, r21
    3798:	f2 cf       	rjmp	.-28     	; 0x377e <__fp_split3+0xe>
    379a:	46 95       	lsr	r20
    379c:	f1 df       	rcall	.-30     	; 0x3780 <__fp_splitA>
    379e:	08 c0       	rjmp	.+16     	; 0x37b0 <__fp_splitA+0x30>
    37a0:	16 16       	cp	r1, r22
    37a2:	17 06       	cpc	r1, r23
    37a4:	18 06       	cpc	r1, r24
    37a6:	99 1f       	adc	r25, r25
    37a8:	f1 cf       	rjmp	.-30     	; 0x378c <__fp_splitA+0xc>
    37aa:	86 95       	lsr	r24
    37ac:	71 05       	cpc	r23, r1
    37ae:	61 05       	cpc	r22, r1
    37b0:	08 94       	sec
    37b2:	08 95       	ret

000037b4 <__fp_zero>:
    37b4:	e8 94       	clt

000037b6 <__fp_szero>:
    37b6:	bb 27       	eor	r27, r27
    37b8:	66 27       	eor	r22, r22
    37ba:	77 27       	eor	r23, r23
    37bc:	cb 01       	movw	r24, r22
    37be:	97 f9       	bld	r25, 7
    37c0:	08 95       	ret

000037c2 <_hihTwiCallback>:
    37c2:	65 30       	cpi	r22, 0x05	; 5
    37c4:	f1 f4       	brne	.+60     	; 0x3802 <_hihTwiCallback+0x40>
    37c6:	fa 01       	movw	r30, r20
    37c8:	80 81       	ld	r24, Z
    37ca:	8f 73       	andi	r24, 0x3F	; 63
    37cc:	90 e0       	ldi	r25, 0x00	; 0
    37ce:	98 2f       	mov	r25, r24
    37d0:	88 27       	eor	r24, r24
    37d2:	21 81       	ldd	r18, Z+1	; 0x01
    37d4:	82 2b       	or	r24, r18
    37d6:	90 93 0a 02 	sts	0x020A, r25	; 0x80020a <_hum+0x1>
    37da:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <_hum>
    37de:	82 81       	ldd	r24, Z+2	; 0x02
    37e0:	f0 e4       	ldi	r31, 0x40	; 64
    37e2:	8f 9f       	mul	r24, r31
    37e4:	c0 01       	movw	r24, r0
    37e6:	11 24       	eor	r1, r1
    37e8:	fa 01       	movw	r30, r20
    37ea:	23 81       	ldd	r18, Z+3	; 0x03
    37ec:	26 95       	lsr	r18
    37ee:	26 95       	lsr	r18
    37f0:	82 2b       	or	r24, r18
    37f2:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <_temp+0x1>
    37f6:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_temp>
    37fa:	81 e0       	ldi	r24, 0x01	; 1
    37fc:	80 93 87 16 	sts	0x1687, r24	; 0x801687 <_measuringIsReady>
    3800:	08 95       	ret
    3802:	64 30       	cpi	r22, 0x04	; 4
    3804:	51 f0       	breq	.+20     	; 0x381a <_hihTwiCallback+0x58>
    3806:	80 e0       	ldi	r24, 0x00	; 0
    3808:	90 e4       	ldi	r25, 0x40	; 64
    380a:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <_temp+0x1>
    380e:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_temp>
    3812:	90 93 0a 02 	sts	0x020A, r25	; 0x80020a <_hum+0x1>
    3816:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <_hum>
    381a:	08 95       	ret

0000381c <hih8120_initialise>:
    381c:	0f 93       	push	r16
    381e:	1f 93       	push	r17
    3820:	01 ee       	ldi	r16, 0xE1	; 225
    3822:	1b e1       	ldi	r17, 0x1B	; 27
    3824:	20 e0       	ldi	r18, 0x00	; 0
    3826:	34 e2       	ldi	r19, 0x24	; 36
    3828:	44 ef       	ldi	r20, 0xF4	; 244
    382a:	50 e0       	ldi	r21, 0x00	; 0
    382c:	60 e0       	ldi	r22, 0x00	; 0
    382e:	87 e2       	ldi	r24, 0x27	; 39
    3830:	0e 94 75 27 	call	0x4eea	; 0x4eea <twiCreate>
    3834:	90 93 89 16 	sts	0x1689, r25	; 0x801689 <_hih8120Handler+0x1>
    3838:	80 93 88 16 	sts	0x1688, r24	; 0x801688 <_hih8120Handler>
    383c:	21 e0       	ldi	r18, 0x01	; 1
    383e:	89 2b       	or	r24, r25
    3840:	09 f0       	breq	.+2      	; 0x3844 <hih8120_initialise+0x28>
    3842:	20 e0       	ldi	r18, 0x00	; 0
    3844:	82 2f       	mov	r24, r18
    3846:	1f 91       	pop	r17
    3848:	0f 91       	pop	r16
    384a:	08 95       	ret

0000384c <hih8120_wakeup>:
    384c:	80 91 88 16 	lds	r24, 0x1688	; 0x801688 <_hih8120Handler>
    3850:	90 91 89 16 	lds	r25, 0x1689	; 0x801689 <_hih8120Handler+0x1>
    3854:	00 97       	sbiw	r24, 0x00	; 0
    3856:	59 f0       	breq	.+22     	; 0x386e <hih8120_wakeup+0x22>
    3858:	40 e0       	ldi	r20, 0x00	; 0
    385a:	60 e0       	ldi	r22, 0x00	; 0
    385c:	70 e0       	ldi	r23, 0x00	; 0
    385e:	0e 94 c6 27 	call	0x4f8c	; 0x4f8c <twiTransmit>
    3862:	84 30       	cpi	r24, 0x04	; 4
    3864:	31 f4       	brne	.+12     	; 0x3872 <hih8120_wakeup+0x26>
    3866:	10 92 87 16 	sts	0x1687, r1	; 0x801687 <_measuringIsReady>
    386a:	80 e0       	ldi	r24, 0x00	; 0
    386c:	08 95       	ret
    386e:	82 e0       	ldi	r24, 0x02	; 2
    3870:	08 95       	ret
    3872:	83 e0       	ldi	r24, 0x03	; 3
    3874:	08 95       	ret

00003876 <hih8120_measure>:
    3876:	80 91 88 16 	lds	r24, 0x1688	; 0x801688 <_hih8120Handler>
    387a:	90 91 89 16 	lds	r25, 0x1689	; 0x801689 <_hih8120Handler+0x1>
    387e:	00 97       	sbiw	r24, 0x00	; 0
    3880:	39 f0       	breq	.+14     	; 0x3890 <hih8120_measure+0x1a>
    3882:	64 e0       	ldi	r22, 0x04	; 4
    3884:	0e 94 12 28 	call	0x5024	; 0x5024 <twiReceive>
    3888:	85 30       	cpi	r24, 0x05	; 5
    388a:	21 f0       	breq	.+8      	; 0x3894 <hih8120_measure+0x1e>
    388c:	83 e0       	ldi	r24, 0x03	; 3
    388e:	08 95       	ret
    3890:	82 e0       	ldi	r24, 0x02	; 2
    3892:	08 95       	ret
    3894:	80 e0       	ldi	r24, 0x00	; 0
    3896:	08 95       	ret

00003898 <hih8120_getHumidity>:
    3898:	60 91 09 02 	lds	r22, 0x0209	; 0x800209 <_hum>
    389c:	70 91 0a 02 	lds	r23, 0x020A	; 0x80020a <_hum+0x1>
    38a0:	80 e0       	ldi	r24, 0x00	; 0
    38a2:	90 e0       	ldi	r25, 0x00	; 0
    38a4:	0e 94 f0 29 	call	0x53e0	; 0x53e0 <__floatunsisf>
    38a8:	20 e0       	ldi	r18, 0x00	; 0
    38aa:	30 e0       	ldi	r19, 0x00	; 0
    38ac:	48 ec       	ldi	r20, 0xC8	; 200
    38ae:	52 e4       	ldi	r21, 0x42	; 66
    38b0:	0e 94 55 2a 	call	0x54aa	; 0x54aa <__mulsf3>
    38b4:	20 e0       	ldi	r18, 0x00	; 0
    38b6:	38 ef       	ldi	r19, 0xF8	; 248
    38b8:	4f e7       	ldi	r20, 0x7F	; 127
    38ba:	56 e4       	ldi	r21, 0x46	; 70
    38bc:	0c 94 85 29 	jmp	0x530a	; 0x530a <__divsf3>
    38c0:	08 95       	ret

000038c2 <hih8120_getTemperature>:
    38c2:	60 91 07 02 	lds	r22, 0x0207	; 0x800207 <_temp>
    38c6:	70 91 08 02 	lds	r23, 0x0208	; 0x800208 <_temp+0x1>
    38ca:	80 e0       	ldi	r24, 0x00	; 0
    38cc:	90 e0       	ldi	r25, 0x00	; 0
    38ce:	0e 94 f0 29 	call	0x53e0	; 0x53e0 <__floatunsisf>
    38d2:	20 e0       	ldi	r18, 0x00	; 0
    38d4:	30 e0       	ldi	r19, 0x00	; 0
    38d6:	45 e2       	ldi	r20, 0x25	; 37
    38d8:	53 e4       	ldi	r21, 0x43	; 67
    38da:	0e 94 55 2a 	call	0x54aa	; 0x54aa <__mulsf3>
    38de:	20 e0       	ldi	r18, 0x00	; 0
    38e0:	38 ef       	ldi	r19, 0xF8	; 248
    38e2:	4f e7       	ldi	r20, 0x7F	; 127
    38e4:	56 e4       	ldi	r21, 0x46	; 70
    38e6:	0e 94 85 29 	call	0x530a	; 0x530a <__divsf3>
    38ea:	20 e0       	ldi	r18, 0x00	; 0
    38ec:	30 e0       	ldi	r19, 0x00	; 0
    38ee:	40 e2       	ldi	r20, 0x20	; 32
    38f0:	52 e4       	ldi	r21, 0x42	; 66
    38f2:	0c 94 1e 29 	jmp	0x523c	; 0x523c <__subsf3>
    38f6:	08 95       	ret

000038f8 <_serialCallBack>:
    38f8:	0f 93       	push	r16
    38fa:	1f 93       	push	r17
    38fc:	cf 93       	push	r28
    38fe:	df 93       	push	r29
    3900:	1f 92       	push	r1
    3902:	1f 92       	push	r1
    3904:	cd b7       	in	r28, 0x3d	; 61
    3906:	de b7       	in	r29, 0x3e	; 62
    3908:	8c 01       	movw	r16, r24
    390a:	19 82       	std	Y+1, r1	; 0x01
    390c:	2d c0       	rjmp	.+90     	; 0x3968 <_serialCallBack+0x70>
    390e:	e0 91 ee 16 	lds	r30, 0x16EE	; 0x8016ee <rec_buf_inp.2878>
    3912:	ec 32       	cpi	r30, 0x2C	; 44
    3914:	50 f4       	brcc	.+20     	; 0x392a <_serialCallBack+0x32>
    3916:	81 e0       	ldi	r24, 0x01	; 1
    3918:	8e 0f       	add	r24, r30
    391a:	80 93 ee 16 	sts	0x16EE, r24	; 0x8016ee <rec_buf_inp.2878>
    391e:	f0 e0       	ldi	r31, 0x00	; 0
    3920:	e0 5e       	subi	r30, 0xE0	; 224
    3922:	f8 4e       	sbci	r31, 0xE8	; 232
    3924:	8a 81       	ldd	r24, Y+2	; 0x02
    3926:	80 83       	st	Z, r24
    3928:	02 c0       	rjmp	.+4      	; 0x392e <_serialCallBack+0x36>
    392a:	10 92 ee 16 	sts	0x16EE, r1	; 0x8016ee <rec_buf_inp.2878>
    392e:	8a 81       	ldd	r24, Y+2	; 0x02
    3930:	8a 30       	cpi	r24, 0x0A	; 10
    3932:	d1 f4       	brne	.+52     	; 0x3968 <_serialCallBack+0x70>
    3934:	40 91 ee 16 	lds	r20, 0x16EE	; 0x8016ee <rec_buf_inp.2878>
    3938:	50 e0       	ldi	r21, 0x00	; 0
    393a:	fa 01       	movw	r30, r20
    393c:	e2 5e       	subi	r30, 0xE2	; 226
    393e:	f8 4e       	sbci	r31, 0xE8	; 232
    3940:	10 82       	st	Z, r1
    3942:	41 50       	subi	r20, 0x01	; 1
    3944:	51 09       	sbc	r21, r1
    3946:	9e 01       	movw	r18, r28
    3948:	2f 5f       	subi	r18, 0xFF	; 255
    394a:	3f 4f       	sbci	r19, 0xFF	; 255
    394c:	60 e2       	ldi	r22, 0x20	; 32
    394e:	77 e1       	ldi	r23, 0x17	; 23
    3950:	80 91 f1 16 	lds	r24, 0x16F1	; 0x8016f1 <_serialReplyBufferHandle>
    3954:	90 91 f2 16 	lds	r25, 0x16F2	; 0x8016f2 <_serialReplyBufferHandle+0x1>
    3958:	0e 94 93 09 	call	0x1326	; 0x1326 <xStreamBufferSendFromISR>
    395c:	89 81       	ldd	r24, Y+1	; 0x01
    395e:	81 11       	cpse	r24, r1
    3960:	0e 94 ad 03 	call	0x75a	; 0x75a <vPortYield>
    3964:	10 92 ee 16 	sts	0x16EE, r1	; 0x8016ee <rec_buf_inp.2878>
    3968:	be 01       	movw	r22, r28
    396a:	6e 5f       	subi	r22, 0xFE	; 254
    396c:	7f 4f       	sbci	r23, 0xFF	; 255
    396e:	c8 01       	movw	r24, r16
    3970:	38 d6       	rcall	.+3184   	; 0x45e2 <serial_getByte>
    3972:	88 23       	and	r24, r24
    3974:	61 f2       	breq	.-104    	; 0x390e <_serialCallBack+0x16>
    3976:	0f 90       	pop	r0
    3978:	0f 90       	pop	r0
    397a:	df 91       	pop	r29
    397c:	cf 91       	pop	r28
    397e:	1f 91       	pop	r17
    3980:	0f 91       	pop	r16
    3982:	08 95       	ret

00003984 <_uploadMessage>:
    3984:	0f 93       	push	r16
    3986:	1f 93       	push	r17
    3988:	cf 93       	push	r28
    398a:	df 93       	push	r29
    398c:	8c 01       	movw	r16, r24
    398e:	eb 01       	movw	r28, r22
    3990:	80 91 f1 16 	lds	r24, 0x16F1	; 0x8016f1 <_serialReplyBufferHandle>
    3994:	90 91 f2 16 	lds	r25, 0x16F2	; 0x8016f2 <_serialReplyBufferHandle+0x1>
    3998:	0e 94 a0 08 	call	0x1140	; 0x1140 <xStreamBufferReset>
    399c:	b8 01       	movw	r22, r16
    399e:	8a e8       	ldi	r24, 0x8A	; 138
    39a0:	96 e1       	ldi	r25, 0x16	; 22
    39a2:	0e 94 8b 2c 	call	0x5916	; 0x5916 <strcpy>
    39a6:	20 97       	sbiw	r28, 0x00	; 0
    39a8:	79 f0       	breq	.+30     	; 0x39c8 <_uploadMessage+0x44>
    39aa:	ea e8       	ldi	r30, 0x8A	; 138
    39ac:	f6 e1       	ldi	r31, 0x16	; 22
    39ae:	01 90       	ld	r0, Z+
    39b0:	00 20       	and	r0, r0
    39b2:	e9 f7       	brne	.-6      	; 0x39ae <_uploadMessage+0x2a>
    39b4:	31 97       	sbiw	r30, 0x01	; 1
    39b6:	80 e2       	ldi	r24, 0x20	; 32
    39b8:	90 e0       	ldi	r25, 0x00	; 0
    39ba:	91 83       	std	Z+1, r25	; 0x01
    39bc:	80 83       	st	Z, r24
    39be:	be 01       	movw	r22, r28
    39c0:	8a e8       	ldi	r24, 0x8A	; 138
    39c2:	96 e1       	ldi	r25, 0x16	; 22
    39c4:	0e 94 80 2c 	call	0x5900	; 0x5900 <strcat>
    39c8:	ea e8       	ldi	r30, 0x8A	; 138
    39ca:	f6 e1       	ldi	r31, 0x16	; 22
    39cc:	df 01       	movw	r26, r30
    39ce:	0d 90       	ld	r0, X+
    39d0:	00 20       	and	r0, r0
    39d2:	e9 f7       	brne	.-6      	; 0x39ce <_uploadMessage+0x4a>
    39d4:	11 97       	sbiw	r26, 0x01	; 1
    39d6:	8d e0       	ldi	r24, 0x0D	; 13
    39d8:	9a e0       	ldi	r25, 0x0A	; 10
    39da:	11 96       	adiw	r26, 0x01	; 1
    39dc:	9c 93       	st	X, r25
    39de:	8e 93       	st	-X, r24
    39e0:	12 96       	adiw	r26, 0x02	; 2
    39e2:	1c 92       	st	X, r1
    39e4:	01 90       	ld	r0, Z+
    39e6:	00 20       	and	r0, r0
    39e8:	e9 f7       	brne	.-6      	; 0x39e4 <_uploadMessage+0x60>
    39ea:	31 97       	sbiw	r30, 0x01	; 1
    39ec:	ea 58       	subi	r30, 0x8A	; 138
    39ee:	f6 41       	sbci	r31, 0x16	; 22
    39f0:	ae 2f       	mov	r26, r30
    39f2:	8a e8       	ldi	r24, 0x8A	; 138
    39f4:	96 e1       	ldi	r25, 0x16	; 22
    39f6:	ac 01       	movw	r20, r24
    39f8:	6a 2f       	mov	r22, r26
    39fa:	80 91 f3 16 	lds	r24, 0x16F3	; 0x8016f3 <_rn2483_serial>
    39fe:	90 91 f4 16 	lds	r25, 0x16F4	; 0x8016f4 <_rn2483_serial+0x1>
    3a02:	9a d5       	rcall	.+2868   	; 0x4538 <serial_sendBytes>
    3a04:	81 11       	cpse	r24, r1
    3a06:	11 c0       	rjmp	.+34     	; 0x3a2a <_uploadMessage+0xa6>
    3a08:	08 e2       	ldi	r16, 0x28	; 40
    3a0a:	15 e0       	ldi	r17, 0x05	; 5
    3a0c:	20 e0       	ldi	r18, 0x00	; 0
    3a0e:	30 e0       	ldi	r19, 0x00	; 0
    3a10:	4d e2       	ldi	r20, 0x2D	; 45
    3a12:	50 e0       	ldi	r21, 0x00	; 0
    3a14:	6a e7       	ldi	r22, 0x7A	; 122
    3a16:	77 e1       	ldi	r23, 0x17	; 23
    3a18:	80 91 f1 16 	lds	r24, 0x16F1	; 0x8016f1 <_serialReplyBufferHandle>
    3a1c:	90 91 f2 16 	lds	r25, 0x16F2	; 0x8016f2 <_serialReplyBufferHandle+0x1>
    3a20:	0e 94 d7 09 	call	0x13ae	; 0x13ae <xStreamBufferReceive>
    3a24:	8a e7       	ldi	r24, 0x7A	; 122
    3a26:	97 e1       	ldi	r25, 0x17	; 23
    3a28:	02 c0       	rjmp	.+4      	; 0x3a2e <_uploadMessage+0xaa>
    3a2a:	80 e0       	ldi	r24, 0x00	; 0
    3a2c:	90 e0       	ldi	r25, 0x00	; 0
    3a2e:	df 91       	pop	r29
    3a30:	cf 91       	pop	r28
    3a32:	1f 91       	pop	r17
    3a34:	0f 91       	pop	r16
    3a36:	08 95       	ret

00003a38 <_reply2ReturnCode>:
    3a38:	2f 92       	push	r2
    3a3a:	3f 92       	push	r3
    3a3c:	4f 92       	push	r4
    3a3e:	5f 92       	push	r5
    3a40:	6f 92       	push	r6
    3a42:	7f 92       	push	r7
    3a44:	8f 92       	push	r8
    3a46:	9f 92       	push	r9
    3a48:	af 92       	push	r10
    3a4a:	bf 92       	push	r11
    3a4c:	cf 92       	push	r12
    3a4e:	df 92       	push	r13
    3a50:	ef 92       	push	r14
    3a52:	ff 92       	push	r15
    3a54:	0f 93       	push	r16
    3a56:	1f 93       	push	r17
    3a58:	cf 93       	push	r28
    3a5a:	df 93       	push	r29
    3a5c:	5c 01       	movw	r10, r24
    3a5e:	fc 01       	movw	r30, r24
    3a60:	01 90       	ld	r0, Z+
    3a62:	00 20       	and	r0, r0
    3a64:	e9 f7       	brne	.-6      	; 0x3a60 <_reply2ReturnCode+0x28>
    3a66:	31 97       	sbiw	r30, 0x01	; 1
    3a68:	6f 01       	movw	r12, r30
    3a6a:	c8 1a       	sub	r12, r24
    3a6c:	d9 0a       	sbc	r13, r25
    3a6e:	5c 2c       	mov	r5, r12
    3a70:	0f 2e       	mov	r0, r31
    3a72:	f7 e9       	ldi	r31, 0x97	; 151
    3a74:	8f 2e       	mov	r8, r31
    3a76:	f7 e0       	ldi	r31, 0x07	; 7
    3a78:	9f 2e       	mov	r9, r31
    3a7a:	f0 2d       	mov	r31, r0
    3a7c:	e1 2c       	mov	r14, r1
    3a7e:	f1 2c       	mov	r15, r1
    3a80:	4c 2c       	mov	r4, r12
    3a82:	37 01       	movw	r6, r14
    3a84:	f4 01       	movw	r30, r8
    3a86:	01 81       	ldd	r16, Z+1	; 0x01
    3a88:	12 81       	ldd	r17, Z+2	; 0x02
    3a8a:	e8 01       	movw	r28, r16
    3a8c:	09 90       	ld	r0, Y+
    3a8e:	00 20       	and	r0, r0
    3a90:	e9 f7       	brne	.-6      	; 0x3a8c <_reply2ReturnCode+0x54>
    3a92:	21 97       	sbiw	r28, 0x01	; 1
    3a94:	c0 1b       	sub	r28, r16
    3a96:	d1 0b       	sbc	r29, r17
    3a98:	3c 2e       	mov	r3, r28
    3a9a:	f9 e0       	ldi	r31, 0x09	; 9
    3a9c:	cf 16       	cp	r12, r31
    3a9e:	d1 04       	cpc	r13, r1
    3aa0:	58 f0       	brcs	.+22     	; 0x3ab8 <_reply2ReturnCode+0x80>
    3aa2:	f4 01       	movw	r30, r8
    3aa4:	20 80       	ld	r2, Z
    3aa6:	fe e0       	ldi	r31, 0x0E	; 14
    3aa8:	2f 12       	cpse	r2, r31
    3aaa:	06 c0       	rjmp	.+12     	; 0x3ab8 <_reply2ReturnCode+0x80>
    3aac:	b8 01       	movw	r22, r16
    3aae:	c5 01       	movw	r24, r10
    3ab0:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <strcasestr>
    3ab4:	89 2b       	or	r24, r25
    3ab6:	09 f5       	brne	.+66     	; 0x3afa <_reply2ReturnCode+0xc2>
    3ab8:	44 2d       	mov	r20, r4
    3aba:	35 14       	cp	r3, r5
    3abc:	08 f4       	brcc	.+2      	; 0x3ac0 <_reply2ReturnCode+0x88>
    3abe:	4c 2f       	mov	r20, r28
    3ac0:	50 e0       	ldi	r21, 0x00	; 0
    3ac2:	b8 01       	movw	r22, r16
    3ac4:	c5 01       	movw	r24, r10
    3ac6:	0e 94 92 2c 	call	0x5924	; 0x5924 <strncasecmp>
    3aca:	89 2b       	or	r24, r25
    3acc:	49 f4       	brne	.+18     	; 0x3ae0 <_reply2ReturnCode+0xa8>
    3ace:	f3 01       	movw	r30, r6
    3ad0:	ee 0f       	add	r30, r30
    3ad2:	ff 1f       	adc	r31, r31
    3ad4:	e6 0d       	add	r30, r6
    3ad6:	f7 1d       	adc	r31, r7
    3ad8:	e9 56       	subi	r30, 0x69	; 105
    3ada:	f8 4f       	sbci	r31, 0xF8	; 248
    3adc:	20 80       	ld	r2, Z
    3ade:	0d c0       	rjmp	.+26     	; 0x3afa <_reply2ReturnCode+0xc2>
    3ae0:	8f ef       	ldi	r24, 0xFF	; 255
    3ae2:	e8 1a       	sub	r14, r24
    3ae4:	f8 0a       	sbc	r15, r24
    3ae6:	e3 e0       	ldi	r30, 0x03	; 3
    3ae8:	8e 0e       	add	r8, r30
    3aea:	91 1c       	adc	r9, r1
    3aec:	f1 e1       	ldi	r31, 0x11	; 17
    3aee:	ef 16       	cp	r14, r31
    3af0:	f1 04       	cpc	r15, r1
    3af2:	39 f6       	brne	.-114    	; 0x3a82 <_reply2ReturnCode+0x4a>
    3af4:	68 94       	set
    3af6:	22 24       	eor	r2, r2
    3af8:	24 f8       	bld	r2, 4
    3afa:	82 2d       	mov	r24, r2
    3afc:	df 91       	pop	r29
    3afe:	cf 91       	pop	r28
    3b00:	1f 91       	pop	r17
    3b02:	0f 91       	pop	r16
    3b04:	ff 90       	pop	r15
    3b06:	ef 90       	pop	r14
    3b08:	df 90       	pop	r13
    3b0a:	cf 90       	pop	r12
    3b0c:	bf 90       	pop	r11
    3b0e:	af 90       	pop	r10
    3b10:	9f 90       	pop	r9
    3b12:	8f 90       	pop	r8
    3b14:	7f 90       	pop	r7
    3b16:	6f 90       	pop	r6
    3b18:	5f 90       	pop	r5
    3b1a:	4f 90       	pop	r4
    3b1c:	3f 90       	pop	r3
    3b1e:	2f 90       	pop	r2
    3b20:	08 95       	ret

00003b22 <_uploadMessageRc>:
    3b22:	30 df       	rcall	.-416    	; 0x3984 <_uploadMessage>
    3b24:	89 cf       	rjmp	.-238    	; 0x3a38 <_reply2ReturnCode>
    3b26:	08 95       	ret

00003b28 <lora_driver_flushBuffers>:
    3b28:	80 91 f1 16 	lds	r24, 0x16F1	; 0x8016f1 <_serialReplyBufferHandle>
    3b2c:	90 91 f2 16 	lds	r25, 0x16F2	; 0x8016f2 <_serialReplyBufferHandle+0x1>
    3b30:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <xStreamBufferReset>
    3b34:	08 95       	ret

00003b36 <lora_driver_initialise>:
    3b36:	8f 92       	push	r8
    3b38:	9f 92       	push	r9
    3b3a:	af 92       	push	r10
    3b3c:	cf 92       	push	r12
    3b3e:	ef 92       	push	r14
    3b40:	0f 93       	push	r16
    3b42:	1f 93       	push	r17
    3b44:	cf 93       	push	r28
    3b46:	c8 2f       	mov	r28, r24
    3b48:	8b 01       	movw	r16, r22
    3b4a:	41 e0       	ldi	r20, 0x01	; 1
    3b4c:	60 e0       	ldi	r22, 0x00	; 0
    3b4e:	70 e0       	ldi	r23, 0x00	; 0
    3b50:	88 ec       	ldi	r24, 0xC8	; 200
    3b52:	90 e0       	ldi	r25, 0x00	; 0
    3b54:	0e 94 6e 08 	call	0x10dc	; 0x10dc <xStreamBufferGenericCreate>
    3b58:	90 93 f2 16 	sts	0x16F2, r25	; 0x8016f2 <_serialReplyBufferHandle+0x1>
    3b5c:	80 93 f1 16 	sts	0x16F1, r24	; 0x8016f1 <_serialReplyBufferHandle>
    3b60:	10 93 f0 16 	sts	0x16F0, r17	; 0x8016f0 <_downlinkMessageBuffer+0x1>
    3b64:	00 93 ef 16 	sts	0x16EF, r16	; 0x8016ef <_downlinkMessageBuffer>
    3b68:	0f 2e       	mov	r0, r31
    3b6a:	fc e7       	ldi	r31, 0x7C	; 124
    3b6c:	8f 2e       	mov	r8, r31
    3b6e:	fc e1       	ldi	r31, 0x1C	; 28
    3b70:	9f 2e       	mov	r9, r31
    3b72:	f0 2d       	mov	r31, r0
    3b74:	68 94       	set
    3b76:	aa 24       	eor	r10, r10
    3b78:	a6 f8       	bld	r10, 6
    3b7a:	68 94       	set
    3b7c:	cc 24       	eor	r12, r12
    3b7e:	c6 f8       	bld	r12, 6
    3b80:	e1 2c       	mov	r14, r1
    3b82:	00 e0       	ldi	r16, 0x00	; 0
    3b84:	23 e0       	ldi	r18, 0x03	; 3
    3b86:	40 e0       	ldi	r20, 0x00	; 0
    3b88:	51 ee       	ldi	r21, 0xE1	; 225
    3b8a:	60 e0       	ldi	r22, 0x00	; 0
    3b8c:	70 e0       	ldi	r23, 0x00	; 0
    3b8e:	8c 2f       	mov	r24, r28
    3b90:	06 d4       	rcall	.+2060   	; 0x439e <serial_create>
    3b92:	90 93 f4 16 	sts	0x16F4, r25	; 0x8016f4 <_rn2483_serial+0x1>
    3b96:	80 93 f3 16 	sts	0x16F3, r24	; 0x8016f3 <_rn2483_serial>
    3b9a:	e7 e0       	ldi	r30, 0x07	; 7
    3b9c:	f1 e0       	ldi	r31, 0x01	; 1
    3b9e:	80 81       	ld	r24, Z
    3ba0:	80 61       	ori	r24, 0x10	; 16
    3ba2:	80 83       	st	Z, r24
    3ba4:	cf 91       	pop	r28
    3ba6:	1f 91       	pop	r17
    3ba8:	0f 91       	pop	r16
    3baa:	ef 90       	pop	r14
    3bac:	cf 90       	pop	r12
    3bae:	af 90       	pop	r10
    3bb0:	9f 90       	pop	r9
    3bb2:	8f 90       	pop	r8
    3bb4:	08 95       	ret

00003bb6 <lora_driver_resetRn2483>:
    3bb6:	88 23       	and	r24, r24
    3bb8:	31 f0       	breq	.+12     	; 0x3bc6 <lora_driver_resetRn2483+0x10>
    3bba:	e8 e0       	ldi	r30, 0x08	; 8
    3bbc:	f1 e0       	ldi	r31, 0x01	; 1
    3bbe:	80 81       	ld	r24, Z
    3bc0:	8f 7e       	andi	r24, 0xEF	; 239
    3bc2:	80 83       	st	Z, r24
    3bc4:	08 95       	ret
    3bc6:	e8 e0       	ldi	r30, 0x08	; 8
    3bc8:	f1 e0       	ldi	r31, 0x01	; 1
    3bca:	80 81       	ld	r24, Z
    3bcc:	80 61       	ori	r24, 0x10	; 16
    3bce:	80 83       	st	Z, r24
    3bd0:	08 95       	ret

00003bd2 <lora_driver_rn2483FactoryReset>:
    3bd2:	60 e0       	ldi	r22, 0x00	; 0
    3bd4:	70 e0       	ldi	r23, 0x00	; 0
    3bd6:	8d e1       	ldi	r24, 0x1D	; 29
    3bd8:	95 e0       	ldi	r25, 0x05	; 5
    3bda:	d4 de       	rcall	.-600    	; 0x3984 <_uploadMessage>
    3bdc:	ea e7       	ldi	r30, 0x7A	; 122
    3bde:	f7 e1       	ldi	r31, 0x17	; 23
    3be0:	01 90       	ld	r0, Z+
    3be2:	00 20       	and	r0, r0
    3be4:	e9 f7       	brne	.-6      	; 0x3be0 <lora_driver_rn2483FactoryReset+0xe>
    3be6:	31 97       	sbiw	r30, 0x01	; 1
    3be8:	ea 57       	subi	r30, 0x7A	; 122
    3bea:	f7 41       	sbci	r31, 0x17	; 23
    3bec:	81 e0       	ldi	r24, 0x01	; 1
    3bee:	75 97       	sbiw	r30, 0x15	; 21
    3bf0:	08 f0       	brcs	.+2      	; 0x3bf4 <lora_driver_rn2483FactoryReset+0x22>
    3bf2:	80 e0       	ldi	r24, 0x00	; 0
    3bf4:	08 95       	ret

00003bf6 <lora_driver_getRn2483Hweui>:
    3bf6:	cf 93       	push	r28
    3bf8:	df 93       	push	r29
    3bfa:	ec 01       	movw	r28, r24
    3bfc:	60 e0       	ldi	r22, 0x00	; 0
    3bfe:	70 e0       	ldi	r23, 0x00	; 0
    3c00:	8e e2       	ldi	r24, 0x2E	; 46
    3c02:	95 e0       	ldi	r25, 0x05	; 5
    3c04:	bf de       	rcall	.-642    	; 0x3984 <_uploadMessage>
    3c06:	ea e7       	ldi	r30, 0x7A	; 122
    3c08:	f7 e1       	ldi	r31, 0x17	; 23
    3c0a:	01 90       	ld	r0, Z+
    3c0c:	00 20       	and	r0, r0
    3c0e:	e9 f7       	brne	.-6      	; 0x3c0a <lora_driver_getRn2483Hweui+0x14>
    3c10:	eb 58       	subi	r30, 0x8B	; 139
    3c12:	f7 41       	sbci	r31, 0x17	; 23
    3c14:	39 f4       	brne	.+14     	; 0x3c24 <lora_driver_getRn2483Hweui+0x2e>
    3c16:	6a e7       	ldi	r22, 0x7A	; 122
    3c18:	77 e1       	ldi	r23, 0x17	; 23
    3c1a:	ce 01       	movw	r24, r28
    3c1c:	0e 94 8b 2c 	call	0x5916	; 0x5916 <strcpy>
    3c20:	80 e0       	ldi	r24, 0x00	; 0
    3c22:	02 c0       	rjmp	.+4      	; 0x3c28 <lora_driver_getRn2483Hweui+0x32>
    3c24:	18 82       	st	Y, r1
    3c26:	81 e0       	ldi	r24, 0x01	; 1
    3c28:	df 91       	pop	r29
    3c2a:	cf 91       	pop	r28
    3c2c:	08 95       	ret

00003c2e <lora_driver_setDeviceIdentifier>:
    3c2e:	fc 01       	movw	r30, r24
    3c30:	01 90       	ld	r0, Z+
    3c32:	00 20       	and	r0, r0
    3c34:	e9 f7       	brne	.-6      	; 0x3c30 <lora_driver_setDeviceIdentifier+0x2>
    3c36:	9f 01       	movw	r18, r30
    3c38:	21 51       	subi	r18, 0x11	; 17
    3c3a:	31 09       	sbc	r19, r1
    3c3c:	28 17       	cp	r18, r24
    3c3e:	39 07       	cpc	r19, r25
    3c40:	29 f4       	brne	.+10     	; 0x3c4c <lora_driver_setDeviceIdentifier+0x1e>
    3c42:	bc 01       	movw	r22, r24
    3c44:	8c e5       	ldi	r24, 0x5C	; 92
    3c46:	95 e0       	ldi	r25, 0x05	; 5
    3c48:	6c cf       	rjmp	.-296    	; 0x3b22 <_uploadMessageRc>
    3c4a:	08 95       	ret
    3c4c:	89 e0       	ldi	r24, 0x09	; 9
    3c4e:	08 95       	ret

00003c50 <lora_driver_setApplicationIdentifier>:
    3c50:	fc 01       	movw	r30, r24
    3c52:	01 90       	ld	r0, Z+
    3c54:	00 20       	and	r0, r0
    3c56:	e9 f7       	brne	.-6      	; 0x3c52 <lora_driver_setApplicationIdentifier+0x2>
    3c58:	9f 01       	movw	r18, r30
    3c5a:	21 51       	subi	r18, 0x11	; 17
    3c5c:	31 09       	sbc	r19, r1
    3c5e:	28 17       	cp	r18, r24
    3c60:	39 07       	cpc	r19, r25
    3c62:	29 f4       	brne	.+10     	; 0x3c6e <lora_driver_setApplicationIdentifier+0x1e>
    3c64:	bc 01       	movw	r22, r24
    3c66:	8b e6       	ldi	r24, 0x6B	; 107
    3c68:	95 e0       	ldi	r25, 0x05	; 5
    3c6a:	5b cf       	rjmp	.-330    	; 0x3b22 <_uploadMessageRc>
    3c6c:	08 95       	ret
    3c6e:	89 e0       	ldi	r24, 0x09	; 9
    3c70:	08 95       	ret

00003c72 <lora_driver_setApplicationKey>:
    3c72:	fc 01       	movw	r30, r24
    3c74:	01 90       	ld	r0, Z+
    3c76:	00 20       	and	r0, r0
    3c78:	e9 f7       	brne	.-6      	; 0x3c74 <lora_driver_setApplicationKey+0x2>
    3c7a:	9f 01       	movw	r18, r30
    3c7c:	21 52       	subi	r18, 0x21	; 33
    3c7e:	31 09       	sbc	r19, r1
    3c80:	28 17       	cp	r18, r24
    3c82:	39 07       	cpc	r19, r25
    3c84:	29 f4       	brne	.+10     	; 0x3c90 <lora_driver_setApplicationKey+0x1e>
    3c86:	bc 01       	movw	r22, r24
    3c88:	8a e7       	ldi	r24, 0x7A	; 122
    3c8a:	95 e0       	ldi	r25, 0x05	; 5
    3c8c:	4a cf       	rjmp	.-364    	; 0x3b22 <_uploadMessageRc>
    3c8e:	08 95       	ret
    3c90:	89 e0       	ldi	r24, 0x09	; 9
    3c92:	08 95       	ret

00003c94 <lora_driver_saveMac>:
    3c94:	60 e0       	ldi	r22, 0x00	; 0
    3c96:	70 e0       	ldi	r23, 0x00	; 0
    3c98:	89 eb       	ldi	r24, 0xB9	; 185
    3c9a:	95 e0       	ldi	r25, 0x05	; 5
    3c9c:	42 cf       	rjmp	.-380    	; 0x3b22 <_uploadMessageRc>
    3c9e:	08 95       	ret

00003ca0 <lora_driver_join>:
    3ca0:	0f 93       	push	r16
    3ca2:	1f 93       	push	r17
    3ca4:	e8 2f       	mov	r30, r24
    3ca6:	f0 e0       	ldi	r31, 0x00	; 0
    3ca8:	ee 0f       	add	r30, r30
    3caa:	ff 1f       	adc	r31, r31
    3cac:	ed 56       	subi	r30, 0x6D	; 109
    3cae:	f8 4f       	sbci	r31, 0xF8	; 248
    3cb0:	60 81       	ld	r22, Z
    3cb2:	71 81       	ldd	r23, Z+1	; 0x01
    3cb4:	82 ec       	ldi	r24, 0xC2	; 194
    3cb6:	95 e0       	ldi	r25, 0x05	; 5
    3cb8:	34 df       	rcall	.-408    	; 0x3b22 <_uploadMessageRc>
    3cba:	81 11       	cpse	r24, r1
    3cbc:	14 c0       	rjmp	.+40     	; 0x3ce6 <lora_driver_join+0x46>
    3cbe:	08 e2       	ldi	r16, 0x28	; 40
    3cc0:	15 e0       	ldi	r17, 0x05	; 5
    3cc2:	20 e0       	ldi	r18, 0x00	; 0
    3cc4:	30 e0       	ldi	r19, 0x00	; 0
    3cc6:	4d e2       	ldi	r20, 0x2D	; 45
    3cc8:	50 e0       	ldi	r21, 0x00	; 0
    3cca:	6a e7       	ldi	r22, 0x7A	; 122
    3ccc:	77 e1       	ldi	r23, 0x17	; 23
    3cce:	80 91 f1 16 	lds	r24, 0x16F1	; 0x8016f1 <_serialReplyBufferHandle>
    3cd2:	90 91 f2 16 	lds	r25, 0x16F2	; 0x8016f2 <_serialReplyBufferHandle+0x1>
    3cd6:	0e 94 d7 09 	call	0x13ae	; 0x13ae <xStreamBufferReceive>
    3cda:	88 23       	and	r24, r24
    3cdc:	21 f0       	breq	.+8      	; 0x3ce6 <lora_driver_join+0x46>
    3cde:	8a e7       	ldi	r24, 0x7A	; 122
    3ce0:	97 e1       	ldi	r25, 0x17	; 23
    3ce2:	aa de       	rcall	.-684    	; 0x3a38 <_reply2ReturnCode>
    3ce4:	03 c0       	rjmp	.+6      	; 0x3cec <lora_driver_join+0x4c>
    3ce6:	8a e7       	ldi	r24, 0x7A	; 122
    3ce8:	97 e1       	ldi	r25, 0x17	; 23
    3cea:	a6 de       	rcall	.-692    	; 0x3a38 <_reply2ReturnCode>
    3cec:	1f 91       	pop	r17
    3cee:	0f 91       	pop	r16
    3cf0:	08 95       	ret

00003cf2 <lora_driver_sendUploadMessage>:
    3cf2:	0f 93       	push	r16
    3cf4:	1f 93       	push	r17
    3cf6:	cf 93       	push	r28
    3cf8:	df 93       	push	r29
    3cfa:	1f 92       	push	r1
    3cfc:	cd b7       	in	r28, 0x3d	; 61
    3cfe:	de b7       	in	r29, 0x3e	; 62
    3d00:	db 01       	movw	r26, r22
    3d02:	11 96       	adiw	r26, 0x01	; 1
    3d04:	9c 91       	ld	r25, X
    3d06:	11 97       	sbiw	r26, 0x01	; 1
    3d08:	95 31       	cpi	r25, 0x15	; 21
    3d0a:	08 f0       	brcs	.+2      	; 0x3d0e <lora_driver_sendUploadMessage+0x1c>
    3d0c:	b4 c0       	rjmp	.+360    	; 0x3e76 <lora_driver_sendUploadMessage+0x184>
    3d0e:	99 23       	and	r25, r25
    3d10:	81 f1       	breq	.+96     	; 0x3d72 <lora_driver_sendUploadMessage+0x80>
    3d12:	60 e0       	ldi	r22, 0x00	; 0
    3d14:	70 e0       	ldi	r23, 0x00	; 0
    3d16:	27 2f       	mov	r18, r23
    3d18:	30 e0       	ldi	r19, 0x00	; 0
    3d1a:	46 2f       	mov	r20, r22
    3d1c:	50 e0       	ldi	r21, 0x00	; 0
    3d1e:	fd 01       	movw	r30, r26
    3d20:	e4 0f       	add	r30, r20
    3d22:	f5 1f       	adc	r31, r21
    3d24:	92 81       	ldd	r25, Z+2	; 0x02
    3d26:	92 95       	swap	r25
    3d28:	9f 70       	andi	r25, 0x0F	; 15
    3d2a:	9a 30       	cpi	r25, 0x0A	; 10
    3d2c:	10 f0       	brcs	.+4      	; 0x3d32 <lora_driver_sendUploadMessage+0x40>
    3d2e:	99 5c       	subi	r25, 0xC9	; 201
    3d30:	01 c0       	rjmp	.+2      	; 0x3d34 <lora_driver_sendUploadMessage+0x42>
    3d32:	90 5d       	subi	r25, 0xD0	; 208
    3d34:	f9 01       	movw	r30, r18
    3d36:	e5 5f       	subi	r30, 0xF5	; 245
    3d38:	f8 4e       	sbci	r31, 0xE8	; 232
    3d3a:	90 83       	st	Z, r25
    3d3c:	2f 5f       	subi	r18, 0xFF	; 255
    3d3e:	3f 4f       	sbci	r19, 0xFF	; 255
    3d40:	fd 01       	movw	r30, r26
    3d42:	e4 0f       	add	r30, r20
    3d44:	f5 1f       	adc	r31, r21
    3d46:	92 81       	ldd	r25, Z+2	; 0x02
    3d48:	9f 70       	andi	r25, 0x0F	; 15
    3d4a:	49 2f       	mov	r20, r25
    3d4c:	50 e0       	ldi	r21, 0x00	; 0
    3d4e:	4a 30       	cpi	r20, 0x0A	; 10
    3d50:	51 05       	cpc	r21, r1
    3d52:	14 f0       	brlt	.+4      	; 0x3d58 <lora_driver_sendUploadMessage+0x66>
    3d54:	99 5c       	subi	r25, 0xC9	; 201
    3d56:	01 c0       	rjmp	.+2      	; 0x3d5a <lora_driver_sendUploadMessage+0x68>
    3d58:	90 5d       	subi	r25, 0xD0	; 208
    3d5a:	f9 01       	movw	r30, r18
    3d5c:	e5 5f       	subi	r30, 0xF5	; 245
    3d5e:	f8 4e       	sbci	r31, 0xE8	; 232
    3d60:	90 83       	st	Z, r25
    3d62:	7e 5f       	subi	r23, 0xFE	; 254
    3d64:	6f 5f       	subi	r22, 0xFF	; 255
    3d66:	11 96       	adiw	r26, 0x01	; 1
    3d68:	9c 91       	ld	r25, X
    3d6a:	11 97       	sbiw	r26, 0x01	; 1
    3d6c:	69 17       	cp	r22, r25
    3d6e:	98 f2       	brcs	.-90     	; 0x3d16 <lora_driver_sendUploadMessage+0x24>
    3d70:	01 c0       	rjmp	.+2      	; 0x3d74 <lora_driver_sendUploadMessage+0x82>
    3d72:	70 e0       	ldi	r23, 0x00	; 0
    3d74:	e7 2f       	mov	r30, r23
    3d76:	f0 e0       	ldi	r31, 0x00	; 0
    3d78:	e5 5f       	subi	r30, 0xF5	; 245
    3d7a:	f8 4e       	sbci	r31, 0xE8	; 232
    3d7c:	10 82       	st	Z, r1
    3d7e:	4c 91       	ld	r20, X
    3d80:	81 11       	cpse	r24, r1
    3d82:	03 c0       	rjmp	.+6      	; 0x3d8a <lora_driver_sendUploadMessage+0x98>
    3d84:	8b ec       	ldi	r24, 0xCB	; 203
    3d86:	95 e0       	ldi	r25, 0x05	; 5
    3d88:	02 c0       	rjmp	.+4      	; 0x3d8e <lora_driver_sendUploadMessage+0x9c>
    3d8a:	8d ec       	ldi	r24, 0xCD	; 205
    3d8c:	95 e0       	ldi	r25, 0x05	; 5
    3d8e:	2b e0       	ldi	r18, 0x0B	; 11
    3d90:	37 e1       	ldi	r19, 0x17	; 23
    3d92:	3f 93       	push	r19
    3d94:	2f 93       	push	r18
    3d96:	1f 92       	push	r1
    3d98:	4f 93       	push	r20
    3d9a:	9f 93       	push	r25
    3d9c:	8f 93       	push	r24
    3d9e:	81 ed       	ldi	r24, 0xD1	; 209
    3da0:	95 e0       	ldi	r25, 0x05	; 5
    3da2:	9f 93       	push	r25
    3da4:	8f 93       	push	r24
    3da6:	8d e4       	ldi	r24, 0x4D	; 77
    3da8:	97 e1       	ldi	r25, 0x17	; 23
    3daa:	9f 93       	push	r25
    3dac:	8f 93       	push	r24
    3dae:	0e 94 ed 2c 	call	0x59da	; 0x59da <sprintf>
    3db2:	60 e0       	ldi	r22, 0x00	; 0
    3db4:	70 e0       	ldi	r23, 0x00	; 0
    3db6:	8d e4       	ldi	r24, 0x4D	; 77
    3db8:	97 e1       	ldi	r25, 0x17	; 23
    3dba:	b3 de       	rcall	.-666    	; 0x3b22 <_uploadMessageRc>
    3dbc:	0f b6       	in	r0, 0x3f	; 63
    3dbe:	f8 94       	cli
    3dc0:	de bf       	out	0x3e, r29	; 62
    3dc2:	0f be       	out	0x3f, r0	; 63
    3dc4:	cd bf       	out	0x3d, r28	; 61
    3dc6:	81 11       	cpse	r24, r1
    3dc8:	59 c0       	rjmp	.+178    	; 0x3e7c <lora_driver_sendUploadMessage+0x18a>
    3dca:	08 e2       	ldi	r16, 0x28	; 40
    3dcc:	15 e0       	ldi	r17, 0x05	; 5
    3dce:	20 e0       	ldi	r18, 0x00	; 0
    3dd0:	30 e0       	ldi	r19, 0x00	; 0
    3dd2:	4d e2       	ldi	r20, 0x2D	; 45
    3dd4:	50 e0       	ldi	r21, 0x00	; 0
    3dd6:	6a e7       	ldi	r22, 0x7A	; 122
    3dd8:	77 e1       	ldi	r23, 0x17	; 23
    3dda:	80 91 f1 16 	lds	r24, 0x16F1	; 0x8016f1 <_serialReplyBufferHandle>
    3dde:	90 91 f2 16 	lds	r25, 0x16F2	; 0x8016f2 <_serialReplyBufferHandle+0x1>
    3de2:	0e 94 d7 09 	call	0x13ae	; 0x13ae <xStreamBufferReceive>
    3de6:	88 23       	and	r24, r24
    3de8:	09 f4       	brne	.+2      	; 0x3dec <lora_driver_sendUploadMessage+0xfa>
    3dea:	47 c0       	rjmp	.+142    	; 0x3e7a <lora_driver_sendUploadMessage+0x188>
    3dec:	8a e7       	ldi	r24, 0x7A	; 122
    3dee:	97 e1       	ldi	r25, 0x17	; 23
    3df0:	23 de       	rcall	.-954    	; 0x3a38 <_reply2ReturnCode>
    3df2:	8e 30       	cpi	r24, 0x0E	; 14
    3df4:	09 f0       	breq	.+2      	; 0x3df8 <lora_driver_sendUploadMessage+0x106>
    3df6:	42 c0       	rjmp	.+132    	; 0x3e7c <lora_driver_sendUploadMessage+0x18a>
    3df8:	87 e0       	ldi	r24, 0x07	; 7
    3dfa:	89 83       	std	Y+1, r24	; 0x01
    3dfc:	80 91 ef 16 	lds	r24, 0x16EF	; 0x8016ef <_downlinkMessageBuffer>
    3e00:	90 91 f0 16 	lds	r25, 0x16F0	; 0x8016f0 <_downlinkMessageBuffer+0x1>
    3e04:	89 2b       	or	r24, r25
    3e06:	a9 f1       	breq	.+106    	; 0x3e72 <lora_driver_sendUploadMessage+0x180>
    3e08:	be 01       	movw	r22, r28
    3e0a:	6f 5f       	subi	r22, 0xFF	; 255
    3e0c:	7f 4f       	sbci	r23, 0xFF	; 255
    3e0e:	8a e7       	ldi	r24, 0x7A	; 122
    3e10:	97 e1       	ldi	r25, 0x17	; 23
    3e12:	68 d1       	rcall	.+720    	; 0x40e4 <decode_port_no>
    3e14:	80 93 f5 16 	sts	0x16F5, r24	; 0x8016f5 <_downlinkPayload>
    3e18:	e9 81       	ldd	r30, Y+1	; 0x01
    3e1a:	f0 e0       	ldi	r31, 0x00	; 0
    3e1c:	e6 58       	subi	r30, 0x86	; 134
    3e1e:	f8 4e       	sbci	r31, 0xE8	; 232
    3e20:	df 01       	movw	r26, r30
    3e22:	0d 90       	ld	r0, X+
    3e24:	00 20       	and	r0, r0
    3e26:	e9 f7       	brne	.-6      	; 0x3e22 <lora_driver_sendUploadMessage+0x130>
    3e28:	11 97       	sbiw	r26, 0x01	; 1
    3e2a:	ae 1b       	sub	r26, r30
    3e2c:	bf 0b       	sbc	r27, r31
    3e2e:	aa 23       	and	r26, r26
    3e30:	91 f0       	breq	.+36     	; 0x3e56 <lora_driver_sendUploadMessage+0x164>
    3e32:	bb 27       	eor	r27, r27
    3e34:	cd 01       	movw	r24, r26
    3e36:	01 97       	sbiw	r24, 0x01	; 1
    3e38:	9c 01       	movw	r18, r24
    3e3a:	12 f4       	brpl	.+4      	; 0x3e40 <lora_driver_sendUploadMessage+0x14e>
    3e3c:	2f 5f       	subi	r18, 0xFF	; 255
    3e3e:	3f 4f       	sbci	r19, 0xFF	; 255
    3e40:	35 95       	asr	r19
    3e42:	27 95       	ror	r18
    3e44:	20 93 f6 16 	sts	0x16F6, r18	; 0x8016f6 <_downlinkPayload+0x1>
    3e48:	af 01       	movw	r20, r30
    3e4a:	4f 5f       	subi	r20, 0xFF	; 255
    3e4c:	5f 4f       	sbci	r21, 0xFF	; 255
    3e4e:	64 e1       	ldi	r22, 0x14	; 20
    3e50:	87 ef       	ldi	r24, 0xF7	; 247
    3e52:	96 e1       	ldi	r25, 0x16	; 22
    3e54:	73 d1       	rcall	.+742    	; 0x413c <decode_hexadecimal_string_bytes>
    3e56:	01 e0       	ldi	r16, 0x01	; 1
    3e58:	10 e0       	ldi	r17, 0x00	; 0
    3e5a:	20 e0       	ldi	r18, 0x00	; 0
    3e5c:	30 e0       	ldi	r19, 0x00	; 0
    3e5e:	46 e1       	ldi	r20, 0x16	; 22
    3e60:	50 e0       	ldi	r21, 0x00	; 0
    3e62:	65 ef       	ldi	r22, 0xF5	; 245
    3e64:	76 e1       	ldi	r23, 0x16	; 22
    3e66:	80 91 ef 16 	lds	r24, 0x16EF	; 0x8016ef <_downlinkMessageBuffer>
    3e6a:	90 91 f0 16 	lds	r25, 0x16F0	; 0x8016f0 <_downlinkMessageBuffer+0x1>
    3e6e:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <xStreamBufferSend>
    3e72:	8e e0       	ldi	r24, 0x0E	; 14
    3e74:	03 c0       	rjmp	.+6      	; 0x3e7c <lora_driver_sendUploadMessage+0x18a>
    3e76:	84 e1       	ldi	r24, 0x14	; 20
    3e78:	01 c0       	rjmp	.+2      	; 0x3e7c <lora_driver_sendUploadMessage+0x18a>
    3e7a:	80 e0       	ldi	r24, 0x00	; 0
    3e7c:	0f 90       	pop	r0
    3e7e:	df 91       	pop	r29
    3e80:	cf 91       	pop	r28
    3e82:	1f 91       	pop	r17
    3e84:	0f 91       	pop	r16
    3e86:	08 95       	ret

00003e88 <lora_driver_setAdaptiveDataRate>:
    3e88:	81 30       	cpi	r24, 0x01	; 1
    3e8a:	19 f0       	breq	.+6      	; 0x3e92 <lora_driver_setAdaptiveDataRate+0xa>
    3e8c:	61 ee       	ldi	r22, 0xE1	; 225
    3e8e:	75 e0       	ldi	r23, 0x05	; 5
    3e90:	02 c0       	rjmp	.+4      	; 0x3e96 <lora_driver_setAdaptiveDataRate+0xe>
    3e92:	6a eb       	ldi	r22, 0xBA	; 186
    3e94:	76 e0       	ldi	r23, 0x06	; 6
    3e96:	85 ee       	ldi	r24, 0xE5	; 229
    3e98:	95 e0       	ldi	r25, 0x05	; 5
    3e9a:	43 ce       	rjmp	.-890    	; 0x3b22 <_uploadMessageRc>
    3e9c:	08 95       	ret

00003e9e <lora_driver_setReceiveDelay>:
    3e9e:	9f 93       	push	r25
    3ea0:	8f 93       	push	r24
    3ea2:	86 e1       	ldi	r24, 0x16	; 22
    3ea4:	96 e0       	ldi	r25, 0x06	; 6
    3ea6:	9f 93       	push	r25
    3ea8:	8f 93       	push	r24
    3eaa:	8d e4       	ldi	r24, 0x4D	; 77
    3eac:	97 e1       	ldi	r25, 0x17	; 23
    3eae:	9f 93       	push	r25
    3eb0:	8f 93       	push	r24
    3eb2:	0e 94 ed 2c 	call	0x59da	; 0x59da <sprintf>
    3eb6:	60 e0       	ldi	r22, 0x00	; 0
    3eb8:	70 e0       	ldi	r23, 0x00	; 0
    3eba:	8d e4       	ldi	r24, 0x4D	; 77
    3ebc:	97 e1       	ldi	r25, 0x17	; 23
    3ebe:	31 de       	rcall	.-926    	; 0x3b22 <_uploadMessageRc>
    3ec0:	0f 90       	pop	r0
    3ec2:	0f 90       	pop	r0
    3ec4:	0f 90       	pop	r0
    3ec6:	0f 90       	pop	r0
    3ec8:	0f 90       	pop	r0
    3eca:	0f 90       	pop	r0
    3ecc:	08 95       	ret

00003ece <lora_driver_configureToEu868>:
    3ece:	2f 92       	push	r2
    3ed0:	3f 92       	push	r3
    3ed2:	4f 92       	push	r4
    3ed4:	5f 92       	push	r5
    3ed6:	6f 92       	push	r6
    3ed8:	7f 92       	push	r7
    3eda:	8f 92       	push	r8
    3edc:	9f 92       	push	r9
    3ede:	af 92       	push	r10
    3ee0:	bf 92       	push	r11
    3ee2:	cf 92       	push	r12
    3ee4:	df 92       	push	r13
    3ee6:	ef 92       	push	r14
    3ee8:	ff 92       	push	r15
    3eea:	0f 93       	push	r16
    3eec:	1f 93       	push	r17
    3eee:	cf 93       	push	r28
    3ef0:	df 93       	push	r29
    3ef2:	cd b7       	in	r28, 0x3d	; 61
    3ef4:	de b7       	in	r29, 0x3e	; 62
    3ef6:	a0 97       	sbiw	r28, 0x20	; 32
    3ef8:	0f b6       	in	r0, 0x3f	; 63
    3efa:	f8 94       	cli
    3efc:	de bf       	out	0x3e, r29	; 62
    3efe:	0f be       	out	0x3f, r0	; 63
    3f00:	cd bf       	out	0x3d, r28	; 61
    3f02:	63 e4       	ldi	r22, 0x43	; 67
    3f04:	76 e0       	ldi	r23, 0x06	; 6
    3f06:	8f e4       	ldi	r24, 0x4F	; 79
    3f08:	96 e0       	ldi	r25, 0x06	; 6
    3f0a:	3c dd       	rcall	.-1416   	; 0x3984 <_uploadMessage>
    3f0c:	95 dd       	rcall	.-1238   	; 0x3a38 <_reply2ReturnCode>
    3f0e:	81 11       	cpse	r24, r1
    3f10:	a3 c0       	rjmp	.+326    	; 0x4058 <lora_driver_configureToEu868+0x18a>
    3f12:	80 e2       	ldi	r24, 0x20	; 32
    3f14:	e2 e2       	ldi	r30, 0x22	; 34
    3f16:	f2 e0       	ldi	r31, 0x02	; 2
    3f18:	de 01       	movw	r26, r28
    3f1a:	11 96       	adiw	r26, 0x01	; 1
    3f1c:	01 90       	ld	r0, Z+
    3f1e:	0d 92       	st	X+, r0
    3f20:	8a 95       	dec	r24
    3f22:	e1 f7       	brne	.-8      	; 0x3f1c <lora_driver_configureToEu868+0x4e>
    3f24:	9e 01       	movw	r18, r28
    3f26:	2f 5f       	subi	r18, 0xFF	; 255
    3f28:	3f 4f       	sbci	r19, 0xFF	; 255
    3f2a:	69 01       	movw	r12, r18
    3f2c:	e1 2c       	mov	r14, r1
    3f2e:	f1 2c       	mov	r15, r1
    3f30:	0f 2e       	mov	r0, r31
    3f32:	fb e5       	ldi	r31, 0x5B	; 91
    3f34:	af 2e       	mov	r10, r31
    3f36:	f6 e0       	ldi	r31, 0x06	; 6
    3f38:	bf 2e       	mov	r11, r31
    3f3a:	f0 2d       	mov	r31, r0
    3f3c:	0d e4       	ldi	r16, 0x4D	; 77
    3f3e:	17 e1       	ldi	r17, 0x17	; 23
    3f40:	0f 2e       	mov	r0, r31
    3f42:	f4 e7       	ldi	r31, 0x74	; 116
    3f44:	4f 2e       	mov	r4, r31
    3f46:	f6 e0       	ldi	r31, 0x06	; 6
    3f48:	5f 2e       	mov	r5, r31
    3f4a:	f0 2d       	mov	r31, r0
    3f4c:	0f 2e       	mov	r0, r31
    3f4e:	fb e8       	ldi	r31, 0x8B	; 139
    3f50:	8f 2e       	mov	r8, r31
    3f52:	f6 e0       	ldi	r31, 0x06	; 6
    3f54:	9f 2e       	mov	r9, r31
    3f56:	f0 2d       	mov	r31, r0
    3f58:	0f 2e       	mov	r0, r31
    3f5a:	f5 ea       	ldi	r31, 0xA5	; 165
    3f5c:	6f 2e       	mov	r6, r31
    3f5e:	f6 e0       	ldi	r31, 0x06	; 6
    3f60:	7f 2e       	mov	r7, r31
    3f62:	f0 2d       	mov	r31, r0
    3f64:	3e 2c       	mov	r3, r14
    3f66:	2f 2c       	mov	r2, r15
    3f68:	ff 92       	push	r15
    3f6a:	ef 92       	push	r14
    3f6c:	bf 92       	push	r11
    3f6e:	af 92       	push	r10
    3f70:	1f 93       	push	r17
    3f72:	0f 93       	push	r16
    3f74:	0e 94 ed 2c 	call	0x59da	; 0x59da <sprintf>
    3f78:	60 e0       	ldi	r22, 0x00	; 0
    3f7a:	70 e0       	ldi	r23, 0x00	; 0
    3f7c:	c8 01       	movw	r24, r16
    3f7e:	02 dd       	rcall	.-1532   	; 0x3984 <_uploadMessage>
    3f80:	5b dd       	rcall	.-1354   	; 0x3a38 <_reply2ReturnCode>
    3f82:	0f 90       	pop	r0
    3f84:	0f 90       	pop	r0
    3f86:	0f 90       	pop	r0
    3f88:	0f 90       	pop	r0
    3f8a:	0f 90       	pop	r0
    3f8c:	0f 90       	pop	r0
    3f8e:	81 11       	cpse	r24, r1
    3f90:	63 c0       	rjmp	.+198    	; 0x4058 <lora_driver_configureToEu868+0x18a>
    3f92:	32 e0       	ldi	r19, 0x02	; 2
    3f94:	3e 15       	cp	r19, r14
    3f96:	e8 f4       	brcc	.+58     	; 0x3fd2 <lora_driver_configureToEu868+0x104>
    3f98:	f6 01       	movw	r30, r12
    3f9a:	83 81       	ldd	r24, Z+3	; 0x03
    3f9c:	8f 93       	push	r24
    3f9e:	82 81       	ldd	r24, Z+2	; 0x02
    3fa0:	8f 93       	push	r24
    3fa2:	81 81       	ldd	r24, Z+1	; 0x01
    3fa4:	8f 93       	push	r24
    3fa6:	80 81       	ld	r24, Z
    3fa8:	8f 93       	push	r24
    3faa:	ff 92       	push	r15
    3fac:	ef 92       	push	r14
    3fae:	5f 92       	push	r5
    3fb0:	4f 92       	push	r4
    3fb2:	1f 93       	push	r17
    3fb4:	0f 93       	push	r16
    3fb6:	0e 94 ed 2c 	call	0x59da	; 0x59da <sprintf>
    3fba:	60 e0       	ldi	r22, 0x00	; 0
    3fbc:	70 e0       	ldi	r23, 0x00	; 0
    3fbe:	c8 01       	movw	r24, r16
    3fc0:	e1 dc       	rcall	.-1598   	; 0x3984 <_uploadMessage>
    3fc2:	3a dd       	rcall	.-1420   	; 0x3a38 <_reply2ReturnCode>
    3fc4:	0f b6       	in	r0, 0x3f	; 63
    3fc6:	f8 94       	cli
    3fc8:	de bf       	out	0x3e, r29	; 62
    3fca:	0f be       	out	0x3f, r0	; 63
    3fcc:	cd bf       	out	0x3d, r28	; 61
    3fce:	81 11       	cpse	r24, r1
    3fd0:	43 c0       	rjmp	.+134    	; 0x4058 <lora_driver_configureToEu868+0x18a>
    3fd2:	2f 92       	push	r2
    3fd4:	3f 92       	push	r3
    3fd6:	9f 92       	push	r9
    3fd8:	8f 92       	push	r8
    3fda:	1f 93       	push	r17
    3fdc:	0f 93       	push	r16
    3fde:	0e 94 ed 2c 	call	0x59da	; 0x59da <sprintf>
    3fe2:	60 e0       	ldi	r22, 0x00	; 0
    3fe4:	70 e0       	ldi	r23, 0x00	; 0
    3fe6:	c8 01       	movw	r24, r16
    3fe8:	cd dc       	rcall	.-1638   	; 0x3984 <_uploadMessage>
    3fea:	26 dd       	rcall	.-1460   	; 0x3a38 <_reply2ReturnCode>
    3fec:	0f 90       	pop	r0
    3fee:	0f 90       	pop	r0
    3ff0:	0f 90       	pop	r0
    3ff2:	0f 90       	pop	r0
    3ff4:	0f 90       	pop	r0
    3ff6:	0f 90       	pop	r0
    3ff8:	81 11       	cpse	r24, r1
    3ffa:	2e c0       	rjmp	.+92     	; 0x4058 <lora_driver_configureToEu868+0x18a>
    3ffc:	2f 92       	push	r2
    3ffe:	3f 92       	push	r3
    4000:	7f 92       	push	r7
    4002:	6f 92       	push	r6
    4004:	1f 93       	push	r17
    4006:	0f 93       	push	r16
    4008:	0e 94 ed 2c 	call	0x59da	; 0x59da <sprintf>
    400c:	60 e0       	ldi	r22, 0x00	; 0
    400e:	70 e0       	ldi	r23, 0x00	; 0
    4010:	c8 01       	movw	r24, r16
    4012:	b8 dc       	rcall	.-1680   	; 0x3984 <_uploadMessage>
    4014:	11 dd       	rcall	.-1502   	; 0x3a38 <_reply2ReturnCode>
    4016:	0f 90       	pop	r0
    4018:	0f 90       	pop	r0
    401a:	0f 90       	pop	r0
    401c:	0f 90       	pop	r0
    401e:	0f 90       	pop	r0
    4020:	0f 90       	pop	r0
    4022:	81 11       	cpse	r24, r1
    4024:	19 c0       	rjmp	.+50     	; 0x4058 <lora_driver_configureToEu868+0x18a>
    4026:	3f ef       	ldi	r19, 0xFF	; 255
    4028:	e3 1a       	sub	r14, r19
    402a:	f3 0a       	sbc	r15, r19
    402c:	84 e0       	ldi	r24, 0x04	; 4
    402e:	c8 0e       	add	r12, r24
    4030:	d1 1c       	adc	r13, r1
    4032:	98 e0       	ldi	r25, 0x08	; 8
    4034:	e9 16       	cp	r14, r25
    4036:	f1 04       	cpc	r15, r1
    4038:	09 f0       	breq	.+2      	; 0x403c <lora_driver_configureToEu868+0x16e>
    403a:	94 cf       	rjmp	.-216    	; 0x3f64 <lora_driver_configureToEu868+0x96>
    403c:	60 e0       	ldi	r22, 0x00	; 0
    403e:	70 e0       	ldi	r23, 0x00	; 0
    4040:	8d eb       	ldi	r24, 0xBD	; 189
    4042:	96 e0       	ldi	r25, 0x06	; 6
    4044:	9f dc       	rcall	.-1730   	; 0x3984 <_uploadMessage>
    4046:	f8 dc       	rcall	.-1552   	; 0x3a38 <_reply2ReturnCode>
    4048:	81 11       	cpse	r24, r1
    404a:	06 c0       	rjmp	.+12     	; 0x4058 <lora_driver_configureToEu868+0x18a>
    404c:	60 e0       	ldi	r22, 0x00	; 0
    404e:	70 e0       	ldi	r23, 0x00	; 0
    4050:	8e ec       	ldi	r24, 0xCE	; 206
    4052:	96 e0       	ldi	r25, 0x06	; 6
    4054:	97 dc       	rcall	.-1746   	; 0x3984 <_uploadMessage>
    4056:	f0 dc       	rcall	.-1568   	; 0x3a38 <_reply2ReturnCode>
    4058:	a0 96       	adiw	r28, 0x20	; 32
    405a:	0f b6       	in	r0, 0x3f	; 63
    405c:	f8 94       	cli
    405e:	de bf       	out	0x3e, r29	; 62
    4060:	0f be       	out	0x3f, r0	; 63
    4062:	cd bf       	out	0x3d, r28	; 61
    4064:	df 91       	pop	r29
    4066:	cf 91       	pop	r28
    4068:	1f 91       	pop	r17
    406a:	0f 91       	pop	r16
    406c:	ff 90       	pop	r15
    406e:	ef 90       	pop	r14
    4070:	df 90       	pop	r13
    4072:	cf 90       	pop	r12
    4074:	bf 90       	pop	r11
    4076:	af 90       	pop	r10
    4078:	9f 90       	pop	r9
    407a:	8f 90       	pop	r8
    407c:	7f 90       	pop	r7
    407e:	6f 90       	pop	r6
    4080:	5f 90       	pop	r5
    4082:	4f 90       	pop	r4
    4084:	3f 90       	pop	r3
    4086:	2f 90       	pop	r2
    4088:	08 95       	ret

0000408a <lora_driver_setOtaaIdentity>:
    408a:	ef 92       	push	r14
    408c:	ff 92       	push	r15
    408e:	0f 93       	push	r16
    4090:	1f 93       	push	r17
    4092:	cf 93       	push	r28
    4094:	df 93       	push	r29
    4096:	ec 01       	movw	r28, r24
    4098:	8b 01       	movw	r16, r22
    409a:	7a 01       	movw	r14, r20
    409c:	81 e0       	ldi	r24, 0x01	; 1
    409e:	f4 de       	rcall	.-536    	; 0x3e88 <lora_driver_setAdaptiveDataRate>
    40a0:	81 11       	cpse	r24, r1
    40a2:	0d c0       	rjmp	.+26     	; 0x40be <lora_driver_setOtaaIdentity+0x34>
    40a4:	ce 01       	movw	r24, r28
    40a6:	d4 dd       	rcall	.-1112   	; 0x3c50 <lora_driver_setApplicationIdentifier>
    40a8:	81 11       	cpse	r24, r1
    40aa:	09 c0       	rjmp	.+18     	; 0x40be <lora_driver_setOtaaIdentity+0x34>
    40ac:	c8 01       	movw	r24, r16
    40ae:	e1 dd       	rcall	.-1086   	; 0x3c72 <lora_driver_setApplicationKey>
    40b0:	81 11       	cpse	r24, r1
    40b2:	05 c0       	rjmp	.+10     	; 0x40be <lora_driver_setOtaaIdentity+0x34>
    40b4:	c7 01       	movw	r24, r14
    40b6:	bb dd       	rcall	.-1162   	; 0x3c2e <lora_driver_setDeviceIdentifier>
    40b8:	81 11       	cpse	r24, r1
    40ba:	01 c0       	rjmp	.+2      	; 0x40be <lora_driver_setOtaaIdentity+0x34>
    40bc:	eb dd       	rcall	.-1066   	; 0x3c94 <lora_driver_saveMac>
    40be:	df 91       	pop	r29
    40c0:	cf 91       	pop	r28
    40c2:	1f 91       	pop	r17
    40c4:	0f 91       	pop	r16
    40c6:	ff 90       	pop	r15
    40c8:	ef 90       	pop	r14
    40ca:	08 95       	ret

000040cc <lora_driver_mapReturnCodeToText>:
    40cc:	90 e0       	ldi	r25, 0x00	; 0
    40ce:	fc 01       	movw	r30, r24
    40d0:	ee 0f       	add	r30, r30
    40d2:	ff 1f       	adc	r31, r31
    40d4:	8e 0f       	add	r24, r30
    40d6:	9f 1f       	adc	r25, r31
    40d8:	fc 01       	movw	r30, r24
    40da:	e9 56       	subi	r30, 0x69	; 105
    40dc:	f8 4f       	sbci	r31, 0xF8	; 248
    40de:	81 81       	ldd	r24, Z+1	; 0x01
    40e0:	92 81       	ldd	r25, Z+2	; 0x02
    40e2:	08 95       	ret

000040e4 <decode_port_no>:
    40e4:	dc 01       	movw	r26, r24
    40e6:	00 97       	sbiw	r24, 0x00	; 0
    40e8:	29 f1       	breq	.+74     	; 0x4134 <decode_port_no+0x50>
    40ea:	fb 01       	movw	r30, r22
    40ec:	20 81       	ld	r18, Z
    40ee:	fc 01       	movw	r30, r24
    40f0:	01 90       	ld	r0, Z+
    40f2:	00 20       	and	r0, r0
    40f4:	e9 f7       	brne	.-6      	; 0x40f0 <decode_port_no+0xc>
    40f6:	31 97       	sbiw	r30, 0x01	; 1
    40f8:	e8 1b       	sub	r30, r24
    40fa:	f9 0b       	sbc	r31, r25
    40fc:	82 2f       	mov	r24, r18
    40fe:	90 e0       	ldi	r25, 0x00	; 0
    4100:	e8 17       	cp	r30, r24
    4102:	f9 07       	cpc	r31, r25
    4104:	c8 f0       	brcs	.+50     	; 0x4138 <decode_port_no+0x54>
    4106:	80 e0       	ldi	r24, 0x00	; 0
    4108:	08 c0       	rjmp	.+16     	; 0x411a <decode_port_no+0x36>
    410a:	88 0f       	add	r24, r24
    410c:	38 2f       	mov	r19, r24
    410e:	33 0f       	add	r19, r19
    4110:	33 0f       	add	r19, r19
    4112:	83 0f       	add	r24, r19
    4114:	80 53       	subi	r24, 0x30	; 48
    4116:	89 0f       	add	r24, r25
    4118:	2f 5f       	subi	r18, 0xFF	; 255
    411a:	fd 01       	movw	r30, r26
    411c:	e2 0f       	add	r30, r18
    411e:	f1 1d       	adc	r31, r1
    4120:	90 81       	ld	r25, Z
    4122:	30 ed       	ldi	r19, 0xD0	; 208
    4124:	39 0f       	add	r19, r25
    4126:	3a 30       	cpi	r19, 0x0A	; 10
    4128:	10 f4       	brcc	.+4      	; 0x412e <decode_port_no+0x4a>
    412a:	91 11       	cpse	r25, r1
    412c:	ee cf       	rjmp	.-36     	; 0x410a <decode_port_no+0x26>
    412e:	fb 01       	movw	r30, r22
    4130:	20 83       	st	Z, r18
    4132:	08 95       	ret
    4134:	80 e0       	ldi	r24, 0x00	; 0
    4136:	08 95       	ret
    4138:	80 e0       	ldi	r24, 0x00	; 0
    413a:	08 95       	ret

0000413c <decode_hexadecimal_string_bytes>:
    413c:	0f 93       	push	r16
    413e:	1f 93       	push	r17
    4140:	cf 93       	push	r28
    4142:	df 93       	push	r29
    4144:	dc 01       	movw	r26, r24
    4146:	ea 01       	movw	r28, r20
    4148:	20 97       	sbiw	r28, 0x00	; 0
    414a:	e1 f1       	breq	.+120    	; 0x41c4 <decode_hexadecimal_string_bytes+0x88>
    414c:	fa 01       	movw	r30, r20
    414e:	01 90       	ld	r0, Z+
    4150:	00 20       	and	r0, r0
    4152:	e9 f7       	brne	.-6      	; 0x414e <decode_hexadecimal_string_bytes+0x12>
    4154:	31 97       	sbiw	r30, 0x01	; 1
    4156:	e4 1b       	sub	r30, r20
    4158:	f5 0b       	sbc	r31, r21
    415a:	32 97       	sbiw	r30, 0x02	; 2
    415c:	10 f5       	brcc	.+68     	; 0x41a2 <decode_hexadecimal_string_bytes+0x66>
    415e:	32 c0       	rjmp	.+100    	; 0x41c4 <decode_hexadecimal_string_bytes+0x88>
    4160:	8d 01       	movw	r16, r26
    4162:	04 0f       	add	r16, r20
    4164:	15 1f       	adc	r17, r21
    4166:	30 e0       	ldi	r19, 0x00	; 0
    4168:	ae 01       	movw	r20, r28
    416a:	42 0f       	add	r20, r18
    416c:	53 1f       	adc	r21, r19
    416e:	fa 01       	movw	r30, r20
    4170:	90 81       	ld	r25, Z
    4172:	91 34       	cpi	r25, 0x41	; 65
    4174:	28 f0       	brcs	.+10     	; 0x4180 <decode_hexadecimal_string_bytes+0x44>
    4176:	97 53       	subi	r25, 0x37	; 55
    4178:	59 2f       	mov	r21, r25
    417a:	52 95       	swap	r21
    417c:	50 7f       	andi	r21, 0xF0	; 240
    417e:	03 c0       	rjmp	.+6      	; 0x4186 <decode_hexadecimal_string_bytes+0x4a>
    4180:	59 2f       	mov	r21, r25
    4182:	52 95       	swap	r21
    4184:	50 7f       	andi	r21, 0xF0	; 240
    4186:	2c 0f       	add	r18, r28
    4188:	3d 1f       	adc	r19, r29
    418a:	f9 01       	movw	r30, r18
    418c:	91 81       	ldd	r25, Z+1	; 0x01
    418e:	91 34       	cpi	r25, 0x41	; 65
    4190:	10 f0       	brcs	.+4      	; 0x4196 <decode_hexadecimal_string_bytes+0x5a>
    4192:	97 53       	subi	r25, 0x37	; 55
    4194:	01 c0       	rjmp	.+2      	; 0x4198 <decode_hexadecimal_string_bytes+0x5c>
    4196:	90 53       	subi	r25, 0x30	; 48
    4198:	95 0f       	add	r25, r21
    419a:	f8 01       	movw	r30, r16
    419c:	90 83       	st	Z, r25
    419e:	8f 5f       	subi	r24, 0xFF	; 255
    41a0:	01 c0       	rjmp	.+2      	; 0x41a4 <decode_hexadecimal_string_bytes+0x68>
    41a2:	80 e0       	ldi	r24, 0x00	; 0
    41a4:	28 2f       	mov	r18, r24
    41a6:	22 0f       	add	r18, r18
    41a8:	48 2f       	mov	r20, r24
    41aa:	50 e0       	ldi	r21, 0x00	; 0
    41ac:	fe 01       	movw	r30, r28
    41ae:	01 90       	ld	r0, Z+
    41b0:	00 20       	and	r0, r0
    41b2:	e9 f7       	brne	.-6      	; 0x41ae <decode_hexadecimal_string_bytes+0x72>
    41b4:	31 97       	sbiw	r30, 0x01	; 1
    41b6:	ec 1b       	sub	r30, r28
    41b8:	fd 0b       	sbc	r31, r29
    41ba:	4e 17       	cp	r20, r30
    41bc:	5f 07       	cpc	r21, r31
    41be:	10 f4       	brcc	.+4      	; 0x41c4 <decode_hexadecimal_string_bytes+0x88>
    41c0:	86 13       	cpse	r24, r22
    41c2:	ce cf       	rjmp	.-100    	; 0x4160 <decode_hexadecimal_string_bytes+0x24>
    41c4:	df 91       	pop	r29
    41c6:	cf 91       	pop	r28
    41c8:	1f 91       	pop	r17
    41ca:	0f 91       	pop	r16
    41cc:	08 95       	ret

000041ce <_serialCallBack>:
    41ce:	80 91 aa 17 	lds	r24, 0x17AA	; 0x8017aa <crc_sum.1945>
    41d2:	86 0f       	add	r24, r22
    41d4:	80 93 aa 17 	sts	0x17AA, r24	; 0x8017aa <crc_sum.1945>
    41d8:	90 91 ad 17 	lds	r25, 0x17AD	; 0x8017ad <_mh_state>
    41dc:	91 30       	cpi	r25, 0x01	; 1
    41de:	79 f0       	breq	.+30     	; 0x41fe <_serialCallBack+0x30>
    41e0:	28 f0       	brcs	.+10     	; 0x41ec <_serialCallBack+0x1e>
    41e2:	92 30       	cpi	r25, 0x02	; 2
    41e4:	a9 f0       	breq	.+42     	; 0x4210 <_serialCallBack+0x42>
    41e6:	93 30       	cpi	r25, 0x03	; 3
    41e8:	19 f1       	breq	.+70     	; 0x4230 <_serialCallBack+0x62>
    41ea:	08 95       	ret
    41ec:	6f 3f       	cpi	r22, 0xFF	; 255
    41ee:	09 f0       	breq	.+2      	; 0x41f2 <_serialCallBack+0x24>
    41f0:	48 c0       	rjmp	.+144    	; 0x4282 <_serialCallBack+0xb4>
    41f2:	10 92 aa 17 	sts	0x17AA, r1	; 0x8017aa <crc_sum.1945>
    41f6:	81 e0       	ldi	r24, 0x01	; 1
    41f8:	80 93 ad 17 	sts	0x17AD, r24	; 0x8017ad <_mh_state>
    41fc:	08 95       	ret
    41fe:	66 38       	cpi	r22, 0x86	; 134
    4200:	09 f0       	breq	.+2      	; 0x4204 <_serialCallBack+0x36>
    4202:	3f c0       	rjmp	.+126    	; 0x4282 <_serialCallBack+0xb4>
    4204:	10 92 a9 17 	sts	0x17A9, r1	; 0x8017a9 <inDex.1943>
    4208:	82 e0       	ldi	r24, 0x02	; 2
    420a:	80 93 ad 17 	sts	0x17AD, r24	; 0x8017ad <_mh_state>
    420e:	08 95       	ret
    4210:	e0 91 a9 17 	lds	r30, 0x17A9	; 0x8017a9 <inDex.1943>
    4214:	81 e0       	ldi	r24, 0x01	; 1
    4216:	8e 0f       	add	r24, r30
    4218:	80 93 a9 17 	sts	0x17A9, r24	; 0x8017a9 <inDex.1943>
    421c:	f0 e0       	ldi	r31, 0x00	; 0
    421e:	e9 55       	subi	r30, 0x59	; 89
    4220:	f8 4e       	sbci	r31, 0xE8	; 232
    4222:	60 83       	st	Z, r22
    4224:	82 30       	cpi	r24, 0x02	; 2
    4226:	69 f5       	brne	.+90     	; 0x4282 <_serialCallBack+0xb4>
    4228:	83 e0       	ldi	r24, 0x03	; 3
    422a:	80 93 ad 17 	sts	0x17AD, r24	; 0x8017ad <_mh_state>
    422e:	08 95       	ret
    4230:	90 91 a9 17 	lds	r25, 0x17A9	; 0x8017a9 <inDex.1943>
    4234:	21 e0       	ldi	r18, 0x01	; 1
    4236:	29 0f       	add	r18, r25
    4238:	20 93 a9 17 	sts	0x17A9, r18	; 0x8017a9 <inDex.1943>
    423c:	96 30       	cpi	r25, 0x06	; 6
    423e:	09 f5       	brne	.+66     	; 0x4282 <_serialCallBack+0xb4>
    4240:	81 11       	cpse	r24, r1
    4242:	0e c0       	rjmp	.+28     	; 0x4260 <_serialCallBack+0x92>
    4244:	e7 ea       	ldi	r30, 0xA7	; 167
    4246:	f7 e1       	ldi	r31, 0x17	; 23
    4248:	80 81       	ld	r24, Z
    424a:	90 e0       	ldi	r25, 0x00	; 0
    424c:	98 2f       	mov	r25, r24
    424e:	88 27       	eor	r24, r24
    4250:	21 81       	ldd	r18, Z+1	; 0x01
    4252:	82 0f       	add	r24, r18
    4254:	91 1d       	adc	r25, r1
    4256:	90 93 af 17 	sts	0x17AF, r25	; 0x8017af <_ppm+0x1>
    425a:	80 93 ae 17 	sts	0x17AE, r24	; 0x8017ae <_ppm>
    425e:	04 c0       	rjmp	.+8      	; 0x4268 <_serialCallBack+0x9a>
    4260:	10 92 af 17 	sts	0x17AF, r1	; 0x8017af <_ppm+0x1>
    4264:	10 92 ae 17 	sts	0x17AE, r1	; 0x8017ae <_ppm>
    4268:	10 92 ad 17 	sts	0x17AD, r1	; 0x8017ad <_mh_state>
    426c:	e0 91 ab 17 	lds	r30, 0x17AB	; 0x8017ab <_appCallBack>
    4270:	f0 91 ac 17 	lds	r31, 0x17AC	; 0x8017ac <_appCallBack+0x1>
    4274:	30 97       	sbiw	r30, 0x00	; 0
    4276:	29 f0       	breq	.+10     	; 0x4282 <_serialCallBack+0xb4>
    4278:	80 91 ae 17 	lds	r24, 0x17AE	; 0x8017ae <_ppm>
    427c:	90 91 af 17 	lds	r25, 0x17AF	; 0x8017af <_ppm+0x1>
    4280:	19 95       	eicall
    4282:	08 95       	ret

00004284 <mh_z19_initialise>:
    4284:	8f 92       	push	r8
    4286:	9f 92       	push	r9
    4288:	af 92       	push	r10
    428a:	cf 92       	push	r12
    428c:	ef 92       	push	r14
    428e:	0f 93       	push	r16
    4290:	0f 2e       	mov	r0, r31
    4292:	f7 ee       	ldi	r31, 0xE7	; 231
    4294:	8f 2e       	mov	r8, r31
    4296:	f0 e2       	ldi	r31, 0x20	; 32
    4298:	9f 2e       	mov	r9, r31
    429a:	f0 2d       	mov	r31, r0
    429c:	68 94       	set
    429e:	aa 24       	eor	r10, r10
    42a0:	a4 f8       	bld	r10, 4
    42a2:	68 94       	set
    42a4:	cc 24       	eor	r12, r12
    42a6:	c4 f8       	bld	r12, 4
    42a8:	e1 2c       	mov	r14, r1
    42aa:	00 e0       	ldi	r16, 0x00	; 0
    42ac:	23 e0       	ldi	r18, 0x03	; 3
    42ae:	40 e8       	ldi	r20, 0x80	; 128
    42b0:	55 e2       	ldi	r21, 0x25	; 37
    42b2:	60 e0       	ldi	r22, 0x00	; 0
    42b4:	70 e0       	ldi	r23, 0x00	; 0
    42b6:	73 d0       	rcall	.+230    	; 0x439e <serial_create>
    42b8:	90 93 b1 17 	sts	0x17B1, r25	; 0x8017b1 <_serial+0x1>
    42bc:	80 93 b0 17 	sts	0x17B0, r24	; 0x8017b0 <_serial>
    42c0:	0f 91       	pop	r16
    42c2:	ef 90       	pop	r14
    42c4:	cf 90       	pop	r12
    42c6:	af 90       	pop	r10
    42c8:	9f 90       	pop	r9
    42ca:	8f 90       	pop	r8
    42cc:	08 95       	ret

000042ce <mh_z19_injectCallBack>:
    42ce:	90 93 ac 17 	sts	0x17AC, r25	; 0x8017ac <_appCallBack+0x1>
    42d2:	80 93 ab 17 	sts	0x17AB, r24	; 0x8017ab <_appCallBack>
    42d6:	08 95       	ret

000042d8 <mh_z19_takeMeassuring>:
    42d8:	cf 93       	push	r28
    42da:	df 93       	push	r29
    42dc:	cd b7       	in	r28, 0x3d	; 61
    42de:	de b7       	in	r29, 0x3e	; 62
    42e0:	29 97       	sbiw	r28, 0x09	; 9
    42e2:	0f b6       	in	r0, 0x3f	; 63
    42e4:	f8 94       	cli
    42e6:	de bf       	out	0x3e, r29	; 62
    42e8:	0f be       	out	0x3f, r0	; 63
    42ea:	cd bf       	out	0x3d, r28	; 61
    42ec:	89 e0       	ldi	r24, 0x09	; 9
    42ee:	e2 e4       	ldi	r30, 0x42	; 66
    42f0:	f2 e0       	ldi	r31, 0x02	; 2
    42f2:	9e 01       	movw	r18, r28
    42f4:	2f 5f       	subi	r18, 0xFF	; 255
    42f6:	3f 4f       	sbci	r19, 0xFF	; 255
    42f8:	d9 01       	movw	r26, r18
    42fa:	01 90       	ld	r0, Z+
    42fc:	0d 92       	st	X+, r0
    42fe:	8a 95       	dec	r24
    4300:	e1 f7       	brne	.-8      	; 0x42fa <mh_z19_takeMeassuring+0x22>
    4302:	10 92 af 17 	sts	0x17AF, r1	; 0x8017af <_ppm+0x1>
    4306:	10 92 ae 17 	sts	0x17AE, r1	; 0x8017ae <_ppm>
    430a:	80 91 b0 17 	lds	r24, 0x17B0	; 0x8017b0 <_serial>
    430e:	90 91 b1 17 	lds	r25, 0x17B1	; 0x8017b1 <_serial+0x1>
    4312:	00 97       	sbiw	r24, 0x00	; 0
    4314:	31 f0       	breq	.+12     	; 0x4322 <mh_z19_takeMeassuring+0x4a>
    4316:	42 2f       	mov	r20, r18
    4318:	53 2f       	mov	r21, r19
    431a:	69 e0       	ldi	r22, 0x09	; 9
    431c:	0d d1       	rcall	.+538    	; 0x4538 <serial_sendBytes>
    431e:	80 e0       	ldi	r24, 0x00	; 0
    4320:	01 c0       	rjmp	.+2      	; 0x4324 <mh_z19_takeMeassuring+0x4c>
    4322:	82 e0       	ldi	r24, 0x02	; 2
    4324:	29 96       	adiw	r28, 0x09	; 9
    4326:	0f b6       	in	r0, 0x3f	; 63
    4328:	f8 94       	cli
    432a:	de bf       	out	0x3e, r29	; 62
    432c:	0f be       	out	0x3f, r0	; 63
    432e:	cd bf       	out	0x3d, r28	; 61
    4330:	df 91       	pop	r29
    4332:	cf 91       	pop	r28
    4334:	08 95       	ret

00004336 <rc_servo_setPosition>:
    4336:	65 36       	cpi	r22, 0x65	; 101
    4338:	0c f0       	brlt	.+2      	; 0x433c <rc_servo_setPosition+0x6>
    433a:	64 e6       	ldi	r22, 0x64	; 100
    433c:	6c 39       	cpi	r22, 0x9C	; 156
    433e:	0c f4       	brge	.+2      	; 0x4342 <rc_servo_setPosition+0xc>
    4340:	6c e9       	ldi	r22, 0x9C	; 156
    4342:	96 ef       	ldi	r25, 0xF6	; 246
    4344:	69 02       	muls	r22, r25
    4346:	b0 01       	movw	r22, r0
    4348:	11 24       	eor	r1, r1
    434a:	68 54       	subi	r22, 0x48	; 72
    434c:	74 4f       	sbci	r23, 0xF4	; 244
    434e:	81 11       	cpse	r24, r1
    4350:	05 c0       	rjmp	.+10     	; 0x435c <rc_servo_setPosition+0x26>
    4352:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <__TEXT_REGION_LENGTH__+0x7c0129>
    4356:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <__TEXT_REGION_LENGTH__+0x7c0128>
    435a:	08 95       	ret
    435c:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <__TEXT_REGION_LENGTH__+0x7c012b>
    4360:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <__TEXT_REGION_LENGTH__+0x7c012a>
    4364:	08 95       	ret

00004366 <rc_servo_initialise>:
    4366:	ea e0       	ldi	r30, 0x0A	; 10
    4368:	f1 e0       	ldi	r31, 0x01	; 1
    436a:	80 81       	ld	r24, Z
    436c:	88 61       	ori	r24, 0x18	; 24
    436e:	80 83       	st	Z, r24
    4370:	8f e3       	ldi	r24, 0x3F	; 63
    4372:	9c e9       	ldi	r25, 0x9C	; 156
    4374:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x7c0127>
    4378:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x7c0126>
    437c:	60 e0       	ldi	r22, 0x00	; 0
    437e:	80 e0       	ldi	r24, 0x00	; 0
    4380:	da df       	rcall	.-76     	; 0x4336 <rc_servo_setPosition>
    4382:	60 e0       	ldi	r22, 0x00	; 0
    4384:	81 e0       	ldi	r24, 0x01	; 1
    4386:	d7 df       	rcall	.-82     	; 0x4336 <rc_servo_setPosition>
    4388:	e0 e2       	ldi	r30, 0x20	; 32
    438a:	f1 e0       	ldi	r31, 0x01	; 1
    438c:	80 81       	ld	r24, Z
    438e:	82 6a       	ori	r24, 0xA2	; 162
    4390:	80 83       	st	Z, r24
    4392:	e1 e2       	ldi	r30, 0x21	; 33
    4394:	f1 e0       	ldi	r31, 0x01	; 1
    4396:	80 81       	ld	r24, Z
    4398:	8a 61       	ori	r24, 0x1A	; 26
    439a:	80 83       	st	Z, r24
    439c:	08 95       	ret

0000439e <serial_create>:
    439e:	2f 92       	push	r2
    43a0:	3f 92       	push	r3
    43a2:	4f 92       	push	r4
    43a4:	5f 92       	push	r5
    43a6:	6f 92       	push	r6
    43a8:	7f 92       	push	r7
    43aa:	8f 92       	push	r8
    43ac:	9f 92       	push	r9
    43ae:	af 92       	push	r10
    43b0:	cf 92       	push	r12
    43b2:	ef 92       	push	r14
    43b4:	ff 92       	push	r15
    43b6:	0f 93       	push	r16
    43b8:	1f 93       	push	r17
    43ba:	cf 93       	push	r28
    43bc:	df 93       	push	r29
    43be:	cd b7       	in	r28, 0x3d	; 61
    43c0:	de b7       	in	r29, 0x3e	; 62
    43c2:	f8 2e       	mov	r15, r24
    43c4:	2a 01       	movw	r4, r20
    43c6:	3b 01       	movw	r6, r22
    43c8:	88 e0       	ldi	r24, 0x08	; 8
    43ca:	90 e0       	ldi	r25, 0x00	; 0
    43cc:	0e 94 26 2b 	call	0x564c	; 0x564c <malloc>
    43d0:	8c 01       	movw	r16, r24
    43d2:	8f 2d       	mov	r24, r15
    43d4:	90 e0       	ldi	r25, 0x00	; 0
    43d6:	fc 01       	movw	r30, r24
    43d8:	ee 0f       	add	r30, r30
    43da:	ff 1f       	adc	r31, r31
    43dc:	ee 54       	subi	r30, 0x4E	; 78
    43de:	f8 4e       	sbci	r31, 0xE8	; 232
    43e0:	11 83       	std	Z+1, r17	; 0x01
    43e2:	00 83       	st	Z, r16
    43e4:	01 15       	cp	r16, r1
    43e6:	11 05       	cpc	r17, r1
    43e8:	09 f4       	brne	.+2      	; 0x43ec <serial_create+0x4e>
    43ea:	69 c0       	rjmp	.+210    	; 0x44be <serial_create+0x120>
    43ec:	88 0f       	add	r24, r24
    43ee:	99 1f       	adc	r25, r25
    43f0:	fc 01       	movw	r30, r24
    43f2:	e5 5f       	subi	r30, 0xF5	; 245
    43f4:	fd 4f       	sbci	r31, 0xFD	; 253
    43f6:	80 81       	ld	r24, Z
    43f8:	91 81       	ldd	r25, Z+1	; 0x01
    43fa:	d8 01       	movw	r26, r16
    43fc:	8d 93       	st	X+, r24
    43fe:	9c 93       	st	X, r25
    4400:	6c 2d       	mov	r22, r12
    4402:	70 e0       	ldi	r23, 0x00	; 0
    4404:	84 e0       	ldi	r24, 0x04	; 4
    4406:	90 e0       	ldi	r25, 0x00	; 0
    4408:	0e 94 0c 2b 	call	0x5618	; 0x5618 <calloc>
    440c:	1c 01       	movw	r2, r24
    440e:	61 e0       	ldi	r22, 0x01	; 1
    4410:	70 e0       	ldi	r23, 0x00	; 0
    4412:	86 e0       	ldi	r24, 0x06	; 6
    4414:	90 e0       	ldi	r25, 0x00	; 0
    4416:	0e 94 0c 2b 	call	0x5618	; 0x5618 <calloc>
    441a:	7c 01       	movw	r14, r24
    441c:	4c 2d       	mov	r20, r12
    441e:	b1 01       	movw	r22, r2
    4420:	f1 d6       	rcall	.+3554   	; 0x5204 <fifo_init>
    4422:	f8 01       	movw	r30, r16
    4424:	f5 82       	std	Z+5, r15	; 0x05
    4426:	e4 82       	std	Z+4, r14	; 0x04
    4428:	6a 2d       	mov	r22, r10
    442a:	70 e0       	ldi	r23, 0x00	; 0
    442c:	84 e0       	ldi	r24, 0x04	; 4
    442e:	90 e0       	ldi	r25, 0x00	; 0
    4430:	0e 94 0c 2b 	call	0x5618	; 0x5618 <calloc>
    4434:	1c 01       	movw	r2, r24
    4436:	61 e0       	ldi	r22, 0x01	; 1
    4438:	70 e0       	ldi	r23, 0x00	; 0
    443a:	86 e0       	ldi	r24, 0x06	; 6
    443c:	90 e0       	ldi	r25, 0x00	; 0
    443e:	0e 94 0c 2b 	call	0x5618	; 0x5618 <calloc>
    4442:	7c 01       	movw	r14, r24
    4444:	4a 2d       	mov	r20, r10
    4446:	b1 01       	movw	r22, r2
    4448:	dd d6       	rcall	.+3514   	; 0x5204 <fifo_init>
    444a:	d8 01       	movw	r26, r16
    444c:	13 96       	adiw	r26, 0x03	; 3
    444e:	fc 92       	st	X, r15
    4450:	ee 92       	st	-X, r14
    4452:	12 97       	sbiw	r26, 0x02	; 2
    4454:	17 96       	adiw	r26, 0x07	; 7
    4456:	9c 92       	st	X, r9
    4458:	8e 92       	st	-X, r8
    445a:	16 97       	sbiw	r26, 0x06	; 6
    445c:	ff b6       	in	r15, 0x3f	; 63
    445e:	f8 94       	cli
    4460:	ed 91       	ld	r30, X+
    4462:	fc 91       	ld	r31, X
    4464:	11 97       	sbiw	r26, 0x01	; 1
    4466:	36 97       	sbiw	r30, 0x06	; 6
    4468:	80 81       	ld	r24, Z
    446a:	82 60       	ori	r24, 0x02	; 2
    446c:	80 83       	st	Z, r24
    446e:	8d 90       	ld	r8, X+
    4470:	9c 90       	ld	r9, X
    4472:	c3 01       	movw	r24, r6
    4474:	b2 01       	movw	r22, r4
    4476:	b4 d7       	rcall	.+3944   	; 0x53e0 <__floatunsisf>
    4478:	20 e0       	ldi	r18, 0x00	; 0
    447a:	30 e0       	ldi	r19, 0x00	; 0
    447c:	40 e0       	ldi	r20, 0x00	; 0
    447e:	51 e4       	ldi	r21, 0x41	; 65
    4480:	0e 94 55 2a 	call	0x54aa	; 0x54aa <__mulsf3>
    4484:	9b 01       	movw	r18, r22
    4486:	ac 01       	movw	r20, r24
    4488:	60 e0       	ldi	r22, 0x00	; 0
    448a:	74 e2       	ldi	r23, 0x24	; 36
    448c:	84 e7       	ldi	r24, 0x74	; 116
    448e:	9b e4       	ldi	r25, 0x4B	; 75
    4490:	3c d7       	rcall	.+3704   	; 0x530a <__divsf3>
    4492:	20 e0       	ldi	r18, 0x00	; 0
    4494:	30 e0       	ldi	r19, 0x00	; 0
    4496:	40 e8       	ldi	r20, 0x80	; 128
    4498:	5f e3       	ldi	r21, 0x3F	; 63
    449a:	d0 d6       	rcall	.+3488   	; 0x523c <__subsf3>
    449c:	3d d9       	rcall	.-3462   	; 0x3718 <__fixunssfsi>
    449e:	f4 01       	movw	r30, r8
    44a0:	32 97       	sbiw	r30, 0x02	; 2
    44a2:	60 83       	st	Z, r22
    44a4:	d8 01       	movw	r26, r16
    44a6:	ed 91       	ld	r30, X+
    44a8:	fc 91       	ld	r31, X
    44aa:	11 97       	sbiw	r26, 0x01	; 1
    44ac:	35 97       	sbiw	r30, 0x05	; 5
    44ae:	88 e9       	ldi	r24, 0x98	; 152
    44b0:	80 83       	st	Z, r24
    44b2:	ed 91       	ld	r30, X+
    44b4:	fc 91       	ld	r31, X
    44b6:	34 97       	sbiw	r30, 0x04	; 4
    44b8:	86 e0       	ldi	r24, 0x06	; 6
    44ba:	80 83       	st	Z, r24
    44bc:	ff be       	out	0x3f, r15	; 63
    44be:	c8 01       	movw	r24, r16
    44c0:	df 91       	pop	r29
    44c2:	cf 91       	pop	r28
    44c4:	1f 91       	pop	r17
    44c6:	0f 91       	pop	r16
    44c8:	ff 90       	pop	r15
    44ca:	ef 90       	pop	r14
    44cc:	cf 90       	pop	r12
    44ce:	af 90       	pop	r10
    44d0:	9f 90       	pop	r9
    44d2:	8f 90       	pop	r8
    44d4:	7f 90       	pop	r7
    44d6:	6f 90       	pop	r6
    44d8:	5f 90       	pop	r5
    44da:	4f 90       	pop	r4
    44dc:	3f 90       	pop	r3
    44de:	2f 90       	pop	r2
    44e0:	08 95       	ret

000044e2 <serial_sendByte>:
    44e2:	cf 93       	push	r28
    44e4:	df 93       	push	r29
    44e6:	dc 01       	movw	r26, r24
    44e8:	89 2b       	or	r24, r25
    44ea:	01 f1       	breq	.+64     	; 0x452c <serial_sendByte+0x4a>
    44ec:	12 96       	adiw	r26, 0x02	; 2
    44ee:	ed 91       	ld	r30, X+
    44f0:	fc 91       	ld	r31, X
    44f2:	13 97       	sbiw	r26, 0x03	; 3
    44f4:	93 81       	ldd	r25, Z+3	; 0x03
    44f6:	82 81       	ldd	r24, Z+2	; 0x02
    44f8:	25 81       	ldd	r18, Z+5	; 0x05
    44fa:	98 1b       	sub	r25, r24
    44fc:	92 23       	and	r25, r18
    44fe:	84 81       	ldd	r24, Z+4	; 0x04
    4500:	98 17       	cp	r25, r24
    4502:	b1 f0       	breq	.+44     	; 0x4530 <serial_sendByte+0x4e>
    4504:	83 81       	ldd	r24, Z+3	; 0x03
    4506:	26 95       	lsr	r18
    4508:	28 23       	and	r18, r24
    450a:	c0 81       	ld	r28, Z
    450c:	d1 81       	ldd	r29, Z+1	; 0x01
    450e:	c2 0f       	add	r28, r18
    4510:	d1 1d       	adc	r29, r1
    4512:	68 83       	st	Y, r22
    4514:	8f 5f       	subi	r24, 0xFF	; 255
    4516:	95 81       	ldd	r25, Z+5	; 0x05
    4518:	89 23       	and	r24, r25
    451a:	83 83       	std	Z+3, r24	; 0x03
    451c:	ed 91       	ld	r30, X+
    451e:	fc 91       	ld	r31, X
    4520:	35 97       	sbiw	r30, 0x05	; 5
    4522:	80 81       	ld	r24, Z
    4524:	80 62       	ori	r24, 0x20	; 32
    4526:	80 83       	st	Z, r24
    4528:	80 e0       	ldi	r24, 0x00	; 0
    452a:	03 c0       	rjmp	.+6      	; 0x4532 <serial_sendByte+0x50>
    452c:	81 e0       	ldi	r24, 0x01	; 1
    452e:	01 c0       	rjmp	.+2      	; 0x4532 <serial_sendByte+0x50>
    4530:	82 e0       	ldi	r24, 0x02	; 2
    4532:	df 91       	pop	r29
    4534:	cf 91       	pop	r28
    4536:	08 95       	ret

00004538 <serial_sendBytes>:
    4538:	ef 92       	push	r14
    453a:	ff 92       	push	r15
    453c:	0f 93       	push	r16
    453e:	1f 93       	push	r17
    4540:	cf 93       	push	r28
    4542:	df 93       	push	r29
    4544:	7c 01       	movw	r14, r24
    4546:	00 97       	sbiw	r24, 0x00	; 0
    4548:	09 f4       	brne	.+2      	; 0x454c <serial_sendBytes+0x14>
    454a:	41 c0       	rjmp	.+130    	; 0x45ce <serial_sendBytes+0x96>
    454c:	dc 01       	movw	r26, r24
    454e:	12 96       	adiw	r26, 0x02	; 2
    4550:	ed 91       	ld	r30, X+
    4552:	fc 91       	ld	r31, X
    4554:	13 97       	sbiw	r26, 0x03	; 3
    4556:	93 81       	ldd	r25, Z+3	; 0x03
    4558:	82 81       	ldd	r24, Z+2	; 0x02
    455a:	98 1b       	sub	r25, r24
    455c:	85 81       	ldd	r24, Z+5	; 0x05
    455e:	98 23       	and	r25, r24
    4560:	84 81       	ldd	r24, Z+4	; 0x04
    4562:	89 1b       	sub	r24, r25
    4564:	86 17       	cp	r24, r22
    4566:	a8 f1       	brcs	.+106    	; 0x45d2 <serial_sendBytes+0x9a>
    4568:	66 23       	and	r22, r22
    456a:	41 f1       	breq	.+80     	; 0x45bc <serial_sendBytes+0x84>
    456c:	84 2f       	mov	r24, r20
    456e:	95 2f       	mov	r25, r21
    4570:	dc 01       	movw	r26, r24
    4572:	61 50       	subi	r22, 0x01	; 1
    4574:	46 2f       	mov	r20, r22
    4576:	50 e0       	ldi	r21, 0x00	; 0
    4578:	4f 5f       	subi	r20, 0xFF	; 255
    457a:	5f 4f       	sbci	r21, 0xFF	; 255
    457c:	48 0f       	add	r20, r24
    457e:	59 1f       	adc	r21, r25
    4580:	e7 01       	movw	r28, r14
    4582:	ea 81       	ldd	r30, Y+2	; 0x02
    4584:	fb 81       	ldd	r31, Y+3	; 0x03
    4586:	93 81       	ldd	r25, Z+3	; 0x03
    4588:	82 81       	ldd	r24, Z+2	; 0x02
    458a:	25 81       	ldd	r18, Z+5	; 0x05
    458c:	98 1b       	sub	r25, r24
    458e:	92 23       	and	r25, r18
    4590:	84 81       	ldd	r24, Z+4	; 0x04
    4592:	98 17       	cp	r25, r24
    4594:	79 f0       	breq	.+30     	; 0x45b4 <serial_sendBytes+0x7c>
    4596:	8c 91       	ld	r24, X
    4598:	93 81       	ldd	r25, Z+3	; 0x03
    459a:	26 95       	lsr	r18
    459c:	29 23       	and	r18, r25
    459e:	60 81       	ld	r22, Z
    45a0:	71 81       	ldd	r23, Z+1	; 0x01
    45a2:	8b 01       	movw	r16, r22
    45a4:	02 0f       	add	r16, r18
    45a6:	11 1d       	adc	r17, r1
    45a8:	e8 01       	movw	r28, r16
    45aa:	88 83       	st	Y, r24
    45ac:	9f 5f       	subi	r25, 0xFF	; 255
    45ae:	85 81       	ldd	r24, Z+5	; 0x05
    45b0:	98 23       	and	r25, r24
    45b2:	93 83       	std	Z+3, r25	; 0x03
    45b4:	11 96       	adiw	r26, 0x01	; 1
    45b6:	a4 17       	cp	r26, r20
    45b8:	b5 07       	cpc	r27, r21
    45ba:	11 f7       	brne	.-60     	; 0x4580 <serial_sendBytes+0x48>
    45bc:	d7 01       	movw	r26, r14
    45be:	ed 91       	ld	r30, X+
    45c0:	fc 91       	ld	r31, X
    45c2:	35 97       	sbiw	r30, 0x05	; 5
    45c4:	80 81       	ld	r24, Z
    45c6:	80 62       	ori	r24, 0x20	; 32
    45c8:	80 83       	st	Z, r24
    45ca:	80 e0       	ldi	r24, 0x00	; 0
    45cc:	03 c0       	rjmp	.+6      	; 0x45d4 <serial_sendBytes+0x9c>
    45ce:	81 e0       	ldi	r24, 0x01	; 1
    45d0:	01 c0       	rjmp	.+2      	; 0x45d4 <serial_sendBytes+0x9c>
    45d2:	82 e0       	ldi	r24, 0x02	; 2
    45d4:	df 91       	pop	r29
    45d6:	cf 91       	pop	r28
    45d8:	1f 91       	pop	r17
    45da:	0f 91       	pop	r16
    45dc:	ff 90       	pop	r15
    45de:	ef 90       	pop	r14
    45e0:	08 95       	ret

000045e2 <serial_getByte>:
    45e2:	00 97       	sbiw	r24, 0x00	; 0
    45e4:	d1 f0       	breq	.+52     	; 0x461a <serial_getByte+0x38>
    45e6:	dc 01       	movw	r26, r24
    45e8:	14 96       	adiw	r26, 0x04	; 4
    45ea:	ed 91       	ld	r30, X+
    45ec:	fc 91       	ld	r31, X
    45ee:	15 97       	sbiw	r26, 0x05	; 5
    45f0:	93 81       	ldd	r25, Z+3	; 0x03
    45f2:	82 81       	ldd	r24, Z+2	; 0x02
    45f4:	98 17       	cp	r25, r24
    45f6:	99 f0       	breq	.+38     	; 0x461e <serial_getByte+0x3c>
    45f8:	92 81       	ldd	r25, Z+2	; 0x02
    45fa:	85 81       	ldd	r24, Z+5	; 0x05
    45fc:	86 95       	lsr	r24
    45fe:	89 23       	and	r24, r25
    4600:	a0 81       	ld	r26, Z
    4602:	b1 81       	ldd	r27, Z+1	; 0x01
    4604:	a8 0f       	add	r26, r24
    4606:	b1 1d       	adc	r27, r1
    4608:	8c 91       	ld	r24, X
    460a:	db 01       	movw	r26, r22
    460c:	8c 93       	st	X, r24
    460e:	9f 5f       	subi	r25, 0xFF	; 255
    4610:	85 81       	ldd	r24, Z+5	; 0x05
    4612:	98 23       	and	r25, r24
    4614:	92 83       	std	Z+2, r25	; 0x02
    4616:	80 e0       	ldi	r24, 0x00	; 0
    4618:	08 95       	ret
    461a:	81 e0       	ldi	r24, 0x01	; 1
    461c:	08 95       	ret
    461e:	83 e0       	ldi	r24, 0x03	; 3
    4620:	08 95       	ret

00004622 <__vector_25>:
    4622:	1f 92       	push	r1
    4624:	0f 92       	push	r0
    4626:	0f b6       	in	r0, 0x3f	; 63
    4628:	0f 92       	push	r0
    462a:	11 24       	eor	r1, r1
    462c:	0b b6       	in	r0, 0x3b	; 59
    462e:	0f 92       	push	r0
    4630:	2f 93       	push	r18
    4632:	3f 93       	push	r19
    4634:	4f 93       	push	r20
    4636:	5f 93       	push	r21
    4638:	6f 93       	push	r22
    463a:	7f 93       	push	r23
    463c:	8f 93       	push	r24
    463e:	9f 93       	push	r25
    4640:	af 93       	push	r26
    4642:	bf 93       	push	r27
    4644:	cf 93       	push	r28
    4646:	df 93       	push	r29
    4648:	ef 93       	push	r30
    464a:	ff 93       	push	r31
    464c:	a0 91 b2 17 	lds	r26, 0x17B2	; 0x8017b2 <_ser_handle>
    4650:	b0 91 b3 17 	lds	r27, 0x17B3	; 0x8017b3 <_ser_handle+0x1>
    4654:	10 97       	sbiw	r26, 0x00	; 0
    4656:	11 f1       	breq	.+68     	; 0x469c <__vector_25+0x7a>
    4658:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    465c:	14 96       	adiw	r26, 0x04	; 4
    465e:	ed 91       	ld	r30, X+
    4660:	fc 91       	ld	r31, X
    4662:	15 97       	sbiw	r26, 0x05	; 5
    4664:	93 81       	ldd	r25, Z+3	; 0x03
    4666:	82 81       	ldd	r24, Z+2	; 0x02
    4668:	25 81       	ldd	r18, Z+5	; 0x05
    466a:	98 1b       	sub	r25, r24
    466c:	92 23       	and	r25, r18
    466e:	84 81       	ldd	r24, Z+4	; 0x04
    4670:	98 17       	cp	r25, r24
    4672:	61 f0       	breq	.+24     	; 0x468c <__vector_25+0x6a>
    4674:	83 81       	ldd	r24, Z+3	; 0x03
    4676:	26 95       	lsr	r18
    4678:	28 23       	and	r18, r24
    467a:	c0 81       	ld	r28, Z
    467c:	d1 81       	ldd	r29, Z+1	; 0x01
    467e:	c2 0f       	add	r28, r18
    4680:	d1 1d       	adc	r29, r1
    4682:	68 83       	st	Y, r22
    4684:	8f 5f       	subi	r24, 0xFF	; 255
    4686:	95 81       	ldd	r25, Z+5	; 0x05
    4688:	89 23       	and	r24, r25
    468a:	83 83       	std	Z+3, r24	; 0x03
    468c:	16 96       	adiw	r26, 0x06	; 6
    468e:	ed 91       	ld	r30, X+
    4690:	fc 91       	ld	r31, X
    4692:	17 97       	sbiw	r26, 0x07	; 7
    4694:	30 97       	sbiw	r30, 0x00	; 0
    4696:	11 f0       	breq	.+4      	; 0x469c <__vector_25+0x7a>
    4698:	cd 01       	movw	r24, r26
    469a:	19 95       	eicall
    469c:	ff 91       	pop	r31
    469e:	ef 91       	pop	r30
    46a0:	df 91       	pop	r29
    46a2:	cf 91       	pop	r28
    46a4:	bf 91       	pop	r27
    46a6:	af 91       	pop	r26
    46a8:	9f 91       	pop	r25
    46aa:	8f 91       	pop	r24
    46ac:	7f 91       	pop	r23
    46ae:	6f 91       	pop	r22
    46b0:	5f 91       	pop	r21
    46b2:	4f 91       	pop	r20
    46b4:	3f 91       	pop	r19
    46b6:	2f 91       	pop	r18
    46b8:	0f 90       	pop	r0
    46ba:	0b be       	out	0x3b, r0	; 59
    46bc:	0f 90       	pop	r0
    46be:	0f be       	out	0x3f, r0	; 63
    46c0:	0f 90       	pop	r0
    46c2:	1f 90       	pop	r1
    46c4:	18 95       	reti

000046c6 <__vector_26>:
    46c6:	1f 92       	push	r1
    46c8:	0f 92       	push	r0
    46ca:	0f b6       	in	r0, 0x3f	; 63
    46cc:	0f 92       	push	r0
    46ce:	11 24       	eor	r1, r1
    46d0:	0b b6       	in	r0, 0x3b	; 59
    46d2:	0f 92       	push	r0
    46d4:	2f 93       	push	r18
    46d6:	8f 93       	push	r24
    46d8:	9f 93       	push	r25
    46da:	af 93       	push	r26
    46dc:	bf 93       	push	r27
    46de:	ef 93       	push	r30
    46e0:	ff 93       	push	r31
    46e2:	e0 91 b2 17 	lds	r30, 0x17B2	; 0x8017b2 <_ser_handle>
    46e6:	f0 91 b3 17 	lds	r31, 0x17B3	; 0x8017b3 <_ser_handle+0x1>
    46ea:	30 97       	sbiw	r30, 0x00	; 0
    46ec:	b9 f0       	breq	.+46     	; 0x471c <__vector_26+0x56>
    46ee:	02 80       	ldd	r0, Z+2	; 0x02
    46f0:	f3 81       	ldd	r31, Z+3	; 0x03
    46f2:	e0 2d       	mov	r30, r0
    46f4:	93 81       	ldd	r25, Z+3	; 0x03
    46f6:	82 81       	ldd	r24, Z+2	; 0x02
    46f8:	98 17       	cp	r25, r24
    46fa:	b1 f0       	breq	.+44     	; 0x4728 <__vector_26+0x62>
    46fc:	92 81       	ldd	r25, Z+2	; 0x02
    46fe:	85 81       	ldd	r24, Z+5	; 0x05
    4700:	28 2f       	mov	r18, r24
    4702:	26 95       	lsr	r18
    4704:	29 23       	and	r18, r25
    4706:	a0 81       	ld	r26, Z
    4708:	b1 81       	ldd	r27, Z+1	; 0x01
    470a:	a2 0f       	add	r26, r18
    470c:	b1 1d       	adc	r27, r1
    470e:	2c 91       	ld	r18, X
    4710:	9f 5f       	subi	r25, 0xFF	; 255
    4712:	89 23       	and	r24, r25
    4714:	82 83       	std	Z+2, r24	; 0x02
    4716:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    471a:	0b c0       	rjmp	.+22     	; 0x4732 <__vector_26+0x6c>
    471c:	e1 ec       	ldi	r30, 0xC1	; 193
    471e:	f0 e0       	ldi	r31, 0x00	; 0
    4720:	80 81       	ld	r24, Z
    4722:	8f 7d       	andi	r24, 0xDF	; 223
    4724:	80 83       	st	Z, r24
    4726:	05 c0       	rjmp	.+10     	; 0x4732 <__vector_26+0x6c>
    4728:	e1 ec       	ldi	r30, 0xC1	; 193
    472a:	f0 e0       	ldi	r31, 0x00	; 0
    472c:	80 81       	ld	r24, Z
    472e:	8f 7d       	andi	r24, 0xDF	; 223
    4730:	80 83       	st	Z, r24
    4732:	ff 91       	pop	r31
    4734:	ef 91       	pop	r30
    4736:	bf 91       	pop	r27
    4738:	af 91       	pop	r26
    473a:	9f 91       	pop	r25
    473c:	8f 91       	pop	r24
    473e:	2f 91       	pop	r18
    4740:	0f 90       	pop	r0
    4742:	0b be       	out	0x3b, r0	; 59
    4744:	0f 90       	pop	r0
    4746:	0f be       	out	0x3f, r0	; 63
    4748:	0f 90       	pop	r0
    474a:	1f 90       	pop	r1
    474c:	18 95       	reti

0000474e <__vector_36>:
    474e:	1f 92       	push	r1
    4750:	0f 92       	push	r0
    4752:	0f b6       	in	r0, 0x3f	; 63
    4754:	0f 92       	push	r0
    4756:	11 24       	eor	r1, r1
    4758:	0b b6       	in	r0, 0x3b	; 59
    475a:	0f 92       	push	r0
    475c:	2f 93       	push	r18
    475e:	3f 93       	push	r19
    4760:	4f 93       	push	r20
    4762:	5f 93       	push	r21
    4764:	6f 93       	push	r22
    4766:	7f 93       	push	r23
    4768:	8f 93       	push	r24
    476a:	9f 93       	push	r25
    476c:	af 93       	push	r26
    476e:	bf 93       	push	r27
    4770:	cf 93       	push	r28
    4772:	df 93       	push	r29
    4774:	ef 93       	push	r30
    4776:	ff 93       	push	r31
    4778:	a0 91 b4 17 	lds	r26, 0x17B4	; 0x8017b4 <_ser_handle+0x2>
    477c:	b0 91 b5 17 	lds	r27, 0x17B5	; 0x8017b5 <_ser_handle+0x3>
    4780:	10 97       	sbiw	r26, 0x00	; 0
    4782:	11 f1       	breq	.+68     	; 0x47c8 <__vector_36+0x7a>
    4784:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    4788:	14 96       	adiw	r26, 0x04	; 4
    478a:	ed 91       	ld	r30, X+
    478c:	fc 91       	ld	r31, X
    478e:	15 97       	sbiw	r26, 0x05	; 5
    4790:	93 81       	ldd	r25, Z+3	; 0x03
    4792:	82 81       	ldd	r24, Z+2	; 0x02
    4794:	25 81       	ldd	r18, Z+5	; 0x05
    4796:	98 1b       	sub	r25, r24
    4798:	92 23       	and	r25, r18
    479a:	84 81       	ldd	r24, Z+4	; 0x04
    479c:	98 17       	cp	r25, r24
    479e:	61 f0       	breq	.+24     	; 0x47b8 <__vector_36+0x6a>
    47a0:	83 81       	ldd	r24, Z+3	; 0x03
    47a2:	26 95       	lsr	r18
    47a4:	28 23       	and	r18, r24
    47a6:	c0 81       	ld	r28, Z
    47a8:	d1 81       	ldd	r29, Z+1	; 0x01
    47aa:	c2 0f       	add	r28, r18
    47ac:	d1 1d       	adc	r29, r1
    47ae:	68 83       	st	Y, r22
    47b0:	8f 5f       	subi	r24, 0xFF	; 255
    47b2:	95 81       	ldd	r25, Z+5	; 0x05
    47b4:	89 23       	and	r24, r25
    47b6:	83 83       	std	Z+3, r24	; 0x03
    47b8:	16 96       	adiw	r26, 0x06	; 6
    47ba:	ed 91       	ld	r30, X+
    47bc:	fc 91       	ld	r31, X
    47be:	17 97       	sbiw	r26, 0x07	; 7
    47c0:	30 97       	sbiw	r30, 0x00	; 0
    47c2:	11 f0       	breq	.+4      	; 0x47c8 <__vector_36+0x7a>
    47c4:	cd 01       	movw	r24, r26
    47c6:	19 95       	eicall
    47c8:	ff 91       	pop	r31
    47ca:	ef 91       	pop	r30
    47cc:	df 91       	pop	r29
    47ce:	cf 91       	pop	r28
    47d0:	bf 91       	pop	r27
    47d2:	af 91       	pop	r26
    47d4:	9f 91       	pop	r25
    47d6:	8f 91       	pop	r24
    47d8:	7f 91       	pop	r23
    47da:	6f 91       	pop	r22
    47dc:	5f 91       	pop	r21
    47de:	4f 91       	pop	r20
    47e0:	3f 91       	pop	r19
    47e2:	2f 91       	pop	r18
    47e4:	0f 90       	pop	r0
    47e6:	0b be       	out	0x3b, r0	; 59
    47e8:	0f 90       	pop	r0
    47ea:	0f be       	out	0x3f, r0	; 63
    47ec:	0f 90       	pop	r0
    47ee:	1f 90       	pop	r1
    47f0:	18 95       	reti

000047f2 <__vector_37>:
    47f2:	1f 92       	push	r1
    47f4:	0f 92       	push	r0
    47f6:	0f b6       	in	r0, 0x3f	; 63
    47f8:	0f 92       	push	r0
    47fa:	11 24       	eor	r1, r1
    47fc:	0b b6       	in	r0, 0x3b	; 59
    47fe:	0f 92       	push	r0
    4800:	2f 93       	push	r18
    4802:	8f 93       	push	r24
    4804:	9f 93       	push	r25
    4806:	af 93       	push	r26
    4808:	bf 93       	push	r27
    480a:	ef 93       	push	r30
    480c:	ff 93       	push	r31
    480e:	e0 91 b4 17 	lds	r30, 0x17B4	; 0x8017b4 <_ser_handle+0x2>
    4812:	f0 91 b5 17 	lds	r31, 0x17B5	; 0x8017b5 <_ser_handle+0x3>
    4816:	30 97       	sbiw	r30, 0x00	; 0
    4818:	b9 f0       	breq	.+46     	; 0x4848 <__vector_37+0x56>
    481a:	02 80       	ldd	r0, Z+2	; 0x02
    481c:	f3 81       	ldd	r31, Z+3	; 0x03
    481e:	e0 2d       	mov	r30, r0
    4820:	93 81       	ldd	r25, Z+3	; 0x03
    4822:	82 81       	ldd	r24, Z+2	; 0x02
    4824:	98 17       	cp	r25, r24
    4826:	b1 f0       	breq	.+44     	; 0x4854 <__vector_37+0x62>
    4828:	92 81       	ldd	r25, Z+2	; 0x02
    482a:	85 81       	ldd	r24, Z+5	; 0x05
    482c:	28 2f       	mov	r18, r24
    482e:	26 95       	lsr	r18
    4830:	29 23       	and	r18, r25
    4832:	a0 81       	ld	r26, Z
    4834:	b1 81       	ldd	r27, Z+1	; 0x01
    4836:	a2 0f       	add	r26, r18
    4838:	b1 1d       	adc	r27, r1
    483a:	2c 91       	ld	r18, X
    483c:	9f 5f       	subi	r25, 0xFF	; 255
    483e:	89 23       	and	r24, r25
    4840:	82 83       	std	Z+2, r24	; 0x02
    4842:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    4846:	0b c0       	rjmp	.+22     	; 0x485e <__vector_37+0x6c>
    4848:	e9 ec       	ldi	r30, 0xC9	; 201
    484a:	f0 e0       	ldi	r31, 0x00	; 0
    484c:	80 81       	ld	r24, Z
    484e:	8f 7d       	andi	r24, 0xDF	; 223
    4850:	80 83       	st	Z, r24
    4852:	05 c0       	rjmp	.+10     	; 0x485e <__vector_37+0x6c>
    4854:	e9 ec       	ldi	r30, 0xC9	; 201
    4856:	f0 e0       	ldi	r31, 0x00	; 0
    4858:	80 81       	ld	r24, Z
    485a:	8f 7d       	andi	r24, 0xDF	; 223
    485c:	80 83       	st	Z, r24
    485e:	ff 91       	pop	r31
    4860:	ef 91       	pop	r30
    4862:	bf 91       	pop	r27
    4864:	af 91       	pop	r26
    4866:	9f 91       	pop	r25
    4868:	8f 91       	pop	r24
    486a:	2f 91       	pop	r18
    486c:	0f 90       	pop	r0
    486e:	0b be       	out	0x3b, r0	; 59
    4870:	0f 90       	pop	r0
    4872:	0f be       	out	0x3f, r0	; 63
    4874:	0f 90       	pop	r0
    4876:	1f 90       	pop	r1
    4878:	18 95       	reti

0000487a <__vector_51>:
    487a:	1f 92       	push	r1
    487c:	0f 92       	push	r0
    487e:	0f b6       	in	r0, 0x3f	; 63
    4880:	0f 92       	push	r0
    4882:	11 24       	eor	r1, r1
    4884:	0b b6       	in	r0, 0x3b	; 59
    4886:	0f 92       	push	r0
    4888:	2f 93       	push	r18
    488a:	3f 93       	push	r19
    488c:	4f 93       	push	r20
    488e:	5f 93       	push	r21
    4890:	6f 93       	push	r22
    4892:	7f 93       	push	r23
    4894:	8f 93       	push	r24
    4896:	9f 93       	push	r25
    4898:	af 93       	push	r26
    489a:	bf 93       	push	r27
    489c:	cf 93       	push	r28
    489e:	df 93       	push	r29
    48a0:	ef 93       	push	r30
    48a2:	ff 93       	push	r31
    48a4:	a0 91 b6 17 	lds	r26, 0x17B6	; 0x8017b6 <_ser_handle+0x4>
    48a8:	b0 91 b7 17 	lds	r27, 0x17B7	; 0x8017b7 <_ser_handle+0x5>
    48ac:	10 97       	sbiw	r26, 0x00	; 0
    48ae:	11 f1       	breq	.+68     	; 0x48f4 <__vector_51+0x7a>
    48b0:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    48b4:	14 96       	adiw	r26, 0x04	; 4
    48b6:	ed 91       	ld	r30, X+
    48b8:	fc 91       	ld	r31, X
    48ba:	15 97       	sbiw	r26, 0x05	; 5
    48bc:	93 81       	ldd	r25, Z+3	; 0x03
    48be:	82 81       	ldd	r24, Z+2	; 0x02
    48c0:	25 81       	ldd	r18, Z+5	; 0x05
    48c2:	98 1b       	sub	r25, r24
    48c4:	92 23       	and	r25, r18
    48c6:	84 81       	ldd	r24, Z+4	; 0x04
    48c8:	98 17       	cp	r25, r24
    48ca:	61 f0       	breq	.+24     	; 0x48e4 <__vector_51+0x6a>
    48cc:	83 81       	ldd	r24, Z+3	; 0x03
    48ce:	26 95       	lsr	r18
    48d0:	28 23       	and	r18, r24
    48d2:	c0 81       	ld	r28, Z
    48d4:	d1 81       	ldd	r29, Z+1	; 0x01
    48d6:	c2 0f       	add	r28, r18
    48d8:	d1 1d       	adc	r29, r1
    48da:	68 83       	st	Y, r22
    48dc:	8f 5f       	subi	r24, 0xFF	; 255
    48de:	95 81       	ldd	r25, Z+5	; 0x05
    48e0:	89 23       	and	r24, r25
    48e2:	83 83       	std	Z+3, r24	; 0x03
    48e4:	16 96       	adiw	r26, 0x06	; 6
    48e6:	ed 91       	ld	r30, X+
    48e8:	fc 91       	ld	r31, X
    48ea:	17 97       	sbiw	r26, 0x07	; 7
    48ec:	30 97       	sbiw	r30, 0x00	; 0
    48ee:	11 f0       	breq	.+4      	; 0x48f4 <__vector_51+0x7a>
    48f0:	cd 01       	movw	r24, r26
    48f2:	19 95       	eicall
    48f4:	ff 91       	pop	r31
    48f6:	ef 91       	pop	r30
    48f8:	df 91       	pop	r29
    48fa:	cf 91       	pop	r28
    48fc:	bf 91       	pop	r27
    48fe:	af 91       	pop	r26
    4900:	9f 91       	pop	r25
    4902:	8f 91       	pop	r24
    4904:	7f 91       	pop	r23
    4906:	6f 91       	pop	r22
    4908:	5f 91       	pop	r21
    490a:	4f 91       	pop	r20
    490c:	3f 91       	pop	r19
    490e:	2f 91       	pop	r18
    4910:	0f 90       	pop	r0
    4912:	0b be       	out	0x3b, r0	; 59
    4914:	0f 90       	pop	r0
    4916:	0f be       	out	0x3f, r0	; 63
    4918:	0f 90       	pop	r0
    491a:	1f 90       	pop	r1
    491c:	18 95       	reti

0000491e <__vector_52>:
    491e:	1f 92       	push	r1
    4920:	0f 92       	push	r0
    4922:	0f b6       	in	r0, 0x3f	; 63
    4924:	0f 92       	push	r0
    4926:	11 24       	eor	r1, r1
    4928:	0b b6       	in	r0, 0x3b	; 59
    492a:	0f 92       	push	r0
    492c:	2f 93       	push	r18
    492e:	8f 93       	push	r24
    4930:	9f 93       	push	r25
    4932:	af 93       	push	r26
    4934:	bf 93       	push	r27
    4936:	ef 93       	push	r30
    4938:	ff 93       	push	r31
    493a:	e0 91 b6 17 	lds	r30, 0x17B6	; 0x8017b6 <_ser_handle+0x4>
    493e:	f0 91 b7 17 	lds	r31, 0x17B7	; 0x8017b7 <_ser_handle+0x5>
    4942:	30 97       	sbiw	r30, 0x00	; 0
    4944:	b9 f0       	breq	.+46     	; 0x4974 <__vector_52+0x56>
    4946:	02 80       	ldd	r0, Z+2	; 0x02
    4948:	f3 81       	ldd	r31, Z+3	; 0x03
    494a:	e0 2d       	mov	r30, r0
    494c:	93 81       	ldd	r25, Z+3	; 0x03
    494e:	82 81       	ldd	r24, Z+2	; 0x02
    4950:	98 17       	cp	r25, r24
    4952:	b1 f0       	breq	.+44     	; 0x4980 <__vector_52+0x62>
    4954:	92 81       	ldd	r25, Z+2	; 0x02
    4956:	85 81       	ldd	r24, Z+5	; 0x05
    4958:	28 2f       	mov	r18, r24
    495a:	26 95       	lsr	r18
    495c:	29 23       	and	r18, r25
    495e:	a0 81       	ld	r26, Z
    4960:	b1 81       	ldd	r27, Z+1	; 0x01
    4962:	a2 0f       	add	r26, r18
    4964:	b1 1d       	adc	r27, r1
    4966:	2c 91       	ld	r18, X
    4968:	9f 5f       	subi	r25, 0xFF	; 255
    496a:	89 23       	and	r24, r25
    496c:	82 83       	std	Z+2, r24	; 0x02
    496e:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
    4972:	0b c0       	rjmp	.+22     	; 0x498a <__vector_52+0x6c>
    4974:	e1 ed       	ldi	r30, 0xD1	; 209
    4976:	f0 e0       	ldi	r31, 0x00	; 0
    4978:	80 81       	ld	r24, Z
    497a:	8f 7d       	andi	r24, 0xDF	; 223
    497c:	80 83       	st	Z, r24
    497e:	05 c0       	rjmp	.+10     	; 0x498a <__vector_52+0x6c>
    4980:	e1 ed       	ldi	r30, 0xD1	; 209
    4982:	f0 e0       	ldi	r31, 0x00	; 0
    4984:	80 81       	ld	r24, Z
    4986:	8f 7d       	andi	r24, 0xDF	; 223
    4988:	80 83       	st	Z, r24
    498a:	ff 91       	pop	r31
    498c:	ef 91       	pop	r30
    498e:	bf 91       	pop	r27
    4990:	af 91       	pop	r26
    4992:	9f 91       	pop	r25
    4994:	8f 91       	pop	r24
    4996:	2f 91       	pop	r18
    4998:	0f 90       	pop	r0
    499a:	0b be       	out	0x3b, r0	; 59
    499c:	0f 90       	pop	r0
    499e:	0f be       	out	0x3f, r0	; 63
    49a0:	0f 90       	pop	r0
    49a2:	1f 90       	pop	r1
    49a4:	18 95       	reti

000049a6 <__vector_54>:
    49a6:	1f 92       	push	r1
    49a8:	0f 92       	push	r0
    49aa:	0f b6       	in	r0, 0x3f	; 63
    49ac:	0f 92       	push	r0
    49ae:	11 24       	eor	r1, r1
    49b0:	0b b6       	in	r0, 0x3b	; 59
    49b2:	0f 92       	push	r0
    49b4:	2f 93       	push	r18
    49b6:	3f 93       	push	r19
    49b8:	4f 93       	push	r20
    49ba:	5f 93       	push	r21
    49bc:	6f 93       	push	r22
    49be:	7f 93       	push	r23
    49c0:	8f 93       	push	r24
    49c2:	9f 93       	push	r25
    49c4:	af 93       	push	r26
    49c6:	bf 93       	push	r27
    49c8:	cf 93       	push	r28
    49ca:	df 93       	push	r29
    49cc:	ef 93       	push	r30
    49ce:	ff 93       	push	r31
    49d0:	a0 91 b8 17 	lds	r26, 0x17B8	; 0x8017b8 <_ser_handle+0x6>
    49d4:	b0 91 b9 17 	lds	r27, 0x17B9	; 0x8017b9 <_ser_handle+0x7>
    49d8:	10 97       	sbiw	r26, 0x00	; 0
    49da:	11 f1       	breq	.+68     	; 0x4a20 <__vector_54+0x7a>
    49dc:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
    49e0:	14 96       	adiw	r26, 0x04	; 4
    49e2:	ed 91       	ld	r30, X+
    49e4:	fc 91       	ld	r31, X
    49e6:	15 97       	sbiw	r26, 0x05	; 5
    49e8:	93 81       	ldd	r25, Z+3	; 0x03
    49ea:	82 81       	ldd	r24, Z+2	; 0x02
    49ec:	25 81       	ldd	r18, Z+5	; 0x05
    49ee:	98 1b       	sub	r25, r24
    49f0:	92 23       	and	r25, r18
    49f2:	84 81       	ldd	r24, Z+4	; 0x04
    49f4:	98 17       	cp	r25, r24
    49f6:	61 f0       	breq	.+24     	; 0x4a10 <__vector_54+0x6a>
    49f8:	83 81       	ldd	r24, Z+3	; 0x03
    49fa:	26 95       	lsr	r18
    49fc:	28 23       	and	r18, r24
    49fe:	c0 81       	ld	r28, Z
    4a00:	d1 81       	ldd	r29, Z+1	; 0x01
    4a02:	c2 0f       	add	r28, r18
    4a04:	d1 1d       	adc	r29, r1
    4a06:	68 83       	st	Y, r22
    4a08:	8f 5f       	subi	r24, 0xFF	; 255
    4a0a:	95 81       	ldd	r25, Z+5	; 0x05
    4a0c:	89 23       	and	r24, r25
    4a0e:	83 83       	std	Z+3, r24	; 0x03
    4a10:	16 96       	adiw	r26, 0x06	; 6
    4a12:	ed 91       	ld	r30, X+
    4a14:	fc 91       	ld	r31, X
    4a16:	17 97       	sbiw	r26, 0x07	; 7
    4a18:	30 97       	sbiw	r30, 0x00	; 0
    4a1a:	11 f0       	breq	.+4      	; 0x4a20 <__vector_54+0x7a>
    4a1c:	cd 01       	movw	r24, r26
    4a1e:	19 95       	eicall
    4a20:	ff 91       	pop	r31
    4a22:	ef 91       	pop	r30
    4a24:	df 91       	pop	r29
    4a26:	cf 91       	pop	r28
    4a28:	bf 91       	pop	r27
    4a2a:	af 91       	pop	r26
    4a2c:	9f 91       	pop	r25
    4a2e:	8f 91       	pop	r24
    4a30:	7f 91       	pop	r23
    4a32:	6f 91       	pop	r22
    4a34:	5f 91       	pop	r21
    4a36:	4f 91       	pop	r20
    4a38:	3f 91       	pop	r19
    4a3a:	2f 91       	pop	r18
    4a3c:	0f 90       	pop	r0
    4a3e:	0b be       	out	0x3b, r0	; 59
    4a40:	0f 90       	pop	r0
    4a42:	0f be       	out	0x3f, r0	; 63
    4a44:	0f 90       	pop	r0
    4a46:	1f 90       	pop	r1
    4a48:	18 95       	reti

00004a4a <__vector_55>:
    4a4a:	1f 92       	push	r1
    4a4c:	0f 92       	push	r0
    4a4e:	0f b6       	in	r0, 0x3f	; 63
    4a50:	0f 92       	push	r0
    4a52:	11 24       	eor	r1, r1
    4a54:	0b b6       	in	r0, 0x3b	; 59
    4a56:	0f 92       	push	r0
    4a58:	2f 93       	push	r18
    4a5a:	8f 93       	push	r24
    4a5c:	9f 93       	push	r25
    4a5e:	af 93       	push	r26
    4a60:	bf 93       	push	r27
    4a62:	ef 93       	push	r30
    4a64:	ff 93       	push	r31
    4a66:	e0 91 b8 17 	lds	r30, 0x17B8	; 0x8017b8 <_ser_handle+0x6>
    4a6a:	f0 91 b9 17 	lds	r31, 0x17B9	; 0x8017b9 <_ser_handle+0x7>
    4a6e:	30 97       	sbiw	r30, 0x00	; 0
    4a70:	b9 f0       	breq	.+46     	; 0x4aa0 <__vector_55+0x56>
    4a72:	02 80       	ldd	r0, Z+2	; 0x02
    4a74:	f3 81       	ldd	r31, Z+3	; 0x03
    4a76:	e0 2d       	mov	r30, r0
    4a78:	93 81       	ldd	r25, Z+3	; 0x03
    4a7a:	82 81       	ldd	r24, Z+2	; 0x02
    4a7c:	98 17       	cp	r25, r24
    4a7e:	b1 f0       	breq	.+44     	; 0x4aac <__vector_55+0x62>
    4a80:	92 81       	ldd	r25, Z+2	; 0x02
    4a82:	85 81       	ldd	r24, Z+5	; 0x05
    4a84:	28 2f       	mov	r18, r24
    4a86:	26 95       	lsr	r18
    4a88:	29 23       	and	r18, r25
    4a8a:	a0 81       	ld	r26, Z
    4a8c:	b1 81       	ldd	r27, Z+1	; 0x01
    4a8e:	a2 0f       	add	r26, r18
    4a90:	b1 1d       	adc	r27, r1
    4a92:	2c 91       	ld	r18, X
    4a94:	9f 5f       	subi	r25, 0xFF	; 255
    4a96:	89 23       	and	r24, r25
    4a98:	82 83       	std	Z+2, r24	; 0x02
    4a9a:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
    4a9e:	0b c0       	rjmp	.+22     	; 0x4ab6 <__vector_55+0x6c>
    4aa0:	e1 e3       	ldi	r30, 0x31	; 49
    4aa2:	f1 e0       	ldi	r31, 0x01	; 1
    4aa4:	80 81       	ld	r24, Z
    4aa6:	8f 7d       	andi	r24, 0xDF	; 223
    4aa8:	80 83       	st	Z, r24
    4aaa:	05 c0       	rjmp	.+10     	; 0x4ab6 <__vector_55+0x6c>
    4aac:	e1 e3       	ldi	r30, 0x31	; 49
    4aae:	f1 e0       	ldi	r31, 0x01	; 1
    4ab0:	80 81       	ld	r24, Z
    4ab2:	8f 7d       	andi	r24, 0xDF	; 223
    4ab4:	80 83       	st	Z, r24
    4ab6:	ff 91       	pop	r31
    4ab8:	ef 91       	pop	r30
    4aba:	bf 91       	pop	r27
    4abc:	af 91       	pop	r26
    4abe:	9f 91       	pop	r25
    4ac0:	8f 91       	pop	r24
    4ac2:	2f 91       	pop	r18
    4ac4:	0f 90       	pop	r0
    4ac6:	0b be       	out	0x3b, r0	; 59
    4ac8:	0f 90       	pop	r0
    4aca:	0f be       	out	0x3f, r0	; 63
    4acc:	0f 90       	pop	r0
    4ace:	1f 90       	pop	r1
    4ad0:	18 95       	reti

00004ad2 <usart_getchar>:
    4ad2:	cf 93       	push	r28
    4ad4:	df 93       	push	r29
    4ad6:	1f 92       	push	r1
    4ad8:	cd b7       	in	r28, 0x3d	; 61
    4ada:	de b7       	in	r29, 0x3e	; 62
    4adc:	be 01       	movw	r22, r28
    4ade:	6f 5f       	subi	r22, 0xFF	; 255
    4ae0:	7f 4f       	sbci	r23, 0xFF	; 255
    4ae2:	80 91 ba 17 	lds	r24, 0x17BA	; 0x8017ba <_com_serial_instance>
    4ae6:	90 91 bb 17 	lds	r25, 0x17BB	; 0x8017bb <_com_serial_instance+0x1>
    4aea:	7b dd       	rcall	.-1290   	; 0x45e2 <serial_getByte>
    4aec:	81 11       	cpse	r24, r1
    4aee:	f6 cf       	rjmp	.-20     	; 0x4adc <usart_getchar+0xa>
    4af0:	89 81       	ldd	r24, Y+1	; 0x01
    4af2:	90 e0       	ldi	r25, 0x00	; 0
    4af4:	0f 90       	pop	r0
    4af6:	df 91       	pop	r29
    4af8:	cf 91       	pop	r28
    4afa:	08 95       	ret

00004afc <usart_putchar>:
    4afc:	68 2f       	mov	r22, r24
    4afe:	80 91 ba 17 	lds	r24, 0x17BA	; 0x8017ba <_com_serial_instance>
    4b02:	90 91 bb 17 	lds	r25, 0x17BB	; 0x8017bb <_com_serial_instance+0x1>
    4b06:	ed dc       	rcall	.-1574   	; 0x44e2 <serial_sendByte>
    4b08:	80 e0       	ldi	r24, 0x00	; 0
    4b0a:	90 e0       	ldi	r25, 0x00	; 0
    4b0c:	08 95       	ret

00004b0e <stdio_initialise>:
    4b0e:	8f 92       	push	r8
    4b10:	9f 92       	push	r9
    4b12:	af 92       	push	r10
    4b14:	cf 92       	push	r12
    4b16:	ef 92       	push	r14
    4b18:	0f 93       	push	r16
    4b1a:	81 2c       	mov	r8, r1
    4b1c:	91 2c       	mov	r9, r1
    4b1e:	68 94       	set
    4b20:	aa 24       	eor	r10, r10
    4b22:	a7 f8       	bld	r10, 7
    4b24:	68 94       	set
    4b26:	cc 24       	eor	r12, r12
    4b28:	c7 f8       	bld	r12, 7
    4b2a:	e1 2c       	mov	r14, r1
    4b2c:	00 e0       	ldi	r16, 0x00	; 0
    4b2e:	23 e0       	ldi	r18, 0x03	; 3
    4b30:	40 e0       	ldi	r20, 0x00	; 0
    4b32:	51 ee       	ldi	r21, 0xE1	; 225
    4b34:	60 e0       	ldi	r22, 0x00	; 0
    4b36:	70 e0       	ldi	r23, 0x00	; 0
    4b38:	32 dc       	rcall	.-1948   	; 0x439e <serial_create>
    4b3a:	90 93 bb 17 	sts	0x17BB, r25	; 0x8017bb <_com_serial_instance+0x1>
    4b3e:	80 93 ba 17 	sts	0x17BA, r24	; 0x8017ba <_com_serial_instance>
    4b42:	ed ef       	ldi	r30, 0xFD	; 253
    4b44:	f7 e1       	ldi	r31, 0x17	; 23
    4b46:	83 e1       	ldi	r24, 0x13	; 19
    4b48:	92 e0       	ldi	r25, 0x02	; 2
    4b4a:	91 83       	std	Z+1, r25	; 0x01
    4b4c:	80 83       	st	Z, r24
    4b4e:	93 83       	std	Z+3, r25	; 0x03
    4b50:	82 83       	std	Z+2, r24	; 0x02
    4b52:	0f 91       	pop	r16
    4b54:	ef 90       	pop	r14
    4b56:	cf 90       	pop	r12
    4b58:	af 90       	pop	r10
    4b5a:	9f 90       	pop	r9
    4b5c:	8f 90       	pop	r8
    4b5e:	08 95       	ret

00004b60 <_turn_off>:
    4b60:	90 e0       	ldi	r25, 0x00	; 0
    4b62:	fc 01       	movw	r30, r24
    4b64:	ee 0f       	add	r30, r30
    4b66:	ff 1f       	adc	r31, r31
    4b68:	e8 0f       	add	r30, r24
    4b6a:	f9 1f       	adc	r31, r25
    4b6c:	ee 0f       	add	r30, r30
    4b6e:	ff 1f       	adc	r31, r31
    4b70:	e4 54       	subi	r30, 0x44	; 68
    4b72:	f8 4e       	sbci	r31, 0xE8	; 232
    4b74:	23 81       	ldd	r18, Z+3	; 0x03
    4b76:	21 11       	cpse	r18, r1
    4b78:	1f c0       	rjmp	.+62     	; 0x4bb8 <_turn_off+0x58>
    4b7a:	9c 01       	movw	r18, r24
    4b7c:	22 0f       	add	r18, r18
    4b7e:	33 1f       	adc	r19, r19
    4b80:	f9 01       	movw	r30, r18
    4b82:	e8 0f       	add	r30, r24
    4b84:	f9 1f       	adc	r31, r25
    4b86:	ee 0f       	add	r30, r30
    4b88:	ff 1f       	adc	r31, r31
    4b8a:	e4 54       	subi	r30, 0x44	; 68
    4b8c:	f8 4e       	sbci	r31, 0xE8	; 232
    4b8e:	a0 81       	ld	r26, Z
    4b90:	b1 81       	ldd	r27, Z+1	; 0x01
    4b92:	4c 91       	ld	r20, X
    4b94:	f9 01       	movw	r30, r18
    4b96:	e8 0f       	add	r30, r24
    4b98:	f9 1f       	adc	r31, r25
    4b9a:	ee 0f       	add	r30, r30
    4b9c:	ff 1f       	adc	r31, r31
    4b9e:	e4 54       	subi	r30, 0x44	; 68
    4ba0:	f8 4e       	sbci	r31, 0xE8	; 232
    4ba2:	81 e0       	ldi	r24, 0x01	; 1
    4ba4:	90 e0       	ldi	r25, 0x00	; 0
    4ba6:	02 80       	ldd	r0, Z+2	; 0x02
    4ba8:	02 c0       	rjmp	.+4      	; 0x4bae <_turn_off+0x4e>
    4baa:	88 0f       	add	r24, r24
    4bac:	99 1f       	adc	r25, r25
    4bae:	0a 94       	dec	r0
    4bb0:	e2 f7       	brpl	.-8      	; 0x4baa <_turn_off+0x4a>
    4bb2:	84 2b       	or	r24, r20
    4bb4:	8c 93       	st	X, r24
    4bb6:	08 95       	ret
    4bb8:	fc 01       	movw	r30, r24
    4bba:	ee 0f       	add	r30, r30
    4bbc:	ff 1f       	adc	r31, r31
    4bbe:	df 01       	movw	r26, r30
    4bc0:	a8 0f       	add	r26, r24
    4bc2:	b9 1f       	adc	r27, r25
    4bc4:	aa 0f       	add	r26, r26
    4bc6:	bb 1f       	adc	r27, r27
    4bc8:	a4 54       	subi	r26, 0x44	; 68
    4bca:	b8 4e       	sbci	r27, 0xE8	; 232
    4bcc:	0d 90       	ld	r0, X+
    4bce:	bc 91       	ld	r27, X
    4bd0:	a0 2d       	mov	r26, r0
    4bd2:	2c 91       	ld	r18, X
    4bd4:	e8 0f       	add	r30, r24
    4bd6:	f9 1f       	adc	r31, r25
    4bd8:	ee 0f       	add	r30, r30
    4bda:	ff 1f       	adc	r31, r31
    4bdc:	e4 54       	subi	r30, 0x44	; 68
    4bde:	f8 4e       	sbci	r31, 0xE8	; 232
    4be0:	81 e0       	ldi	r24, 0x01	; 1
    4be2:	90 e0       	ldi	r25, 0x00	; 0
    4be4:	02 80       	ldd	r0, Z+2	; 0x02
    4be6:	02 c0       	rjmp	.+4      	; 0x4bec <_turn_off+0x8c>
    4be8:	88 0f       	add	r24, r24
    4bea:	99 1f       	adc	r25, r25
    4bec:	0a 94       	dec	r0
    4bee:	e2 f7       	brpl	.-8      	; 0x4be8 <_turn_off+0x88>
    4bf0:	80 95       	com	r24
    4bf2:	82 23       	and	r24, r18
    4bf4:	8c 93       	st	X, r24
    4bf6:	08 95       	ret

00004bf8 <_turn_on>:
    4bf8:	90 e0       	ldi	r25, 0x00	; 0
    4bfa:	fc 01       	movw	r30, r24
    4bfc:	ee 0f       	add	r30, r30
    4bfe:	ff 1f       	adc	r31, r31
    4c00:	e8 0f       	add	r30, r24
    4c02:	f9 1f       	adc	r31, r25
    4c04:	ee 0f       	add	r30, r30
    4c06:	ff 1f       	adc	r31, r31
    4c08:	e4 54       	subi	r30, 0x44	; 68
    4c0a:	f8 4e       	sbci	r31, 0xE8	; 232
    4c0c:	23 81       	ldd	r18, Z+3	; 0x03
    4c0e:	21 11       	cpse	r18, r1
    4c10:	20 c0       	rjmp	.+64     	; 0x4c52 <_turn_on+0x5a>
    4c12:	9c 01       	movw	r18, r24
    4c14:	22 0f       	add	r18, r18
    4c16:	33 1f       	adc	r19, r19
    4c18:	f9 01       	movw	r30, r18
    4c1a:	e8 0f       	add	r30, r24
    4c1c:	f9 1f       	adc	r31, r25
    4c1e:	ee 0f       	add	r30, r30
    4c20:	ff 1f       	adc	r31, r31
    4c22:	e4 54       	subi	r30, 0x44	; 68
    4c24:	f8 4e       	sbci	r31, 0xE8	; 232
    4c26:	a0 81       	ld	r26, Z
    4c28:	b1 81       	ldd	r27, Z+1	; 0x01
    4c2a:	4c 91       	ld	r20, X
    4c2c:	f9 01       	movw	r30, r18
    4c2e:	e8 0f       	add	r30, r24
    4c30:	f9 1f       	adc	r31, r25
    4c32:	ee 0f       	add	r30, r30
    4c34:	ff 1f       	adc	r31, r31
    4c36:	e4 54       	subi	r30, 0x44	; 68
    4c38:	f8 4e       	sbci	r31, 0xE8	; 232
    4c3a:	81 e0       	ldi	r24, 0x01	; 1
    4c3c:	90 e0       	ldi	r25, 0x00	; 0
    4c3e:	02 80       	ldd	r0, Z+2	; 0x02
    4c40:	02 c0       	rjmp	.+4      	; 0x4c46 <_turn_on+0x4e>
    4c42:	88 0f       	add	r24, r24
    4c44:	99 1f       	adc	r25, r25
    4c46:	0a 94       	dec	r0
    4c48:	e2 f7       	brpl	.-8      	; 0x4c42 <_turn_on+0x4a>
    4c4a:	80 95       	com	r24
    4c4c:	84 23       	and	r24, r20
    4c4e:	8c 93       	st	X, r24
    4c50:	08 95       	ret
    4c52:	fc 01       	movw	r30, r24
    4c54:	ee 0f       	add	r30, r30
    4c56:	ff 1f       	adc	r31, r31
    4c58:	df 01       	movw	r26, r30
    4c5a:	a8 0f       	add	r26, r24
    4c5c:	b9 1f       	adc	r27, r25
    4c5e:	aa 0f       	add	r26, r26
    4c60:	bb 1f       	adc	r27, r27
    4c62:	a4 54       	subi	r26, 0x44	; 68
    4c64:	b8 4e       	sbci	r27, 0xE8	; 232
    4c66:	0d 90       	ld	r0, X+
    4c68:	bc 91       	ld	r27, X
    4c6a:	a0 2d       	mov	r26, r0
    4c6c:	2c 91       	ld	r18, X
    4c6e:	e8 0f       	add	r30, r24
    4c70:	f9 1f       	adc	r31, r25
    4c72:	ee 0f       	add	r30, r30
    4c74:	ff 1f       	adc	r31, r31
    4c76:	e4 54       	subi	r30, 0x44	; 68
    4c78:	f8 4e       	sbci	r31, 0xE8	; 232
    4c7a:	81 e0       	ldi	r24, 0x01	; 1
    4c7c:	90 e0       	ldi	r25, 0x00	; 0
    4c7e:	02 80       	ldd	r0, Z+2	; 0x02
    4c80:	02 c0       	rjmp	.+4      	; 0x4c86 <_turn_on+0x8e>
    4c82:	88 0f       	add	r24, r24
    4c84:	99 1f       	adc	r25, r25
    4c86:	0a 94       	dec	r0
    4c88:	e2 f7       	brpl	.-8      	; 0x4c82 <_turn_on+0x8a>
    4c8a:	82 2b       	or	r24, r18
    4c8c:	8c 93       	st	X, r24
    4c8e:	08 95       	ret

00004c90 <_hal_led_task>:
    4c90:	cc 24       	eor	r12, r12
    4c92:	c3 94       	inc	r12
    4c94:	d1 2c       	mov	r13, r1
    4c96:	68 94       	set
    4c98:	bb 24       	eor	r11, r11
    4c9a:	b2 f8       	bld	r11, 2
    4c9c:	cc eb       	ldi	r28, 0xBC	; 188
    4c9e:	d7 e1       	ldi	r29, 0x17	; 23
    4ca0:	10 e0       	ldi	r17, 0x00	; 0
    4ca2:	8c 81       	ldd	r24, Y+4	; 0x04
    4ca4:	81 30       	cpi	r24, 0x01	; 1
    4ca6:	81 f0       	breq	.+32     	; 0x4cc8 <_hal_led_task+0x38>
    4ca8:	18 f1       	brcs	.+70     	; 0x4cf0 <_hal_led_task+0x60>
    4caa:	82 30       	cpi	r24, 0x02	; 2
    4cac:	61 f5       	brne	.+88     	; 0x4d06 <_hal_led_task+0x76>
    4cae:	e8 81       	ld	r30, Y
    4cb0:	f9 81       	ldd	r31, Y+1	; 0x01
    4cb2:	20 81       	ld	r18, Z
    4cb4:	c6 01       	movw	r24, r12
    4cb6:	0a 80       	ldd	r0, Y+2	; 0x02
    4cb8:	02 c0       	rjmp	.+4      	; 0x4cbe <_hal_led_task+0x2e>
    4cba:	88 0f       	add	r24, r24
    4cbc:	99 1f       	adc	r25, r25
    4cbe:	0a 94       	dec	r0
    4cc0:	e2 f7       	brpl	.-8      	; 0x4cba <_hal_led_task+0x2a>
    4cc2:	82 27       	eor	r24, r18
    4cc4:	80 83       	st	Z, r24
    4cc6:	1f c0       	rjmp	.+62     	; 0x4d06 <_hal_led_task+0x76>
    4cc8:	8d 81       	ldd	r24, Y+5	; 0x05
    4cca:	8f 5f       	subi	r24, 0xFF	; 255
    4ccc:	8a 30       	cpi	r24, 0x0A	; 10
    4cce:	10 f4       	brcc	.+4      	; 0x4cd4 <_hal_led_task+0x44>
    4cd0:	8d 83       	std	Y+5, r24	; 0x05
    4cd2:	19 c0       	rjmp	.+50     	; 0x4d06 <_hal_led_task+0x76>
    4cd4:	1d 82       	std	Y+5, r1	; 0x05
    4cd6:	e8 81       	ld	r30, Y
    4cd8:	f9 81       	ldd	r31, Y+1	; 0x01
    4cda:	20 81       	ld	r18, Z
    4cdc:	c6 01       	movw	r24, r12
    4cde:	0a 80       	ldd	r0, Y+2	; 0x02
    4ce0:	02 c0       	rjmp	.+4      	; 0x4ce6 <_hal_led_task+0x56>
    4ce2:	88 0f       	add	r24, r24
    4ce4:	99 1f       	adc	r25, r25
    4ce6:	0a 94       	dec	r0
    4ce8:	e2 f7       	brpl	.-8      	; 0x4ce2 <_hal_led_task+0x52>
    4cea:	82 27       	eor	r24, r18
    4cec:	80 83       	st	Z, r24
    4cee:	0b c0       	rjmp	.+22     	; 0x4d06 <_hal_led_task+0x76>
    4cf0:	0d 81       	ldd	r16, Y+5	; 0x05
    4cf2:	00 23       	and	r16, r16
    4cf4:	29 f0       	breq	.+10     	; 0x4d00 <_hal_led_task+0x70>
    4cf6:	81 2f       	mov	r24, r17
    4cf8:	7f df       	rcall	.-258    	; 0x4bf8 <_turn_on>
    4cfa:	01 50       	subi	r16, 0x01	; 1
    4cfc:	0d 83       	std	Y+5, r16	; 0x05
    4cfe:	03 c0       	rjmp	.+6      	; 0x4d06 <_hal_led_task+0x76>
    4d00:	bc 82       	std	Y+4, r11	; 0x04
    4d02:	81 2f       	mov	r24, r17
    4d04:	2d df       	rcall	.-422    	; 0x4b60 <_turn_off>
    4d06:	1f 5f       	subi	r17, 0xFF	; 255
    4d08:	26 96       	adiw	r28, 0x06	; 6
    4d0a:	14 30       	cpi	r17, 0x04	; 4
    4d0c:	51 f6       	brne	.-108    	; 0x4ca2 <_hal_led_task+0x12>
    4d0e:	65 e0       	ldi	r22, 0x05	; 5
    4d10:	70 e0       	ldi	r23, 0x00	; 0
    4d12:	80 e0       	ldi	r24, 0x00	; 0
    4d14:	90 e0       	ldi	r25, 0x00	; 0
    4d16:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <vTaskDelay>
    4d1a:	c0 cf       	rjmp	.-128    	; 0x4c9c <_hal_led_task+0xc>

00004d1c <status_leds_initialise>:
    4d1c:	ef 92       	push	r14
    4d1e:	ff 92       	push	r15
    4d20:	0f 93       	push	r16
    4d22:	1f 93       	push	r17
    4d24:	cf 93       	push	r28
    4d26:	df 93       	push	r29
    4d28:	08 2f       	mov	r16, r24
    4d2a:	80 e4       	ldi	r24, 0x40	; 64
    4d2c:	87 b9       	out	0x07, r24	; 7
    4d2e:	cc eb       	ldi	r28, 0xBC	; 188
    4d30:	d7 e1       	ldi	r29, 0x17	; 23
    4d32:	0f 2e       	mov	r0, r31
    4d34:	f8 e2       	ldi	r31, 0x28	; 40
    4d36:	ef 2e       	mov	r14, r31
    4d38:	f1 2c       	mov	r15, r1
    4d3a:	f0 2d       	mov	r31, r0
    4d3c:	f9 82       	std	Y+1, r15	; 0x01
    4d3e:	e8 82       	st	Y, r14
    4d40:	86 e0       	ldi	r24, 0x06	; 6
    4d42:	8a 83       	std	Y+2, r24	; 0x02
    4d44:	1b 82       	std	Y+3, r1	; 0x03
    4d46:	14 e0       	ldi	r17, 0x04	; 4
    4d48:	1c 83       	std	Y+4, r17	; 0x04
    4d4a:	80 e0       	ldi	r24, 0x00	; 0
    4d4c:	09 df       	rcall	.-494    	; 0x4b60 <_turn_off>
    4d4e:	80 e8       	ldi	r24, 0x80	; 128
    4d50:	87 b9       	out	0x07, r24	; 7
    4d52:	ff 82       	std	Y+7, r15	; 0x07
    4d54:	ee 82       	std	Y+6, r14	; 0x06
    4d56:	87 e0       	ldi	r24, 0x07	; 7
    4d58:	88 87       	std	Y+8, r24	; 0x08
    4d5a:	19 86       	std	Y+9, r1	; 0x09
    4d5c:	1a 87       	std	Y+10, r17	; 0x0a
    4d5e:	81 e0       	ldi	r24, 0x01	; 1
    4d60:	ff de       	rcall	.-514    	; 0x4b60 <_turn_off>
    4d62:	80 e2       	ldi	r24, 0x20	; 32
    4d64:	83 bb       	out	0x13, r24	; 19
    4d66:	84 e3       	ldi	r24, 0x34	; 52
    4d68:	90 e0       	ldi	r25, 0x00	; 0
    4d6a:	9d 87       	std	Y+13, r25	; 0x0d
    4d6c:	8c 87       	std	Y+12, r24	; 0x0c
    4d6e:	85 e0       	ldi	r24, 0x05	; 5
    4d70:	8e 87       	std	Y+14, r24	; 0x0e
    4d72:	1f 86       	std	Y+15, r1	; 0x0f
    4d74:	18 8b       	std	Y+16, r17	; 0x10
    4d76:	82 e0       	ldi	r24, 0x02	; 2
    4d78:	f3 de       	rcall	.-538    	; 0x4b60 <_turn_off>
    4d7a:	80 e1       	ldi	r24, 0x10	; 16
    4d7c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
    4d80:	82 e0       	ldi	r24, 0x02	; 2
    4d82:	91 e0       	ldi	r25, 0x01	; 1
    4d84:	9b 8b       	std	Y+19, r25	; 0x13
    4d86:	8a 8b       	std	Y+18, r24	; 0x12
    4d88:	1c 8b       	std	Y+20, r17	; 0x14
    4d8a:	1d 8a       	std	Y+21, r1	; 0x15
    4d8c:	1e 8b       	std	Y+22, r17	; 0x16
    4d8e:	83 e0       	ldi	r24, 0x03	; 3
    4d90:	e7 de       	rcall	.-562    	; 0x4b60 <_turn_off>
    4d92:	e1 2c       	mov	r14, r1
    4d94:	f1 2c       	mov	r15, r1
    4d96:	20 e0       	ldi	r18, 0x00	; 0
    4d98:	30 e0       	ldi	r19, 0x00	; 0
    4d9a:	40 ec       	ldi	r20, 0xC0	; 192
    4d9c:	50 e0       	ldi	r21, 0x00	; 0
    4d9e:	6a ec       	ldi	r22, 0xCA	; 202
    4da0:	77 e0       	ldi	r23, 0x07	; 7
    4da2:	88 e4       	ldi	r24, 0x48	; 72
    4da4:	96 e2       	ldi	r25, 0x26	; 38
    4da6:	0e 94 6a 0c 	call	0x18d4	; 0x18d4 <xTaskCreate>
    4daa:	df 91       	pop	r29
    4dac:	cf 91       	pop	r28
    4dae:	1f 91       	pop	r17
    4db0:	0f 91       	pop	r16
    4db2:	ff 90       	pop	r15
    4db4:	ef 90       	pop	r14
    4db6:	08 95       	ret

00004db8 <status_leds_slowBlink>:
    4db8:	cf 93       	push	r28
    4dba:	df 93       	push	r29
    4dbc:	90 e0       	ldi	r25, 0x00	; 0
    4dbe:	fc 01       	movw	r30, r24
    4dc0:	ee 0f       	add	r30, r30
    4dc2:	ff 1f       	adc	r31, r31
    4dc4:	df 01       	movw	r26, r30
    4dc6:	a8 0f       	add	r26, r24
    4dc8:	b9 1f       	adc	r27, r25
    4dca:	aa 0f       	add	r26, r26
    4dcc:	bb 1f       	adc	r27, r27
    4dce:	a4 54       	subi	r26, 0x44	; 68
    4dd0:	b8 4e       	sbci	r27, 0xE8	; 232
    4dd2:	cd 91       	ld	r28, X+
    4dd4:	dc 91       	ld	r29, X
    4dd6:	11 97       	sbiw	r26, 0x01	; 1
    4dd8:	48 81       	ld	r20, Y
    4dda:	21 e0       	ldi	r18, 0x01	; 1
    4ddc:	30 e0       	ldi	r19, 0x00	; 0
    4dde:	12 96       	adiw	r26, 0x02	; 2
    4de0:	0c 90       	ld	r0, X
    4de2:	12 97       	sbiw	r26, 0x02	; 2
    4de4:	02 c0       	rjmp	.+4      	; 0x4dea <status_leds_slowBlink+0x32>
    4de6:	22 0f       	add	r18, r18
    4de8:	33 1f       	adc	r19, r19
    4dea:	0a 94       	dec	r0
    4dec:	e2 f7       	brpl	.-8      	; 0x4de6 <status_leds_slowBlink+0x2e>
    4dee:	24 27       	eor	r18, r20
    4df0:	28 83       	st	Y, r18
    4df2:	fd 01       	movw	r30, r26
    4df4:	81 e0       	ldi	r24, 0x01	; 1
    4df6:	84 83       	std	Z+4, r24	; 0x04
    4df8:	df 91       	pop	r29
    4dfa:	cf 91       	pop	r28
    4dfc:	08 95       	ret

00004dfe <status_leds_fastBlink>:
    4dfe:	cf 93       	push	r28
    4e00:	df 93       	push	r29
    4e02:	90 e0       	ldi	r25, 0x00	; 0
    4e04:	fc 01       	movw	r30, r24
    4e06:	ee 0f       	add	r30, r30
    4e08:	ff 1f       	adc	r31, r31
    4e0a:	df 01       	movw	r26, r30
    4e0c:	a8 0f       	add	r26, r24
    4e0e:	b9 1f       	adc	r27, r25
    4e10:	aa 0f       	add	r26, r26
    4e12:	bb 1f       	adc	r27, r27
    4e14:	a4 54       	subi	r26, 0x44	; 68
    4e16:	b8 4e       	sbci	r27, 0xE8	; 232
    4e18:	cd 91       	ld	r28, X+
    4e1a:	dc 91       	ld	r29, X
    4e1c:	11 97       	sbiw	r26, 0x01	; 1
    4e1e:	48 81       	ld	r20, Y
    4e20:	21 e0       	ldi	r18, 0x01	; 1
    4e22:	30 e0       	ldi	r19, 0x00	; 0
    4e24:	12 96       	adiw	r26, 0x02	; 2
    4e26:	0c 90       	ld	r0, X
    4e28:	12 97       	sbiw	r26, 0x02	; 2
    4e2a:	02 c0       	rjmp	.+4      	; 0x4e30 <status_leds_fastBlink+0x32>
    4e2c:	22 0f       	add	r18, r18
    4e2e:	33 1f       	adc	r19, r19
    4e30:	0a 94       	dec	r0
    4e32:	e2 f7       	brpl	.-8      	; 0x4e2c <status_leds_fastBlink+0x2e>
    4e34:	24 27       	eor	r18, r20
    4e36:	28 83       	st	Y, r18
    4e38:	fd 01       	movw	r30, r26
    4e3a:	82 e0       	ldi	r24, 0x02	; 2
    4e3c:	84 83       	std	Z+4, r24	; 0x04
    4e3e:	df 91       	pop	r29
    4e40:	cf 91       	pop	r28
    4e42:	08 95       	ret

00004e44 <status_leds_ledOn>:
    4e44:	28 2f       	mov	r18, r24
    4e46:	30 e0       	ldi	r19, 0x00	; 0
    4e48:	f9 01       	movw	r30, r18
    4e4a:	ee 0f       	add	r30, r30
    4e4c:	ff 1f       	adc	r31, r31
    4e4e:	e2 0f       	add	r30, r18
    4e50:	f3 1f       	adc	r31, r19
    4e52:	ee 0f       	add	r30, r30
    4e54:	ff 1f       	adc	r31, r31
    4e56:	e4 54       	subi	r30, 0x44	; 68
    4e58:	f8 4e       	sbci	r31, 0xE8	; 232
    4e5a:	93 e0       	ldi	r25, 0x03	; 3
    4e5c:	94 83       	std	Z+4, r25	; 0x04
    4e5e:	cc ce       	rjmp	.-616    	; 0x4bf8 <_turn_on>
    4e60:	08 95       	ret

00004e62 <status_leds_ledOff>:
    4e62:	28 2f       	mov	r18, r24
    4e64:	30 e0       	ldi	r19, 0x00	; 0
    4e66:	f9 01       	movw	r30, r18
    4e68:	ee 0f       	add	r30, r30
    4e6a:	ff 1f       	adc	r31, r31
    4e6c:	e2 0f       	add	r30, r18
    4e6e:	f3 1f       	adc	r31, r19
    4e70:	ee 0f       	add	r30, r30
    4e72:	ff 1f       	adc	r31, r31
    4e74:	e4 54       	subi	r30, 0x44	; 68
    4e76:	f8 4e       	sbci	r31, 0xE8	; 232
    4e78:	94 e0       	ldi	r25, 0x04	; 4
    4e7a:	94 83       	std	Z+4, r25	; 0x04
    4e7c:	71 ce       	rjmp	.-798    	; 0x4b60 <_turn_off>
    4e7e:	08 95       	ret

00004e80 <status_leds_longPuls>:
    4e80:	90 e0       	ldi	r25, 0x00	; 0
    4e82:	fc 01       	movw	r30, r24
    4e84:	ee 0f       	add	r30, r30
    4e86:	ff 1f       	adc	r31, r31
    4e88:	df 01       	movw	r26, r30
    4e8a:	a8 0f       	add	r26, r24
    4e8c:	b9 1f       	adc	r27, r25
    4e8e:	aa 0f       	add	r26, r26
    4e90:	bb 1f       	adc	r27, r27
    4e92:	a4 54       	subi	r26, 0x44	; 68
    4e94:	b8 4e       	sbci	r27, 0xE8	; 232
    4e96:	24 e0       	ldi	r18, 0x04	; 4
    4e98:	15 96       	adiw	r26, 0x05	; 5
    4e9a:	2c 93       	st	X, r18
    4e9c:	15 97       	sbiw	r26, 0x05	; 5
    4e9e:	fd 01       	movw	r30, r26
    4ea0:	14 82       	std	Z+4, r1	; 0x04
    4ea2:	08 95       	ret

00004ea4 <status_leds_shortPuls>:
    4ea4:	90 e0       	ldi	r25, 0x00	; 0
    4ea6:	fc 01       	movw	r30, r24
    4ea8:	ee 0f       	add	r30, r30
    4eaa:	ff 1f       	adc	r31, r31
    4eac:	df 01       	movw	r26, r30
    4eae:	a8 0f       	add	r26, r24
    4eb0:	b9 1f       	adc	r27, r25
    4eb2:	aa 0f       	add	r26, r26
    4eb4:	bb 1f       	adc	r27, r27
    4eb6:	a4 54       	subi	r26, 0x44	; 68
    4eb8:	b8 4e       	sbci	r27, 0xE8	; 232
    4eba:	21 e0       	ldi	r18, 0x01	; 1
    4ebc:	15 96       	adiw	r26, 0x05	; 5
    4ebe:	2c 93       	st	X, r18
    4ec0:	15 97       	sbiw	r26, 0x05	; 5
    4ec2:	fd 01       	movw	r30, r26
    4ec4:	14 82       	std	Z+4, r1	; 0x04
    4ec6:	08 95       	ret

00004ec8 <_initTwiInterface>:
    4ec8:	80 91 e2 17 	lds	r24, 0x17E2	; 0x8017e2 <_twiIsInitiated>
    4ecc:	81 11       	cpse	r24, r1
    4ece:	0c c0       	rjmp	.+24     	; 0x4ee8 <_initTwiInterface+0x20>
    4ed0:	8c e0       	ldi	r24, 0x0C	; 12
    4ed2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    4ed6:	8f ef       	ldi	r24, 0xFF	; 255
    4ed8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    4edc:	84 e0       	ldi	r24, 0x04	; 4
    4ede:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4ee2:	81 e0       	ldi	r24, 0x01	; 1
    4ee4:	80 93 e2 17 	sts	0x17E2, r24	; 0x8017e2 <_twiIsInitiated>
    4ee8:	08 95       	ret

00004eea <twiCreate>:
    4eea:	af 92       	push	r10
    4eec:	bf 92       	push	r11
    4eee:	cf 92       	push	r12
    4ef0:	df 92       	push	r13
    4ef2:	ef 92       	push	r14
    4ef4:	ff 92       	push	r15
    4ef6:	0f 93       	push	r16
    4ef8:	1f 93       	push	r17
    4efa:	cf 93       	push	r28
    4efc:	df 93       	push	r29
    4efe:	a8 2e       	mov	r10, r24
    4f00:	b6 2e       	mov	r11, r22
    4f02:	69 01       	movw	r12, r18
    4f04:	7a 01       	movw	r14, r20
    4f06:	84 e0       	ldi	r24, 0x04	; 4
    4f08:	90 e0       	ldi	r25, 0x00	; 0
    4f0a:	a0 d3       	rcall	.+1856   	; 0x564c <malloc>
    4f0c:	ec 01       	movw	r28, r24
    4f0e:	89 2b       	or	r24, r25
    4f10:	61 f1       	breq	.+88     	; 0x4f6a <twiCreate+0x80>
    4f12:	a8 82       	st	Y, r10
    4f14:	81 e0       	ldi	r24, 0x01	; 1
    4f16:	b8 12       	cpse	r11, r24
    4f18:	12 c0       	rjmp	.+36     	; 0x4f3e <twiCreate+0x54>
    4f1a:	c7 01       	movw	r24, r14
    4f1c:	b6 01       	movw	r22, r12
    4f1e:	20 ea       	ldi	r18, 0xA0	; 160
    4f20:	36 e8       	ldi	r19, 0x86	; 134
    4f22:	41 e0       	ldi	r20, 0x01	; 1
    4f24:	50 e0       	ldi	r21, 0x00	; 0
    4f26:	4e d3       	rcall	.+1692   	; 0x55c4 <__udivmodsi4>
    4f28:	da 01       	movw	r26, r20
    4f2a:	c9 01       	movw	r24, r18
    4f2c:	40 97       	sbiw	r24, 0x10	; 16
    4f2e:	a1 09       	sbc	r26, r1
    4f30:	b1 09       	sbc	r27, r1
    4f32:	b6 95       	lsr	r27
    4f34:	a7 95       	ror	r26
    4f36:	97 95       	ror	r25
    4f38:	87 95       	ror	r24
    4f3a:	89 83       	std	Y+1, r24	; 0x01
    4f3c:	11 c0       	rjmp	.+34     	; 0x4f60 <twiCreate+0x76>
    4f3e:	c7 01       	movw	r24, r14
    4f40:	b6 01       	movw	r22, r12
    4f42:	20 e8       	ldi	r18, 0x80	; 128
    4f44:	3a e1       	ldi	r19, 0x1A	; 26
    4f46:	46 e0       	ldi	r20, 0x06	; 6
    4f48:	50 e0       	ldi	r21, 0x00	; 0
    4f4a:	3c d3       	rcall	.+1656   	; 0x55c4 <__udivmodsi4>
    4f4c:	da 01       	movw	r26, r20
    4f4e:	c9 01       	movw	r24, r18
    4f50:	40 97       	sbiw	r24, 0x10	; 16
    4f52:	a1 09       	sbc	r26, r1
    4f54:	b1 09       	sbc	r27, r1
    4f56:	b6 95       	lsr	r27
    4f58:	a7 95       	ror	r26
    4f5a:	97 95       	ror	r25
    4f5c:	87 95       	ror	r24
    4f5e:	89 83       	std	Y+1, r24	; 0x01
    4f60:	1b 83       	std	Y+3, r17	; 0x03
    4f62:	0a 83       	std	Y+2, r16	; 0x02
    4f64:	8c 2f       	mov	r24, r28
    4f66:	9d 2f       	mov	r25, r29
    4f68:	02 c0       	rjmp	.+4      	; 0x4f6e <twiCreate+0x84>
    4f6a:	80 e0       	ldi	r24, 0x00	; 0
    4f6c:	90 e0       	ldi	r25, 0x00	; 0
    4f6e:	df 91       	pop	r29
    4f70:	cf 91       	pop	r28
    4f72:	1f 91       	pop	r17
    4f74:	0f 91       	pop	r16
    4f76:	ff 90       	pop	r15
    4f78:	ef 90       	pop	r14
    4f7a:	df 90       	pop	r13
    4f7c:	cf 90       	pop	r12
    4f7e:	bf 90       	pop	r11
    4f80:	af 90       	pop	r10
    4f82:	08 95       	ret

00004f84 <twiIsBusy>:
    4f84:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    4f88:	81 70       	andi	r24, 0x01	; 1
    4f8a:	08 95       	ret

00004f8c <twiTransmit>:
    4f8c:	ff 92       	push	r15
    4f8e:	0f 93       	push	r16
    4f90:	1f 93       	push	r17
    4f92:	cf 93       	push	r28
    4f94:	df 93       	push	r29
    4f96:	00 97       	sbiw	r24, 0x00	; 0
    4f98:	d1 f1       	breq	.+116    	; 0x500e <twiTransmit+0x82>
    4f9a:	4a 30       	cpi	r20, 0x0A	; 10
    4f9c:	d0 f5       	brcc	.+116    	; 0x5012 <twiTransmit+0x86>
    4f9e:	f4 2e       	mov	r15, r20
    4fa0:	8b 01       	movw	r16, r22
    4fa2:	ec 01       	movw	r28, r24
    4fa4:	ef df       	rcall	.-34     	; 0x4f84 <twiIsBusy>
    4fa6:	81 11       	cpse	r24, r1
    4fa8:	36 c0       	rjmp	.+108    	; 0x5016 <twiTransmit+0x8a>
    4faa:	80 91 d5 17 	lds	r24, 0x17D5	; 0x8017d5 <_twiCurrentHandler>
    4fae:	90 91 d6 17 	lds	r25, 0x17D6	; 0x8017d6 <_twiCurrentHandler+0x1>
    4fb2:	c8 17       	cp	r28, r24
    4fb4:	d9 07       	cpc	r29, r25
    4fb6:	41 f0       	breq	.+16     	; 0x4fc8 <twiTransmit+0x3c>
    4fb8:	87 df       	rcall	.-242    	; 0x4ec8 <_initTwiInterface>
    4fba:	89 81       	ldd	r24, Y+1	; 0x01
    4fbc:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    4fc0:	d0 93 d6 17 	sts	0x17D6, r29	; 0x8017d6 <_twiCurrentHandler+0x1>
    4fc4:	c0 93 d5 17 	sts	0x17D5, r28	; 0x8017d5 <_twiCurrentHandler>
    4fc8:	81 e0       	ldi	r24, 0x01	; 1
    4fca:	8f 0d       	add	r24, r15
    4fcc:	80 93 d7 17 	sts	0x17D7, r24	; 0x8017d7 <_twiMessageLen>
    4fd0:	88 81       	ld	r24, Y
    4fd2:	88 0f       	add	r24, r24
    4fd4:	80 93 d8 17 	sts	0x17D8, r24	; 0x8017d8 <_twiMessageBuffer>
    4fd8:	ff 20       	and	r15, r15
    4fda:	89 f0       	breq	.+34     	; 0x4ffe <twiTransmit+0x72>
    4fdc:	f8 01       	movw	r30, r16
    4fde:	a9 ed       	ldi	r26, 0xD9	; 217
    4fe0:	b7 e1       	ldi	r27, 0x17	; 23
    4fe2:	4f ef       	ldi	r20, 0xFF	; 255
    4fe4:	4f 0d       	add	r20, r15
    4fe6:	64 2f       	mov	r22, r20
    4fe8:	70 e0       	ldi	r23, 0x00	; 0
    4fea:	cb 01       	movw	r24, r22
    4fec:	01 96       	adiw	r24, 0x01	; 1
    4fee:	b8 01       	movw	r22, r16
    4ff0:	68 0f       	add	r22, r24
    4ff2:	79 1f       	adc	r23, r25
    4ff4:	81 91       	ld	r24, Z+
    4ff6:	8d 93       	st	X+, r24
    4ff8:	e6 17       	cp	r30, r22
    4ffa:	f7 07       	cpc	r31, r23
    4ffc:	d9 f7       	brne	.-10     	; 0x4ff4 <twiTransmit+0x68>
    4ffe:	88 ef       	ldi	r24, 0xF8	; 248
    5000:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <_twiCurrentState>
    5004:	85 ea       	ldi	r24, 0xA5	; 165
    5006:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    500a:	84 e0       	ldi	r24, 0x04	; 4
    500c:	05 c0       	rjmp	.+10     	; 0x5018 <twiTransmit+0x8c>
    500e:	86 e0       	ldi	r24, 0x06	; 6
    5010:	03 c0       	rjmp	.+6      	; 0x5018 <twiTransmit+0x8c>
    5012:	87 e0       	ldi	r24, 0x07	; 7
    5014:	01 c0       	rjmp	.+2      	; 0x5018 <twiTransmit+0x8c>
    5016:	82 e0       	ldi	r24, 0x02	; 2
    5018:	df 91       	pop	r29
    501a:	cf 91       	pop	r28
    501c:	1f 91       	pop	r17
    501e:	0f 91       	pop	r16
    5020:	ff 90       	pop	r15
    5022:	08 95       	ret

00005024 <twiReceive>:
    5024:	1f 93       	push	r17
    5026:	cf 93       	push	r28
    5028:	df 93       	push	r29
    502a:	00 97       	sbiw	r24, 0x00	; 0
    502c:	29 f1       	breq	.+74     	; 0x5078 <twiReceive+0x54>
    502e:	6b 30       	cpi	r22, 0x0B	; 11
    5030:	28 f5       	brcc	.+74     	; 0x507c <twiReceive+0x58>
    5032:	16 2f       	mov	r17, r22
    5034:	ec 01       	movw	r28, r24
    5036:	a6 df       	rcall	.-180    	; 0x4f84 <twiIsBusy>
    5038:	81 11       	cpse	r24, r1
    503a:	22 c0       	rjmp	.+68     	; 0x5080 <twiReceive+0x5c>
    503c:	80 91 d5 17 	lds	r24, 0x17D5	; 0x8017d5 <_twiCurrentHandler>
    5040:	90 91 d6 17 	lds	r25, 0x17D6	; 0x8017d6 <_twiCurrentHandler+0x1>
    5044:	c8 17       	cp	r28, r24
    5046:	d9 07       	cpc	r29, r25
    5048:	41 f0       	breq	.+16     	; 0x505a <twiReceive+0x36>
    504a:	3e df       	rcall	.-388    	; 0x4ec8 <_initTwiInterface>
    504c:	89 81       	ldd	r24, Y+1	; 0x01
    504e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    5052:	d0 93 d6 17 	sts	0x17D6, r29	; 0x8017d6 <_twiCurrentHandler+0x1>
    5056:	c0 93 d5 17 	sts	0x17D5, r28	; 0x8017d5 <_twiCurrentHandler>
    505a:	10 93 d7 17 	sts	0x17D7, r17	; 0x8017d7 <_twiMessageLen>
    505e:	88 81       	ld	r24, Y
    5060:	88 0f       	add	r24, r24
    5062:	81 60       	ori	r24, 0x01	; 1
    5064:	80 93 d8 17 	sts	0x17D8, r24	; 0x8017d8 <_twiMessageBuffer>
    5068:	88 ef       	ldi	r24, 0xF8	; 248
    506a:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <_twiCurrentState>
    506e:	85 ea       	ldi	r24, 0xA5	; 165
    5070:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5074:	85 e0       	ldi	r24, 0x05	; 5
    5076:	05 c0       	rjmp	.+10     	; 0x5082 <twiReceive+0x5e>
    5078:	86 e0       	ldi	r24, 0x06	; 6
    507a:	03 c0       	rjmp	.+6      	; 0x5082 <twiReceive+0x5e>
    507c:	87 e0       	ldi	r24, 0x07	; 7
    507e:	01 c0       	rjmp	.+2      	; 0x5082 <twiReceive+0x5e>
    5080:	82 e0       	ldi	r24, 0x02	; 2
    5082:	df 91       	pop	r29
    5084:	cf 91       	pop	r28
    5086:	1f 91       	pop	r17
    5088:	08 95       	ret

0000508a <__vector_39>:
    508a:	1f 92       	push	r1
    508c:	0f 92       	push	r0
    508e:	0f b6       	in	r0, 0x3f	; 63
    5090:	0f 92       	push	r0
    5092:	11 24       	eor	r1, r1
    5094:	0b b6       	in	r0, 0x3b	; 59
    5096:	0f 92       	push	r0
    5098:	2f 93       	push	r18
    509a:	3f 93       	push	r19
    509c:	4f 93       	push	r20
    509e:	5f 93       	push	r21
    50a0:	6f 93       	push	r22
    50a2:	7f 93       	push	r23
    50a4:	8f 93       	push	r24
    50a6:	9f 93       	push	r25
    50a8:	af 93       	push	r26
    50aa:	bf 93       	push	r27
    50ac:	ef 93       	push	r30
    50ae:	ff 93       	push	r31
    50b0:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    50b4:	8e 2f       	mov	r24, r30
    50b6:	90 e0       	ldi	r25, 0x00	; 0
    50b8:	fc 01       	movw	r30, r24
    50ba:	38 97       	sbiw	r30, 0x08	; 8
    50bc:	e1 35       	cpi	r30, 0x51	; 81
    50be:	f1 05       	cpc	r31, r1
    50c0:	08 f0       	brcs	.+2      	; 0x50c4 <__vector_39+0x3a>
    50c2:	75 c0       	rjmp	.+234    	; 0x51ae <__vector_39+0x124>
    50c4:	88 27       	eor	r24, r24
    50c6:	e4 58       	subi	r30, 0x84	; 132
    50c8:	ff 4f       	sbci	r31, 0xFF	; 255
    50ca:	8f 4f       	sbci	r24, 0xFF	; 255
    50cc:	9d c2       	rjmp	.+1338   	; 0x5608 <__tablejump2__>
    50ce:	10 92 d4 17 	sts	0x17D4, r1	; 0x8017d4 <_index.1885>
    50d2:	e0 91 d4 17 	lds	r30, 0x17D4	; 0x8017d4 <_index.1885>
    50d6:	80 91 d7 17 	lds	r24, 0x17D7	; 0x8017d7 <_twiMessageLen>
    50da:	e8 17       	cp	r30, r24
    50dc:	70 f4       	brcc	.+28     	; 0x50fa <__vector_39+0x70>
    50de:	81 e0       	ldi	r24, 0x01	; 1
    50e0:	8e 0f       	add	r24, r30
    50e2:	80 93 d4 17 	sts	0x17D4, r24	; 0x8017d4 <_index.1885>
    50e6:	f0 e0       	ldi	r31, 0x00	; 0
    50e8:	e8 52       	subi	r30, 0x28	; 40
    50ea:	f8 4e       	sbci	r31, 0xE8	; 232
    50ec:	80 81       	ld	r24, Z
    50ee:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    50f2:	85 e8       	ldi	r24, 0x85	; 133
    50f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    50f8:	72 c0       	rjmp	.+228    	; 0x51de <__vector_39+0x154>
    50fa:	84 e9       	ldi	r24, 0x94	; 148
    50fc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5100:	80 91 d5 17 	lds	r24, 0x17D5	; 0x8017d5 <_twiCurrentHandler>
    5104:	90 91 d6 17 	lds	r25, 0x17D6	; 0x8017d6 <_twiCurrentHandler+0x1>
    5108:	dc 01       	movw	r26, r24
    510a:	12 96       	adiw	r26, 0x02	; 2
    510c:	ed 91       	ld	r30, X+
    510e:	fc 91       	ld	r31, X
    5110:	13 97       	sbiw	r26, 0x03	; 3
    5112:	30 97       	sbiw	r30, 0x00	; 0
    5114:	09 f4       	brne	.+2      	; 0x5118 <__vector_39+0x8e>
    5116:	63 c0       	rjmp	.+198    	; 0x51de <__vector_39+0x154>
    5118:	20 e0       	ldi	r18, 0x00	; 0
    511a:	40 e0       	ldi	r20, 0x00	; 0
    511c:	50 e0       	ldi	r21, 0x00	; 0
    511e:	64 e0       	ldi	r22, 0x04	; 4
    5120:	19 95       	eicall
    5122:	5d c0       	rjmp	.+186    	; 0x51de <__vector_39+0x154>
    5124:	e0 91 d4 17 	lds	r30, 0x17D4	; 0x8017d4 <_index.1885>
    5128:	81 e0       	ldi	r24, 0x01	; 1
    512a:	8e 0f       	add	r24, r30
    512c:	80 93 d4 17 	sts	0x17D4, r24	; 0x8017d4 <_index.1885>
    5130:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    5134:	f0 e0       	ldi	r31, 0x00	; 0
    5136:	e8 52       	subi	r30, 0x28	; 40
    5138:	f8 4e       	sbci	r31, 0xE8	; 232
    513a:	80 83       	st	Z, r24
    513c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    5140:	80 34       	cpi	r24, 0x40	; 64
    5142:	11 f4       	brne	.+4      	; 0x5148 <__vector_39+0xbe>
    5144:	10 92 d4 17 	sts	0x17D4, r1	; 0x8017d4 <_index.1885>
    5148:	20 91 d4 17 	lds	r18, 0x17D4	; 0x8017d4 <_index.1885>
    514c:	30 e0       	ldi	r19, 0x00	; 0
    514e:	80 91 d7 17 	lds	r24, 0x17D7	; 0x8017d7 <_twiMessageLen>
    5152:	90 e0       	ldi	r25, 0x00	; 0
    5154:	01 97       	sbiw	r24, 0x01	; 1
    5156:	28 17       	cp	r18, r24
    5158:	39 07       	cpc	r19, r25
    515a:	24 f4       	brge	.+8      	; 0x5164 <__vector_39+0xda>
    515c:	85 ec       	ldi	r24, 0xC5	; 197
    515e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5162:	3d c0       	rjmp	.+122    	; 0x51de <__vector_39+0x154>
    5164:	85 e8       	ldi	r24, 0x85	; 133
    5166:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    516a:	39 c0       	rjmp	.+114    	; 0x51de <__vector_39+0x154>
    516c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    5170:	e0 91 d4 17 	lds	r30, 0x17D4	; 0x8017d4 <_index.1885>
    5174:	f0 e0       	ldi	r31, 0x00	; 0
    5176:	e8 52       	subi	r30, 0x28	; 40
    5178:	f8 4e       	sbci	r31, 0xE8	; 232
    517a:	80 83       	st	Z, r24
    517c:	84 e9       	ldi	r24, 0x94	; 148
    517e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    5182:	80 91 d5 17 	lds	r24, 0x17D5	; 0x8017d5 <_twiCurrentHandler>
    5186:	90 91 d6 17 	lds	r25, 0x17D6	; 0x8017d6 <_twiCurrentHandler+0x1>
    518a:	dc 01       	movw	r26, r24
    518c:	12 96       	adiw	r26, 0x02	; 2
    518e:	ed 91       	ld	r30, X+
    5190:	fc 91       	ld	r31, X
    5192:	13 97       	sbiw	r26, 0x03	; 3
    5194:	30 97       	sbiw	r30, 0x00	; 0
    5196:	19 f1       	breq	.+70     	; 0x51de <__vector_39+0x154>
    5198:	20 91 d7 17 	lds	r18, 0x17D7	; 0x8017d7 <_twiMessageLen>
    519c:	48 ed       	ldi	r20, 0xD8	; 216
    519e:	57 e1       	ldi	r21, 0x17	; 23
    51a0:	65 e0       	ldi	r22, 0x05	; 5
    51a2:	19 95       	eicall
    51a4:	1c c0       	rjmp	.+56     	; 0x51de <__vector_39+0x154>
    51a6:	85 ea       	ldi	r24, 0xA5	; 165
    51a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    51ac:	18 c0       	rjmp	.+48     	; 0x51de <__vector_39+0x154>
    51ae:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    51b2:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <_twiCurrentState>
    51b6:	84 e0       	ldi	r24, 0x04	; 4
    51b8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    51bc:	80 91 d5 17 	lds	r24, 0x17D5	; 0x8017d5 <_twiCurrentHandler>
    51c0:	90 91 d6 17 	lds	r25, 0x17D6	; 0x8017d6 <_twiCurrentHandler+0x1>
    51c4:	dc 01       	movw	r26, r24
    51c6:	12 96       	adiw	r26, 0x02	; 2
    51c8:	ed 91       	ld	r30, X+
    51ca:	fc 91       	ld	r31, X
    51cc:	13 97       	sbiw	r26, 0x03	; 3
    51ce:	30 97       	sbiw	r30, 0x00	; 0
    51d0:	31 f0       	breq	.+12     	; 0x51de <__vector_39+0x154>
    51d2:	20 e0       	ldi	r18, 0x00	; 0
    51d4:	40 e0       	ldi	r20, 0x00	; 0
    51d6:	50 e0       	ldi	r21, 0x00	; 0
    51d8:	60 91 21 02 	lds	r22, 0x0221	; 0x800221 <_twiCurrentState>
    51dc:	19 95       	eicall
    51de:	ff 91       	pop	r31
    51e0:	ef 91       	pop	r30
    51e2:	bf 91       	pop	r27
    51e4:	af 91       	pop	r26
    51e6:	9f 91       	pop	r25
    51e8:	8f 91       	pop	r24
    51ea:	7f 91       	pop	r23
    51ec:	6f 91       	pop	r22
    51ee:	5f 91       	pop	r21
    51f0:	4f 91       	pop	r20
    51f2:	3f 91       	pop	r19
    51f4:	2f 91       	pop	r18
    51f6:	0f 90       	pop	r0
    51f8:	0b be       	out	0x3b, r0	; 59
    51fa:	0f 90       	pop	r0
    51fc:	0f be       	out	0x3f, r0	; 63
    51fe:	0f 90       	pop	r0
    5200:	1f 90       	pop	r1
    5202:	18 95       	reti

00005204 <fifo_init>:
    5204:	fc 01       	movw	r30, r24
    5206:	41 11       	cpse	r20, r1
    5208:	01 c0       	rjmp	.+2      	; 0x520c <fifo_init+0x8>
    520a:	41 d3       	rcall	.+1666   	; 0x588e <abort>
    520c:	84 2f       	mov	r24, r20
    520e:	90 e0       	ldi	r25, 0x00	; 0
    5210:	9c 01       	movw	r18, r24
    5212:	21 50       	subi	r18, 0x01	; 1
    5214:	31 09       	sbc	r19, r1
    5216:	82 23       	and	r24, r18
    5218:	93 23       	and	r25, r19
    521a:	89 2b       	or	r24, r25
    521c:	09 f0       	breq	.+2      	; 0x5220 <fifo_init+0x1c>
    521e:	37 d3       	rcall	.+1646   	; 0x588e <abort>
    5220:	41 38       	cpi	r20, 0x81	; 129
    5222:	08 f0       	brcs	.+2      	; 0x5226 <fifo_init+0x22>
    5224:	34 d3       	rcall	.+1640   	; 0x588e <abort>
    5226:	12 82       	std	Z+2, r1	; 0x02
    5228:	13 82       	std	Z+3, r1	; 0x03
    522a:	44 83       	std	Z+4, r20	; 0x04
    522c:	44 0f       	add	r20, r20
    522e:	41 50       	subi	r20, 0x01	; 1
    5230:	45 83       	std	Z+5, r20	; 0x05
    5232:	71 83       	std	Z+1, r23	; 0x01
    5234:	60 83       	st	Z, r22
    5236:	80 e0       	ldi	r24, 0x00	; 0
    5238:	90 e0       	ldi	r25, 0x00	; 0
    523a:	08 95       	ret

0000523c <__subsf3>:
    523c:	50 58       	subi	r21, 0x80	; 128

0000523e <__addsf3>:
    523e:	bb 27       	eor	r27, r27
    5240:	aa 27       	eor	r26, r26
    5242:	0e d0       	rcall	.+28     	; 0x5260 <__addsf3x>
    5244:	21 c1       	rjmp	.+578    	; 0x5488 <__fp_round>
    5246:	12 d1       	rcall	.+548    	; 0x546c <__fp_pscA>
    5248:	30 f0       	brcs	.+12     	; 0x5256 <__addsf3+0x18>
    524a:	17 d1       	rcall	.+558    	; 0x547a <__fp_pscB>
    524c:	20 f0       	brcs	.+8      	; 0x5256 <__addsf3+0x18>
    524e:	31 f4       	brne	.+12     	; 0x525c <__addsf3+0x1e>
    5250:	9f 3f       	cpi	r25, 0xFF	; 255
    5252:	11 f4       	brne	.+4      	; 0x5258 <__addsf3+0x1a>
    5254:	1e f4       	brtc	.+6      	; 0x525c <__addsf3+0x1e>
    5256:	07 c1       	rjmp	.+526    	; 0x5466 <__fp_nan>
    5258:	0e f4       	brtc	.+2      	; 0x525c <__addsf3+0x1e>
    525a:	e0 95       	com	r30
    525c:	e7 fb       	bst	r30, 7
    525e:	fd c0       	rjmp	.+506    	; 0x545a <__fp_inf>

00005260 <__addsf3x>:
    5260:	e9 2f       	mov	r30, r25
    5262:	0e 94 b8 1b 	call	0x3770	; 0x3770 <__fp_split3>
    5266:	78 f3       	brcs	.-34     	; 0x5246 <__addsf3+0x8>
    5268:	ba 17       	cp	r27, r26
    526a:	62 07       	cpc	r22, r18
    526c:	73 07       	cpc	r23, r19
    526e:	84 07       	cpc	r24, r20
    5270:	95 07       	cpc	r25, r21
    5272:	20 f0       	brcs	.+8      	; 0x527c <__addsf3x+0x1c>
    5274:	79 f4       	brne	.+30     	; 0x5294 <__addsf3x+0x34>
    5276:	a6 f5       	brtc	.+104    	; 0x52e0 <__addsf3x+0x80>
    5278:	0c 94 da 1b 	jmp	0x37b4	; 0x37b4 <__fp_zero>
    527c:	0e f4       	brtc	.+2      	; 0x5280 <__addsf3x+0x20>
    527e:	e0 95       	com	r30
    5280:	0b 2e       	mov	r0, r27
    5282:	ba 2f       	mov	r27, r26
    5284:	a0 2d       	mov	r26, r0
    5286:	0b 01       	movw	r0, r22
    5288:	b9 01       	movw	r22, r18
    528a:	90 01       	movw	r18, r0
    528c:	0c 01       	movw	r0, r24
    528e:	ca 01       	movw	r24, r20
    5290:	a0 01       	movw	r20, r0
    5292:	11 24       	eor	r1, r1
    5294:	ff 27       	eor	r31, r31
    5296:	59 1b       	sub	r21, r25
    5298:	99 f0       	breq	.+38     	; 0x52c0 <__addsf3x+0x60>
    529a:	59 3f       	cpi	r21, 0xF9	; 249
    529c:	50 f4       	brcc	.+20     	; 0x52b2 <__addsf3x+0x52>
    529e:	50 3e       	cpi	r21, 0xE0	; 224
    52a0:	68 f1       	brcs	.+90     	; 0x52fc <__addsf3x+0x9c>
    52a2:	1a 16       	cp	r1, r26
    52a4:	f0 40       	sbci	r31, 0x00	; 0
    52a6:	a2 2f       	mov	r26, r18
    52a8:	23 2f       	mov	r18, r19
    52aa:	34 2f       	mov	r19, r20
    52ac:	44 27       	eor	r20, r20
    52ae:	58 5f       	subi	r21, 0xF8	; 248
    52b0:	f3 cf       	rjmp	.-26     	; 0x5298 <__addsf3x+0x38>
    52b2:	46 95       	lsr	r20
    52b4:	37 95       	ror	r19
    52b6:	27 95       	ror	r18
    52b8:	a7 95       	ror	r26
    52ba:	f0 40       	sbci	r31, 0x00	; 0
    52bc:	53 95       	inc	r21
    52be:	c9 f7       	brne	.-14     	; 0x52b2 <__addsf3x+0x52>
    52c0:	7e f4       	brtc	.+30     	; 0x52e0 <__addsf3x+0x80>
    52c2:	1f 16       	cp	r1, r31
    52c4:	ba 0b       	sbc	r27, r26
    52c6:	62 0b       	sbc	r22, r18
    52c8:	73 0b       	sbc	r23, r19
    52ca:	84 0b       	sbc	r24, r20
    52cc:	ba f0       	brmi	.+46     	; 0x52fc <__addsf3x+0x9c>
    52ce:	91 50       	subi	r25, 0x01	; 1
    52d0:	a1 f0       	breq	.+40     	; 0x52fa <__addsf3x+0x9a>
    52d2:	ff 0f       	add	r31, r31
    52d4:	bb 1f       	adc	r27, r27
    52d6:	66 1f       	adc	r22, r22
    52d8:	77 1f       	adc	r23, r23
    52da:	88 1f       	adc	r24, r24
    52dc:	c2 f7       	brpl	.-16     	; 0x52ce <__addsf3x+0x6e>
    52de:	0e c0       	rjmp	.+28     	; 0x52fc <__addsf3x+0x9c>
    52e0:	ba 0f       	add	r27, r26
    52e2:	62 1f       	adc	r22, r18
    52e4:	73 1f       	adc	r23, r19
    52e6:	84 1f       	adc	r24, r20
    52e8:	48 f4       	brcc	.+18     	; 0x52fc <__addsf3x+0x9c>
    52ea:	87 95       	ror	r24
    52ec:	77 95       	ror	r23
    52ee:	67 95       	ror	r22
    52f0:	b7 95       	ror	r27
    52f2:	f7 95       	ror	r31
    52f4:	9e 3f       	cpi	r25, 0xFE	; 254
    52f6:	08 f0       	brcs	.+2      	; 0x52fa <__addsf3x+0x9a>
    52f8:	b1 cf       	rjmp	.-158    	; 0x525c <__addsf3+0x1e>
    52fa:	93 95       	inc	r25
    52fc:	88 0f       	add	r24, r24
    52fe:	08 f0       	brcs	.+2      	; 0x5302 <__addsf3x+0xa2>
    5300:	99 27       	eor	r25, r25
    5302:	ee 0f       	add	r30, r30
    5304:	97 95       	ror	r25
    5306:	87 95       	ror	r24
    5308:	08 95       	ret

0000530a <__divsf3>:
    530a:	0d d0       	rcall	.+26     	; 0x5326 <__divsf3x>
    530c:	bd c0       	rjmp	.+378    	; 0x5488 <__fp_round>
    530e:	b5 d0       	rcall	.+362    	; 0x547a <__fp_pscB>
    5310:	48 f0       	brcs	.+18     	; 0x5324 <__divsf3+0x1a>
    5312:	ac d0       	rcall	.+344    	; 0x546c <__fp_pscA>
    5314:	38 f0       	brcs	.+14     	; 0x5324 <__divsf3+0x1a>
    5316:	21 f4       	brne	.+8      	; 0x5320 <__divsf3+0x16>
    5318:	5f 3f       	cpi	r21, 0xFF	; 255
    531a:	21 f0       	breq	.+8      	; 0x5324 <__divsf3+0x1a>
    531c:	9e c0       	rjmp	.+316    	; 0x545a <__fp_inf>
    531e:	51 11       	cpse	r21, r1
    5320:	0c 94 db 1b 	jmp	0x37b6	; 0x37b6 <__fp_szero>
    5324:	a0 c0       	rjmp	.+320    	; 0x5466 <__fp_nan>

00005326 <__divsf3x>:
    5326:	0e 94 b8 1b 	call	0x3770	; 0x3770 <__fp_split3>
    532a:	88 f3       	brcs	.-30     	; 0x530e <__divsf3+0x4>

0000532c <__divsf3_pse>:
    532c:	99 23       	and	r25, r25
    532e:	b9 f3       	breq	.-18     	; 0x531e <__divsf3+0x14>
    5330:	55 23       	and	r21, r21
    5332:	a1 f3       	breq	.-24     	; 0x531c <__divsf3+0x12>
    5334:	95 1b       	sub	r25, r21
    5336:	55 0b       	sbc	r21, r21
    5338:	bb 27       	eor	r27, r27
    533a:	aa 27       	eor	r26, r26
    533c:	62 17       	cp	r22, r18
    533e:	73 07       	cpc	r23, r19
    5340:	84 07       	cpc	r24, r20
    5342:	38 f0       	brcs	.+14     	; 0x5352 <__divsf3_pse+0x26>
    5344:	9f 5f       	subi	r25, 0xFF	; 255
    5346:	5f 4f       	sbci	r21, 0xFF	; 255
    5348:	22 0f       	add	r18, r18
    534a:	33 1f       	adc	r19, r19
    534c:	44 1f       	adc	r20, r20
    534e:	aa 1f       	adc	r26, r26
    5350:	a9 f3       	breq	.-22     	; 0x533c <__divsf3_pse+0x10>
    5352:	34 d0       	rcall	.+104    	; 0x53bc <__divsf3_pse+0x90>
    5354:	0e 2e       	mov	r0, r30
    5356:	3a f0       	brmi	.+14     	; 0x5366 <__divsf3_pse+0x3a>
    5358:	e0 e8       	ldi	r30, 0x80	; 128
    535a:	31 d0       	rcall	.+98     	; 0x53be <__divsf3_pse+0x92>
    535c:	91 50       	subi	r25, 0x01	; 1
    535e:	50 40       	sbci	r21, 0x00	; 0
    5360:	e6 95       	lsr	r30
    5362:	00 1c       	adc	r0, r0
    5364:	ca f7       	brpl	.-14     	; 0x5358 <__divsf3_pse+0x2c>
    5366:	2a d0       	rcall	.+84     	; 0x53bc <__divsf3_pse+0x90>
    5368:	fe 2f       	mov	r31, r30
    536a:	28 d0       	rcall	.+80     	; 0x53bc <__divsf3_pse+0x90>
    536c:	66 0f       	add	r22, r22
    536e:	77 1f       	adc	r23, r23
    5370:	88 1f       	adc	r24, r24
    5372:	bb 1f       	adc	r27, r27
    5374:	26 17       	cp	r18, r22
    5376:	37 07       	cpc	r19, r23
    5378:	48 07       	cpc	r20, r24
    537a:	ab 07       	cpc	r26, r27
    537c:	b0 e8       	ldi	r27, 0x80	; 128
    537e:	09 f0       	breq	.+2      	; 0x5382 <__divsf3_pse+0x56>
    5380:	bb 0b       	sbc	r27, r27
    5382:	80 2d       	mov	r24, r0
    5384:	bf 01       	movw	r22, r30
    5386:	ff 27       	eor	r31, r31
    5388:	93 58       	subi	r25, 0x83	; 131
    538a:	5f 4f       	sbci	r21, 0xFF	; 255
    538c:	32 f0       	brmi	.+12     	; 0x539a <__divsf3_pse+0x6e>
    538e:	9e 3f       	cpi	r25, 0xFE	; 254
    5390:	51 05       	cpc	r21, r1
    5392:	70 f0       	brcs	.+28     	; 0x53b0 <__divsf3_pse+0x84>
    5394:	62 c0       	rjmp	.+196    	; 0x545a <__fp_inf>
    5396:	0c 94 db 1b 	jmp	0x37b6	; 0x37b6 <__fp_szero>
    539a:	5f 3f       	cpi	r21, 0xFF	; 255
    539c:	e4 f3       	brlt	.-8      	; 0x5396 <__divsf3_pse+0x6a>
    539e:	98 3e       	cpi	r25, 0xE8	; 232
    53a0:	d4 f3       	brlt	.-12     	; 0x5396 <__divsf3_pse+0x6a>
    53a2:	86 95       	lsr	r24
    53a4:	77 95       	ror	r23
    53a6:	67 95       	ror	r22
    53a8:	b7 95       	ror	r27
    53aa:	f7 95       	ror	r31
    53ac:	9f 5f       	subi	r25, 0xFF	; 255
    53ae:	c9 f7       	brne	.-14     	; 0x53a2 <__divsf3_pse+0x76>
    53b0:	88 0f       	add	r24, r24
    53b2:	91 1d       	adc	r25, r1
    53b4:	96 95       	lsr	r25
    53b6:	87 95       	ror	r24
    53b8:	97 f9       	bld	r25, 7
    53ba:	08 95       	ret
    53bc:	e1 e0       	ldi	r30, 0x01	; 1
    53be:	66 0f       	add	r22, r22
    53c0:	77 1f       	adc	r23, r23
    53c2:	88 1f       	adc	r24, r24
    53c4:	bb 1f       	adc	r27, r27
    53c6:	62 17       	cp	r22, r18
    53c8:	73 07       	cpc	r23, r19
    53ca:	84 07       	cpc	r24, r20
    53cc:	ba 07       	cpc	r27, r26
    53ce:	20 f0       	brcs	.+8      	; 0x53d8 <__divsf3_pse+0xac>
    53d0:	62 1b       	sub	r22, r18
    53d2:	73 0b       	sbc	r23, r19
    53d4:	84 0b       	sbc	r24, r20
    53d6:	ba 0b       	sbc	r27, r26
    53d8:	ee 1f       	adc	r30, r30
    53da:	88 f7       	brcc	.-30     	; 0x53be <__divsf3_pse+0x92>
    53dc:	e0 95       	com	r30
    53de:	08 95       	ret

000053e0 <__floatunsisf>:
    53e0:	e8 94       	clt
    53e2:	09 c0       	rjmp	.+18     	; 0x53f6 <__floatsisf+0x12>

000053e4 <__floatsisf>:
    53e4:	97 fb       	bst	r25, 7
    53e6:	3e f4       	brtc	.+14     	; 0x53f6 <__floatsisf+0x12>
    53e8:	90 95       	com	r25
    53ea:	80 95       	com	r24
    53ec:	70 95       	com	r23
    53ee:	61 95       	neg	r22
    53f0:	7f 4f       	sbci	r23, 0xFF	; 255
    53f2:	8f 4f       	sbci	r24, 0xFF	; 255
    53f4:	9f 4f       	sbci	r25, 0xFF	; 255
    53f6:	99 23       	and	r25, r25
    53f8:	a9 f0       	breq	.+42     	; 0x5424 <__floatsisf+0x40>
    53fa:	f9 2f       	mov	r31, r25
    53fc:	96 e9       	ldi	r25, 0x96	; 150
    53fe:	bb 27       	eor	r27, r27
    5400:	93 95       	inc	r25
    5402:	f6 95       	lsr	r31
    5404:	87 95       	ror	r24
    5406:	77 95       	ror	r23
    5408:	67 95       	ror	r22
    540a:	b7 95       	ror	r27
    540c:	f1 11       	cpse	r31, r1
    540e:	f8 cf       	rjmp	.-16     	; 0x5400 <__floatsisf+0x1c>
    5410:	fa f4       	brpl	.+62     	; 0x5450 <__floatsisf+0x6c>
    5412:	bb 0f       	add	r27, r27
    5414:	11 f4       	brne	.+4      	; 0x541a <__floatsisf+0x36>
    5416:	60 ff       	sbrs	r22, 0
    5418:	1b c0       	rjmp	.+54     	; 0x5450 <__floatsisf+0x6c>
    541a:	6f 5f       	subi	r22, 0xFF	; 255
    541c:	7f 4f       	sbci	r23, 0xFF	; 255
    541e:	8f 4f       	sbci	r24, 0xFF	; 255
    5420:	9f 4f       	sbci	r25, 0xFF	; 255
    5422:	16 c0       	rjmp	.+44     	; 0x5450 <__floatsisf+0x6c>
    5424:	88 23       	and	r24, r24
    5426:	11 f0       	breq	.+4      	; 0x542c <__floatsisf+0x48>
    5428:	96 e9       	ldi	r25, 0x96	; 150
    542a:	11 c0       	rjmp	.+34     	; 0x544e <__floatsisf+0x6a>
    542c:	77 23       	and	r23, r23
    542e:	21 f0       	breq	.+8      	; 0x5438 <__floatsisf+0x54>
    5430:	9e e8       	ldi	r25, 0x8E	; 142
    5432:	87 2f       	mov	r24, r23
    5434:	76 2f       	mov	r23, r22
    5436:	05 c0       	rjmp	.+10     	; 0x5442 <__floatsisf+0x5e>
    5438:	66 23       	and	r22, r22
    543a:	71 f0       	breq	.+28     	; 0x5458 <__floatsisf+0x74>
    543c:	96 e8       	ldi	r25, 0x86	; 134
    543e:	86 2f       	mov	r24, r22
    5440:	70 e0       	ldi	r23, 0x00	; 0
    5442:	60 e0       	ldi	r22, 0x00	; 0
    5444:	2a f0       	brmi	.+10     	; 0x5450 <__floatsisf+0x6c>
    5446:	9a 95       	dec	r25
    5448:	66 0f       	add	r22, r22
    544a:	77 1f       	adc	r23, r23
    544c:	88 1f       	adc	r24, r24
    544e:	da f7       	brpl	.-10     	; 0x5446 <__floatsisf+0x62>
    5450:	88 0f       	add	r24, r24
    5452:	96 95       	lsr	r25
    5454:	87 95       	ror	r24
    5456:	97 f9       	bld	r25, 7
    5458:	08 95       	ret

0000545a <__fp_inf>:
    545a:	97 f9       	bld	r25, 7
    545c:	9f 67       	ori	r25, 0x7F	; 127
    545e:	80 e8       	ldi	r24, 0x80	; 128
    5460:	70 e0       	ldi	r23, 0x00	; 0
    5462:	60 e0       	ldi	r22, 0x00	; 0
    5464:	08 95       	ret

00005466 <__fp_nan>:
    5466:	9f ef       	ldi	r25, 0xFF	; 255
    5468:	80 ec       	ldi	r24, 0xC0	; 192
    546a:	08 95       	ret

0000546c <__fp_pscA>:
    546c:	00 24       	eor	r0, r0
    546e:	0a 94       	dec	r0
    5470:	16 16       	cp	r1, r22
    5472:	17 06       	cpc	r1, r23
    5474:	18 06       	cpc	r1, r24
    5476:	09 06       	cpc	r0, r25
    5478:	08 95       	ret

0000547a <__fp_pscB>:
    547a:	00 24       	eor	r0, r0
    547c:	0a 94       	dec	r0
    547e:	12 16       	cp	r1, r18
    5480:	13 06       	cpc	r1, r19
    5482:	14 06       	cpc	r1, r20
    5484:	05 06       	cpc	r0, r21
    5486:	08 95       	ret

00005488 <__fp_round>:
    5488:	09 2e       	mov	r0, r25
    548a:	03 94       	inc	r0
    548c:	00 0c       	add	r0, r0
    548e:	11 f4       	brne	.+4      	; 0x5494 <__fp_round+0xc>
    5490:	88 23       	and	r24, r24
    5492:	52 f0       	brmi	.+20     	; 0x54a8 <__fp_round+0x20>
    5494:	bb 0f       	add	r27, r27
    5496:	40 f4       	brcc	.+16     	; 0x54a8 <__fp_round+0x20>
    5498:	bf 2b       	or	r27, r31
    549a:	11 f4       	brne	.+4      	; 0x54a0 <__fp_round+0x18>
    549c:	60 ff       	sbrs	r22, 0
    549e:	04 c0       	rjmp	.+8      	; 0x54a8 <__fp_round+0x20>
    54a0:	6f 5f       	subi	r22, 0xFF	; 255
    54a2:	7f 4f       	sbci	r23, 0xFF	; 255
    54a4:	8f 4f       	sbci	r24, 0xFF	; 255
    54a6:	9f 4f       	sbci	r25, 0xFF	; 255
    54a8:	08 95       	ret

000054aa <__mulsf3>:
    54aa:	0c d0       	rcall	.+24     	; 0x54c4 <__mulsf3x>
    54ac:	ed cf       	rjmp	.-38     	; 0x5488 <__fp_round>
    54ae:	de df       	rcall	.-68     	; 0x546c <__fp_pscA>
    54b0:	28 f0       	brcs	.+10     	; 0x54bc <__mulsf3+0x12>
    54b2:	e3 df       	rcall	.-58     	; 0x547a <__fp_pscB>
    54b4:	18 f0       	brcs	.+6      	; 0x54bc <__mulsf3+0x12>
    54b6:	95 23       	and	r25, r21
    54b8:	09 f0       	breq	.+2      	; 0x54bc <__mulsf3+0x12>
    54ba:	cf cf       	rjmp	.-98     	; 0x545a <__fp_inf>
    54bc:	d4 cf       	rjmp	.-88     	; 0x5466 <__fp_nan>
    54be:	11 24       	eor	r1, r1
    54c0:	0c 94 db 1b 	jmp	0x37b6	; 0x37b6 <__fp_szero>

000054c4 <__mulsf3x>:
    54c4:	0e 94 b8 1b 	call	0x3770	; 0x3770 <__fp_split3>
    54c8:	90 f3       	brcs	.-28     	; 0x54ae <__mulsf3+0x4>

000054ca <__mulsf3_pse>:
    54ca:	95 9f       	mul	r25, r21
    54cc:	c1 f3       	breq	.-16     	; 0x54be <__mulsf3+0x14>
    54ce:	95 0f       	add	r25, r21
    54d0:	50 e0       	ldi	r21, 0x00	; 0
    54d2:	55 1f       	adc	r21, r21
    54d4:	62 9f       	mul	r22, r18
    54d6:	f0 01       	movw	r30, r0
    54d8:	72 9f       	mul	r23, r18
    54da:	bb 27       	eor	r27, r27
    54dc:	f0 0d       	add	r31, r0
    54de:	b1 1d       	adc	r27, r1
    54e0:	63 9f       	mul	r22, r19
    54e2:	aa 27       	eor	r26, r26
    54e4:	f0 0d       	add	r31, r0
    54e6:	b1 1d       	adc	r27, r1
    54e8:	aa 1f       	adc	r26, r26
    54ea:	64 9f       	mul	r22, r20
    54ec:	66 27       	eor	r22, r22
    54ee:	b0 0d       	add	r27, r0
    54f0:	a1 1d       	adc	r26, r1
    54f2:	66 1f       	adc	r22, r22
    54f4:	82 9f       	mul	r24, r18
    54f6:	22 27       	eor	r18, r18
    54f8:	b0 0d       	add	r27, r0
    54fa:	a1 1d       	adc	r26, r1
    54fc:	62 1f       	adc	r22, r18
    54fe:	73 9f       	mul	r23, r19
    5500:	b0 0d       	add	r27, r0
    5502:	a1 1d       	adc	r26, r1
    5504:	62 1f       	adc	r22, r18
    5506:	83 9f       	mul	r24, r19
    5508:	a0 0d       	add	r26, r0
    550a:	61 1d       	adc	r22, r1
    550c:	22 1f       	adc	r18, r18
    550e:	74 9f       	mul	r23, r20
    5510:	33 27       	eor	r19, r19
    5512:	a0 0d       	add	r26, r0
    5514:	61 1d       	adc	r22, r1
    5516:	23 1f       	adc	r18, r19
    5518:	84 9f       	mul	r24, r20
    551a:	60 0d       	add	r22, r0
    551c:	21 1d       	adc	r18, r1
    551e:	82 2f       	mov	r24, r18
    5520:	76 2f       	mov	r23, r22
    5522:	6a 2f       	mov	r22, r26
    5524:	11 24       	eor	r1, r1
    5526:	9f 57       	subi	r25, 0x7F	; 127
    5528:	50 40       	sbci	r21, 0x00	; 0
    552a:	92 f0       	brmi	.+36     	; 0x5550 <__mulsf3_pse+0x86>
    552c:	e9 f0       	breq	.+58     	; 0x5568 <__mulsf3_pse+0x9e>
    552e:	88 23       	and	r24, r24
    5530:	4a f0       	brmi	.+18     	; 0x5544 <__mulsf3_pse+0x7a>
    5532:	ee 0f       	add	r30, r30
    5534:	ff 1f       	adc	r31, r31
    5536:	bb 1f       	adc	r27, r27
    5538:	66 1f       	adc	r22, r22
    553a:	77 1f       	adc	r23, r23
    553c:	88 1f       	adc	r24, r24
    553e:	91 50       	subi	r25, 0x01	; 1
    5540:	50 40       	sbci	r21, 0x00	; 0
    5542:	a9 f7       	brne	.-22     	; 0x552e <__mulsf3_pse+0x64>
    5544:	9e 3f       	cpi	r25, 0xFE	; 254
    5546:	51 05       	cpc	r21, r1
    5548:	78 f0       	brcs	.+30     	; 0x5568 <__mulsf3_pse+0x9e>
    554a:	87 cf       	rjmp	.-242    	; 0x545a <__fp_inf>
    554c:	0c 94 db 1b 	jmp	0x37b6	; 0x37b6 <__fp_szero>
    5550:	5f 3f       	cpi	r21, 0xFF	; 255
    5552:	e4 f3       	brlt	.-8      	; 0x554c <__mulsf3_pse+0x82>
    5554:	98 3e       	cpi	r25, 0xE8	; 232
    5556:	d4 f3       	brlt	.-12     	; 0x554c <__mulsf3_pse+0x82>
    5558:	86 95       	lsr	r24
    555a:	77 95       	ror	r23
    555c:	67 95       	ror	r22
    555e:	b7 95       	ror	r27
    5560:	f7 95       	ror	r31
    5562:	e7 95       	ror	r30
    5564:	9f 5f       	subi	r25, 0xFF	; 255
    5566:	c1 f7       	brne	.-16     	; 0x5558 <__mulsf3_pse+0x8e>
    5568:	fe 2b       	or	r31, r30
    556a:	88 0f       	add	r24, r24
    556c:	91 1d       	adc	r25, r1
    556e:	96 95       	lsr	r25
    5570:	87 95       	ror	r24
    5572:	97 f9       	bld	r25, 7
    5574:	08 95       	ret

00005576 <__udivmodhi4>:
    5576:	aa 1b       	sub	r26, r26
    5578:	bb 1b       	sub	r27, r27
    557a:	51 e1       	ldi	r21, 0x11	; 17
    557c:	07 c0       	rjmp	.+14     	; 0x558c <__udivmodhi4_ep>

0000557e <__udivmodhi4_loop>:
    557e:	aa 1f       	adc	r26, r26
    5580:	bb 1f       	adc	r27, r27
    5582:	a6 17       	cp	r26, r22
    5584:	b7 07       	cpc	r27, r23
    5586:	10 f0       	brcs	.+4      	; 0x558c <__udivmodhi4_ep>
    5588:	a6 1b       	sub	r26, r22
    558a:	b7 0b       	sbc	r27, r23

0000558c <__udivmodhi4_ep>:
    558c:	88 1f       	adc	r24, r24
    558e:	99 1f       	adc	r25, r25
    5590:	5a 95       	dec	r21
    5592:	a9 f7       	brne	.-22     	; 0x557e <__udivmodhi4_loop>
    5594:	80 95       	com	r24
    5596:	90 95       	com	r25
    5598:	bc 01       	movw	r22, r24
    559a:	cd 01       	movw	r24, r26
    559c:	08 95       	ret

0000559e <__divmodhi4>:
    559e:	97 fb       	bst	r25, 7
    55a0:	07 2e       	mov	r0, r23
    55a2:	16 f4       	brtc	.+4      	; 0x55a8 <__divmodhi4+0xa>
    55a4:	00 94       	com	r0
    55a6:	06 d0       	rcall	.+12     	; 0x55b4 <__divmodhi4_neg1>
    55a8:	77 fd       	sbrc	r23, 7
    55aa:	08 d0       	rcall	.+16     	; 0x55bc <__divmodhi4_neg2>
    55ac:	e4 df       	rcall	.-56     	; 0x5576 <__udivmodhi4>
    55ae:	07 fc       	sbrc	r0, 7
    55b0:	05 d0       	rcall	.+10     	; 0x55bc <__divmodhi4_neg2>
    55b2:	3e f4       	brtc	.+14     	; 0x55c2 <__divmodhi4_exit>

000055b4 <__divmodhi4_neg1>:
    55b4:	90 95       	com	r25
    55b6:	81 95       	neg	r24
    55b8:	9f 4f       	sbci	r25, 0xFF	; 255
    55ba:	08 95       	ret

000055bc <__divmodhi4_neg2>:
    55bc:	70 95       	com	r23
    55be:	61 95       	neg	r22
    55c0:	7f 4f       	sbci	r23, 0xFF	; 255

000055c2 <__divmodhi4_exit>:
    55c2:	08 95       	ret

000055c4 <__udivmodsi4>:
    55c4:	a1 e2       	ldi	r26, 0x21	; 33
    55c6:	1a 2e       	mov	r1, r26
    55c8:	aa 1b       	sub	r26, r26
    55ca:	bb 1b       	sub	r27, r27
    55cc:	fd 01       	movw	r30, r26
    55ce:	0d c0       	rjmp	.+26     	; 0x55ea <__udivmodsi4_ep>

000055d0 <__udivmodsi4_loop>:
    55d0:	aa 1f       	adc	r26, r26
    55d2:	bb 1f       	adc	r27, r27
    55d4:	ee 1f       	adc	r30, r30
    55d6:	ff 1f       	adc	r31, r31
    55d8:	a2 17       	cp	r26, r18
    55da:	b3 07       	cpc	r27, r19
    55dc:	e4 07       	cpc	r30, r20
    55de:	f5 07       	cpc	r31, r21
    55e0:	20 f0       	brcs	.+8      	; 0x55ea <__udivmodsi4_ep>
    55e2:	a2 1b       	sub	r26, r18
    55e4:	b3 0b       	sbc	r27, r19
    55e6:	e4 0b       	sbc	r30, r20
    55e8:	f5 0b       	sbc	r31, r21

000055ea <__udivmodsi4_ep>:
    55ea:	66 1f       	adc	r22, r22
    55ec:	77 1f       	adc	r23, r23
    55ee:	88 1f       	adc	r24, r24
    55f0:	99 1f       	adc	r25, r25
    55f2:	1a 94       	dec	r1
    55f4:	69 f7       	brne	.-38     	; 0x55d0 <__udivmodsi4_loop>
    55f6:	60 95       	com	r22
    55f8:	70 95       	com	r23
    55fa:	80 95       	com	r24
    55fc:	90 95       	com	r25
    55fe:	9b 01       	movw	r18, r22
    5600:	ac 01       	movw	r20, r24
    5602:	bd 01       	movw	r22, r26
    5604:	cf 01       	movw	r24, r30
    5606:	08 95       	ret

00005608 <__tablejump2__>:
    5608:	ee 0f       	add	r30, r30
    560a:	ff 1f       	adc	r31, r31
    560c:	88 1f       	adc	r24, r24
    560e:	8b bf       	out	0x3b, r24	; 59
    5610:	07 90       	elpm	r0, Z+
    5612:	f6 91       	elpm	r31, Z
    5614:	e0 2d       	mov	r30, r0
    5616:	19 94       	eijmp

00005618 <calloc>:
    5618:	0f 93       	push	r16
    561a:	1f 93       	push	r17
    561c:	cf 93       	push	r28
    561e:	df 93       	push	r29
    5620:	86 9f       	mul	r24, r22
    5622:	80 01       	movw	r16, r0
    5624:	87 9f       	mul	r24, r23
    5626:	10 0d       	add	r17, r0
    5628:	96 9f       	mul	r25, r22
    562a:	10 0d       	add	r17, r0
    562c:	11 24       	eor	r1, r1
    562e:	c8 01       	movw	r24, r16
    5630:	0d d0       	rcall	.+26     	; 0x564c <malloc>
    5632:	ec 01       	movw	r28, r24
    5634:	00 97       	sbiw	r24, 0x00	; 0
    5636:	21 f0       	breq	.+8      	; 0x5640 <calloc+0x28>
    5638:	a8 01       	movw	r20, r16
    563a:	60 e0       	ldi	r22, 0x00	; 0
    563c:	70 e0       	ldi	r23, 0x00	; 0
    563e:	34 d1       	rcall	.+616    	; 0x58a8 <memset>
    5640:	ce 01       	movw	r24, r28
    5642:	df 91       	pop	r29
    5644:	cf 91       	pop	r28
    5646:	1f 91       	pop	r17
    5648:	0f 91       	pop	r16
    564a:	08 95       	ret

0000564c <malloc>:
    564c:	0f 93       	push	r16
    564e:	1f 93       	push	r17
    5650:	cf 93       	push	r28
    5652:	df 93       	push	r29
    5654:	82 30       	cpi	r24, 0x02	; 2
    5656:	91 05       	cpc	r25, r1
    5658:	10 f4       	brcc	.+4      	; 0x565e <malloc+0x12>
    565a:	82 e0       	ldi	r24, 0x02	; 2
    565c:	90 e0       	ldi	r25, 0x00	; 0
    565e:	e0 91 fb 17 	lds	r30, 0x17FB	; 0x8017fb <__flp>
    5662:	f0 91 fc 17 	lds	r31, 0x17FC	; 0x8017fc <__flp+0x1>
    5666:	20 e0       	ldi	r18, 0x00	; 0
    5668:	30 e0       	ldi	r19, 0x00	; 0
    566a:	a0 e0       	ldi	r26, 0x00	; 0
    566c:	b0 e0       	ldi	r27, 0x00	; 0
    566e:	30 97       	sbiw	r30, 0x00	; 0
    5670:	19 f1       	breq	.+70     	; 0x56b8 <malloc+0x6c>
    5672:	40 81       	ld	r20, Z
    5674:	51 81       	ldd	r21, Z+1	; 0x01
    5676:	02 81       	ldd	r16, Z+2	; 0x02
    5678:	13 81       	ldd	r17, Z+3	; 0x03
    567a:	48 17       	cp	r20, r24
    567c:	59 07       	cpc	r21, r25
    567e:	c8 f0       	brcs	.+50     	; 0x56b2 <malloc+0x66>
    5680:	84 17       	cp	r24, r20
    5682:	95 07       	cpc	r25, r21
    5684:	69 f4       	brne	.+26     	; 0x56a0 <malloc+0x54>
    5686:	10 97       	sbiw	r26, 0x00	; 0
    5688:	31 f0       	breq	.+12     	; 0x5696 <malloc+0x4a>
    568a:	12 96       	adiw	r26, 0x02	; 2
    568c:	0c 93       	st	X, r16
    568e:	12 97       	sbiw	r26, 0x02	; 2
    5690:	13 96       	adiw	r26, 0x03	; 3
    5692:	1c 93       	st	X, r17
    5694:	27 c0       	rjmp	.+78     	; 0x56e4 <malloc+0x98>
    5696:	00 93 fb 17 	sts	0x17FB, r16	; 0x8017fb <__flp>
    569a:	10 93 fc 17 	sts	0x17FC, r17	; 0x8017fc <__flp+0x1>
    569e:	22 c0       	rjmp	.+68     	; 0x56e4 <malloc+0x98>
    56a0:	21 15       	cp	r18, r1
    56a2:	31 05       	cpc	r19, r1
    56a4:	19 f0       	breq	.+6      	; 0x56ac <malloc+0x60>
    56a6:	42 17       	cp	r20, r18
    56a8:	53 07       	cpc	r21, r19
    56aa:	18 f4       	brcc	.+6      	; 0x56b2 <malloc+0x66>
    56ac:	9a 01       	movw	r18, r20
    56ae:	bd 01       	movw	r22, r26
    56b0:	ef 01       	movw	r28, r30
    56b2:	df 01       	movw	r26, r30
    56b4:	f8 01       	movw	r30, r16
    56b6:	db cf       	rjmp	.-74     	; 0x566e <malloc+0x22>
    56b8:	21 15       	cp	r18, r1
    56ba:	31 05       	cpc	r19, r1
    56bc:	f9 f0       	breq	.+62     	; 0x56fc <malloc+0xb0>
    56be:	28 1b       	sub	r18, r24
    56c0:	39 0b       	sbc	r19, r25
    56c2:	24 30       	cpi	r18, 0x04	; 4
    56c4:	31 05       	cpc	r19, r1
    56c6:	80 f4       	brcc	.+32     	; 0x56e8 <malloc+0x9c>
    56c8:	8a 81       	ldd	r24, Y+2	; 0x02
    56ca:	9b 81       	ldd	r25, Y+3	; 0x03
    56cc:	61 15       	cp	r22, r1
    56ce:	71 05       	cpc	r23, r1
    56d0:	21 f0       	breq	.+8      	; 0x56da <malloc+0x8e>
    56d2:	fb 01       	movw	r30, r22
    56d4:	93 83       	std	Z+3, r25	; 0x03
    56d6:	82 83       	std	Z+2, r24	; 0x02
    56d8:	04 c0       	rjmp	.+8      	; 0x56e2 <malloc+0x96>
    56da:	90 93 fc 17 	sts	0x17FC, r25	; 0x8017fc <__flp+0x1>
    56de:	80 93 fb 17 	sts	0x17FB, r24	; 0x8017fb <__flp>
    56e2:	fe 01       	movw	r30, r28
    56e4:	32 96       	adiw	r30, 0x02	; 2
    56e6:	44 c0       	rjmp	.+136    	; 0x5770 <malloc+0x124>
    56e8:	fe 01       	movw	r30, r28
    56ea:	e2 0f       	add	r30, r18
    56ec:	f3 1f       	adc	r31, r19
    56ee:	81 93       	st	Z+, r24
    56f0:	91 93       	st	Z+, r25
    56f2:	22 50       	subi	r18, 0x02	; 2
    56f4:	31 09       	sbc	r19, r1
    56f6:	39 83       	std	Y+1, r19	; 0x01
    56f8:	28 83       	st	Y, r18
    56fa:	3a c0       	rjmp	.+116    	; 0x5770 <malloc+0x124>
    56fc:	20 91 f9 17 	lds	r18, 0x17F9	; 0x8017f9 <__brkval>
    5700:	30 91 fa 17 	lds	r19, 0x17FA	; 0x8017fa <__brkval+0x1>
    5704:	23 2b       	or	r18, r19
    5706:	41 f4       	brne	.+16     	; 0x5718 <malloc+0xcc>
    5708:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    570c:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    5710:	30 93 fa 17 	sts	0x17FA, r19	; 0x8017fa <__brkval+0x1>
    5714:	20 93 f9 17 	sts	0x17F9, r18	; 0x8017f9 <__brkval>
    5718:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    571c:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    5720:	21 15       	cp	r18, r1
    5722:	31 05       	cpc	r19, r1
    5724:	41 f4       	brne	.+16     	; 0x5736 <malloc+0xea>
    5726:	2d b7       	in	r18, 0x3d	; 61
    5728:	3e b7       	in	r19, 0x3e	; 62
    572a:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    572e:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    5732:	24 1b       	sub	r18, r20
    5734:	35 0b       	sbc	r19, r21
    5736:	e0 91 f9 17 	lds	r30, 0x17F9	; 0x8017f9 <__brkval>
    573a:	f0 91 fa 17 	lds	r31, 0x17FA	; 0x8017fa <__brkval+0x1>
    573e:	e2 17       	cp	r30, r18
    5740:	f3 07       	cpc	r31, r19
    5742:	a0 f4       	brcc	.+40     	; 0x576c <malloc+0x120>
    5744:	2e 1b       	sub	r18, r30
    5746:	3f 0b       	sbc	r19, r31
    5748:	28 17       	cp	r18, r24
    574a:	39 07       	cpc	r19, r25
    574c:	78 f0       	brcs	.+30     	; 0x576c <malloc+0x120>
    574e:	ac 01       	movw	r20, r24
    5750:	4e 5f       	subi	r20, 0xFE	; 254
    5752:	5f 4f       	sbci	r21, 0xFF	; 255
    5754:	24 17       	cp	r18, r20
    5756:	35 07       	cpc	r19, r21
    5758:	48 f0       	brcs	.+18     	; 0x576c <malloc+0x120>
    575a:	4e 0f       	add	r20, r30
    575c:	5f 1f       	adc	r21, r31
    575e:	50 93 fa 17 	sts	0x17FA, r21	; 0x8017fa <__brkval+0x1>
    5762:	40 93 f9 17 	sts	0x17F9, r20	; 0x8017f9 <__brkval>
    5766:	81 93       	st	Z+, r24
    5768:	91 93       	st	Z+, r25
    576a:	02 c0       	rjmp	.+4      	; 0x5770 <malloc+0x124>
    576c:	e0 e0       	ldi	r30, 0x00	; 0
    576e:	f0 e0       	ldi	r31, 0x00	; 0
    5770:	cf 01       	movw	r24, r30
    5772:	df 91       	pop	r29
    5774:	cf 91       	pop	r28
    5776:	1f 91       	pop	r17
    5778:	0f 91       	pop	r16
    577a:	08 95       	ret

0000577c <free>:
    577c:	cf 93       	push	r28
    577e:	df 93       	push	r29
    5780:	00 97       	sbiw	r24, 0x00	; 0
    5782:	09 f4       	brne	.+2      	; 0x5786 <free+0xa>
    5784:	81 c0       	rjmp	.+258    	; 0x5888 <free+0x10c>
    5786:	fc 01       	movw	r30, r24
    5788:	32 97       	sbiw	r30, 0x02	; 2
    578a:	13 82       	std	Z+3, r1	; 0x03
    578c:	12 82       	std	Z+2, r1	; 0x02
    578e:	a0 91 fb 17 	lds	r26, 0x17FB	; 0x8017fb <__flp>
    5792:	b0 91 fc 17 	lds	r27, 0x17FC	; 0x8017fc <__flp+0x1>
    5796:	10 97       	sbiw	r26, 0x00	; 0
    5798:	81 f4       	brne	.+32     	; 0x57ba <free+0x3e>
    579a:	20 81       	ld	r18, Z
    579c:	31 81       	ldd	r19, Z+1	; 0x01
    579e:	82 0f       	add	r24, r18
    57a0:	93 1f       	adc	r25, r19
    57a2:	20 91 f9 17 	lds	r18, 0x17F9	; 0x8017f9 <__brkval>
    57a6:	30 91 fa 17 	lds	r19, 0x17FA	; 0x8017fa <__brkval+0x1>
    57aa:	28 17       	cp	r18, r24
    57ac:	39 07       	cpc	r19, r25
    57ae:	51 f5       	brne	.+84     	; 0x5804 <free+0x88>
    57b0:	f0 93 fa 17 	sts	0x17FA, r31	; 0x8017fa <__brkval+0x1>
    57b4:	e0 93 f9 17 	sts	0x17F9, r30	; 0x8017f9 <__brkval>
    57b8:	67 c0       	rjmp	.+206    	; 0x5888 <free+0x10c>
    57ba:	ed 01       	movw	r28, r26
    57bc:	20 e0       	ldi	r18, 0x00	; 0
    57be:	30 e0       	ldi	r19, 0x00	; 0
    57c0:	ce 17       	cp	r28, r30
    57c2:	df 07       	cpc	r29, r31
    57c4:	40 f4       	brcc	.+16     	; 0x57d6 <free+0x5a>
    57c6:	4a 81       	ldd	r20, Y+2	; 0x02
    57c8:	5b 81       	ldd	r21, Y+3	; 0x03
    57ca:	9e 01       	movw	r18, r28
    57cc:	41 15       	cp	r20, r1
    57ce:	51 05       	cpc	r21, r1
    57d0:	f1 f0       	breq	.+60     	; 0x580e <free+0x92>
    57d2:	ea 01       	movw	r28, r20
    57d4:	f5 cf       	rjmp	.-22     	; 0x57c0 <free+0x44>
    57d6:	d3 83       	std	Z+3, r29	; 0x03
    57d8:	c2 83       	std	Z+2, r28	; 0x02
    57da:	40 81       	ld	r20, Z
    57dc:	51 81       	ldd	r21, Z+1	; 0x01
    57de:	84 0f       	add	r24, r20
    57e0:	95 1f       	adc	r25, r21
    57e2:	c8 17       	cp	r28, r24
    57e4:	d9 07       	cpc	r29, r25
    57e6:	59 f4       	brne	.+22     	; 0x57fe <free+0x82>
    57e8:	88 81       	ld	r24, Y
    57ea:	99 81       	ldd	r25, Y+1	; 0x01
    57ec:	84 0f       	add	r24, r20
    57ee:	95 1f       	adc	r25, r21
    57f0:	02 96       	adiw	r24, 0x02	; 2
    57f2:	91 83       	std	Z+1, r25	; 0x01
    57f4:	80 83       	st	Z, r24
    57f6:	8a 81       	ldd	r24, Y+2	; 0x02
    57f8:	9b 81       	ldd	r25, Y+3	; 0x03
    57fa:	93 83       	std	Z+3, r25	; 0x03
    57fc:	82 83       	std	Z+2, r24	; 0x02
    57fe:	21 15       	cp	r18, r1
    5800:	31 05       	cpc	r19, r1
    5802:	29 f4       	brne	.+10     	; 0x580e <free+0x92>
    5804:	f0 93 fc 17 	sts	0x17FC, r31	; 0x8017fc <__flp+0x1>
    5808:	e0 93 fb 17 	sts	0x17FB, r30	; 0x8017fb <__flp>
    580c:	3d c0       	rjmp	.+122    	; 0x5888 <free+0x10c>
    580e:	e9 01       	movw	r28, r18
    5810:	fb 83       	std	Y+3, r31	; 0x03
    5812:	ea 83       	std	Y+2, r30	; 0x02
    5814:	49 91       	ld	r20, Y+
    5816:	59 91       	ld	r21, Y+
    5818:	c4 0f       	add	r28, r20
    581a:	d5 1f       	adc	r29, r21
    581c:	ec 17       	cp	r30, r28
    581e:	fd 07       	cpc	r31, r29
    5820:	61 f4       	brne	.+24     	; 0x583a <free+0xbe>
    5822:	80 81       	ld	r24, Z
    5824:	91 81       	ldd	r25, Z+1	; 0x01
    5826:	84 0f       	add	r24, r20
    5828:	95 1f       	adc	r25, r21
    582a:	02 96       	adiw	r24, 0x02	; 2
    582c:	e9 01       	movw	r28, r18
    582e:	99 83       	std	Y+1, r25	; 0x01
    5830:	88 83       	st	Y, r24
    5832:	82 81       	ldd	r24, Z+2	; 0x02
    5834:	93 81       	ldd	r25, Z+3	; 0x03
    5836:	9b 83       	std	Y+3, r25	; 0x03
    5838:	8a 83       	std	Y+2, r24	; 0x02
    583a:	e0 e0       	ldi	r30, 0x00	; 0
    583c:	f0 e0       	ldi	r31, 0x00	; 0
    583e:	12 96       	adiw	r26, 0x02	; 2
    5840:	8d 91       	ld	r24, X+
    5842:	9c 91       	ld	r25, X
    5844:	13 97       	sbiw	r26, 0x03	; 3
    5846:	00 97       	sbiw	r24, 0x00	; 0
    5848:	19 f0       	breq	.+6      	; 0x5850 <free+0xd4>
    584a:	fd 01       	movw	r30, r26
    584c:	dc 01       	movw	r26, r24
    584e:	f7 cf       	rjmp	.-18     	; 0x583e <free+0xc2>
    5850:	8d 91       	ld	r24, X+
    5852:	9c 91       	ld	r25, X
    5854:	11 97       	sbiw	r26, 0x01	; 1
    5856:	9d 01       	movw	r18, r26
    5858:	2e 5f       	subi	r18, 0xFE	; 254
    585a:	3f 4f       	sbci	r19, 0xFF	; 255
    585c:	82 0f       	add	r24, r18
    585e:	93 1f       	adc	r25, r19
    5860:	20 91 f9 17 	lds	r18, 0x17F9	; 0x8017f9 <__brkval>
    5864:	30 91 fa 17 	lds	r19, 0x17FA	; 0x8017fa <__brkval+0x1>
    5868:	28 17       	cp	r18, r24
    586a:	39 07       	cpc	r19, r25
    586c:	69 f4       	brne	.+26     	; 0x5888 <free+0x10c>
    586e:	30 97       	sbiw	r30, 0x00	; 0
    5870:	29 f4       	brne	.+10     	; 0x587c <free+0x100>
    5872:	10 92 fc 17 	sts	0x17FC, r1	; 0x8017fc <__flp+0x1>
    5876:	10 92 fb 17 	sts	0x17FB, r1	; 0x8017fb <__flp>
    587a:	02 c0       	rjmp	.+4      	; 0x5880 <free+0x104>
    587c:	13 82       	std	Z+3, r1	; 0x03
    587e:	12 82       	std	Z+2, r1	; 0x02
    5880:	b0 93 fa 17 	sts	0x17FA, r27	; 0x8017fa <__brkval+0x1>
    5884:	a0 93 f9 17 	sts	0x17F9, r26	; 0x8017f9 <__brkval>
    5888:	df 91       	pop	r29
    588a:	cf 91       	pop	r28
    588c:	08 95       	ret

0000588e <abort>:
    588e:	81 e0       	ldi	r24, 0x01	; 1
    5890:	90 e0       	ldi	r25, 0x00	; 0
    5892:	f8 94       	cli
    5894:	7d c3       	rjmp	.+1786   	; 0x5f90 <_exit>

00005896 <memcpy>:
    5896:	fb 01       	movw	r30, r22
    5898:	dc 01       	movw	r26, r24
    589a:	02 c0       	rjmp	.+4      	; 0x58a0 <memcpy+0xa>
    589c:	01 90       	ld	r0, Z+
    589e:	0d 92       	st	X+, r0
    58a0:	41 50       	subi	r20, 0x01	; 1
    58a2:	50 40       	sbci	r21, 0x00	; 0
    58a4:	d8 f7       	brcc	.-10     	; 0x589c <memcpy+0x6>
    58a6:	08 95       	ret

000058a8 <memset>:
    58a8:	dc 01       	movw	r26, r24
    58aa:	01 c0       	rjmp	.+2      	; 0x58ae <memset+0x6>
    58ac:	6d 93       	st	X+, r22
    58ae:	41 50       	subi	r20, 0x01	; 1
    58b0:	50 40       	sbci	r21, 0x00	; 0
    58b2:	e0 f7       	brcc	.-8      	; 0x58ac <memset+0x4>
    58b4:	08 95       	ret

000058b6 <strcasestr>:
    58b6:	fb 01       	movw	r30, r22
    58b8:	51 91       	ld	r21, Z+
    58ba:	55 23       	and	r21, r21
    58bc:	b1 f0       	breq	.+44     	; 0x58ea <strcasestr+0x34>
    58be:	bf 01       	movw	r22, r30
    58c0:	dc 01       	movw	r26, r24
    58c2:	05 2e       	mov	r0, r21
    58c4:	4d 91       	ld	r20, X+
    58c6:	44 23       	and	r20, r20
    58c8:	69 f0       	breq	.+26     	; 0x58e4 <strcasestr+0x2e>
    58ca:	10 d0       	rcall	.+32     	; 0x58ec <strcasestr+0x36>
    58cc:	d9 f7       	brne	.-10     	; 0x58c4 <strcasestr+0xe>
    58ce:	cd 01       	movw	r24, r26
    58d0:	01 90       	ld	r0, Z+
    58d2:	00 20       	and	r0, r0
    58d4:	49 f0       	breq	.+18     	; 0x58e8 <strcasestr+0x32>
    58d6:	4d 91       	ld	r20, X+
    58d8:	41 11       	cpse	r20, r1
    58da:	08 d0       	rcall	.+16     	; 0x58ec <strcasestr+0x36>
    58dc:	c9 f3       	breq	.-14     	; 0x58d0 <strcasestr+0x1a>
    58de:	fb 01       	movw	r30, r22
    58e0:	41 11       	cpse	r20, r1
    58e2:	ee cf       	rjmp	.-36     	; 0x58c0 <strcasestr+0xa>
    58e4:	81 e0       	ldi	r24, 0x01	; 1
    58e6:	90 e0       	ldi	r25, 0x00	; 0
    58e8:	01 97       	sbiw	r24, 0x01	; 1
    58ea:	08 95       	ret
    58ec:	40 25       	eor	r20, r0
    58ee:	39 f0       	breq	.+14     	; 0x58fe <strcasestr+0x48>
    58f0:	40 32       	cpi	r20, 0x20	; 32
    58f2:	29 f4       	brne	.+10     	; 0x58fe <strcasestr+0x48>
    58f4:	40 29       	or	r20, r0
    58f6:	4b 57       	subi	r20, 0x7B	; 123
    58f8:	46 5e       	subi	r20, 0xE6	; 230
    58fa:	08 f0       	brcs	.+2      	; 0x58fe <strcasestr+0x48>
    58fc:	18 94       	sez
    58fe:	08 95       	ret

00005900 <strcat>:
    5900:	fb 01       	movw	r30, r22
    5902:	dc 01       	movw	r26, r24
    5904:	0d 90       	ld	r0, X+
    5906:	00 20       	and	r0, r0
    5908:	e9 f7       	brne	.-6      	; 0x5904 <strcat+0x4>
    590a:	11 97       	sbiw	r26, 0x01	; 1
    590c:	01 90       	ld	r0, Z+
    590e:	0d 92       	st	X+, r0
    5910:	00 20       	and	r0, r0
    5912:	e1 f7       	brne	.-8      	; 0x590c <strcat+0xc>
    5914:	08 95       	ret

00005916 <strcpy>:
    5916:	fb 01       	movw	r30, r22
    5918:	dc 01       	movw	r26, r24
    591a:	01 90       	ld	r0, Z+
    591c:	0d 92       	st	X+, r0
    591e:	00 20       	and	r0, r0
    5920:	e1 f7       	brne	.-8      	; 0x591a <strcpy+0x4>
    5922:	08 95       	ret

00005924 <strncasecmp>:
    5924:	fb 01       	movw	r30, r22
    5926:	dc 01       	movw	r26, r24
    5928:	41 50       	subi	r20, 0x01	; 1
    592a:	50 40       	sbci	r21, 0x00	; 0
    592c:	88 f0       	brcs	.+34     	; 0x5950 <strncasecmp+0x2c>
    592e:	8d 91       	ld	r24, X+
    5930:	81 34       	cpi	r24, 0x41	; 65
    5932:	1c f0       	brlt	.+6      	; 0x593a <strncasecmp+0x16>
    5934:	8b 35       	cpi	r24, 0x5B	; 91
    5936:	0c f4       	brge	.+2      	; 0x593a <strncasecmp+0x16>
    5938:	80 5e       	subi	r24, 0xE0	; 224
    593a:	61 91       	ld	r22, Z+
    593c:	61 34       	cpi	r22, 0x41	; 65
    593e:	1c f0       	brlt	.+6      	; 0x5946 <strncasecmp+0x22>
    5940:	6b 35       	cpi	r22, 0x5B	; 91
    5942:	0c f4       	brge	.+2      	; 0x5946 <strncasecmp+0x22>
    5944:	60 5e       	subi	r22, 0xE0	; 224
    5946:	86 1b       	sub	r24, r22
    5948:	61 11       	cpse	r22, r1
    594a:	71 f3       	breq	.-36     	; 0x5928 <strncasecmp+0x4>
    594c:	99 0b       	sbc	r25, r25
    594e:	08 95       	ret
    5950:	88 1b       	sub	r24, r24
    5952:	fc cf       	rjmp	.-8      	; 0x594c <strncasecmp+0x28>

00005954 <printf>:
    5954:	cf 93       	push	r28
    5956:	df 93       	push	r29
    5958:	cd b7       	in	r28, 0x3d	; 61
    595a:	de b7       	in	r29, 0x3e	; 62
    595c:	ae 01       	movw	r20, r28
    595e:	4a 5f       	subi	r20, 0xFA	; 250
    5960:	5f 4f       	sbci	r21, 0xFF	; 255
    5962:	fa 01       	movw	r30, r20
    5964:	61 91       	ld	r22, Z+
    5966:	71 91       	ld	r23, Z+
    5968:	af 01       	movw	r20, r30
    596a:	80 91 ff 17 	lds	r24, 0x17FF	; 0x8017ff <__iob+0x2>
    596e:	90 91 00 18 	lds	r25, 0x1800	; 0x801800 <__iob+0x3>
    5972:	61 d0       	rcall	.+194    	; 0x5a36 <vfprintf>
    5974:	df 91       	pop	r29
    5976:	cf 91       	pop	r28
    5978:	08 95       	ret

0000597a <puts>:
    597a:	0f 93       	push	r16
    597c:	1f 93       	push	r17
    597e:	cf 93       	push	r28
    5980:	df 93       	push	r29
    5982:	e0 91 ff 17 	lds	r30, 0x17FF	; 0x8017ff <__iob+0x2>
    5986:	f0 91 00 18 	lds	r31, 0x1800	; 0x801800 <__iob+0x3>
    598a:	23 81       	ldd	r18, Z+3	; 0x03
    598c:	21 ff       	sbrs	r18, 1
    598e:	1b c0       	rjmp	.+54     	; 0x59c6 <puts+0x4c>
    5990:	8c 01       	movw	r16, r24
    5992:	d0 e0       	ldi	r29, 0x00	; 0
    5994:	c0 e0       	ldi	r28, 0x00	; 0
    5996:	f8 01       	movw	r30, r16
    5998:	81 91       	ld	r24, Z+
    599a:	8f 01       	movw	r16, r30
    599c:	60 91 ff 17 	lds	r22, 0x17FF	; 0x8017ff <__iob+0x2>
    59a0:	70 91 00 18 	lds	r23, 0x1800	; 0x801800 <__iob+0x3>
    59a4:	db 01       	movw	r26, r22
    59a6:	18 96       	adiw	r26, 0x08	; 8
    59a8:	ed 91       	ld	r30, X+
    59aa:	fc 91       	ld	r31, X
    59ac:	19 97       	sbiw	r26, 0x09	; 9
    59ae:	88 23       	and	r24, r24
    59b0:	31 f0       	breq	.+12     	; 0x59be <puts+0x44>
    59b2:	19 95       	eicall
    59b4:	89 2b       	or	r24, r25
    59b6:	79 f3       	breq	.-34     	; 0x5996 <puts+0x1c>
    59b8:	df ef       	ldi	r29, 0xFF	; 255
    59ba:	cf ef       	ldi	r28, 0xFF	; 255
    59bc:	ec cf       	rjmp	.-40     	; 0x5996 <puts+0x1c>
    59be:	8a e0       	ldi	r24, 0x0A	; 10
    59c0:	19 95       	eicall
    59c2:	89 2b       	or	r24, r25
    59c4:	19 f0       	breq	.+6      	; 0x59cc <puts+0x52>
    59c6:	8f ef       	ldi	r24, 0xFF	; 255
    59c8:	9f ef       	ldi	r25, 0xFF	; 255
    59ca:	02 c0       	rjmp	.+4      	; 0x59d0 <puts+0x56>
    59cc:	8d 2f       	mov	r24, r29
    59ce:	9c 2f       	mov	r25, r28
    59d0:	df 91       	pop	r29
    59d2:	cf 91       	pop	r28
    59d4:	1f 91       	pop	r17
    59d6:	0f 91       	pop	r16
    59d8:	08 95       	ret

000059da <sprintf>:
    59da:	0f 93       	push	r16
    59dc:	1f 93       	push	r17
    59de:	cf 93       	push	r28
    59e0:	df 93       	push	r29
    59e2:	cd b7       	in	r28, 0x3d	; 61
    59e4:	de b7       	in	r29, 0x3e	; 62
    59e6:	2e 97       	sbiw	r28, 0x0e	; 14
    59e8:	0f b6       	in	r0, 0x3f	; 63
    59ea:	f8 94       	cli
    59ec:	de bf       	out	0x3e, r29	; 62
    59ee:	0f be       	out	0x3f, r0	; 63
    59f0:	cd bf       	out	0x3d, r28	; 61
    59f2:	0e 89       	ldd	r16, Y+22	; 0x16
    59f4:	1f 89       	ldd	r17, Y+23	; 0x17
    59f6:	86 e0       	ldi	r24, 0x06	; 6
    59f8:	8c 83       	std	Y+4, r24	; 0x04
    59fa:	1a 83       	std	Y+2, r17	; 0x02
    59fc:	09 83       	std	Y+1, r16	; 0x01
    59fe:	8f ef       	ldi	r24, 0xFF	; 255
    5a00:	9f e7       	ldi	r25, 0x7F	; 127
    5a02:	9e 83       	std	Y+6, r25	; 0x06
    5a04:	8d 83       	std	Y+5, r24	; 0x05
    5a06:	ae 01       	movw	r20, r28
    5a08:	46 5e       	subi	r20, 0xE6	; 230
    5a0a:	5f 4f       	sbci	r21, 0xFF	; 255
    5a0c:	68 8d       	ldd	r22, Y+24	; 0x18
    5a0e:	79 8d       	ldd	r23, Y+25	; 0x19
    5a10:	ce 01       	movw	r24, r28
    5a12:	01 96       	adiw	r24, 0x01	; 1
    5a14:	10 d0       	rcall	.+32     	; 0x5a36 <vfprintf>
    5a16:	ef 81       	ldd	r30, Y+7	; 0x07
    5a18:	f8 85       	ldd	r31, Y+8	; 0x08
    5a1a:	e0 0f       	add	r30, r16
    5a1c:	f1 1f       	adc	r31, r17
    5a1e:	10 82       	st	Z, r1
    5a20:	2e 96       	adiw	r28, 0x0e	; 14
    5a22:	0f b6       	in	r0, 0x3f	; 63
    5a24:	f8 94       	cli
    5a26:	de bf       	out	0x3e, r29	; 62
    5a28:	0f be       	out	0x3f, r0	; 63
    5a2a:	cd bf       	out	0x3d, r28	; 61
    5a2c:	df 91       	pop	r29
    5a2e:	cf 91       	pop	r28
    5a30:	1f 91       	pop	r17
    5a32:	0f 91       	pop	r16
    5a34:	08 95       	ret

00005a36 <vfprintf>:
    5a36:	2f 92       	push	r2
    5a38:	3f 92       	push	r3
    5a3a:	4f 92       	push	r4
    5a3c:	5f 92       	push	r5
    5a3e:	6f 92       	push	r6
    5a40:	7f 92       	push	r7
    5a42:	8f 92       	push	r8
    5a44:	9f 92       	push	r9
    5a46:	af 92       	push	r10
    5a48:	bf 92       	push	r11
    5a4a:	cf 92       	push	r12
    5a4c:	df 92       	push	r13
    5a4e:	ef 92       	push	r14
    5a50:	ff 92       	push	r15
    5a52:	0f 93       	push	r16
    5a54:	1f 93       	push	r17
    5a56:	cf 93       	push	r28
    5a58:	df 93       	push	r29
    5a5a:	cd b7       	in	r28, 0x3d	; 61
    5a5c:	de b7       	in	r29, 0x3e	; 62
    5a5e:	2b 97       	sbiw	r28, 0x0b	; 11
    5a60:	0f b6       	in	r0, 0x3f	; 63
    5a62:	f8 94       	cli
    5a64:	de bf       	out	0x3e, r29	; 62
    5a66:	0f be       	out	0x3f, r0	; 63
    5a68:	cd bf       	out	0x3d, r28	; 61
    5a6a:	6c 01       	movw	r12, r24
    5a6c:	7b 01       	movw	r14, r22
    5a6e:	8a 01       	movw	r16, r20
    5a70:	fc 01       	movw	r30, r24
    5a72:	17 82       	std	Z+7, r1	; 0x07
    5a74:	16 82       	std	Z+6, r1	; 0x06
    5a76:	83 81       	ldd	r24, Z+3	; 0x03
    5a78:	81 ff       	sbrs	r24, 1
    5a7a:	bf c1       	rjmp	.+894    	; 0x5dfa <vfprintf+0x3c4>
    5a7c:	ce 01       	movw	r24, r28
    5a7e:	01 96       	adiw	r24, 0x01	; 1
    5a80:	3c 01       	movw	r6, r24
    5a82:	f6 01       	movw	r30, r12
    5a84:	93 81       	ldd	r25, Z+3	; 0x03
    5a86:	f7 01       	movw	r30, r14
    5a88:	93 fd       	sbrc	r25, 3
    5a8a:	85 91       	lpm	r24, Z+
    5a8c:	93 ff       	sbrs	r25, 3
    5a8e:	81 91       	ld	r24, Z+
    5a90:	7f 01       	movw	r14, r30
    5a92:	88 23       	and	r24, r24
    5a94:	09 f4       	brne	.+2      	; 0x5a98 <vfprintf+0x62>
    5a96:	ad c1       	rjmp	.+858    	; 0x5df2 <vfprintf+0x3bc>
    5a98:	85 32       	cpi	r24, 0x25	; 37
    5a9a:	39 f4       	brne	.+14     	; 0x5aaa <vfprintf+0x74>
    5a9c:	93 fd       	sbrc	r25, 3
    5a9e:	85 91       	lpm	r24, Z+
    5aa0:	93 ff       	sbrs	r25, 3
    5aa2:	81 91       	ld	r24, Z+
    5aa4:	7f 01       	movw	r14, r30
    5aa6:	85 32       	cpi	r24, 0x25	; 37
    5aa8:	21 f4       	brne	.+8      	; 0x5ab2 <vfprintf+0x7c>
    5aaa:	b6 01       	movw	r22, r12
    5aac:	90 e0       	ldi	r25, 0x00	; 0
    5aae:	d6 d1       	rcall	.+940    	; 0x5e5c <fputc>
    5ab0:	e8 cf       	rjmp	.-48     	; 0x5a82 <vfprintf+0x4c>
    5ab2:	91 2c       	mov	r9, r1
    5ab4:	21 2c       	mov	r2, r1
    5ab6:	31 2c       	mov	r3, r1
    5ab8:	ff e1       	ldi	r31, 0x1F	; 31
    5aba:	f3 15       	cp	r31, r3
    5abc:	d8 f0       	brcs	.+54     	; 0x5af4 <vfprintf+0xbe>
    5abe:	8b 32       	cpi	r24, 0x2B	; 43
    5ac0:	79 f0       	breq	.+30     	; 0x5ae0 <vfprintf+0xaa>
    5ac2:	38 f4       	brcc	.+14     	; 0x5ad2 <vfprintf+0x9c>
    5ac4:	80 32       	cpi	r24, 0x20	; 32
    5ac6:	79 f0       	breq	.+30     	; 0x5ae6 <vfprintf+0xb0>
    5ac8:	83 32       	cpi	r24, 0x23	; 35
    5aca:	a1 f4       	brne	.+40     	; 0x5af4 <vfprintf+0xbe>
    5acc:	23 2d       	mov	r18, r3
    5ace:	20 61       	ori	r18, 0x10	; 16
    5ad0:	1d c0       	rjmp	.+58     	; 0x5b0c <vfprintf+0xd6>
    5ad2:	8d 32       	cpi	r24, 0x2D	; 45
    5ad4:	61 f0       	breq	.+24     	; 0x5aee <vfprintf+0xb8>
    5ad6:	80 33       	cpi	r24, 0x30	; 48
    5ad8:	69 f4       	brne	.+26     	; 0x5af4 <vfprintf+0xbe>
    5ada:	23 2d       	mov	r18, r3
    5adc:	21 60       	ori	r18, 0x01	; 1
    5ade:	16 c0       	rjmp	.+44     	; 0x5b0c <vfprintf+0xd6>
    5ae0:	83 2d       	mov	r24, r3
    5ae2:	82 60       	ori	r24, 0x02	; 2
    5ae4:	38 2e       	mov	r3, r24
    5ae6:	e3 2d       	mov	r30, r3
    5ae8:	e4 60       	ori	r30, 0x04	; 4
    5aea:	3e 2e       	mov	r3, r30
    5aec:	2a c0       	rjmp	.+84     	; 0x5b42 <vfprintf+0x10c>
    5aee:	f3 2d       	mov	r31, r3
    5af0:	f8 60       	ori	r31, 0x08	; 8
    5af2:	1d c0       	rjmp	.+58     	; 0x5b2e <vfprintf+0xf8>
    5af4:	37 fc       	sbrc	r3, 7
    5af6:	2d c0       	rjmp	.+90     	; 0x5b52 <vfprintf+0x11c>
    5af8:	20 ed       	ldi	r18, 0xD0	; 208
    5afa:	28 0f       	add	r18, r24
    5afc:	2a 30       	cpi	r18, 0x0A	; 10
    5afe:	40 f0       	brcs	.+16     	; 0x5b10 <vfprintf+0xda>
    5b00:	8e 32       	cpi	r24, 0x2E	; 46
    5b02:	b9 f4       	brne	.+46     	; 0x5b32 <vfprintf+0xfc>
    5b04:	36 fc       	sbrc	r3, 6
    5b06:	75 c1       	rjmp	.+746    	; 0x5df2 <vfprintf+0x3bc>
    5b08:	23 2d       	mov	r18, r3
    5b0a:	20 64       	ori	r18, 0x40	; 64
    5b0c:	32 2e       	mov	r3, r18
    5b0e:	19 c0       	rjmp	.+50     	; 0x5b42 <vfprintf+0x10c>
    5b10:	36 fe       	sbrs	r3, 6
    5b12:	06 c0       	rjmp	.+12     	; 0x5b20 <vfprintf+0xea>
    5b14:	8a e0       	ldi	r24, 0x0A	; 10
    5b16:	98 9e       	mul	r9, r24
    5b18:	20 0d       	add	r18, r0
    5b1a:	11 24       	eor	r1, r1
    5b1c:	92 2e       	mov	r9, r18
    5b1e:	11 c0       	rjmp	.+34     	; 0x5b42 <vfprintf+0x10c>
    5b20:	ea e0       	ldi	r30, 0x0A	; 10
    5b22:	2e 9e       	mul	r2, r30
    5b24:	20 0d       	add	r18, r0
    5b26:	11 24       	eor	r1, r1
    5b28:	22 2e       	mov	r2, r18
    5b2a:	f3 2d       	mov	r31, r3
    5b2c:	f0 62       	ori	r31, 0x20	; 32
    5b2e:	3f 2e       	mov	r3, r31
    5b30:	08 c0       	rjmp	.+16     	; 0x5b42 <vfprintf+0x10c>
    5b32:	8c 36       	cpi	r24, 0x6C	; 108
    5b34:	21 f4       	brne	.+8      	; 0x5b3e <vfprintf+0x108>
    5b36:	83 2d       	mov	r24, r3
    5b38:	80 68       	ori	r24, 0x80	; 128
    5b3a:	38 2e       	mov	r3, r24
    5b3c:	02 c0       	rjmp	.+4      	; 0x5b42 <vfprintf+0x10c>
    5b3e:	88 36       	cpi	r24, 0x68	; 104
    5b40:	41 f4       	brne	.+16     	; 0x5b52 <vfprintf+0x11c>
    5b42:	f7 01       	movw	r30, r14
    5b44:	93 fd       	sbrc	r25, 3
    5b46:	85 91       	lpm	r24, Z+
    5b48:	93 ff       	sbrs	r25, 3
    5b4a:	81 91       	ld	r24, Z+
    5b4c:	7f 01       	movw	r14, r30
    5b4e:	81 11       	cpse	r24, r1
    5b50:	b3 cf       	rjmp	.-154    	; 0x5ab8 <vfprintf+0x82>
    5b52:	98 2f       	mov	r25, r24
    5b54:	9f 7d       	andi	r25, 0xDF	; 223
    5b56:	95 54       	subi	r25, 0x45	; 69
    5b58:	93 30       	cpi	r25, 0x03	; 3
    5b5a:	28 f4       	brcc	.+10     	; 0x5b66 <vfprintf+0x130>
    5b5c:	0c 5f       	subi	r16, 0xFC	; 252
    5b5e:	1f 4f       	sbci	r17, 0xFF	; 255
    5b60:	9f e3       	ldi	r25, 0x3F	; 63
    5b62:	99 83       	std	Y+1, r25	; 0x01
    5b64:	0d c0       	rjmp	.+26     	; 0x5b80 <vfprintf+0x14a>
    5b66:	83 36       	cpi	r24, 0x63	; 99
    5b68:	31 f0       	breq	.+12     	; 0x5b76 <vfprintf+0x140>
    5b6a:	83 37       	cpi	r24, 0x73	; 115
    5b6c:	71 f0       	breq	.+28     	; 0x5b8a <vfprintf+0x154>
    5b6e:	83 35       	cpi	r24, 0x53	; 83
    5b70:	09 f0       	breq	.+2      	; 0x5b74 <vfprintf+0x13e>
    5b72:	55 c0       	rjmp	.+170    	; 0x5c1e <vfprintf+0x1e8>
    5b74:	20 c0       	rjmp	.+64     	; 0x5bb6 <vfprintf+0x180>
    5b76:	f8 01       	movw	r30, r16
    5b78:	80 81       	ld	r24, Z
    5b7a:	89 83       	std	Y+1, r24	; 0x01
    5b7c:	0e 5f       	subi	r16, 0xFE	; 254
    5b7e:	1f 4f       	sbci	r17, 0xFF	; 255
    5b80:	88 24       	eor	r8, r8
    5b82:	83 94       	inc	r8
    5b84:	91 2c       	mov	r9, r1
    5b86:	53 01       	movw	r10, r6
    5b88:	12 c0       	rjmp	.+36     	; 0x5bae <vfprintf+0x178>
    5b8a:	28 01       	movw	r4, r16
    5b8c:	f2 e0       	ldi	r31, 0x02	; 2
    5b8e:	4f 0e       	add	r4, r31
    5b90:	51 1c       	adc	r5, r1
    5b92:	f8 01       	movw	r30, r16
    5b94:	a0 80       	ld	r10, Z
    5b96:	b1 80       	ldd	r11, Z+1	; 0x01
    5b98:	36 fe       	sbrs	r3, 6
    5b9a:	03 c0       	rjmp	.+6      	; 0x5ba2 <vfprintf+0x16c>
    5b9c:	69 2d       	mov	r22, r9
    5b9e:	70 e0       	ldi	r23, 0x00	; 0
    5ba0:	02 c0       	rjmp	.+4      	; 0x5ba6 <vfprintf+0x170>
    5ba2:	6f ef       	ldi	r22, 0xFF	; 255
    5ba4:	7f ef       	ldi	r23, 0xFF	; 255
    5ba6:	c5 01       	movw	r24, r10
    5ba8:	4e d1       	rcall	.+668    	; 0x5e46 <strnlen>
    5baa:	4c 01       	movw	r8, r24
    5bac:	82 01       	movw	r16, r4
    5bae:	f3 2d       	mov	r31, r3
    5bb0:	ff 77       	andi	r31, 0x7F	; 127
    5bb2:	3f 2e       	mov	r3, r31
    5bb4:	15 c0       	rjmp	.+42     	; 0x5be0 <vfprintf+0x1aa>
    5bb6:	28 01       	movw	r4, r16
    5bb8:	22 e0       	ldi	r18, 0x02	; 2
    5bba:	42 0e       	add	r4, r18
    5bbc:	51 1c       	adc	r5, r1
    5bbe:	f8 01       	movw	r30, r16
    5bc0:	a0 80       	ld	r10, Z
    5bc2:	b1 80       	ldd	r11, Z+1	; 0x01
    5bc4:	36 fe       	sbrs	r3, 6
    5bc6:	03 c0       	rjmp	.+6      	; 0x5bce <vfprintf+0x198>
    5bc8:	69 2d       	mov	r22, r9
    5bca:	70 e0       	ldi	r23, 0x00	; 0
    5bcc:	02 c0       	rjmp	.+4      	; 0x5bd2 <vfprintf+0x19c>
    5bce:	6f ef       	ldi	r22, 0xFF	; 255
    5bd0:	7f ef       	ldi	r23, 0xFF	; 255
    5bd2:	c5 01       	movw	r24, r10
    5bd4:	2d d1       	rcall	.+602    	; 0x5e30 <strnlen_P>
    5bd6:	4c 01       	movw	r8, r24
    5bd8:	f3 2d       	mov	r31, r3
    5bda:	f0 68       	ori	r31, 0x80	; 128
    5bdc:	3f 2e       	mov	r3, r31
    5bde:	82 01       	movw	r16, r4
    5be0:	33 fc       	sbrc	r3, 3
    5be2:	19 c0       	rjmp	.+50     	; 0x5c16 <vfprintf+0x1e0>
    5be4:	82 2d       	mov	r24, r2
    5be6:	90 e0       	ldi	r25, 0x00	; 0
    5be8:	88 16       	cp	r8, r24
    5bea:	99 06       	cpc	r9, r25
    5bec:	a0 f4       	brcc	.+40     	; 0x5c16 <vfprintf+0x1e0>
    5bee:	b6 01       	movw	r22, r12
    5bf0:	80 e2       	ldi	r24, 0x20	; 32
    5bf2:	90 e0       	ldi	r25, 0x00	; 0
    5bf4:	33 d1       	rcall	.+614    	; 0x5e5c <fputc>
    5bf6:	2a 94       	dec	r2
    5bf8:	f5 cf       	rjmp	.-22     	; 0x5be4 <vfprintf+0x1ae>
    5bfa:	f5 01       	movw	r30, r10
    5bfc:	37 fc       	sbrc	r3, 7
    5bfe:	85 91       	lpm	r24, Z+
    5c00:	37 fe       	sbrs	r3, 7
    5c02:	81 91       	ld	r24, Z+
    5c04:	5f 01       	movw	r10, r30
    5c06:	b6 01       	movw	r22, r12
    5c08:	90 e0       	ldi	r25, 0x00	; 0
    5c0a:	28 d1       	rcall	.+592    	; 0x5e5c <fputc>
    5c0c:	21 10       	cpse	r2, r1
    5c0e:	2a 94       	dec	r2
    5c10:	21 e0       	ldi	r18, 0x01	; 1
    5c12:	82 1a       	sub	r8, r18
    5c14:	91 08       	sbc	r9, r1
    5c16:	81 14       	cp	r8, r1
    5c18:	91 04       	cpc	r9, r1
    5c1a:	79 f7       	brne	.-34     	; 0x5bfa <vfprintf+0x1c4>
    5c1c:	e1 c0       	rjmp	.+450    	; 0x5de0 <vfprintf+0x3aa>
    5c1e:	84 36       	cpi	r24, 0x64	; 100
    5c20:	11 f0       	breq	.+4      	; 0x5c26 <vfprintf+0x1f0>
    5c22:	89 36       	cpi	r24, 0x69	; 105
    5c24:	39 f5       	brne	.+78     	; 0x5c74 <vfprintf+0x23e>
    5c26:	f8 01       	movw	r30, r16
    5c28:	37 fe       	sbrs	r3, 7
    5c2a:	07 c0       	rjmp	.+14     	; 0x5c3a <vfprintf+0x204>
    5c2c:	60 81       	ld	r22, Z
    5c2e:	71 81       	ldd	r23, Z+1	; 0x01
    5c30:	82 81       	ldd	r24, Z+2	; 0x02
    5c32:	93 81       	ldd	r25, Z+3	; 0x03
    5c34:	0c 5f       	subi	r16, 0xFC	; 252
    5c36:	1f 4f       	sbci	r17, 0xFF	; 255
    5c38:	08 c0       	rjmp	.+16     	; 0x5c4a <vfprintf+0x214>
    5c3a:	60 81       	ld	r22, Z
    5c3c:	71 81       	ldd	r23, Z+1	; 0x01
    5c3e:	07 2e       	mov	r0, r23
    5c40:	00 0c       	add	r0, r0
    5c42:	88 0b       	sbc	r24, r24
    5c44:	99 0b       	sbc	r25, r25
    5c46:	0e 5f       	subi	r16, 0xFE	; 254
    5c48:	1f 4f       	sbci	r17, 0xFF	; 255
    5c4a:	f3 2d       	mov	r31, r3
    5c4c:	ff 76       	andi	r31, 0x6F	; 111
    5c4e:	3f 2e       	mov	r3, r31
    5c50:	97 ff       	sbrs	r25, 7
    5c52:	09 c0       	rjmp	.+18     	; 0x5c66 <vfprintf+0x230>
    5c54:	90 95       	com	r25
    5c56:	80 95       	com	r24
    5c58:	70 95       	com	r23
    5c5a:	61 95       	neg	r22
    5c5c:	7f 4f       	sbci	r23, 0xFF	; 255
    5c5e:	8f 4f       	sbci	r24, 0xFF	; 255
    5c60:	9f 4f       	sbci	r25, 0xFF	; 255
    5c62:	f0 68       	ori	r31, 0x80	; 128
    5c64:	3f 2e       	mov	r3, r31
    5c66:	2a e0       	ldi	r18, 0x0A	; 10
    5c68:	30 e0       	ldi	r19, 0x00	; 0
    5c6a:	a3 01       	movw	r20, r6
    5c6c:	33 d1       	rcall	.+614    	; 0x5ed4 <__ultoa_invert>
    5c6e:	88 2e       	mov	r8, r24
    5c70:	86 18       	sub	r8, r6
    5c72:	44 c0       	rjmp	.+136    	; 0x5cfc <vfprintf+0x2c6>
    5c74:	85 37       	cpi	r24, 0x75	; 117
    5c76:	31 f4       	brne	.+12     	; 0x5c84 <vfprintf+0x24e>
    5c78:	23 2d       	mov	r18, r3
    5c7a:	2f 7e       	andi	r18, 0xEF	; 239
    5c7c:	b2 2e       	mov	r11, r18
    5c7e:	2a e0       	ldi	r18, 0x0A	; 10
    5c80:	30 e0       	ldi	r19, 0x00	; 0
    5c82:	25 c0       	rjmp	.+74     	; 0x5cce <vfprintf+0x298>
    5c84:	93 2d       	mov	r25, r3
    5c86:	99 7f       	andi	r25, 0xF9	; 249
    5c88:	b9 2e       	mov	r11, r25
    5c8a:	8f 36       	cpi	r24, 0x6F	; 111
    5c8c:	c1 f0       	breq	.+48     	; 0x5cbe <vfprintf+0x288>
    5c8e:	18 f4       	brcc	.+6      	; 0x5c96 <vfprintf+0x260>
    5c90:	88 35       	cpi	r24, 0x58	; 88
    5c92:	79 f0       	breq	.+30     	; 0x5cb2 <vfprintf+0x27c>
    5c94:	ae c0       	rjmp	.+348    	; 0x5df2 <vfprintf+0x3bc>
    5c96:	80 37       	cpi	r24, 0x70	; 112
    5c98:	19 f0       	breq	.+6      	; 0x5ca0 <vfprintf+0x26a>
    5c9a:	88 37       	cpi	r24, 0x78	; 120
    5c9c:	21 f0       	breq	.+8      	; 0x5ca6 <vfprintf+0x270>
    5c9e:	a9 c0       	rjmp	.+338    	; 0x5df2 <vfprintf+0x3bc>
    5ca0:	e9 2f       	mov	r30, r25
    5ca2:	e0 61       	ori	r30, 0x10	; 16
    5ca4:	be 2e       	mov	r11, r30
    5ca6:	b4 fe       	sbrs	r11, 4
    5ca8:	0d c0       	rjmp	.+26     	; 0x5cc4 <vfprintf+0x28e>
    5caa:	fb 2d       	mov	r31, r11
    5cac:	f4 60       	ori	r31, 0x04	; 4
    5cae:	bf 2e       	mov	r11, r31
    5cb0:	09 c0       	rjmp	.+18     	; 0x5cc4 <vfprintf+0x28e>
    5cb2:	34 fe       	sbrs	r3, 4
    5cb4:	0a c0       	rjmp	.+20     	; 0x5cca <vfprintf+0x294>
    5cb6:	29 2f       	mov	r18, r25
    5cb8:	26 60       	ori	r18, 0x06	; 6
    5cba:	b2 2e       	mov	r11, r18
    5cbc:	06 c0       	rjmp	.+12     	; 0x5cca <vfprintf+0x294>
    5cbe:	28 e0       	ldi	r18, 0x08	; 8
    5cc0:	30 e0       	ldi	r19, 0x00	; 0
    5cc2:	05 c0       	rjmp	.+10     	; 0x5cce <vfprintf+0x298>
    5cc4:	20 e1       	ldi	r18, 0x10	; 16
    5cc6:	30 e0       	ldi	r19, 0x00	; 0
    5cc8:	02 c0       	rjmp	.+4      	; 0x5cce <vfprintf+0x298>
    5cca:	20 e1       	ldi	r18, 0x10	; 16
    5ccc:	32 e0       	ldi	r19, 0x02	; 2
    5cce:	f8 01       	movw	r30, r16
    5cd0:	b7 fe       	sbrs	r11, 7
    5cd2:	07 c0       	rjmp	.+14     	; 0x5ce2 <vfprintf+0x2ac>
    5cd4:	60 81       	ld	r22, Z
    5cd6:	71 81       	ldd	r23, Z+1	; 0x01
    5cd8:	82 81       	ldd	r24, Z+2	; 0x02
    5cda:	93 81       	ldd	r25, Z+3	; 0x03
    5cdc:	0c 5f       	subi	r16, 0xFC	; 252
    5cde:	1f 4f       	sbci	r17, 0xFF	; 255
    5ce0:	06 c0       	rjmp	.+12     	; 0x5cee <vfprintf+0x2b8>
    5ce2:	60 81       	ld	r22, Z
    5ce4:	71 81       	ldd	r23, Z+1	; 0x01
    5ce6:	80 e0       	ldi	r24, 0x00	; 0
    5ce8:	90 e0       	ldi	r25, 0x00	; 0
    5cea:	0e 5f       	subi	r16, 0xFE	; 254
    5cec:	1f 4f       	sbci	r17, 0xFF	; 255
    5cee:	a3 01       	movw	r20, r6
    5cf0:	f1 d0       	rcall	.+482    	; 0x5ed4 <__ultoa_invert>
    5cf2:	88 2e       	mov	r8, r24
    5cf4:	86 18       	sub	r8, r6
    5cf6:	fb 2d       	mov	r31, r11
    5cf8:	ff 77       	andi	r31, 0x7F	; 127
    5cfa:	3f 2e       	mov	r3, r31
    5cfc:	36 fe       	sbrs	r3, 6
    5cfe:	0d c0       	rjmp	.+26     	; 0x5d1a <vfprintf+0x2e4>
    5d00:	23 2d       	mov	r18, r3
    5d02:	2e 7f       	andi	r18, 0xFE	; 254
    5d04:	a2 2e       	mov	r10, r18
    5d06:	89 14       	cp	r8, r9
    5d08:	58 f4       	brcc	.+22     	; 0x5d20 <vfprintf+0x2ea>
    5d0a:	34 fe       	sbrs	r3, 4
    5d0c:	0b c0       	rjmp	.+22     	; 0x5d24 <vfprintf+0x2ee>
    5d0e:	32 fc       	sbrc	r3, 2
    5d10:	09 c0       	rjmp	.+18     	; 0x5d24 <vfprintf+0x2ee>
    5d12:	83 2d       	mov	r24, r3
    5d14:	8e 7e       	andi	r24, 0xEE	; 238
    5d16:	a8 2e       	mov	r10, r24
    5d18:	05 c0       	rjmp	.+10     	; 0x5d24 <vfprintf+0x2ee>
    5d1a:	b8 2c       	mov	r11, r8
    5d1c:	a3 2c       	mov	r10, r3
    5d1e:	03 c0       	rjmp	.+6      	; 0x5d26 <vfprintf+0x2f0>
    5d20:	b8 2c       	mov	r11, r8
    5d22:	01 c0       	rjmp	.+2      	; 0x5d26 <vfprintf+0x2f0>
    5d24:	b9 2c       	mov	r11, r9
    5d26:	a4 fe       	sbrs	r10, 4
    5d28:	0f c0       	rjmp	.+30     	; 0x5d48 <vfprintf+0x312>
    5d2a:	fe 01       	movw	r30, r28
    5d2c:	e8 0d       	add	r30, r8
    5d2e:	f1 1d       	adc	r31, r1
    5d30:	80 81       	ld	r24, Z
    5d32:	80 33       	cpi	r24, 0x30	; 48
    5d34:	21 f4       	brne	.+8      	; 0x5d3e <vfprintf+0x308>
    5d36:	9a 2d       	mov	r25, r10
    5d38:	99 7e       	andi	r25, 0xE9	; 233
    5d3a:	a9 2e       	mov	r10, r25
    5d3c:	09 c0       	rjmp	.+18     	; 0x5d50 <vfprintf+0x31a>
    5d3e:	a2 fe       	sbrs	r10, 2
    5d40:	06 c0       	rjmp	.+12     	; 0x5d4e <vfprintf+0x318>
    5d42:	b3 94       	inc	r11
    5d44:	b3 94       	inc	r11
    5d46:	04 c0       	rjmp	.+8      	; 0x5d50 <vfprintf+0x31a>
    5d48:	8a 2d       	mov	r24, r10
    5d4a:	86 78       	andi	r24, 0x86	; 134
    5d4c:	09 f0       	breq	.+2      	; 0x5d50 <vfprintf+0x31a>
    5d4e:	b3 94       	inc	r11
    5d50:	a3 fc       	sbrc	r10, 3
    5d52:	10 c0       	rjmp	.+32     	; 0x5d74 <vfprintf+0x33e>
    5d54:	a0 fe       	sbrs	r10, 0
    5d56:	06 c0       	rjmp	.+12     	; 0x5d64 <vfprintf+0x32e>
    5d58:	b2 14       	cp	r11, r2
    5d5a:	80 f4       	brcc	.+32     	; 0x5d7c <vfprintf+0x346>
    5d5c:	28 0c       	add	r2, r8
    5d5e:	92 2c       	mov	r9, r2
    5d60:	9b 18       	sub	r9, r11
    5d62:	0d c0       	rjmp	.+26     	; 0x5d7e <vfprintf+0x348>
    5d64:	b2 14       	cp	r11, r2
    5d66:	58 f4       	brcc	.+22     	; 0x5d7e <vfprintf+0x348>
    5d68:	b6 01       	movw	r22, r12
    5d6a:	80 e2       	ldi	r24, 0x20	; 32
    5d6c:	90 e0       	ldi	r25, 0x00	; 0
    5d6e:	76 d0       	rcall	.+236    	; 0x5e5c <fputc>
    5d70:	b3 94       	inc	r11
    5d72:	f8 cf       	rjmp	.-16     	; 0x5d64 <vfprintf+0x32e>
    5d74:	b2 14       	cp	r11, r2
    5d76:	18 f4       	brcc	.+6      	; 0x5d7e <vfprintf+0x348>
    5d78:	2b 18       	sub	r2, r11
    5d7a:	02 c0       	rjmp	.+4      	; 0x5d80 <vfprintf+0x34a>
    5d7c:	98 2c       	mov	r9, r8
    5d7e:	21 2c       	mov	r2, r1
    5d80:	a4 fe       	sbrs	r10, 4
    5d82:	0f c0       	rjmp	.+30     	; 0x5da2 <vfprintf+0x36c>
    5d84:	b6 01       	movw	r22, r12
    5d86:	80 e3       	ldi	r24, 0x30	; 48
    5d88:	90 e0       	ldi	r25, 0x00	; 0
    5d8a:	68 d0       	rcall	.+208    	; 0x5e5c <fputc>
    5d8c:	a2 fe       	sbrs	r10, 2
    5d8e:	16 c0       	rjmp	.+44     	; 0x5dbc <vfprintf+0x386>
    5d90:	a1 fc       	sbrc	r10, 1
    5d92:	03 c0       	rjmp	.+6      	; 0x5d9a <vfprintf+0x364>
    5d94:	88 e7       	ldi	r24, 0x78	; 120
    5d96:	90 e0       	ldi	r25, 0x00	; 0
    5d98:	02 c0       	rjmp	.+4      	; 0x5d9e <vfprintf+0x368>
    5d9a:	88 e5       	ldi	r24, 0x58	; 88
    5d9c:	90 e0       	ldi	r25, 0x00	; 0
    5d9e:	b6 01       	movw	r22, r12
    5da0:	0c c0       	rjmp	.+24     	; 0x5dba <vfprintf+0x384>
    5da2:	8a 2d       	mov	r24, r10
    5da4:	86 78       	andi	r24, 0x86	; 134
    5da6:	51 f0       	breq	.+20     	; 0x5dbc <vfprintf+0x386>
    5da8:	a1 fe       	sbrs	r10, 1
    5daa:	02 c0       	rjmp	.+4      	; 0x5db0 <vfprintf+0x37a>
    5dac:	8b e2       	ldi	r24, 0x2B	; 43
    5dae:	01 c0       	rjmp	.+2      	; 0x5db2 <vfprintf+0x37c>
    5db0:	80 e2       	ldi	r24, 0x20	; 32
    5db2:	a7 fc       	sbrc	r10, 7
    5db4:	8d e2       	ldi	r24, 0x2D	; 45
    5db6:	b6 01       	movw	r22, r12
    5db8:	90 e0       	ldi	r25, 0x00	; 0
    5dba:	50 d0       	rcall	.+160    	; 0x5e5c <fputc>
    5dbc:	89 14       	cp	r8, r9
    5dbe:	30 f4       	brcc	.+12     	; 0x5dcc <vfprintf+0x396>
    5dc0:	b6 01       	movw	r22, r12
    5dc2:	80 e3       	ldi	r24, 0x30	; 48
    5dc4:	90 e0       	ldi	r25, 0x00	; 0
    5dc6:	4a d0       	rcall	.+148    	; 0x5e5c <fputc>
    5dc8:	9a 94       	dec	r9
    5dca:	f8 cf       	rjmp	.-16     	; 0x5dbc <vfprintf+0x386>
    5dcc:	8a 94       	dec	r8
    5dce:	f3 01       	movw	r30, r6
    5dd0:	e8 0d       	add	r30, r8
    5dd2:	f1 1d       	adc	r31, r1
    5dd4:	80 81       	ld	r24, Z
    5dd6:	b6 01       	movw	r22, r12
    5dd8:	90 e0       	ldi	r25, 0x00	; 0
    5dda:	40 d0       	rcall	.+128    	; 0x5e5c <fputc>
    5ddc:	81 10       	cpse	r8, r1
    5dde:	f6 cf       	rjmp	.-20     	; 0x5dcc <vfprintf+0x396>
    5de0:	22 20       	and	r2, r2
    5de2:	09 f4       	brne	.+2      	; 0x5de6 <vfprintf+0x3b0>
    5de4:	4e ce       	rjmp	.-868    	; 0x5a82 <vfprintf+0x4c>
    5de6:	b6 01       	movw	r22, r12
    5de8:	80 e2       	ldi	r24, 0x20	; 32
    5dea:	90 e0       	ldi	r25, 0x00	; 0
    5dec:	37 d0       	rcall	.+110    	; 0x5e5c <fputc>
    5dee:	2a 94       	dec	r2
    5df0:	f7 cf       	rjmp	.-18     	; 0x5de0 <vfprintf+0x3aa>
    5df2:	f6 01       	movw	r30, r12
    5df4:	86 81       	ldd	r24, Z+6	; 0x06
    5df6:	97 81       	ldd	r25, Z+7	; 0x07
    5df8:	02 c0       	rjmp	.+4      	; 0x5dfe <vfprintf+0x3c8>
    5dfa:	8f ef       	ldi	r24, 0xFF	; 255
    5dfc:	9f ef       	ldi	r25, 0xFF	; 255
    5dfe:	2b 96       	adiw	r28, 0x0b	; 11
    5e00:	0f b6       	in	r0, 0x3f	; 63
    5e02:	f8 94       	cli
    5e04:	de bf       	out	0x3e, r29	; 62
    5e06:	0f be       	out	0x3f, r0	; 63
    5e08:	cd bf       	out	0x3d, r28	; 61
    5e0a:	df 91       	pop	r29
    5e0c:	cf 91       	pop	r28
    5e0e:	1f 91       	pop	r17
    5e10:	0f 91       	pop	r16
    5e12:	ff 90       	pop	r15
    5e14:	ef 90       	pop	r14
    5e16:	df 90       	pop	r13
    5e18:	cf 90       	pop	r12
    5e1a:	bf 90       	pop	r11
    5e1c:	af 90       	pop	r10
    5e1e:	9f 90       	pop	r9
    5e20:	8f 90       	pop	r8
    5e22:	7f 90       	pop	r7
    5e24:	6f 90       	pop	r6
    5e26:	5f 90       	pop	r5
    5e28:	4f 90       	pop	r4
    5e2a:	3f 90       	pop	r3
    5e2c:	2f 90       	pop	r2
    5e2e:	08 95       	ret

00005e30 <strnlen_P>:
    5e30:	fc 01       	movw	r30, r24
    5e32:	05 90       	lpm	r0, Z+
    5e34:	61 50       	subi	r22, 0x01	; 1
    5e36:	70 40       	sbci	r23, 0x00	; 0
    5e38:	01 10       	cpse	r0, r1
    5e3a:	d8 f7       	brcc	.-10     	; 0x5e32 <strnlen_P+0x2>
    5e3c:	80 95       	com	r24
    5e3e:	90 95       	com	r25
    5e40:	8e 0f       	add	r24, r30
    5e42:	9f 1f       	adc	r25, r31
    5e44:	08 95       	ret

00005e46 <strnlen>:
    5e46:	fc 01       	movw	r30, r24
    5e48:	61 50       	subi	r22, 0x01	; 1
    5e4a:	70 40       	sbci	r23, 0x00	; 0
    5e4c:	01 90       	ld	r0, Z+
    5e4e:	01 10       	cpse	r0, r1
    5e50:	d8 f7       	brcc	.-10     	; 0x5e48 <strnlen+0x2>
    5e52:	80 95       	com	r24
    5e54:	90 95       	com	r25
    5e56:	8e 0f       	add	r24, r30
    5e58:	9f 1f       	adc	r25, r31
    5e5a:	08 95       	ret

00005e5c <fputc>:
    5e5c:	0f 93       	push	r16
    5e5e:	1f 93       	push	r17
    5e60:	cf 93       	push	r28
    5e62:	df 93       	push	r29
    5e64:	fb 01       	movw	r30, r22
    5e66:	23 81       	ldd	r18, Z+3	; 0x03
    5e68:	21 fd       	sbrc	r18, 1
    5e6a:	03 c0       	rjmp	.+6      	; 0x5e72 <fputc+0x16>
    5e6c:	8f ef       	ldi	r24, 0xFF	; 255
    5e6e:	9f ef       	ldi	r25, 0xFF	; 255
    5e70:	2c c0       	rjmp	.+88     	; 0x5eca <fputc+0x6e>
    5e72:	22 ff       	sbrs	r18, 2
    5e74:	16 c0       	rjmp	.+44     	; 0x5ea2 <fputc+0x46>
    5e76:	46 81       	ldd	r20, Z+6	; 0x06
    5e78:	57 81       	ldd	r21, Z+7	; 0x07
    5e7a:	24 81       	ldd	r18, Z+4	; 0x04
    5e7c:	35 81       	ldd	r19, Z+5	; 0x05
    5e7e:	42 17       	cp	r20, r18
    5e80:	53 07       	cpc	r21, r19
    5e82:	44 f4       	brge	.+16     	; 0x5e94 <fputc+0x38>
    5e84:	a0 81       	ld	r26, Z
    5e86:	b1 81       	ldd	r27, Z+1	; 0x01
    5e88:	9d 01       	movw	r18, r26
    5e8a:	2f 5f       	subi	r18, 0xFF	; 255
    5e8c:	3f 4f       	sbci	r19, 0xFF	; 255
    5e8e:	31 83       	std	Z+1, r19	; 0x01
    5e90:	20 83       	st	Z, r18
    5e92:	8c 93       	st	X, r24
    5e94:	26 81       	ldd	r18, Z+6	; 0x06
    5e96:	37 81       	ldd	r19, Z+7	; 0x07
    5e98:	2f 5f       	subi	r18, 0xFF	; 255
    5e9a:	3f 4f       	sbci	r19, 0xFF	; 255
    5e9c:	37 83       	std	Z+7, r19	; 0x07
    5e9e:	26 83       	std	Z+6, r18	; 0x06
    5ea0:	14 c0       	rjmp	.+40     	; 0x5eca <fputc+0x6e>
    5ea2:	8b 01       	movw	r16, r22
    5ea4:	ec 01       	movw	r28, r24
    5ea6:	fb 01       	movw	r30, r22
    5ea8:	00 84       	ldd	r0, Z+8	; 0x08
    5eaa:	f1 85       	ldd	r31, Z+9	; 0x09
    5eac:	e0 2d       	mov	r30, r0
    5eae:	19 95       	eicall
    5eb0:	89 2b       	or	r24, r25
    5eb2:	e1 f6       	brne	.-72     	; 0x5e6c <fputc+0x10>
    5eb4:	d8 01       	movw	r26, r16
    5eb6:	16 96       	adiw	r26, 0x06	; 6
    5eb8:	8d 91       	ld	r24, X+
    5eba:	9c 91       	ld	r25, X
    5ebc:	17 97       	sbiw	r26, 0x07	; 7
    5ebe:	01 96       	adiw	r24, 0x01	; 1
    5ec0:	17 96       	adiw	r26, 0x07	; 7
    5ec2:	9c 93       	st	X, r25
    5ec4:	8e 93       	st	-X, r24
    5ec6:	16 97       	sbiw	r26, 0x06	; 6
    5ec8:	ce 01       	movw	r24, r28
    5eca:	df 91       	pop	r29
    5ecc:	cf 91       	pop	r28
    5ece:	1f 91       	pop	r17
    5ed0:	0f 91       	pop	r16
    5ed2:	08 95       	ret

00005ed4 <__ultoa_invert>:
    5ed4:	fa 01       	movw	r30, r20
    5ed6:	aa 27       	eor	r26, r26
    5ed8:	28 30       	cpi	r18, 0x08	; 8
    5eda:	51 f1       	breq	.+84     	; 0x5f30 <__ultoa_invert+0x5c>
    5edc:	20 31       	cpi	r18, 0x10	; 16
    5ede:	81 f1       	breq	.+96     	; 0x5f40 <__ultoa_invert+0x6c>
    5ee0:	e8 94       	clt
    5ee2:	6f 93       	push	r22
    5ee4:	6e 7f       	andi	r22, 0xFE	; 254
    5ee6:	6e 5f       	subi	r22, 0xFE	; 254
    5ee8:	7f 4f       	sbci	r23, 0xFF	; 255
    5eea:	8f 4f       	sbci	r24, 0xFF	; 255
    5eec:	9f 4f       	sbci	r25, 0xFF	; 255
    5eee:	af 4f       	sbci	r26, 0xFF	; 255
    5ef0:	b1 e0       	ldi	r27, 0x01	; 1
    5ef2:	3e d0       	rcall	.+124    	; 0x5f70 <__ultoa_invert+0x9c>
    5ef4:	b4 e0       	ldi	r27, 0x04	; 4
    5ef6:	3c d0       	rcall	.+120    	; 0x5f70 <__ultoa_invert+0x9c>
    5ef8:	67 0f       	add	r22, r23
    5efa:	78 1f       	adc	r23, r24
    5efc:	89 1f       	adc	r24, r25
    5efe:	9a 1f       	adc	r25, r26
    5f00:	a1 1d       	adc	r26, r1
    5f02:	68 0f       	add	r22, r24
    5f04:	79 1f       	adc	r23, r25
    5f06:	8a 1f       	adc	r24, r26
    5f08:	91 1d       	adc	r25, r1
    5f0a:	a1 1d       	adc	r26, r1
    5f0c:	6a 0f       	add	r22, r26
    5f0e:	71 1d       	adc	r23, r1
    5f10:	81 1d       	adc	r24, r1
    5f12:	91 1d       	adc	r25, r1
    5f14:	a1 1d       	adc	r26, r1
    5f16:	20 d0       	rcall	.+64     	; 0x5f58 <__ultoa_invert+0x84>
    5f18:	09 f4       	brne	.+2      	; 0x5f1c <__ultoa_invert+0x48>
    5f1a:	68 94       	set
    5f1c:	3f 91       	pop	r19
    5f1e:	2a e0       	ldi	r18, 0x0A	; 10
    5f20:	26 9f       	mul	r18, r22
    5f22:	11 24       	eor	r1, r1
    5f24:	30 19       	sub	r19, r0
    5f26:	30 5d       	subi	r19, 0xD0	; 208
    5f28:	31 93       	st	Z+, r19
    5f2a:	de f6       	brtc	.-74     	; 0x5ee2 <__ultoa_invert+0xe>
    5f2c:	cf 01       	movw	r24, r30
    5f2e:	08 95       	ret
    5f30:	46 2f       	mov	r20, r22
    5f32:	47 70       	andi	r20, 0x07	; 7
    5f34:	40 5d       	subi	r20, 0xD0	; 208
    5f36:	41 93       	st	Z+, r20
    5f38:	b3 e0       	ldi	r27, 0x03	; 3
    5f3a:	0f d0       	rcall	.+30     	; 0x5f5a <__ultoa_invert+0x86>
    5f3c:	c9 f7       	brne	.-14     	; 0x5f30 <__ultoa_invert+0x5c>
    5f3e:	f6 cf       	rjmp	.-20     	; 0x5f2c <__ultoa_invert+0x58>
    5f40:	46 2f       	mov	r20, r22
    5f42:	4f 70       	andi	r20, 0x0F	; 15
    5f44:	40 5d       	subi	r20, 0xD0	; 208
    5f46:	4a 33       	cpi	r20, 0x3A	; 58
    5f48:	18 f0       	brcs	.+6      	; 0x5f50 <__ultoa_invert+0x7c>
    5f4a:	49 5d       	subi	r20, 0xD9	; 217
    5f4c:	31 fd       	sbrc	r19, 1
    5f4e:	40 52       	subi	r20, 0x20	; 32
    5f50:	41 93       	st	Z+, r20
    5f52:	02 d0       	rcall	.+4      	; 0x5f58 <__ultoa_invert+0x84>
    5f54:	a9 f7       	brne	.-22     	; 0x5f40 <__ultoa_invert+0x6c>
    5f56:	ea cf       	rjmp	.-44     	; 0x5f2c <__ultoa_invert+0x58>
    5f58:	b4 e0       	ldi	r27, 0x04	; 4
    5f5a:	a6 95       	lsr	r26
    5f5c:	97 95       	ror	r25
    5f5e:	87 95       	ror	r24
    5f60:	77 95       	ror	r23
    5f62:	67 95       	ror	r22
    5f64:	ba 95       	dec	r27
    5f66:	c9 f7       	brne	.-14     	; 0x5f5a <__ultoa_invert+0x86>
    5f68:	00 97       	sbiw	r24, 0x00	; 0
    5f6a:	61 05       	cpc	r22, r1
    5f6c:	71 05       	cpc	r23, r1
    5f6e:	08 95       	ret
    5f70:	9b 01       	movw	r18, r22
    5f72:	ac 01       	movw	r20, r24
    5f74:	0a 2e       	mov	r0, r26
    5f76:	06 94       	lsr	r0
    5f78:	57 95       	ror	r21
    5f7a:	47 95       	ror	r20
    5f7c:	37 95       	ror	r19
    5f7e:	27 95       	ror	r18
    5f80:	ba 95       	dec	r27
    5f82:	c9 f7       	brne	.-14     	; 0x5f76 <__ultoa_invert+0xa2>
    5f84:	62 0f       	add	r22, r18
    5f86:	73 1f       	adc	r23, r19
    5f88:	84 1f       	adc	r24, r20
    5f8a:	95 1f       	adc	r25, r21
    5f8c:	a0 1d       	adc	r26, r0
    5f8e:	08 95       	ret

00005f90 <_exit>:
    5f90:	f8 94       	cli

00005f92 <__stop_program>:
    5f92:	ff cf       	rjmp	.-2      	; 0x5f92 <__stop_program>
>>>>>>> Stashed changes
